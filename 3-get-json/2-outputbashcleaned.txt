git@github.com:Snailclimb/JavaGuide.git,cd267ee70c7561db8d9fd7f5f01b270dd9ee043c,JavaGuide,137533,
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/runXcodeTests.sh
lines,25
function,0


for,0

if,1
if [ -n "$1" ]
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/rn-tester/IntegrationTests/launchWebSocketServer.sh
lines,12
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native-codegen/src/cli/parser/parser.sh
lines,15
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native-codegen/scripts/oss/build.sh
lines,76
function,0


for,0

if,5
if [ -x "$(command -v yarn)" ]; then if [ -x "$(command -v eden)" ]; then if [[ "$OSTYPE" == "darwin"* ]] && eden info; then if [[ ${FBSOURCE_ENV:-0} -eq 1 ]]; then if [ "$OSTYPE" = "msys" ] || [ "$OSTYPE" = "cygwin" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/build-apple-framework.sh
lines,215
function,10
function use_env_var_or_ruby_prop { function get_release_version { function get_ios_deployment_target { function get_mac_deployment_target { function build_host_hermesc { function configure_apple_framework { function build_host_hermesc_if_needed { function build_apple_framework { function prepare_dest_root_for_ci { function create_universal_framework {

for,5
-DHERMES_RELEASE_VERSION="for RN $(get_release_version)" \ echo "Building $BUILD_TYPE framework for $1 with architectures: $2" echo "Creating universal framework for platforms: ${platforms[*]}" for i in "${!platforms[@]}"; do for platform in "${platforms[@]}"; do
if,9
if [[ -z "$JSI_PATH" ]]; then if [[ -n "$1" ]]; then if [[ $BUILD_TYPE == "Debug" ]]; then if [[ $BUILD_TYPE == "Debug" ]]; then if [[ $xcode_major_version -ge 15 ]]; then if [[ ! -f "$IMPORT_HERMESC_PATH" ]]; then if [[ $1 == macosx ]]; then if [[ -e "$dSYM_base_path/${platform}/0.dSYM" ]]; then if xcodebuild -create-xcframework $args -output "universal/hermes.xcframework"
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/build-ios-framework.sh
lines,72
function,4
function get_architecture { function build_framework { function build_universal_framework { function create_framework {

for,0

if,8
if [[ $1 == "iphoneos" ]]; then elif [[ $1 == "iphonesimulator" ]]; then elif [[ $1 == "catalyst" ]]; then if [ ! -d destroot/Library/Frameworks/universal/hermes.xcframework ]; then if [ ! -d destroot/Library/Frameworks/universal/hermes.xcframework ]; then if [ ! -d destroot/Library/Frameworks/universal/hermes.xcframework ]; then if [[ -z $1 ]]; then elif [[ $1 == "build_framework" ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/build-hermes-xcode.sh
lines,74
function,0


for,1
-DHERMES_RELEASE_VERSION="for RN $release_version" \
if,4
if [[ "$CONFIGURATION" == "Debug" ]]; then if [[ $CONFIGURATION == "Debug" ]]; then if [ -z "$deployment_target" ]; then if [[ $xcode_major_version -ge 15 ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/create-dummy-hermes-xcframework.sh
lines,30
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/build-mac-framework.sh
lines,17
function,0


for,0

if,1
if [ ! -d destroot/Library/Frameworks/macosx/hermes.framework ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/build-hermesc-xcode.sh
lines,18
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/sdks/hermes-engine/utils/copy-hermes-xcode.sh
lines,7
function,0


for,0

if,1
echo "This file is no-op now. Remove \"[RN] Copy Hermes Framework\" script phase from your main target if you don't want to see this message."
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/find-node-for-xcode.sh
lines,83
function,0


for,0

if,13
if [[ -d $HOMEBREW_APPLE_SILICON_BIN && ! $PATH =~ $HOMEBREW_APPLE_SILICON_BIN ]]; then if [[ -s "$HOME/.nvm/nvm.sh" ]]; then elif [[ -x "$(command -v brew)" && -s "$(brew --prefix nvm)/nvm.sh" ]]; then if [[ -x "$HOME/.nodenv/bin/nodenv" ]]; then elif [[ -x "$(command -v brew)" && -x "$(brew --prefix nodenv)/bin/nodenv" ]]; then if [[ ! -x node && -d ${HOME}/.anyenv/bin ]]; then if [[ "$(anyenv envs | grep -c ndenv )" -eq 1 ]]; then if [[ -f "$ASDF_DIR/asdf.sh" ]]; then elif [[ -f "$HOME/.asdf/asdf.sh" ]]; then elif [[ -x "$(command -v brew)" && -f "$(brew --prefix asdf)/asdf.sh" ]]; then if [[ -x "$HOME/.volta/bin/node" ]]; then if [[ -x "$HOME/.fnm/fnm" ]]; then elif [[ -x "$(command -v brew)" && -x "$(brew --prefix fnm)/bin/fnm" ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/xcode/with-environment.sh
lines,47
function,0


for,0

if,4
if [ -f "$ENV_PATH" ]; then if [ -f "$LOCAL_ENV_PATH" ]; then if [ -n "$NODE_BINARY" ]; then if [ -n "$1" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/react-native-xcode.sh
lines,179
function,0


for,3
for num in 0 1 2 3 4 5 6 7 8; do echo "Skipping bundling in Debug for the Simulator (since the packager bundles for you). Use the FORCE_BUNDLING flag to change this behavior." echo "Bundling for physical device. Use the SKIP_BUNDLING flag to change this behavior."
if,20
if [[ ! "$SKIP_BUNDLING_METRO_IP" && "$CONFIGURATION" = *Debug* && ! "$PLATFORM_NAME" == *simulator ]]; then if [ ! -z "$IP" ]; then if [ -z "$IP" ]; then if [[ "$SKIP_BUNDLING" ]]; then if [[ "$PLATFORM_NAME" == *simulator ]]; then if [[ "$FORCE_BUNDLING" ]]; then if [[ "$ENTRY_FILE" ]]; then elif [[ -s "index.ios.js" ]]; then if [[ $USE_HERMES != false && -f "$HERMES_ENGINE_PATH" && ! -f "$HERMES_CLI_PATH" ]]; then if [[ -z "$BUNDLE_CONFIG" ]]; then if [ "${IS_MACCATALYST}" = "YES" ]; then if [[ ! -z "$SOURCEMAP_FILE" ]]; then if [[ $EMIT_SOURCEMAP == true ]]; then if [[ $USE_HERMES != false ]]; then if [[ $USE_HERMES != false && $DEV == false ]]; then if [[ $USE_HERMES == false ]]; then if [[ $DEV == true ]]; then if [[ $EMIT_SOURCEMAP == true ]]; then if [[ $EMIT_SOURCEMAP == true ]]; then if [[ $DEV != true && ! -f "$BUNDLE_FILE" ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/ios-configure-glog.sh
lines,83
function,0


for,1
/bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII Special configuration for ucontext react-native/
if,4
if [ -z "$CURRENT_ARCH" ] || [ "$CURRENT_ARCH" == "undefined_arch" ]; then if [[ "$PLATFORM_NAME" == *"simulator"* ]]; then if [ "$CURRENT_ARCH" == "arm64" ]; then if [ -h "test-driver" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/packager.sh
lines,19
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/node-binary.sh
lines,18
function,1

nodejs_not_found()
for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/react_native_pods_utils/script_phases.sh
lines,135
function,12

error () { find_node () { find_codegen () { setup_dirs () { describe () { runSpecCodegen () { generateCodegenSchemaFromJavaScript () { generateCodegenArtifactsFromSchema () { generateArtifacts () { moveOutputs () { withCodegenDiscovery () { noCodegenDiscovery () {
for,0

if,7
if [ -z "$NODE_BINARY" ]; then if ! [ -d "$CODEGEN_CLI_PATH" ]; then if [ "$SRCS_PATTERN" ]; then if [ "$RCT_SCRIPT_LIBRARY_TYPE" = "all" ]; then elif [ "$RCT_SCRIPT_LIBRARY_TYPE" = "components" ]; then elif [ "$RCT_SCRIPT_LIBRARY_TYPE" = "modules" ]; then if [ "$RCT_SCRIPT_TYPE" = "withCodegenDiscovery" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/packages/react-native/scripts/run_ruby_tests.sh
lines,29
function,0


for,1
for i in "${files[@]}"
if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/run-android-local-unit-tests.sh
lines,19
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/android-setup.sh
lines,96
function,5
function getAndroidPackages { function getAndroidNDK { function createAVD { function launchAVD { function waitForAVD {

for,3
echo "Installing build SDK for Android API level $ANDROID_SDK_BUILD_API_LEVEL..." echo "Installing target SDK for Android API level $ANDROID_SDK_TARGET_API_LEVEL..." echo "Waiting for Android Virtual Device to finish booting..."
if,6
if [ ! -e "$DEPS" ] || [ ! "$CI" ]; then if [ ! -e $DEPS ]; then if [ -z "$ANDROID_DISABLE_AVD_TESTS" ] if [ -z "$ANDROID_DISABLE_AVD_TESTS" ] if [ "$CI" ] if [ -z "$ANDROID_DISABLE_AVD_TESTS" ]
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/objc-test.sh
lines,154
function,9

SKIPPED_TESTS=() cleanup() { waitForPackager() { waitForWebSocketServer() { runTests() { buildProject() { xcbeautifyFormat() { preloadBundlesRNIntegrationTests() { preloadBundlesRNTester() { main() {
for,2
echo "Packager did not respond. Retrying for attempt number $attempt_num..." echo "WebSocket Server did not respond. Retrying for attempt number $attempt_num..."
if,7
if [ $EXIT -ne 0 ]; if (( attempt_num == max_attempts )); then if (( attempt_num == max_attempts )); then if [ "$CI" ]; then if [ "$1" = "test" ]; then if [ -x "$(command -v xcbeautify)" ]; then if [ -x "$(command -v xcbeautify)" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/update_podfile_lock.sh
lines,27
function,2

validate_env () { update_pods () {
for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/analyze_scripts.sh
lines,41
function,0


for,0

if,3
if [ -x "$(command -v shellcheck)" ]; then if [ -n "$CIRCLE_CI" ]; then if [ $STATUS == 0 ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/check_appium_server_status.sh
lines,11
function,0


for,0

if,1
if ! nc -z 127.0.0.1 4723; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/check_license.sh
lines,17
function,0


for,0

if,1
if [ "$EXPECTED" != "$ACTUAL" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/report-bundle-size.sh
lines,19
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/validate_yarn_lockfile.sh
lines,43
function,2
function cleanup { function msg {

for,0

if,2
if [[ -z "${OVERRIDE_YARN_BINARY}" ]]; then if ! $YARN_BINARY --ignore-scripts --silent --non-interactive --mutex network --frozen-lockfile; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/analyze_code.sh
lines,19
function,0


for,0

if,1
if [ $STATUS == 0 ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/apt-get-android-deps.sh
lines,29
function,0


for,0

if,2
if ! [[ -d ~/vendor/apt ]]; then if ! [[ -d ~/vendor/apt/archives ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/circleci/exec_swallow_error.sh
lines,16
function,0


for,0

if,1
if [ $STATUS == 0 ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/run-android-local-integration-tests.sh
lines,28
function,0


for,0

if,0

git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/process-podspecs.sh
lines,77
function,4

version() { lint() { push() { process() {
for,0

if,3
if ! [ -d "$SPEC_REPO_DIR" ]; then if [ "${SUBSPEC:-}" ]; then if [ -z "$SKIP_LINT" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/validate-android-sdk.sh
lines,54
function,0


for,5
echo "See https://reactnative.dev/docs/getting-started for instructions." echo "See https://reactnative.dev/docs/getting-started for instructions." echo "See https://reactnative.dev/docs/getting-started for instructions." echo "Sorry for not fixing this automatically - we just didn't want to mess with your \$PATH automatically because that can break things." echo "See https://reactnative.dev/docs/getting-started for instructions."
if,5
if [ -z "$ANDROID_HOME" ]; then if [ ! -d "$ANDROID_HOME" ]; then if [ ! -e "$ANDROID_HOME/tools/emulator" ]; then if [ -z `which emulator` ]; then if [ -z `which adb` ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/validate-ios-test-env.sh
lines,47
function,1
function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
for,4
echo "See https://reactnative.dev/docs/getting-started for instructions." echo "See https://reactnative.dev/docs/getting-started for instructions." echo "See https://reactnative.dev/docs/getting-started for instructions." echo "See https://reactnative.dev/docs/getting-started for instructions."
if,4
if [ -z "$(which node)" ]; then if (( $(echo "${NODE_VERSION} < 14.0" | bc -l) )); then if [ -z "$(which xcodebuild)" ]; then if (version_gt $MIN_XCODE_VERSION $XCODE_VERSION) && [ "$XCODE_VERSION" != "$MIN_XCODE_VERSION" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/validate-android-test-env.sh
lines,117
function,0


for,8
echo "See https://buckbuild.com/setup/getting_started.html for instructions." echo "If you don't want to alter BUCKVERSION for other things running on" echo "your machine, you can just scope it to a single script, for example" echo "See https://reactnative.dev/docs/getting-started.html for details." echo "Check out https://developer.android.com/studio/command-line/sdkmanager.html for details." echo "See https://reactnative.dev/docs/getting-started.html for details." echo "Check out https://developer.android.com/studio/command-line/sdkmanager.html for details." echo "See https://our.intern.facebook.com/intern/dex/installing-java-8/ for instructions on installing Java 8 on FB laptops."
if,11
if [ -z "$(which buck)" ]; then if [ -z "$(buck --version)" ]; then if [ -d "/opt/facebook" ]; then if [ "$(buck --version)" != "$BUCK_EXPECTED_VERSION" ]; then if [ ! -d "/opt/facebook" ]; then if [ ! -e "$PLATFORM_DIR" ]; then if [ ! -e "$BT_DIR" ]; then if [ -n "$(which csrutil)" ]; then if [ "$JAVA" = "/usr/bin/java" ]; then if [ -d "/opt/facebook" ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/run-android-emulator.sh
lines,29
function,0


for,0

if,1
if [ -n "$STATE" ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/sync-css-layout.sh
lines,95
function,2
function usage { function patchfile {

for,4
for sourcefile in $FBA_SRC/*.java; do for testfile in $FBA_TESTS/*.java; do for sourcefile in $FBO_SRC/Layout.{c,h}; do echo "The source of truth for css-layout is: https://github.com/facebook/css-layout
if,2
if [ -z $1 ]; then if [ -z $2 ]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/validate-android-device-env.sh
lines,38
function,0


for,2
echo "See https://reactnative.dev/contributing/how-to-build-from-source for instructions." echo "Waiting for the emulator to finish booting..."
if,3
if [ -z "$ANDROID_NDK" ]; then if [ -z "$(adb get-state)" ]; then if [[ -n $(echo "$BOOTANIM" | grep stopped) ]]; then
git@github.com:facebook/react-native.git,30b9b01e68929b4d0d839c98e91fefe99319ec50,react-native,112234,./react-native/scripts/run-instrumentation-tests-via-adb-shell.sh
lines,69
function,7

def update(): t.start() def run(): sp.Popen(['adb', 'wait-for-device']).communicate() return p.communicate() stdout, stderr = run() sp.Popen(['adb', 'logcat', '-d']).communicate()
for,1
print "Running in background. Waiting for 'adb' command response..."
if,3
if len(sys.argv) > 2: if (test_class != None): if success.search(stderr + stdout):
git@github.com:iluwatar/java-design-patterns.git,f63c5dd46ddaaeaa6c2844dd7db6192fafce616a,java-design-patterns,83954,
git@github.com:MisterBooo/LeetCodeAnimation.git,fd42771f5e384625b4d4699becd09a09d0503211,LeetCodeAnimation,74058,
git@github.com:doocs/advanced-java.git,50b066de0fb9fa341609387072fea0b56c510cb9,advanced-java,71704,
git@github.com:macrozheng/mall.git,88fb99939208f1eac4dccdcf25cd3c34a3e21989,mall,70346,./mall/document/sh/mall-admin.sh
lines,15
function,0


for,0

if,0

git@github.com:macrozheng/mall.git,88fb99939208f1eac4dccdcf25cd3c34a3e21989,mall,70346,./mall/document/sh/mall-portal.sh
lines,17
function,0


for,0

if,0

git@github.com:macrozheng/mall.git,88fb99939208f1eac4dccdcf25cd3c34a3e21989,mall,70346,./mall/document/sh/run.sh
lines,27
function,0


for,0

if,0

git@github.com:macrozheng/mall.git,88fb99939208f1eac4dccdcf25cd3c34a3e21989,mall,70346,./mall/document/sh/mall-search.sh
lines,15
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/src/spring-boot-builder/build.sh
lines,15
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-run-as-invalid-user.sh
lines,7
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/log-file-ownership-is-unchanged-when-exists.sh
lines,11
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/restart-when-stopped.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-multiple-java-opts.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-run-as-user-preferred-to-jar-owner.sh
lines,13
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-single-command-line-argument.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/restart-when-started.sh
lines,7
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-missing-pid-folder.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/start-when-stopped.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-relative-pid-folder.sh
lines,10
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-single-run-arg.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/start-when-started.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-run-as-user.sh
lines,10
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-use-of-start-stop-daemon-disabled.sh
lines,7
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/status-when-stopped.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/pid-file-ownership.sh
lines,18
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/status-when-started.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/force-stop-when-stopped.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-multiple-command-line-arguments.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-single-java-opt.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-relative-log-folder.sh
lines,8
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-run-as-user-root-required.sh
lines,9
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/log-file-ownership.sh
lines,20
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-missing-log-folder.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/status-when-killed.sh
lines,8
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/pid-folder-ownership.sh
lines,17
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/basic-launch.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-double-link-single-java-opt.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/stop-when-stopped.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/launch-with-multiple-run-args.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/log-file-ownership-is-changed-when-created.sh
lines,9
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/init.d/test-functions.sh
lines,53
function,8

await_app() { install_service() { install_double_link_service() { start_service() { restart_service() { status_service() { stop_service() { force_stop_service() {
for,0

if,2
if [ -z $1 ] if [[ $now -ge $end ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-multiple-java-opts.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-single-command-line-argument.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-single-run-arg.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-debug.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-multiple-command-line-arguments.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-single-java-opt.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/basic-launch.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-multiple-run-args.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/test-functions.sh
lines,22
function,2

await_app() { launch_jar() {
for,0

if,2
if [ -z $1 ] if [[ $now -ge $end ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/intTest/resources/scripts/jar/launch-with-jarfile.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/run-system-tests.sh
lines,12
function,0


for,0

if,1
if [[ -d /opt/openjdk-toolchain ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/common.sh
lines,7
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/generate-changelog.sh
lines,12
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/publish-to-sdkman.sh
lines,11
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/stage.sh
lines,50
function,0


for,0

if,4
if [[ $RELEASE_TYPE = "M" ]]; then elif [[ $RELEASE_TYPE = "RC" ]]; then elif [[ $RELEASE_TYPE = "RELEASE" ]]; then if [[ $nextVersion != $snapshotVersion ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/build-project.sh
lines,13
function,0


for,0

if,1
if [[ -d /opt/openjdk-toolchain ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/publish-gradle-plugin.sh
lines,7
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/detect-docker-updates.sh
lines,34
function,0


for,0

if,3
if [[ $latest_version =~ (beta|rc) ]]; then if [[ $current = $latest ]]; then if [[ ${existing_upgrade_issues} = "" ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/detect-jdk-updates.sh
lines,60
function,1

report_error() {
for,0

if,4
if [[ ${latest} = "null" || ${latest} = "" ]]; then if [[ $current = $latest ]]; then if [[ ${milestone_result} = "null" || ${milestone_result} = "" ]]; then if [[ ${existing_jdk_issues} = "" ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/promote.sh
lines,17
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/detect-ubuntu-image-updates.sh
lines,29
function,0


for,0

if,2
if [[ $current = $latest ]]; then if [[ ${existing_upgrade_issues} = "" ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/scripts/update-homebrew-tap.sh
lines,19
function,0


for,0

if,1
if [[ $LATEST_GA = true ]]; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/images/docker-lib.sh
lines,97
function,3

sanitize_cgroups() { start_docker() { try_start() {
for,1
echo waiting for docker to come up...
if,11
if [ "$enabled" != "1" ]; then if [ -z "$grouping" ]; then if mountpoint -q "$mountpoint"; then if [ "$grouping" != "$sys" ]; then if [ -L "/sys/fs/cgroup/$sys" ]; then if ! test -e /sys/fs/cgroup/systemd ; then if [ "$SKIP_PRIVILEGED" = "false" ]; then if grep '/proc/sys\s\+\w\+\s\+ro,' /proc/mounts >/dev/null; then if [ -n "$1" ]; then if ! kill -0 "$(cat /tmp/docker.pid)" 2>/dev/null; then if ! timeout ${STARTUP_TIMEOUT} bash -ce 'while true; do try_start && break; done'; then
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/images/get-jdk-url.sh
lines,14
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/images/setup.sh
lines,64
function,0


for,0

if,1
if [[ $
git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/images/get-docker-url.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-projects/spring-boot.git,e25886f2de508f5c412293cecd43ec7c997738a0,spring-boot,69540,./spring-boot/ci/images/get-docker-compose-url.sh
lines,5
function,0


for,0

if,0

git@github.com:GrowingGit/GitHub-Chinese-Top-Charts.git,883c810b07d8167aec681abf62f6342b145f3a09,GitHub-Chinese-Top-Charts,65495,
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/dev-tools/atomic_push.sh
lines,68
function,0


for,2
for BRANCH in "${@:2}" echo >&2 "Expected exactly 1 pending commit for branch '${BRANCH}' but ${PENDING_COMMITS} exist."
if,7
if [ "$ if ! git ls-remote --exit-code "${REMOTE}" > /dev/null 2>&1; then if [ "$ if ! git diff-index --quiet HEAD -- ; then if ! git show-ref --verify --quiet "refs/heads/${BRANCH}"; then if [ -n "${WORKTREE_DIR}" -a "${WORKTREE_DIR}" != "${WORKING_DIR}" ]; then if [ "${PENDING_COMMITS}" -ne 1 ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/dev-tools/delete_branch_jobs.sh
lines,26
function,0


for,0

if,2
if [ "$ if [ -z "${JENKINS_USERNAME}" ] || [ -z "${JENKINS_TOKEN}" ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/x-pack/plugin/sql/connectors/tableau/package.sh
lines,302
function,9
function log() function die() function package() { function sha() { function read_es_version() { function read_cmd_params() { function sign() { function clean() { function usage() {
function log() function die() function package() { function sha() { function read_es_version() { function read_cmd_params() { function sign() { function clean() { function usage() {
for,6
MY_NAME="Packager for Elastic's Tableau connector to Elasticsearch" die "parameter 'version' is required for assembling." die "parameter 'keystore' is mandatory for signing." for taco in $(ls -t $MY_OUT_DIR/*.taco 2>/dev/null); do log " onepass : password for both the keystore and the " log " alias : alias for the keystore entry; optional."
if,23
if [ -t 1 ]; then if [ ! -d $MY_WORKSPACE ]; then if [ -d $SDK_DIR ]; then if [ -z $TACO_VERSION ]; then if [ ! -z $TACO_VERSION ]; then if [ ! -z $VER_QUALIFIER ]; then if [ ! -z $SIGN_KEYSTORE ]; then if [ ! -z $SIGN_ALIAS ]; then if [ ! -z $SIGN_STOREPASSFILE ]; then if [ ! -z $SIGN_KEYPASSFILE ]; then if [ ! -z $SIGN_ONEPASS ]; then if [ $CMD_ASM -gt 0 ]; then if [ -z $TACO_VERSION ]; then if [ ! -f $ES_VER_REL_PATH ]; then if [ $CMD_SIGN -gt 0 ]; then if [ -z $SIGN_KEYSTORE ]; then if [ ! -z $SIGN_ONEPASS ]; then if [ ! -z $SIGN_STOREPASSFILE ] || [ ! -z $SIGN_KEYPASSFILE ]; then if [ ! -z $SIGN_STOREPASSFILE ]; then if [ ! -z $SIGN_KEYPASSFILE ]; then if [ -z $taco ]; then if [ -f $MY_WORKSPACE/.workspace ]; then if [ $
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/x-pack/test/idp-fixture/idp/bin/init-idp.sh
lines,27
function,0


for,1
echo "Please complete the following for your IdP environment:"
if,1
echo "Most files, if not being customized can be removed from what was exported/the local Docker image and baseline files will be used."
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/x-pack/test/idp-fixture/idp/bin/run-jetty.sh
lines,28
function,0


for,0

if,2
if [ -e "/opt/shibboleth-idp/ext-conf/idp-secrets.properties" ]; then if [ $duration -lt 5 ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/x-pack/test/idp-fixture/oidc/setup.sh
lines,25
function,0


for,1
echo "Waiting for properties file"
if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/x-pack/test/smb-fixture/src/main/resources/provision/installsmb.sh
lines,83
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/make-branch-config.sh
lines,15
function,0


for,1
for folder in "${folders[@]}"
if,1
if [ -z "$BRANCH" ] ; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/scripts/resolve-dra-manifest.sh
lines,30
function,2

strip_version() { fetch_build() {
for,1
echo "Latest build for '$ARTIFACT' is version $LATEST_VERSION but expected version $ES_VERSION." 1>&2
if,1
if [ "$LATEST_VERSION" != "$ES_VERSION" ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/scripts/run-gradle-profiler.sh
lines,23
function,0


for,0

if,4
if [ "$(uname -m)" = "arm64" ] || [ "$(uname -m)" = "aarch64" ]; then elif [ -f /proc/cpuinfo ]; then if [[ "$OSTYPE" == "darwin"* ]]; then if pwd | grep -v -q ^/dev/shm ; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/scripts/install-gradle-profiler.sh
lines,8
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/scripts/packaging-test.sh
lines,81
function,0


for,0

if,7
if which zypper > /dev/null ; then if [ -e /etc/sysctl.d/99-gce.conf ]; then if [ -f "/etc/os-release" ] ; then if [[ "$ID" == "debian" || "$ID_LIKE" == "debian" ]] ; then if [ $VERSION_ID == 10 ] ; then if [[ "$ID" == "rhel" ]] ; then if containerd -version | grep -sF 1.6.7; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/scripts/run-gradle.sh
lines,35
function,0


for,0

if,5
if ! uname -a | grep -q MING; then if [ "$(uname -m)" = "arm64" ] || [ "$(uname -m)" = "aarch64" ]; then elif [ -f /proc/cpuinfo ]; then if [[ "$OSTYPE" == "darwin"* ]]; then if pwd | grep -v -q ^/dev/shm ; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.ci/packer_cache.sh
lines,54
function,0


for,2
for branch in "${branches[@]}"; do echo "Resolving dependencies for ${branch} branch"
if,2
if expr "$link" : '/.*' >/dev/null; then if [ "$(uname -m)" = "arm64" ] || [ "$(uname -m)" = "aarch64" ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/addprinc.sh
lines,64
function,0


for,1
echo ' password If provided then will set password for user else it will provision user with keytab'
if,3
if [[ $ if [ -f $USER_KTAB ] && [ -z "$PASSWD" ]; then if [ -z "$PASSWD" ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/hdfs.sh
lines,10
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/peppa.sh
lines,13
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/installkdc.sh
lines,87
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/third-party-test-credentials.sh
lines,51
function,0


for,0

if,4
if [[ "${USE_3RD_PARTY_AZURE_CREDENTIALS:-}" == "true" ]]; then if [[ "${USE_3RD_PARTY_AZURE_SAS_CREDENTIALS:-}" == "true" ]]; then if [[ "${USE_3RD_PARTY_S3_CREDENTIALS:-}" == "true" ]]; then if [[ "${USE_3RD_PARTY_GCS_CREDENTIALS:-}" == "true" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/get-legacy-secret.sh
lines,10
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/lucene-snapshot/update-es-snapshot.sh
lines,51
function,0


for,0

if,3
if [[ "$BUILDKITE_BRANCH" != "lucene_snapshot" ]]; then if [[ -z "$LUCENE_SNAPSHOT_VERSION" ]]; then if git diff-index --quiet HEAD --; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/lucene-snapshot/update-branch.sh
lines,18
function,0


for,0

if,1
if [[ "$BUILDKITE_BRANCH" != "lucene_snapshot" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/lucene-snapshot/upload-snapshot.sh
lines,41
function,0


for,0

if,3
if [[ -z "$LUCENE_BUILD_ID" ]]; then if ! which aws; then if [[ "${UPDATE_ES_LUCENE_SNAPSHOT:-}" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/branches.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/eql-correctness.sh
lines,9
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/setup-monitoring.sh
lines,24
function,0


for,0

if,2
if [[ ! -d /opt/elastic-agent ]]; then if [ "$(uname -m)" = "arm64" ] || [ "$(uname -m)" = "aarch64" ]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/encryption-at-rest.sh
lines,24
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/third-party-test-credentials.gcs.sh
lines,9
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/windows-run-gradle.sh
lines,5
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/cloud-deploy.sh
lines,14
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/dra-update-staging.sh
lines,51
function,0


for,3
for BRANCH in "${BRANCHES[@]}"; do echo "Triggering DRA staging workflow for $BRANCH" label: Trigger DRA staging workflow for $BRANCH
if,4
if [[ "$BRANCH" == "main" ]]; then if [ "$BEATS_MANIFEST" = "$ES_BEATS_DEPENDENCY" ]; then if [ "$ML_MANIFEST" = "$ES_ML_DEPENDENCY" ]; then if [[ "$SHOULD_TRIGGER" == "true" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/update-serverless-submodule.sh
lines,17
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/setup-legacy-vault.sh
lines,11
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/periodic.trigger.sh
lines,34
function,0


for,4
for BRANCH in "${BRANCHES[@]}"; do label: Trigger periodic pipeline for $BRANCH label: Trigger periodic-packaging pipeline for $BRANCH label: Trigger periodic-platform-support pipeline for $BRANCH
if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/release-tests.sh
lines,22
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/dra-workflow.trigger.sh
lines,28
function,0


for,2
for BRANCH in "${BRANCHES[@]}"; do label: Trigger DRA staging workflow for $BRANCH
if,1
if [[ "$BRANCH" == "main" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/pull-request/pipeline.sh
lines,9
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/.buildkite/scripts/dra-workflow.sh
lines,90
function,0


for,0

if,4
if [[ "$BRANCH" == "main" && "$WORKFLOW" == "staging" ]]; then if [[ "$BRANCH" == "main" ]]; then if [[ "$WORKFLOW" == "snapshot" ]]; then if [[ "$WORKFLOW" == "staging" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/distribution/docker/src/docker/bin/docker-entrypoint.sh
lines,84
function,0


for,0

if,8
if [[ "$1" == "eswrapper" || $(basename "$1") == "elasticsearch" ]]; then if [[ -f bin/elasticsearch-users ]]; then if [[ -n "$ELASTIC_PASSWORD" ]]; then if ! (elasticsearch-keystore has-passwd --silent) ; then if ! (elasticsearch-keystore list | grep -q '^bootstrap.password$'); then if ! (echo "$KEYSTORE_PASSWORD" \ if [[ -n "$ES_LOG_STYLE" ]]; then if [[ -n "$ENROLLMENT_TOKEN" ]]; then
git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/distribution/docker/docker-test-entrypoint.sh
lines,7
function,0


for,0

if,0

git@github.com:elastic/elasticsearch.git,8a1db8c6c3ffa8028b98c9c1393aee9d9ea4d6f5,elasticsearch,65287,./elasticsearch/qa/remote-clusters/docker-test-entrypoint.sh
lines,7
function,0


for,0

if,0

git@github.com:kdn251/interviews.git,a70c2250ec5f2e43972a359e050182f970ea2ffd,interviews,60440,
git@github.com:TheAlgorithms/Java.git,e87036d886f2a3e477053bde76d5567f21615dd7,Java,53974,
git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/update_copyright_headers.sh
lines,21
function,0


for,3
echo Updating copyright headers in Java, Kotlin, and Groovy source code for year $current_year for file in $(git --no-pager diff --name-only --diff-filter=AM @{$current_year-01-01}..@{$current_year-12-31} | egrep "^.+\.(java|kt|groovy)$" | uniq); do for file in $(git --no-pager diff --name-only --diff-filter=AM --cached | egrep "^.+\.(java|kt|groovy)$" | uniq); do
if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/build-pr.sh
lines,9
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/common.sh
lines,1
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/generate-changelog.sh
lines,12
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/stage-version.sh
lines,51
function,0


for,0

if,4
if [[ $RELEASE_TYPE = "M" ]]; then elif [[ $RELEASE_TYPE = "RC" ]]; then elif [[ $RELEASE_TYPE = "RELEASE" ]]; then if [[ $nextVersion != $snapshotVersion ]]; then
git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/promote-version.sh
lines,17
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/build-project.sh
lines,10
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/scripts/check-project.sh
lines,9
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/images/get-jdk-url.sh
lines,17
function,0


for,0

if,0

git@github.com:spring-projects/spring-framework.git,daaccce9189d5ae7560869a1f591e12327b78a3b,spring-framework,53286,./spring-framework/ci/images/setup.sh
lines,40
function,0


for,1
for jdk in java17 java21 java22
if,0

git@github.com:google/guava.git,57266cbd3766bca6a2e00cadae6df647a335fb4c,guava,48373,./guava/util/print_surefire_reports.sh
lines,14
function,0


for,1
for file in "${files[@]}"; do
if,0

git@github.com:google/guava.git,57266cbd3766bca6a2e00cadae6df647a335fb4c,guava,48373,./guava/util/gradle_integration_tests.sh
lines,36
function,0


for,1
for version in 5.6.4 7.0.2; do
if,0

git@github.com:google/guava.git,57266cbd3766bca6a2e00cadae6df647a335fb4c,guava,48373,./guava/util/deploy_snapshot.sh
lines,16
function,1
function mvn_deploy() {
function mvn_deploy() {
for,0

if,0

git@github.com:google/guava.git,57266cbd3766bca6a2e00cadae6df647a335fb4c,guava,48373,./guava/util/update_snapshot_docs.sh
lines,18
function,0


for,0

if,0

git@github.com:ReactiveX/RxJava.git,6d63111bde472e94ff8dbfa4288c6964c7363a15,RxJava,47253,./RxJava/push_javadoc.sh
lines,121
function,0


for,3
echo -e "JavaDocs pushback for tag: $buildTag" echo -e "commit CI build: $CI_BUILD_NUMBER for $buildTag" git commit --message "CI build: $CI_BUILD_NUMBER for $buildTag"
if,3
if [ "$buildTag" == "" ]; then if [ "$JAVADOCS_TOKEN" == "" ]; then if [ "$buildTag" != "snapshot" ]; then
git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/Debug/Debugger-swig-lldb/macos_debugger_lldb_build_from_brew.sh
lines,76
function,0


for,0

if,4
if [ -z "${GHIDRA_INSTALL_DIR}" ]; then if [ ! -z "${GHIDRA_INSTALL_DIR}" ]; then if [ ! -d "${LLVM_HOME}" ]; then if [ $(arch) == "arm64" ]; then
git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/Debug/Debugger-agent-frida/src/main/sh/execjar.sh
lines,22
function,0


for,0

if,0

git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/Debug/Debugger-agent-lldb/src/main/sh/execjar.sh
lines,22
function,0


for,0

if,0

git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/Debug/Debugger-agent-gdb/data/debugger-launchers/local-gdb.sh
lines,58
function,0


for,0

if,2
if [ -d ${GHIDRA_HOME}/ghidra/.git ] elif [ -d ${GHIDRA_HOME}/.git ]
git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/Debug/Debugger-agent-gdb/src/main/sh/execjar.sh
lines,22
function,0


for,0

if,0

git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/RuntimeScripts/Common/server/jaas_external_program.example.sh
lines,42
function,0


for,0

if,1
if [[ ${NAME} =~ "bad" ]]
git@github.com:NationalSecurityAgency/ghidra.git,994c999646c2bf3d0a3819e29c8a7eba8c76653f,ghidra,43217,./ghidra/Ghidra/RuntimeScripts/Linux/support/launch.sh
lines,218
function,1
function showUsage() {
function showUsage() { VMARGS_FROM_LAUNCH_SH=() VMARGS_FROM_LAUNCH_PROPS=() ARGS=()
for,5
echo " NOTE: for all debug modes environment variable DEBUG_ADDRESS may be set to " echo " <name>: application name used for naming console window" for AA in "$@" echo "Unable to prompt user for JDK path, no TTY detected. Please refer to the Ghidra Installation Guide's Troubleshooting section." echo "Exited with error. Run in foreground (fg) mode for more details."
if,22
echo " <max-memory>: maximum memory heap size in MB (e.g., 768M or 2G). Use empty \"\" if default" echo " empty \"\" if vmargs not needed. Spaces are not supported." if [ "$AA" = "jre" ]; then if [ "$AA" != "" ]; then if [[ ${INDEX} -lt 6 ]]; then if [[ "$SUPPORT_DIR" = *"!"* ]]; then if [ -f "${SUPPORT_DIR}/launch.properties" ]; then if ! [ -d "${LS_CPATH}" ]; then if ! [ -f "${LS_CPATH}" ]; then if ! [ -x "$(command -v java)" ] ; then if [ ! $? -eq 0 ]; then if [ ! -t 0 ]; then if [ ! $? -eq 0 ]; then if [ "$(uname -s)" = "Darwin" ]; then if [ "${MAXMEM}" != "" ]; then if [ "${MODE}" = "debug" ] || [ "${MODE}" = "debug-suspend" ]; then if [ "${DEBUG_ADDRESS}" = "" ]; then if [ "${MODE}" = "debug-suspend" ]; then elif [ "${MODE}" = "fg" ]; then elif [ "${MODE}" = "bg" ]; then if [ "${BACKGROUND}" = true ]; then if ! kill -0 ${PID} &>/dev/null; then
git@github.com:square/retrofit.git,ebc7f9447e0f32433db1ebdd9e32afe32f63d102,retrofit,42033,./retrofit/deploy_website.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/licenseCheck.sh
lines,126
function,0


for,3
for i in $LICENSE_FILES for i in "${missingLicense[@]}"; do for i in "${allowLicense[@]}"; do
if,5
if [ -n "$1" ]; then if [ $status -eq 0 ]; then if [ -f $TARGET_FILE.bak ]; then if grep -q "Unknown license" $TARGET_FILE if [ ! -s license-need-check ]; then
git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/server.sh
lines,40
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/start.sh
lines,132
function,0


for,0

if,16
if [ -z "$SERVER_HOST" ]; then if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [[ "$TEMP_VERSION" != "" ]]; then if [ "${JAVA_VERSION}" -ge ${JAVA_8_VERSION} ]; then if [ -n "$BITS" ]; then if [ $JAVA_MAJOR_VERSION -ge 9 ] || ([ $JAVA_MAJOR_VERSION -ge 1 ] && [ $JAVA_MINOR_VERSION -ge 8 ]); then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/restart.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/stop.sh
lines,60
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:apache/dubbo.git,58bf28f8c0a6d7b042af49cad033a7a18231698b,dubbo,39410,./dubbo/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/dump.sh
lines,108
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:PhilJay/MPAndroidChart.git,0550d3f7907c635744c08ad8ff9c45e1b6281cc7,MPAndroidChart,36831,
git@github.com:skylot/jadx.git,15d464d6206b465d55febbd80c4845b4d831d2cf,jadx,36407,
git@github.com:krahets/hello-algo.git,433997c38d95082d494053a63610c798769f3d03,hello-algo,36003,
git@github.com:jeecgboot/jeecg-boot.git,ea9dfd6ea73e1ef8a47142d86474231ce6bdd26e,jeecg-boot,35961,
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/mesos-marathon/dockerise.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/maven-modules/versions-maven-plugin/run-the-demo.sh
lines,74
function,1

exe() { echo -e "\$ $@\n" ; "$@" ; }
for,2
echo -e " Showcase for the BAELDUNG tutorial \"Use the latest version of a dependency in Maven\"" echo -e " Checking for newer versions of the Maven dependencies:"
if,1
echo -e " Updating SNAPSHOT dependencies to their RELEASE version, if any:"
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/axon/start_mongo.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/axon/start_axon_server.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-microservice/gateway-app/src/main/docker/cassandra/scripts/execute-cql.sh
lines,124
function,10
function log { function logDebug { function exitWithError() { function loadExecutedScripts { function exists { function checksumEquals { function isExecuted { function executeCqlScript { function logExecutedScript {
function exitWithError() { local query="INSERT INTO schema_version (script_name, checksum, executed_by, executed_on, execution_time, status) VALUES ('$filename', '$checksum', '$USER', toTimestamp(now()), $duration, 'success');"
for,3
for r in "${rows[@]}" logDebug "checksum equals for $cqlFile, checksum=$checksum" logDebug "different checksum found for $cqlFile
if,8
if [ -z "$1" ]; then if [ -z "$CASSANDRA_CONTACT_POINT" ]; then if [ "$2" != in ]; then if [[ "$checksum" == "$foundChecksum" ]]; then if exists $filename in scripts; then if checksumEquals $cqlFile; then if [ $? -ne 0 ]; then if isExecuted; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-microservice/gateway-app/src/main/docker/cassandra/scripts/autoMigrate.sh
lines,67
function,4
function log { function logDebug { function waitForClusterConnection() { function executeScripts() {
function waitForClusterConnection() { function executeScripts() {
for,3
log "Waiting for Cassandra connection..." for cqlFile in $filePattern; do log "Override for local usage"
if,4
if [ $? -ne 0 ]; then if [ "$ if [ "$ log "Use $CREATE_KEYSPACE_SCRIPT_FOLDER/$CREATE_KEYSPACE_SCRIPT script to create the keyspace if necessary"
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/quotes/src/main/docker/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/quotes/src/main/jib/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/uaa/src/main/docker/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/uaa/src/main/jib/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/gateway/src/main/docker/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-modules/jhipster-uaa/gateway/src/main/jib/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-boot-modules/spring-boot-cli/bash/groovy.sh
lines,16
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-boot-modules/spring-boot-cli/bash/setup.sh
lines,22
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-boot-modules/spring-boot-runtime/docker/run.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-swagger-codegen/spring-swagger-codegen-api-client/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-swagger-codegen/spring-openapi-generator-api-client/git_push.sh
lines,58
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-stream-starters/hdfs/hdfs.sh
lines,10
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-stream-starters/bash/hadoop.sh
lines,45
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-stream-starters/twitter/twitter.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-cli/encrypt.sh
lines,7
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-cli/groovy.sh
lines,10
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-cli/install.sh
lines,35
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-cli/decrypt.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-cli/spring-cli-cmds.sh
lines,39
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-kubernetes/kubernetes-guide/deployment-travel-client.sh
lines,34
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-vault/vault-start.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-vault/vault-unseal.sh
lines,8
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-cloud-modules/spring-cloud-vault/vault-env.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/java-native/src/main/cpp/unsatisfiedlink/generateNativeLib.sh
lines,22
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/java-native/src/main/cpp/generateNativeLibMac.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/java-native/src/main/cpp/generateNativeLib.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-6/bookstore-monolith/src/main/docker/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/jhipster-6/bookstore-monolith/src/main/jib/entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-reactive-modules/spring-reactive-client-2/src/main/resources/streamlargefile/run.sh
lines,21
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/spring-reactive-modules/spring-reactive-client-2/src/main/resources/streamlargefile/generate-sample-files.sh
lines,12
function,1

generate() {
for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/hyperfoil/docker_run.sh
lines,13
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/wrk/run_test_wrk.sh
lines,14
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/jmeter/run_test_jmeter.sh
lines,2
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/spring-project/start_jvm.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/spring-project/build.sh
lines,10
function,0


for,0

if,2
if [ "$1" = "native" ]; then elif [ "$1" = "local-native" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/spring-project/start_app.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/quarkus-project/start_jvm.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/quarkus-project/build.sh
lines,14
function,0


for,0

if,2
if [ "$1" = "native" ]; then elif [ "$1" = "local-native" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/quarkus-modules/quarkus-vs-springboot/quarkus-project/start_app.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-new-features/compile-aot.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-new-features/compile-modules.sh
lines,0
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-new-features/logging.sh
lines,15
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-new-features/run-aot.sh
lines,2
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-17/src/main/resources/compile_c.sh
lines,8
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-perf/src/main/resources/jmxshell/jmx-invoker.sh
lines,45
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-perf/src/main/resources/jmxshell/jmxclient.sh
lines,54
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-perf/src/main/resources/jmxshell/jmxterm.sh
lines,46
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B02-runtime-baeldung-reflecting-named-using-forward-opens.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/A02-compile-and-package-baeldung-reflected.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/A04-compile-and-package-baeldung-reflecting-named.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/A05-compile-and-package-baeldung-reflecting-unnamed.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B05-runtime-baeldung-reflecting-unnamed-using-add-opens.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/C01-clean.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B01-runtime-baeldung-reflecting-named-using-add-opens.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B06-runtime-baeldung-reflecting-unnamed-using-java-agent.sh
lines,2
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B04-runtime-baeldung-reflecting-unnamed-with-warning.sh
lines,2
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/A01-compile-and-package-baeldung-agent.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/A03-compile-and-package-baeldung-intermedium.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/src/modules/com.baeldung.reflective.access/B03-runtime-baeldung-reflecting-named-using-java-agent.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-library-core.sh
lines,11
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-library-core-with-tests.sh
lines,12
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-student-client.sh
lines,0
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-library-core-module-with-patch.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-library-test-module-path.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-simple-modules.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-library-core-module.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-library-core-tests.sh
lines,9
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/download-junit-dependencies.sh
lines,9
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-library-test-class-path.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/compile-library-test-module.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-library-core-module.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/core-java-modules/core-java-9-jigsaw/run-simple-module-app.sh
lines,1
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/docker-modules/docker-environment-variables/greetings.sh
lines,2
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/docker-modules/docker-images/files-outside-context/projects/sample-site/docker/build-docker.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/security-modules/cas/cas-server/src/main/jib/docker/entrypoint.sh
lines,30
function,0


for,0

if,3
if [ $JVM_DEBUG = "true" ]; then if [ $ENTRYPOINT_DEBUG = "true" ]; then if [ -d /etc/cas ] ; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-arangodb/src/live-test/resources/live-test.sh
lines,3
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-arangodb/src/live-test/resources/live-test-teardown.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-arangodb/src/live-test/resources/live-test-setup.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-couchbase-2/src/test/docker/dockerbuild.sh
lines,14
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-couchbase-2/src/test/docker/configure.sh
lines,105
function,5
function retry() { function bucketCreate(){ function userCreate(){ function clusterUp(){ function main(){
function retry() { function bucketCreate(){ function userCreate(){ function clusterUp(){ function main(){
for,1
for i in $(seq 1 10); do
if,10
if [[ $? == 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-boot-mysql/mysql-server/convertcerts.sh
lines,6
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-boot-mysql/start_app.sh
lines,12
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/hibernate-libraries/create-database.sh
lines,7
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-mongodb/src/live-test/resources/live-test.sh
lines,3
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-mongodb/src/live-test/resources/live-test-teardown.sh
lines,4
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/persistence-modules/spring-data-mongodb/src/live-test/resources/live-test-setup.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-json/src/main/bash/jq.sh
lines,56
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-text/src/main/bash/remove_characters.sh
lines,19
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-text/src/main/bash/append_multiple_lines.sh
lines,29
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/command-line-arguments/src/main/bash/users-loop.sh
lines,8
function,0


for,1
for user in "$@"
if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/command-line-arguments/src/main/bash/userReg-positional-parameter.sh
lines,5
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/command-line-arguments/src/main/bash/userReg-flags.sh
lines,14
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/command-line-arguments/src/main/bash/users-shift-operator.sh
lines,10
function,0


for,0

if,0

git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-read/src/main/bash/read_inputs.sh
lines,121
function,8

default_read(){ custom_ifs_no_array(){ prompt_read_password(){ array_read(){ file_read(){ command_pipe(){ timeout_input_read(){ exactly_n_read(){
for,1
for input in ${input_array[@]}
if,1
if [ -z "$input" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/functions/src/main/bash/functions.sh
lines,207
function,17
function simple_function_no_parantheses { function simple_for_loop() function simple_comparison() function simple_inputs() { function global_sum_outputs() { function cs_sum_outputs() { function arg_ref_sum_outputs() { function variable_scope2() { function variable_scope() { function simple_subshell_sum() ( function simple_subshell_ref_sum() ( function redirection_in() { function redirection_in_ps() { function redirection_out_ps() { function redirection_out() { function fibonnaci_recursion() {
simple_function() { function simple_for_loop() function simple_comparison() function simple_inputs() { function global_sum_outputs() { function cs_sum_outputs() { function arg_ref_sum_outputs() { function variable_scope2() { function variable_scope() { function simple_subshell_sum() ( function simple_subshell_ref_sum() ( function redirection_in() { function redirection_in_ps() { function redirection_out_ps() { function redirection_out() { function fibonnaci_recursion() {
for,5
for ((i=0;i<5;++i)) do for ((i=0;i<5;++i)) do for ((i=0;i<5;++i)) do for element in "${output[@]}" for element in "${output[@]}"
if,2
if [[ "$1" -lt 5 ]]; then if [[ "$argument" -eq 0 ]] || [[ "$argument" -eq 1 ]]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-loops/src/main/bash/loop_directories.sh
lines,10
function,0


for,2
for dir in */; do for file in *; do
if,1
if [ -d "$file" ]; then
git@github.com:eugenp/tutorials.git,72ae7b39cdb71bed9e60f1348a00f5c580339f7c,tutorials,34937,./tutorials/linux-bash-modules/linux-bash-loops/src/main/bash/find_directories.sh
lines,8
function,0


for,0

if,0

git@github.com:airbnb/lottie-android.git,34aa06b8db75976f06b134b4fdcdb7dc26e48e07,lottie-android,34263,./lottie-android/version.sh
lines,19
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:airbnb/lottie-android.git,34aa06b8db75976f06b134b4fdcdb7dc26e48e07,lottie-android,34263,./lottie-android/sign.sh
lines,21
function,0


for,0

if,2
if [ -z "$TRAVIS_TAG" ]; then if [ $? -ne 0 ]; then
git@github.com:airbnb/lottie-android.git,34aa06b8db75976f06b134b4fdcdb7dc26e48e07,lottie-android,34263,./lottie-android/upload_release.sh
lines,7
function,0


for,0

if,1
if [ "$git_branch" != "master" ]; then
git@github.com:airbnb/lottie-android.git,34aa06b8db75976f06b134b4fdcdb7dc26e48e07,lottie-android,34263,./lottie-android/deploy_snapshot.sh
lines,10
function,0


for,0

if,0

git@github.com:dbeaver/dbeaver.git,cfc88ca888b8ab1df5e2264eedf071017d243a46,dbeaver,33955,./dbeaver/product/localRepository/install-3rd-party-deps.sh
lines,1
function,0


for,0

if,0

git@github.com:dbeaver/dbeaver.git,cfc88ca888b8ab1df5e2264eedf071017d243a46,dbeaver,33955,./dbeaver/product/localRepository/startRepository.sh
lines,2
function,0


for,0

if,0

git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/run_sample_robo_tests.sh
lines,44
function,0

pids=()
for,2
for sample in "${samples[@]}" for current in "${pids[@]}"
if,0

git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/ci_unit.sh
lines,40
function,0


for,0

if,0

git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/split_by_sdk.sh
lines,169
function,0

POSITIONAL=()
for,5
for test_class in "${test_classes[@]}" for abi in "${abis[@]}" for api in "${apis[@]}" for test_class in "${test_classes[@]}" echo "Tests for API ${api} failed, updating SplitBySdk and generating resources..." 1>&3 2>&4
if,10
if [ -z "$test_classes_string" ]; then if [ -z "$apis_string" ]; then if [ -z "$abis_string" ]; then if [ ! -f "${test_path}" ]; then if (($verbose)); then if !(($verbose)); then if [ "${abi}" == "armeabi-v7a" ]; then if [ "${abi}" == "armeabi-v7a" ] && [ "${api}" -gt 22 ]; then if [ $? -ne 0 ]; then if [ -z $(grep "@SplitBySdk" $test_path | grep "${api}") ]; then
git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/release_checks.sh
lines,79
function,0


for,0

if,8
if [ "$ if [[ $(git status -uno --porcelain) ]]; then if [[ $(git rev-list master...bump/master --count) -ne 0 ]]; then if [[ $(git rev-list master...origin/master --count) -ne 0 ]]; then if [[ $(git ls-files --exclude-standard --others) ]]; then if echo "$answer" | grep -iq "^y" ; then if [[ $version != *"SNAPSHOT"* ]]; then if echo "$answer" | grep -iq "^y" ; then
git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/regenerate_resources.sh
lines,76
function,0


for,0

if,3
if [ "$ if !(($VERBOSE)); then if [[ $sdk_version -gt 22 ]]; then
git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/android-wait-for-emulator.sh
lines,25
function,0


for,1
echo "Waiting for emulator to start"
if,2
if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline" if [[ $failcounter -gt timeout_in_sec ]]; then
git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/update_javadocs.sh
lines,58
function,0


for,2
echo "Updating javadocs for ${version}" git commit -m "Update javadocs for version $version" -m "Generated from commit on master branch: ${GIT_COMMIT_SHA}"
if,4
if [[ $(git status -uno --porcelain) ]]; if [ -e "$JAVADOC_GH_PAGES_DIR" ]; if [[ $(git rev-list master...origin/master --count) -ne 0 ]]; if [[ $(git rev-list gh-pages...origin/gh-pages --count) -ne 0 ]];
git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/install_firebase.sh
lines,10
function,0


for,0

if,0

git@github.com:bumptech/glide.git,75599b7af05eeca1393c8f4267adb78e88e7821e,glide,33935,./glide/scripts/run_instrumentation_tests.sh
lines,20
function,0


for,0

if,0

git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/as-package.sh
lines,48
function,2

get_local_maven_project_version() exit_on_err()
for,0

if,0

git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/bin/as.sh
lines,1104
function,27

rreadlink() ( exit_on_err() default() check_permission() reset_for_env() get_local_version() get_repo_url() get_remote_version() version_gt() update_if_necessary() check_jps() { call_jps() usage() list_versions() find_listen_port_process() getTargetIPOrDefault() getTelnetPortOrDefault() getHttpPortOrDefault() find_listen_port_process_by_client() parse_arguments() POSITIONAL=() attach_jvm() local tempArgs=() sanity_check() { port_pid_check() { print_telnet_port_pid_error() { print_telnet_port_used_error() { active_console() local tempArgs=() main()
for,9
for JAVA_HOME_TEMP in ${JAVA_HOME_CANDIDATES[@]}; do for line in $lines; do for javaHome in ${javaHomes[@]} for process in "${CANDIDATES[@]}"; do for process in "${CANDIDATES[@]}"; do echo "2. Try to use different http port, for example: as.sh --telnet-port 9998 --http-port 9999" echo "[ERROR] 3. Try to use different telnet port, for example: as.sh --telnet-port 9998 --http-port -1" echo "[ERROR] Try to use different telnet port, for example: as.sh --telnet-port 9998 --http-port -1" exit_on_err 1 "attach to target jvm (${TARGET_PID}) failed, check ${HOME}/logs/arthas/arthas.log or stderr of target jvm for any exceptions."
if,89
if [ -L "$fname" ]; then if [ "$fname" = '.' ]; then elif [ "$fname" = '..' ]; then if [ -z "${ARTHAS_LIB_DIR}" ]; then if ! [ -x "$(command -v curl)" ]; then if ! [ -x "$(command -v grep)" ]; then if ! [ -x "$(command -v awk)" ]; then if ! [ -x "$(command -v telnet)" ]; then if ! [ -x "$(command -v unzip)" ]; then if [[ (-z "${JAVA_HOME}") && ( -e "/usr/libexec/java_home") ]]; then if [ -z "${JAVA_HOME}" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ -f "${JAVA_HOME_TEMP}/lib/tools.jar" ]; then if [ -z "${JAVA_HOME}" ]; then if [[ (-z $JAVA_VERSION) && ($line = *"version \""*) ]] if [[ $ver = "1."* ]] if [[ "$JAVA_VERSION" -lt 9 ]];then if [ -f $toolsJar ]; then if [ "$USE_HTTP" = true ] ; then if [ ! -d "${ARTHAS_LIB_DIR}/${update_version}" ]; then if ! (unzip "${temp_target_lib_zip}" -d "${temp_target_lib_dir}") ; then if [ $exit_code -ne 0 ]; then if [[ "$exit_code" -eq 0 ]]; then if [ "${VERBOSE}" = true ] ; then if [ -x "$(command -v lsof)" ]; then if [ "${TARGET_IP}" ]; then if [ "${TELNET_PORT}" ]; then if [ "${HTTP_PORT}" ]; then if [ "${OS_TYPE}" = "Cygwin" ]; then if [ -z "$JPDA_TRANSPORT" ]; then if [ -z "$JPDA_ADDRESS" ]; then if [ -z "$JPDA_SUSPEND" ]; then if [ -z "$JPDA_OPTS" ]; then if [[ -n $1 ]]; then if [[ $telnetPortOrDefault > 0 ]]; then if [ $telnetPortPid ]; then if [[ $httpPortOrDefault > 0 ]]; then if [ $telnetPortPid ]; then if [ -z ${REPO_MIRROR} ]; then if [[ -x "$(command -v date)" ]] && [[ $(date +%z) == "+0800" ]]; then if [ -z ${TARGET_PID} ] && [ ${SELECT} ]; then if [ ${ if [ -z ${TARGET_PID} ]; then if [ ${ if [ $(echo ${process} | grep -c org.apache.catalina.startup.Bootstrap) -eq 1 ] \ if [ ${index} -eq ${suggest} ]; then if [ -z ${choice} ]; then if [[ ($telnetPortPid) && ($TARGET_PID != $telnetPortPid) ]]; then if [[ ($httpPortPid) && ($TARGET_PID != $httpPortPid) ]]; then elif [ -z ${TARGET_PID} ]; then if [ "${OS_TYPE}" = "Cygwin" ]; then if [ "${BOOT_CLASSPATH}" ]; then if [ "${TUNNEL_SERVER}" ]; then if [ "${AGENT_ID}" ]; then if [ "${STAT_URL}" ]; then if [ "${APP_NAME}" ]; then if [ "${USERNAME}" ]; then if [ "${PASSWORD}" ]; then if [ "${DISABLED_COMMANDS}" ]; then if [ "${TARGET_IP}" ]; then if [ "${TELNET_PORT}" ]; then if [ "${HTTP_PORT}" ]; then if [ "${SESSION_TIMEOUT}" ]; then if ([ "${OS_TYPE}" != "Linux" ] && [ "${OS_TYPE}" != "Mac" ]); then if [ "${exitCode}" != "0" ]; then if [ -n "${pid}" ]; then if [ -z ${pid} ]; then if [ "$current_user" != "$target_user" ]; then if [[ $(getTelnetPortOrDefault) > 0 ]]; then if [[ $find_process_status -eq $STATUS_EXEC_TIMEOUT ]]; then elif [[ $find_process_status -eq $STATUS_EXEC_ERROR ]]; then if [[ -n $telnet_output ]]; then if [[ -n $telnetPortPid && ($TARGET_PID != $telnetPortPid) ]]; then if [ "${OS_TYPE}" = "Cygwin" ]; then if [ "${BATCH_MODE}" = "true" ]; then if [ "${HEIGHT}" ]; then if [ "${WIDTH}" ]; then if [ "${COMMAND}" ] ; then if [ "${BATCH_FILE}" ] ; then elif type telnet 2>&1 >> /dev/null; then if [[ $(command -v telnet) == *"system32"* ]] ; then if [[ (-z "${ARTHAS_HOME}") && (! -z "${USE_VERSION}") ]]; then if [[ ! -d "${ARTHAS_LIB_DIR}/${USE_VERSION}/arthas" ]] ; then if [ -z "${ARTHAS_HOME}" ] ; then if [ -z "${ARTHAS_HOME}" ] ; then if $(version_gt $remote_version $arthas_local_version) ; then if [ ! -d "${ARTHAS_HOME}" ] ; then if [ $? -ne 0 ]; then if [ ${ATTACH_ONLY} = false ]; then
git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/bin/install-local.sh
lines,34
function,1

exit_on_err()
for,0

if,1
if [[ ! -x ${ARTHAS_LIB_HOME} ]]; then
git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/bin/jps.sh
lines,27
function,0


for,1
for jps in ${JPS_CMDS[@]}; do
if,3
if [ -x $jps ]; then if [ "$JPS_CMD" == "" ]; then if [ "$result" == "" ]; then
git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/bin/install.sh
lines,48
function,1

exit_on_err()
for,0

if,1
if [[ $
git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/tutorials/katacoda/case-ognl-practise-cn/setup.sh
lines,0
function,0


for,0

if,0

git@github.com:alibaba/arthas.git,8d9af06592b2a43dbcfb5bc51ecfdb57eb69027c,arthas,33415,./arthas/tutorials/katacoda/case-ognl-practise-en/setup.sh
lines,0
function,0


for,0

if,0

git@github.com:geekxh/hello-algorithm.git,60a2b5f56d4d982c12fa2e04b6005fc27cb8d903,hello-algorithm,33322,
git@github.com:Blankj/AndroidUtilCode.git,51c8124045ec5b7c6d342b94a4020ed2f7fda496,AndroidUtilCode,32491,./AndroidUtilCode/script/runDevDebug.sh
lines,8
function,0


for,0

if,0

git@github.com:Blankj/AndroidUtilCode.git,51c8124045ec5b7c6d342b94a4020ed2f7fda496,AndroidUtilCode,32491,./AndroidUtilCode/script/runProductionRelease.sh
lines,8
function,0


for,0

if,0

git@github.com:Blankj/AndroidUtilCode.git,51c8124045ec5b7c6d342b94a4020ed2f7fda496,AndroidUtilCode,32491,./AndroidUtilCode/script/gitHelp.sh
lines,45
function,1
function gitPush() {
function gitPush() {
for,0

if,0

git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/scripts/finish_release.sh
lines,57
function,0


for,0

if,4
if [ "$ if [ "$OS" != "Darwin" ]; then if git tag | grep -q "$2" ; then if [ "$ARCH" == "arm" ]; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/scripts/list_staged_release.sh
lines,21
function,0


for,0

if,0

git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/scripts/generate_docs.sh
lines,50
function,0


for,0

if,2
if [ "$ if [ ! -d "$1" ]; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/check_bom_dependencies.sh
lines,28
function,0


for,0

if,1
if [ "$PARENT_TCNATIVE_VERSION" != "$BOM_TCNATIVE_VERSION" ]; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/build_affected_only.sh
lines,33
function,0


for,0

if,2
if [ "$ if [ -z "$MODULES" ]; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/merge_local_staging.sh
lines,35
function,0


for,1
for ((i=2; i<=$
if,2
if [ "$ if [ ! -d "${TARGET}/${SUB_DIR}" ]
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/release_checkout_tag.sh
lines,28
function,0


for,0

if,1
if [ "$
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/release_rollback.sh
lines,29
function,0


for,0

if,1
if [ "$
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/check_build_result.sh
lines,30
function,0


for,0

if,2
if [ "$ if grep -q 'BUILD FAILURE' $1 ; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/.github/scripts/check_leak.sh
lines,31
function,0


for,0

if,2
if [ "$ if grep -q 'LEAK:' $1 ; then
git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/handler/src/test/resources/io/netty/handler/ssl/generate-certificate.sh
lines,21
function,0


for,0

if,0

git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/handler/src/test/resources/io/netty/handler/ssl/generate-certs.sh
lines,85
function,0


for,0

if,0

git@github.com:netty/netty.git,32a025b4eb2c9fefb389ecd5c781f7cabc6ab139,netty,31867,./netty/run-example.sh
lines,133
function,0


for,3
for E in "${EXAMPLE_MAP[@]}"; do for E in "${EXAMPLE_MAP[@]}"; do for E in "${NEEDS_NPN_MAP[@]}"; do
if,7
if [[ "$ARG" =~ (^-.+) ]]; then if [[ "$EXAMPLE" == "$KEY" ]]; then if [[ -z "$EXAMPLE" ]] || [[ -z "$EXAMPLE_CLASS" ]] || [[ $ if [[ $I -eq 0 ]]; then if [[ $I -eq 2 ]]; then if [[ $I -ne 0 ]]; then if [[ "$EXAMPLE" = "$E" ]]; then
git@github.com:zxing/zxing.git,4276b372b3648367a3c7537b7f63090a5edc6156,zxing,31540,
git@github.com:xkcoding/spring-boot-demo.git,87a142f9604c1a5365b4d24d22c2c11c26a9d5ab,spring-boot-demo,30527,
git@github.com:ityouknow/spring-boot-examples.git,53c8c8d6d0b957e9d4ae02f99d5993d5e699d522,spring-boot-examples,29408,
git@github.com:alibaba/easyexcel.git,3effe20084d4b6cae929027b0483184fd6559902,easyexcel,29046,
git@github.com:halo-dev/halo.git,4af82712e1b07b2510b1cdac5bf19499edf7aca4,halo,28868,./halo/hack/cherry_pick_pull.sh
lines,257
function,3
function join { local IFS="$1"; shift; echo "$*"; } function return_to_kansas { function make-a-pr() {
SUBJECTS=() function make-a-pr() {
for,5
echo "${0} <remote branch> <pr-number>...: cherry pick one or more <pr> onto <remote branch> and leave instructions for proposing pull request" echo " Checks out <remote branch> and handles the cherry-pick of <pr> (possibly multiple) for you." echo " This is useful for creating patches to a release branch without making a PR." echo " Set the REGENERATE_DOCS environment var to regenerate documentation for the target branch after picking the specified commits." for pull in "${PULLS[@]}"; do
if,17
if [[ -z ${GITHUB_USER:-} ]]; then echo "Please export GITHUB_USER=<your-user> (or GH organization, if that's where your fork lives)" if ! command -v gh > /dev/null; then if [[ "$ if git_status=$(git status --porcelain --untracked=no 2>/dev/null) && [[ -n "${git_status}" ]]; then if [[ -e "${REBASEMAGIC}" ]]; then if ! git log -n1 --format=%H "${BRANCH}" >/dev/null 2>&1; then if [[ "${gitamcleanup}" == "true" ]]; then if [[ -z "${DRY_RUN}" ]]; then if [[ -n "${cleanbranch}" ]]; then if ! [[ "${REPLY}" =~ ^[yY]$ ]]; then if [[ "${conflicts}" != "true" ]]; then if [[ -n "${REGENERATE_DOCS}" ]]; then if ! hack/generate-docs.sh; then if [[ -n "${DRY_RUN}" ]]; then if git remote -v | grep ^"${FORK_REMOTE}" | grep "${MAIN_REPO_ORG}/${MAIN_REPO_NAME}.git"; then if ! [[ "${REPLY}" =~ ^[yY]$ ]]; then
git@github.com:halo-dev/halo.git,4af82712e1b07b2510b1cdac5bf19499edf7aca4,halo,28868,./halo/console/packages/api-client/src/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-portal/src/main/scripts/shutdown.sh
lines,33
function,0


for,0

if,3
if [[ -z "$JAVA_HOME" && -d /usr/java/latest/ ]]; then if [[ ! -f $SERVICE_NAME".jar" && -d current ]]; then if [[ -f $SERVICE_NAME".jar" ]]; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-portal/src/main/scripts/startup.sh
lines,212
function,4
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
for,6
for i in `ls -t $APP_NAME/$APP_NAME.pid 2>/dev/null` printf "\npid - $pid just quit unexpectedly, please check logs under $LOG_DIR and /tmp for more information!\n" printf "\nNo pid file found, startup may failed. Please check logs under $LOG_DIR and /tmp for more information!\n" for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` printf "Waiting for server startup"
if,24
if [ "$DS_URL"x != x ] if [ "$?" -eq 0 ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 --head $SERVER_URL | grep "HTTP")" != "" ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 $SERVER_URL/health | grep "UP")" != "" ]; then if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ]; then if [ "$windows" == "1" ] && [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then elif type -p java > /dev/null 2>&1; then elif [[ -x "/usr/bin/java" ]]; then if [[ "$javaexe" ]]; then if [ $version -ge 011000 ]; then elif [ $version -ge 010000 ]; then elif [ $version -ge 009000 ]; then if [[ ! $i == *"-sources.jar" ]] if [[ ! -f $PATH_TO_JAR && -d current ]]; then if [[ ! $i == *"-sources.jar" ]] if [[ -n "$APOLLO_RUN_MODE" ]] && [[ "$APOLLO_RUN_MODE" == "Docker" ]]; then if existProcessUsePort; then if isServiceRunning; then if [[ -f $SERVICE_NAME".jar" ]]; then if [[ $rc != 0 ]]; if isServiceRunning; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/scripts/build.sh
lines,53
function,0


for,0

if,0

git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/scripts/openapi/bash/openapi-usage-example.sh
lines,110
function,0


for,1
namespace_create ${APOLLO_APP_ID} ${temp_namespace_name} ${temp_namespace_format} false 'create by openapi, bash scripts for release' ${APOLLO_USER}
if,1
echo "show Update an item of a namespace, if item doesn's exist, create it"
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/scripts/openapi/bash/openapi.sh
lines,342
function,12
function openapi_get() { function openapi_post() { function openapi_put() { function openapi_delete() { function cluster_get() { function cluster_create() { function namespace_create() { function namespace_release() { function item_create() { function item_update() { function item_update_create_if_not_exists() { function item_delete() {
function openapi_get() { function openapi_post() { function openapi_put() { function openapi_delete() { function cluster_get() { function cluster_create() { function namespace_create() { function namespace_release() { function item_create() { function item_update() { function item_update_create_if_not_exists() { function item_delete() {
for,0

if,0

git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-adminservice/src/main/scripts/shutdown.sh
lines,33
function,0


for,0

if,3
if [[ -z "$JAVA_HOME" && -d /usr/java/latest/ ]]; then if [[ ! -f $SERVICE_NAME".jar" && -d current ]]; then if [[ -f $SERVICE_NAME".jar" ]]; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-adminservice/src/main/scripts/startup.sh
lines,212
function,4
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
for,6
for i in `ls -t $APP_NAME/$APP_NAME.pid 2>/dev/null` printf "\npid - $pid just quit unexpectedly, please check logs under $LOG_DIR and /tmp for more information!\n" printf "\nNo pid file found, startup may failed. Please check logs under $LOG_DIR and /tmp for more information!\n" for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` printf "Waiting for server startup"
if,24
if [ "$DS_URL"x != x ] if [ "$?" -eq 0 ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 --head $SERVER_URL | grep "HTTP")" != "" ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 $SERVER_URL/health | grep "UP")" != "" ]; then if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ]; then if [ "$windows" == "1" ] && [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then elif type -p java > /dev/null 2>&1; then elif [[ -x "/usr/bin/java" ]]; then if [[ "$javaexe" ]]; then if [ $version -ge 011000 ]; then elif [ $version -ge 010000 ]; then elif [ $version -ge 009000 ]; then if [[ ! $i == *"-sources.jar" ]] if [[ ! -f $PATH_TO_JAR && -d current ]]; then if [[ ! $i == *"-sources.jar" ]] if [[ -n "$APOLLO_RUN_MODE" ]] && [[ "$APOLLO_RUN_MODE" == "Docker" ]]; then if existProcessUsePort; then if isServiceRunning; then if [[ -f $SERVICE_NAME".jar" ]]; then if [[ $rc != 0 ]]; if isServiceRunning; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-configservice/src/main/scripts/shutdown.sh
lines,33
function,0


for,0

if,3
if [[ -z "$JAVA_HOME" && -d /usr/java/latest/ ]]; then if [[ ! -f $SERVICE_NAME".jar" && -d current ]]; then if [[ -f $SERVICE_NAME".jar" ]]; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-configservice/src/main/scripts/startup.sh
lines,212
function,4
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
function getPid() { function checkPidAlive() { function existProcessUsePort() { function isServiceRunning() {
for,6
for i in `ls -t $APP_NAME/$APP_NAME.pid 2>/dev/null` printf "\npid - $pid just quit unexpectedly, please check logs under $LOG_DIR and /tmp for more information!\n" printf "\nNo pid file found, startup may failed. Please check logs under $LOG_DIR and /tmp for more information!\n" for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` for i in `ls $SERVICE_NAME-*.jar 2>/dev/null` printf "Waiting for server startup"
if,24
if [ "$DS_URL"x != x ] if [ "$?" -eq 0 ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 --head $SERVER_URL | grep "HTTP")" != "" ]; then if [ "$(curl -X GET --silent --connect-timeout 1 --max-time 2 $SERVER_URL/health | grep "UP")" != "" ]; then if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ]; then if [ "$windows" == "1" ] && [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then elif type -p java > /dev/null 2>&1; then elif [[ -x "/usr/bin/java" ]]; then if [[ "$javaexe" ]]; then if [ $version -ge 011000 ]; then elif [ $version -ge 010000 ]; then elif [ $version -ge 009000 ]; then if [[ ! $i == *"-sources.jar" ]] if [[ ! -f $PATH_TO_JAR && -d current ]]; then if [[ ! $i == *"-sources.jar" ]] if [[ -n "$APOLLO_RUN_MODE" ]] && [[ "$APOLLO_RUN_MODE" == "Docker" ]]; then if existProcessUsePort; then if isServiceRunning; then if [[ -f $SERVICE_NAME".jar" ]]; then if [[ $rc != 0 ]]; if isServiceRunning; then
git@github.com:apolloconfig/apollo.git,a632cc13fccb8e52d3b29f35ac99e3db55a5d47c,apollo,28373,./apollo/apollo-buildtools/src/main/scripts/deploy_jenkins.sh
lines,64
function,0


for,1
for supported_app in 100003171 100003172 100003173 ;do
if,5
if [ $ if [ $1 == $supported_app ];then if [ $valid_app == false ];then if [ -e $APP_STARTUP_SCRIPT ];then if [ -d $APP_DIR ];then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/generate_web_code.sh
lines,35
function,0


for,0

if,1
if [ -z $changes ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/generate_api_docs.sh
lines,84
function,0


for,1
echo -e "\t Generating API docs for the Ruby bindings"
if,1
if [ -z $changes ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/github-actions/ci-build.sh
lines,18
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/github-actions/check-bazel-targets.sh
lines,35
function,0

bazel_targets=()
for,1
for bazel_target in $affected_files ; do
if,1
if (( ${
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/github-actions/free-disk-space.sh
lines,55
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/github-actions/check-format.sh
lines,24
function,0


for,0

if,1
if [ ! -n "${GITHUB_WORKFLOW}" ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/build-info.sh
lines,10
function,0


for,0

if,1
if [ -n "$(git status --porcelain --untracked-files=no)" ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/format.sh
lines,21
function,1

section() {
for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/grid/start-traced-grid.sh
lines,15
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/create-release-notes.sh
lines,26
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/gitpod/start-vnc.sh
lines,14
function,0


for,2
for i in $(seq 1 10) echo "Waiting for Xvfb..."
if,1
if [ $? -eq 0 ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/gitpod/start-novnc.sh
lines,3
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/gitpod/start-xvfb.sh
lines,14
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/remote-image/create-cc-toolchain.sh
lines,13
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/remote-image/create-cc-toolchain-within-image.sh
lines,18
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/remote-image/start-xvfb.sh
lines,18
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/scripts/credential-helper.sh
lines,82
function,4
function emit_headers() { function netrc_password() { function get() { function set() {
function emit_headers() { function netrc_password() { function get() { function set() {
for,0

if,9
if [ ! -e "$HOME/.netrc" ]; then if ($1 == "machine") { } else if (found && ($1 == field)) { } else if (found && $1 == "machine") { if [ -z "$(echo "$INPUT" | grep "gypsum.cluster")" ]; then if [ -n "$GITHUB_TOKEN" ]; then if [ -n "$ENGFLOW_GITHUB_TOKEN" ]; then if [ -n "${NETRC}" ]; then if [ -n "$KEYCHAIN" ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/java/src/org/openqa/selenium/grid/zip-preamble.sh
lines,8
function,0


for,0

if,1
if test -n "$JAVA_HOME"; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/deploys/docker/selenium.sh
lines,40
function,0


for,2
for i in $(seq 1 10) echo "Waiting for X server..."
if,1
if [ $? -eq 0 ]; then
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/dotnet/src/webdriver/WebDriver.csproj.prebuild.sh
lines,42
function,0


for,4
echo "Generating CDP code for version 85" echo "Generating CDP code for version 116" echo "Generating CDP code for version 117" echo "Generating CDP code for version 118"
if,7
if [[ ! -f "$1../../../bazel-bin/javascript/webdriver/atoms/get-attribute.js" ]] if [[ ! -f "$1../../../bazel-bin/javascript/atoms/fragments/is-displayed.js" ]] if [[ ! -f "$1../../../bazel-bin/javascript/atoms/fragments/find-elements.js" ]] if [[ ! -f "$1../../../bazel-bin/dotnet/src/webdriver/cdp/v85/DevToolsSessionDomains.cs" ]] if [[ ! -f "$1../../../bazel-bin/dotnet/src/webdriver/cdp/v116/DevToolsSessionDomains.cs" ]] if [[ ! -f "$1../../../bazel-bin/dotnet/src/webdriver/cdp/v117/DevToolsSessionDomains.cs" ]] if [[ ! -f "$1../../../bazel-bin/dotnet/src/webdriver/cdp/v118/DevToolsSessionDomains.cs" ]]
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/dotnet/update-deps.sh
lines,9
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/dotnet/test/common/WebDriver.Common.Tests.csproj.prebuild.sh
lines,6
function,0


for,0

if,1
if [[ ! -f "%1..\..\..\bazel-bin\java\test\org\openqa\selenium\environment\appserver_deploy.jar" ]]
git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/common/remote-build/cc/cc_wrapper.sh
lines,25
function,0


for,0

if,0

git@github.com:SeleniumHQ/selenium.git,d0dc0c2d01146df25d29bfa92c95283fb5551644,selenium,27890,./selenium/common/private/convert_dmg.sh
lines,33
function,0


for,0

if,0

git@github.com:alibaba/nacos.git,0e6b5faf4fd4dd6e38033e9923f0d03abf9fbbaa,nacos,27594,./nacos/console-ui/test/run.sh
lines,5
function,0


for,0

if,1
if [ "$1" = "" ]; then
git@github.com:alibaba/nacos.git,0e6b5faf4fd4dd6e38033e9923f0d03abf9fbbaa,nacos,27594,./nacos/console-ui/test/install.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/nacos.git,0e6b5faf4fd4dd6e38033e9923f0d03abf9fbbaa,nacos,27594,./nacos/distribution/bin/shutdown.sh
lines,28
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:alibaba/nacos.git,0e6b5faf4fd4dd6e38033e9923f0d03abf9fbbaa,nacos,27594,./nacos/distribution/bin/startup.sh
lines,149
function,1

error_exit ()
for,0

if,15
if [ -z "$JAVA_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [[ "${MODE}" == "standalone" ]]; then if [[ "${EMBEDDED_STORAGE}" == "embedded" ]]; then if [[ "${FUNCTION_MODE}" == "config" ]]; then elif [[ "${FUNCTION_MODE}" == "naming" ]]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [[ "${MODE}" == "standalone" ]]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then if [[ "$JAVA_OPT_EXT_FIX" == "" ]]; then
git@github.com:alibaba/druid.git,56300eb61cf085a65ba02d62766c1ac3224e154e,druid,27235,./druid/vtune.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/druid.git,56300eb61cf085a65ba02d62766c1ac3224e154e,druid,27235,./druid/core/src/main/scripts/druidStat.sh
lines,8
function,0


for,0

if,1
if [ -z "$JAVA_HOME" ] ; then
git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/replaceVersion.sh
lines,35
function,0


for,0

if,2
if [ -n "$1" ];then if [ ! -n "$old_version" ]; then
git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/simple_install.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/javadoc.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/test.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/update_version.sh
lines,21
function,0


for,0

if,1
if [ ! -n "$1" ]; then
git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/package.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/logo.sh
lines,11
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/push_dev.sh
lines,9
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/fast_install.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/push_master.sh
lines,12
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/install.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/check_dependency_updates.sh
lines,7
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/deploy.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/cobertura.sh
lines,3
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/bin/commit.sh
lines,6
function,0


for,0

if,0

git@github.com:dromara/hutool.git,20f0c720c457efccde2bcfdd683b06a6ddcdd270,hutool,27146,./hutool/hutool.sh
lines,32
function,1

help(){
for,1
echo "-doc Generate Java doc api for Hutool, you can see it in target dir"
if,0

git@github.com:crossoverJie/JCSprout.git,138bf674028a5e14584d94576cbacb97cbdf56de,JCSprout,27000,
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/example/src/main/bin/startup.sh
lines,112
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,11
if [ -f $base/bin/canal.pid ] ; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $TAOBAO_JAVA ] ; then if [ "$1" = "debug" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -n "$str" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -e $logback_configurationFile ] if [ $client_mode == "Cluster" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/example/src/main/bin/init.sh
lines,90
function,1
function printUsage

for,1
Initialise the instance config property file automatically. This tool will connect to Mysql master server and get the binlog file and position then update the instance config property file for you.
if,5
if [[ $OPTARG -gt 0 ]]; then if [[ $PORT -lt 0 ]]; then if [[ $MYSQL_IP = "0" ]]; then if [ ! -f $INSTANCE_CONF_FILE ]; then echo 'Above is your instance config file, check if the settings are correct'
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/example/src/main/bin/stop.sh
lines,52
function,1

get_pid() {
for,0

if,5
if $cygwin; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$gpid" == "" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/build.sh
lines,29
function,0


for,0

if,1
if [ "$1" == "admin" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/alidata/lib/proc.sh
lines,40
function,2

waitterm() { waittermpid() {
for,0

if,1
if ! ps -p "${PID}" >/dev/null 2>&1 ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/alidata/bin/exec_rc_local.sh
lines,10
function,0


for,0

if,2
if [ "${SKIP_EXEC_RC_LOCAL}" = "YES" ] ; then if [ "${DOCKER_DEPLOY_TYPE}" = "HOST" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/alidata/bin/main.sh
lines,27
function,0


for,1
for e in $(ls /alidata/init/*) ; do
if,0

git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/alidata/init/02init-sshd.sh
lines,19
function,0


for,0

if,2
if [ -z "${SSHD_PORT}" ] ; then if [ "${USE_ADMIN_PASSAGE}" = "YES" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/admin/health.sh
lines,29
function,0


for,0

if,4
if [ -d "/home/admin/canal-server" ]; then if [ -z "$serverPort" ] ; then if [ "$metrics_port" == "" ]; then if [ $CHECK_COUNT -eq 0 ]; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/admin/bin/clean_log.sh
lines,48
function,1

baseClean(){
for,0

if,6
if [ -d /tmp/hsperfdata_admin ] if [ ! -d "$CANAL_DIR" ] if [[ -d $CANAL_DIR ]]; then if [[ $USAGE -ge 90 ]]; then if [[ $USAGE -ge 80 ]]; then if [[ $USAGE -ge 80 ]]; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/app.sh
lines,185
function,8
function checkStart() { function start_canal() { function splitDestinations() { function stop_canal() { function start_exporter() { function stop_exporter() {
waitterm() { waittermpid() { function checkStart() { function start_canal() { function splitDestinations() { array=() function stop_canal() { function start_exporter() { function stop_exporter() {
for,1
for var in ${array[@]}
if,14
if ! ps -p "${PID}" >/dev/null 2>&1 ; then if [ "$ST" == "0" ]; then elif [ "$ST" == "" ]; then if [ ! -z "$managerAddress" ] ; then if [ -z "$adminPort" ] ; then if [ -z "$metricsPort" ] ; then if [[ "$destination" =~ ',' ]] || [[ -n "$destinationExpr" ]]; then if [[ "$multistream" = 'true' ]] ; then if [[ -n "$destinationExpr" ]] ; then if [ "$destination" != "" ] && [ "$destination" != "example" ] ; then if [ -d /home/admin/canal-server/conf/example ]; then if [[ "$1" == '1' ]] ; then if [[ "$prefix$var" = 'example' ]] ; then if [[ "$holdExample" != 'true' ]] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/image/app_admin.sh
lines,177
function,7
function checkStart() { function start_mysql() { function stop_mysql() { function start_admin() { function stop_admin() {
waitterm() { waittermpid() { function checkStart() { function start_mysql() { function stop_mysql() { function start_admin() { function stop_admin() {
for,0

if,11
if [ -z "${MYSQL_USER_PASSWORD}" ]; then if [ -z "${MYSQL_USER}" ]; then if [ -z "${MYSQL_DATABASE}" ]; then if ! ps -p "${PID}" >/dev/null 2>&1 ; then if [ "$ST" == "0" ]; then elif [ "$ST" == "" ]; then if [ -z "$(ls -A /var/lib/mysql)" ]; then echo "create database if not exists $MYSQL_DATABASE ;" >> $TEMP_FILE if [ -z "$serverPort" ] ; then if [ -z "${MYSQL_ADDRESS}" ]; then if [ -z "${MYSQL_ADDRESS}" ]; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/run.sh
lines,102
function,3
function usage() { function check_port() { function getMyIp() {
function usage() { function check_port() { function getMyIp() {
for,1
for PORT in $PORTLIST ; do
if,6
if [ -f $TL ]; then if [ -f $NC ]; then if [ "$exist" == "0" ]; then if [ $ elif [ "$1" == "-h" ] ; then elif [ "$1" == "help" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/docker/run_admin.sh
lines,91
function,3
function usage() { function check_port() { function getMyIp() {
function usage() { function check_port() { function getMyIp() {
for,1
for PORT in $PORTLIST ; do
if,6
if [ -f $TL ]; then if [ -f $NC ]; then if [ "$exist" == "0" ]; then if [ $ elif [ "$1" == "-h" ] ; then elif [ "$1" == "help" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/admin/admin-web/src/main/bin/startup.sh
lines,99
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,10
if [ -f $base/bin/adapter.pid ] ; then if [ ! -d $base/logs ] ; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $TAOBAO_JAVA ] ; then if [ "$1" = "debug" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -n "$str" ]; then if [ $JavaVersion -ge 11 ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/admin/admin-web/src/main/bin/restart.sh
lines,13
function,0


for,0

if,0

git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/admin/admin-web/src/main/bin/stop.sh
lines,64
function,1

get_pid() {
for,0

if,7
if $cygwin; then if $linux; then if [ ! -z "$PID" ]; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$gpid" == "" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/deployer/src/main/bin/startup.sh
lines,129
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,15
if [ -f $base/bin/canal.pid ] ; then if [ ! -d $base/logs/canal ] ; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $TAOBAO_JAVA ] ; then if [ "$var" = "local" ]; then if [ -f $var ] ; then if [ "$var" = "local" ]; then if [ -f $var ] ; then if [ "$1" = "debug" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -n "$str" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -e $canal_conf -a -e $logback_configurationFile ]
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/deployer/src/main/bin/restart.sh
lines,15
function,0


for,0

if,0

git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/deployer/src/main/bin/stop.sh
lines,64
function,1

get_pid() {
for,0

if,7
if $cygwin; then if $linux; then if [ ! -z "$PID" ]; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$gpid" == "" ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/client-adapter/launcher/src/main/bin/startup.sh
lines,99
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,10
if [ -f $base/bin/adapter.pid ] ; then if [ ! -d $base/logs ] ; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $TAOBAO_JAVA ] ; then if [ "$1" = "debug" ]; then if [ $JavaVersion -ge 11 ] ; then if [ -n "$str" ]; then if [ $JavaVersion -ge 11 ] ; then
git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/client-adapter/launcher/src/main/bin/restart.sh
lines,13
function,0


for,0

if,0

git@github.com:alibaba/canal.git,c8ef9552ec40fbd8eb032f4d8efa2a9edf2f93c8,canal,26771,./canal/client-adapter/launcher/src/main/bin/stop.sh
lines,64
function,1

get_pid() {
for,0

if,7
if $cygwin; then if $linux; then if [ ! -z "$PID" ]; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$gpid" == "" ] ; then
git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/integrated-example/config-init/scripts/nacos-config-quick.sh
lines,17
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/resttemplate.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/sleep.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/error.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/feign-defaultmethod-error.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/index.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-sclb-example/scripts/feign-error.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-example/scripts/sleep.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-example/scripts/error.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-example/scripts/feign-defaultmethod-error.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-example/scripts/index.sh
lines,7
function,0


for,0

if,0

git@github.com:alibaba/spring-cloud-alibaba.git,2823ae7443f05faa075a94cf5375919b627ee08d,spring-cloud-alibaba,26468,./spring-cloud-alibaba/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/nacos-discovery-consumer-example/scripts/feign-error.sh
lines,7
function,0


for,0

if,0

git@github.com:lenve/vhr.git,5374332207921e9c80035340c0890efd6bad9ba6,vhr,26356,
git@github.com:wuyouzhuguli/SpringAll.git,614d2578d9495acf53cc02f2dee9c6131cc5e51a,SpringAll,26167,
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/jmh-benchmarks/jmh.sh
lines,42
function,0


for,0

if,2
if [ ${base_dir} == "." ]; then elif [ ${base_dir
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/tests/docker/run_tests.sh
lines,38
function,1

die() {
for,0

if,2
if [ "$REBUILD" == "t" ]; then if ${SCRIPT_DIR}/ducker-ak ssh | grep -q '(none)'; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/tests/bin/flatten_html.sh
lines,78
function,4

usage() { die() { realpath() { process_file() {
for,1
[[ -z "${FILE}" ]] && die "You must specify which file to process. -h for help."
if,2
if [[ $LINE =~ \ if [[ $INCLUDED_FILE =~ ../includes/ ]]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/tests/bootstrap-test-env.sh
lines,87
function,1
function version { echo "$@" | awk -F. '{ printf("%03d%03d%03d%03d\n", $1,$2,$3,$4); }'; }

for,4
echo "It appears that Virtual Box is not installed. Please install and try again (see https://www.virtualbox.org/ for details)" echo "Found Vagrant version $vagrant_version. Please upgrade to 1.6.4 or higher (see https://www.vagrantup.com for details)" echo "Checking for necessary Vagrant plugins..." echo "Creating and packaging a reusable base box for Vagrant..."
if,9
if [ -z `vboxmanage --version` ]; then if [ "$(version $vagrant_version)" -lt "$(version 1.6.4)" ]; then if [ "x$bad_vagrant" == "xtrue" -o "x$bad_vb" == "xtrue" ]; then if [ -z "$hostmanager_version" ]; then if [ ! -e Vagrantfile.local ]; then if [ "x$num_brokers" == "x" -o "$num_brokers" != 0 ]; then if [ "x$num_zookeepers" == "x" -o "$num_zookeepers" != 0 ]; then if [ "x$num_workers" == "x" -o "$num_workers" == 0 ]; then if [ "$vagrantfile_ok" == "true" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/examples/bin/java-producer-consumer-demo.sh
lines,22
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/examples/bin/exactly-once-demo.sh
lines,23
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/raft/bin/test-kraft-server-start.sh
lines,39
function,0


for,0

if,2
if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/zk.sh
lines,47
function,0


for,1
for i in `seq 1 $NUM_ZK`; do
if,1
if [[ -n $JMX_PORT ]]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/base.sh
lines,187
function,3

path_to_jdk_cache() { fetch_jdk_tgz() { get_kafka() {
for,1
for bin in /opt/jdk/$JDK_MAJOR/bin/* ; do
if,5
if [ ! -e $path ]; then if [ -z `which javac` ]; then if [ -h /opt/kafka-dev ]; then if [ ! -d /opt/kafka-$version ]; then if [ ! -e /mnt ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/broker.sh
lines,43
function,0


for,0

if,1
if [[ -n $JMX_PORT ]]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/aws/aws-init.sh
lines,81
function,0


for,1
for plugin in $vagrant_plugins; do
if,7
if [ -z `which vagrant` ]; then if [ $? != 0 ]; then if [ ! -e "$base_dir/Vagrantfile.local" ]; then if [ -z `which gradle` ] && [ ! -d $base_dir/$gradle ]; then if [ ! -e $gradle-bin.zip ]; then if [[ ${LOCAL_HOSTNAME} =~ .*\.compute\.internal ]]; then if [ $? != 0 ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/package-base-box.sh
lines,75
function,2
function revert_vagrantfile { function clean_up {

for,0

if,3
if [ -e $backup_vagrantfile ]; then if [ -e $local_vagrantfile ]; then if [ $up_status != 0 ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/vagrant/vagrant-up.sh
lines,266
function,9
function help { function read_vagrant_machines { function filter { function worker { function zk_broker { function vagrant_batch_command { function bring_up_local { function bring_up_aws { function main {

for,4
--debug Enable debug information for vagrant for item in $list; do for machine in $machines; do for worker in $worker_machines; do
if,12
--aws Use if you are running in aws if [[ -z "$line" ]]; then if [[ "$state" == "$ignore_state" ]]; then if [[ "$state" == "$reading_state" ]]; then if [[ -z "$machines" ]]; then if [[ ! -z "$(echo $item | grep "$pattern")" ]]; then if [[ $(expr $count % $group_size) == 0 ]]; then if [[ ! -z "$m_group" ]]; then if [[ "$parallel" == "true" ]]; then if [[ ! -z "$zk_broker_machines" ]]; then if [[ ! -z "$worker_machines" ]]; then if [[ "$AWS" == "true" ]]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-metadata-shell.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-console-producer.sh
lines,20
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-streams-application-reset.sh
lines,21
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-reassign-partitions.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-jmx.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-server-stop.sh
lines,35
function,0


for,0

if,4
if [[ "$OSNAME" == "OS/390" ]]; then if [ -z $JOBNAME ]; then elif [[ "$OSNAME" == "OS400" ]]; then if [ -z "$PIDS" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/trogdor.sh
lines,50
function,1

usage() {
for,1
*) echo "Unknown action '${action}'. Type '$0 help' for help."; exit 1;;
if,1
if [[ $
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-leader-election.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-log-dirs.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-broker-api-versions.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-transactions.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/connect-distributed.sh
lines,45
function,0


for,0

if,3
if [ $ if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/zookeeper-server-stop.sh
lines,35
function,0


for,0

if,4
if [[ "$OSNAME" == "OS/390" ]]; then if [ -z $JOBNAME ]; then elif [[ "$OSNAME" == "OS400" ]]; then if [ -z "$PIDS" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-producer-perf-test.sh
lines,20
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-mirror-maker.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-consumer-groups.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-storage.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-verifiable-consumer.sh
lines,20
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/connect-plugin-path.sh
lines,21
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-dump-log.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-console-consumer.sh
lines,21
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/connect-standalone.sh
lines,45
function,0


for,0

if,3
if [ $ if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-e2e-latency.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-replica-verification.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/zookeeper-server-start.sh
lines,44
function,0


for,0

if,3
if [ $ if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-get-offsets.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/zookeeper-shell.sh
lines,23
function,0


for,0

if,1
if [ $
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/zookeeper-security-migration.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-metadata-quorum.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-cluster.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-configs.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-verifiable-producer.sh
lines,20
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/connect-mirror-maker.sh
lines,45
function,0


for,0

if,3
if [ $ if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-topics.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-delegation-tokens.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-features.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-run-class.sh
lines,347
function,1

should_include_file() {
for,18
for dir in "$base_dir"/core/build/dependant-libs-${SCALA_VERSION}*; for file in "$base_dir"/examples/build/libs/kafka-examples*.jar; for file in "$clients_lib_dir"/kafka-clients*.jar; for file in "$streams_lib_dir"/kafka-streams*.jar; for file in "$base_dir"/streams/examples/build/libs/kafka-streams-examples*.jar; for file in "$base_dir"/streams/upgrade-system-tests-$SHORT_VERSION_NO_DOTS/build/libs/kafka-streams-upgrade-system-tests*.jar; for file in "$streams_dependant_clients_lib_dir"/rocksdb*.jar; for file in "$streams_dependant_clients_lib_dir"/*hamcrest*.jar; for file in "$base_dir"/shell/build/libs/kafka-shell*.jar; for dir in "$base_dir"/shell/build/dependant-libs-${SCALA_VERSION}*; for file in "$base_dir"/tools/build/libs/kafka-tools*.jar; for dir in "$base_dir"/tools/build/dependant-libs-${SCALA_VERSION}*; for file in "$base_dir"/trogdor/build/libs/trogdor-*.jar; for dir in "$base_dir"/trogdor/build/dependant-libs-${SCALA_VERSION}*; for cc_pkg in "api" "transforms" "runtime" "mirror" "mirror-client" "json" "tools" "basic-auth-extension" for file in "$base_dir"/connect/${cc_pkg}/build/libs/connect-${cc_pkg}*.jar; for file in "$base_dir"/libs/*; for file in "$base_dir"/core/build/libs/kafka_${SCALA_BINARY_VERSION}*.jar;
if,43
if [ $ if [[ $(uname -a) =~ "CYGWIN" ]]; then if [ -z "$INCLUDE_TEST_JARS" ]; then if [ "$INCLUDE_TEST_JARS" = true ]; then if [ -z "$(echo "$file" | grep -E "$regex")" ] ; then if [ -z "$SCALA_VERSION" ]; then if [[ -f "$base_dir/gradle.properties" ]]; then if [ -z "$SCALA_BINARY_VERSION" ]; then if [ -z "$UPGRADE_KAFKA_STREAMS_TEST_VERSION" ]; then if should_include_file "$file"; then if [ -z "$UPGRADE_KAFKA_STREAMS_TEST_VERSION" ]; then if should_include_file "$file"; then if should_include_file "$file"; then if [ -z "$UPGRADE_KAFKA_STREAMS_TEST_VERSION" ]; then if should_include_file "$file"; then if should_include_file "$file"; then if [ "$SHORT_VERSION_NO_DOTS" = "0100" ]; then if [ "$SHORT_VERSION_NO_DOTS" = "0101" ]; then if should_include_file "$file"; then if should_include_file "$file"; then if should_include_file "$file"; then if should_include_file "$file"; then if [ -d "$base_dir/connect/${cc_pkg}/build/dependant-libs" ] ; then if should_include_file "$file"; then if should_include_file "$file"; then if [ -z "$CLASSPATH" ] ; then if [ -z "$KAFKA_JMX_OPTS" ]; then if [ $JMX_PORT ]; then if ! echo "$KAFKA_JMX_OPTS" | grep -qF -- '-Dcom.sun.management.jmxremote.rmi.port=' ; then if [ "x$LOG_DIR" = "x" ]; then if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ ! -d "$LOG_DIR" ]; then if [ -z "$KAFKA_OPTS" ]; then if [ "x$KAFKA_DEBUG" != "x" ]; then if [ -z "$JAVA_DEBUG_PORT" ]; then if [ -z "$JAVA_DEBUG_OPTS" ]; then if [ -z "$JAVA_HOME" ]; then if [ -z "$KAFKA_HEAP_OPTS" ]; then if [ -z "$KAFKA_JVM_PERFORMANCE_OPTS" ]; then if [ -z "$KAFKA_GC_LOG_OPTS" ]; then if [ "x$GC_LOG_ENABLED" = "xtrue" ]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ "x$DAEMON_MODE" = "xtrue" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-server-start.sh
lines,44
function,0


for,0

if,3
if [ $ if [ "x$KAFKA_LOG4J_OPTS" = "x" ]; then if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-consumer-perf-test.sh
lines,20
function,0


for,0

if,1
if [ "x$KAFKA_HEAP_OPTS" = "x" ]; then
git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-delete-records.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kafka.git,21ebbe6b28b96055f7f65a7e384f624368998a6f,kafka,25938,./kafka/bin/kafka-acls.sh
lines,17
function,0


for,0

if,0

git@github.com:JakeWharton/butterknife.git,fcdebedf3276096db2f51bf6372b849b5a9c75ed,butterknife,25604,./butterknife/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:JakeWharton/butterknife.git,fcdebedf3276096db2f51bf6372b849b5a9c75ed,butterknife,25604,./butterknife/deploy_website.sh
lines,45
function,0


for,0

if,0

git@github.com:alibaba/fastjson.git,c942c83443117b73af5ad278cc780270998ba3e1,fastjson,25457,./fastjson/x.sh
lines,2
function,0


for,0

if,0

git@github.com:alibaba/fastjson.git,c942c83443117b73af5ad278cc780270998ba3e1,fastjson,25457,./fastjson/vtune.sh
lines,2
function,0


for,0

if,0

git@github.com:TeamNewPipe/NewPipe.git,6f51c47dc9edcfa7e176606ba1edd7c4c8c757ab,NewPipe,25399,
git@github.com:xuxueli/xxl-job.git,72963e4716a74eacdcbdd2e999c433debf3afaa3,xxl-job,25244,
git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/termux-shared/src/main/res/raw/apt_info_script.sh
lines,59
function,2

subscribed_repositories() { updatable_packages() {
for,0

if,5
if [ -n "$main_sources" ]; then if [ -n "$supl_sources" ]; then if [ -n "$repo_package" ]; then if [ "$(id -u)" = "0" ]; then if [ -z "$updatable" ];then
git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/art/generate-feature-graphic.sh
lines,5
function,0


for,0

if,0

git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/art/generate-big-icon.sh
lines,23
function,0


for,0

if,0

git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/art/generate-launcher-images.sh
lines,20
function,0


for,2
for DENSITY in mdpi hdpi xhdpi xxhdpi xxxhdpi; do for FILE in ic_launcher ic_launcher_round; do
if,0

git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/art/copy-to-other-apps.sh
lines,13
function,0


for,2
for APP in api boot styling tasker widget; do for file in ic_foreground ic_launcher; do
if,0

git@github.com:termux/termux-app.git,6727bbecc4ddc92933fbc7426cf153d11c09a12f,termux-app,25076,./termux-app/art/generate-tv-banner.sh
lines,9
function,0


for,0

if,0

git@github.com:proxyee-down-org/proxyee-down.git,378f353e130b48095608409494f9d2698ff1ea4d,proxyee-down,24996,
git@github.com:hollischuang/toBeTopJavaer.git,51beee491521d7ba73a990fd3c0b12bdc4bbb17c,toBeTopJavaer,24909,
git@github.com:greenrobot/EventBus.git,0194926b3bcf70cc0d7bfd3c5da16708dd5ab876,EventBus,24440,
git@github.com:scwang90/SmartRefreshLayout.git,d0bde464bdfa6c18d6205a7c077d5f2819c28426,SmartRefreshLayout,24404,
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/etcd3/etcd3-config-interactive.sh
lines,85
function,1
function addConfig() {
function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,6
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z $(cat "${tempLog}") ]]; then if [[ $(cat "${tempLog}") =~ "error" || $(cat "${tempLog}") =~ "code" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ ${failCount} -eq 0 ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/etcd3/etcd3-config.sh
lines,83
function,1
function addConfig() {
function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,6
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z $(cat "${tempLog}") ]]; then if [[ $(cat "${tempLog}") =~ "error" || $(cat "${tempLog}") =~ "code" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ ${failCount} -eq 0 ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/consul/consul-config.sh
lines,79
function,1
function addConfig() {
function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,6
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z $(cat "${tempLog}") ]]; then if [[ $(cat "${tempLog}") =~ "true" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ ${failCount} -eq 0 ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/consul/consul-config-interactive.sh
lines,78
function,1
function addConfig() {
function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,6
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z $(cat "${tempLog}") ]]; then if [[ $(cat "${tempLog}") =~ "true" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ ${failCount} -eq 0 ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/nacos/nacos-config.sh
lines,120
function,2
function addConfig() {
urlencode() { function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,10
if [ -z ${host} ]; then if [ -z ${port} ]; then if [ -z ${group} ]; then if [ -z ${tenant} ]; then if [ -z ${username} ]; then if [ -z ${password} ]; then if [ -z $(cat "${tempLog}") ]; then if [ "$(cat "${tempLog}")" == "true" ]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [ ${failCount} -eq 0 ]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/nacos/nacos-config-interactive.sh
lines,120
function,2

urlencode() { addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,10
if [ -z ${host} ]; then if [ -z ${port} ]; then if [ -z ${group} ]; then if [ -z ${tenant} ]; then if [ -z ${username} ]; then if [ -z ${password} ]; then if [ -z $(cat "${tempLog}") ]; then if [ "$(cat "${tempLog}")" == "true" ]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [ ${failCount} -eq 0 ]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/zk/zk-config.sh
lines,106
function,4
function check_node() { function create_node() { function create_subNode() { function delete_node() {
function check_node() { function create_node() { function create_subNode() { function delete_node() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,9
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z ${zkHome} ]]; then if [[ $(cat "${tempLog}") =~ "No such file or directory" ]]; then elif [[ $(cat "${tempLog}") =~ "Exception" ]]; then echo " Exception error, please check zk cluster status or if the zk address is entered correctly! " elif [[ $(cat "${tempLog}") =~ "Node does not exist" ]]; then if [[ ${result} == "y" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/zk/zk-config-interactive.sh
lines,103
function,4
function check_node() { function create_node() { function create_subNode() { function delete_node() {
function check_node() { function create_node() { function create_subNode() { function delete_node() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,9
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z ${zkHome} ]]; then if [[ $(cat "${tempLog}") =~ "No such file or directory" ]]; then elif [[ $(cat "${tempLog}") =~ "Exception" ]]; then echo " Exception error, please check zk cluster status or if the zk address is entered correctly! " elif [[ $(cat "${tempLog}") =~ "Node does not exist" ]]; then if [[ ${result} == "y" ]]; then if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/apollo/apollo-config.sh
lines,159
function,2
function addConfig() { function publishConfig() {
function addConfig() { function publishConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,14
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z ${env} ]]; then if [[ -z ${appId} ]]; then if [[ -z ${clusterName} ]]; then if [[ -z ${namespaceName} ]]; then if [[ -z ${dataChangeCreatedBy} ]]; then if [[ -z ${releasedBy} ]]; then if [[ -z ${token} ]]; then if [[ ${log} =~ ":401" || ${log} =~ ":403" if [[ ${log} =~ ":401" || ${log} =~ ":403" if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ $failCount -eq 0 ]]; then if [[ ${result} == "y" ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/script/config-center/apollo/apollo-config-interactive.sh
lines,152
function,2
function addConfig() { function publishConfig() {
function addConfig() { function publishConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,14
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z ${env} ]]; then if [[ -z ${appId} ]]; then if [[ -z ${clusterName} ]]; then if [[ -z ${namespaceName} ]]; then if [[ -z ${dataChangeCreatedBy} ]]; then if [[ -z ${releasedBy} ]]; then if [[ -z ${token} ]]; then if [[ ${log} =~ ":401" || ${log} =~ ":403" if [[ ${log} =~ ":401" || ${log} =~ ":403" if [[ "$line" =~ ^"${COMMENT_START}".* ]]; then if [[ $failCount -eq 0 ]]; then if [[ ${result} == "y" ]]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/server/src/main/resources/docker/seata-server-entrypoint.sh
lines,23
function,0


for,0

if,0

git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/console/src/main/resources/static/console-fe/test/run.sh
lines,5
function,0


for,0

if,1
if [ "$1" = "" ]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/console/src/main/resources/static/console-fe/test/install.sh
lines,5
function,0


for,0

if,0

git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/changeVersion.sh
lines,4
function,0


for,0

if,0

git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/distribution/bin/seata-setup.sh
lines,171
function,0


for,0

if,24
if expr "$link" : '/.*' > /dev/null; then if [ -z "$JAVA_VERSION" ] ; then if [ -z "$JAVA_HOME" ]; then if [ -x "/usr/libexec/java_home" ]; then if [ -z "$JAVA_HOME" ] ; then if [ -r /etc/gentoo-release ] ; then if $cygwin ; then if [ -z "$JAVACMD" ] ; then if [ -n "$JAVA_HOME" ] ; then if [ -x "$JAVA_HOME/jre/sh/java" ] ; then if [ ! -x "$JAVACMD" ] ; then if [ -z "$REPO" ] if [ -n "$ENDORSED_DIR" ] ; then if [ -n "$CLASSPATH_PREFIX" ] ; then if $cygwin; then if [ "$SKYWALKING_ENABLE" = "true" ]; then if [ -z "$LOG_HOME" ]; then if [[ "$JAVA_MAJOR_VERSION" -eq "1" ]] ; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then elif [[ "$JAVA_MAJOR_VERSION" -ge "17" ]] ; then if [ "$JMX_ENABLE" = "true" ]; then if [ -z "$JMX_OPTS" ]; then if [ -z "$JMX_PORT" ]; then if [ ! -x "$BASEDIR"/logs ]; then
git@github.com:seata/seata.git,e3bfb6c9fba7d64c4d3766ffcab0a0de4376203b,seata,24236,./seata/distribution/bin/seata-server.sh
lines,294
function,9
function validate_host() { function validate_port() { function validate_mode() { function validate_serverNode() { function start_server() { function stop_server() { function replace_old_arg() { function restart_server() {
show_usage() { function validate_host() { function validate_port() { function validate_mode() { function validate_serverNode() { function start_server() { function stop_server() { function replace_old_arg() { function restart_server() {
for,5
echo " Usage: sh seata-server.sh(for linux and mac) or cmd seata-server.bat(for" echo " The name used for multi-configuration isolation." for i in "${!OLD_ARGS_ARRAY[@]}" for j in $(seq $((i+1)) "${ for new_arg in "${NEW_ARGS_ARRAY[@]}"
if,25
if expr "$link" : '/.*' > /dev/null; then if [[ ! $host =~ $re_ip ]]; then if ! [[ "$port" =~ ^[0-9]+$ ]]; then if [[ "$mode" != 'file' && "$mode" != 'db' && "$mode" != 'redis' ]]; then if ! [[ "$serverNode" =~ ^[0-9]+$ ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [[ -n "$2" ]]; then if [ -z "$PID" ]; then if [[ "${OLD_ARGS_ARRAY[$i]}" == "$old_arg" ]]; then if [[ "${OLD_ARGS_ARRAY[$j]}" == "$old_arg" ]]; then if [[ "$i+1" -lt "${ if [[ "$new_arg" == "-p" || "$new_arg" == "--port" ]]; then elif [[ "$new_arg" == "-h" || "$new_arg" == "--host" ]]; then elif [[ "$new_arg" == "-m" || "$new_arg" == "--storeMode" ]]; then elif [[ "$new_arg" == "-n" || "$new_arg" == "--serverNode" ]]; then elif [[ "$new_arg" == "-e" || "$new_arg" == "--seataEnv" ]]; then elif [[ "$new_arg" == "-ssm" || "$new_arg" == "--sessionStoreMode" ]]; then elif [[ "$new_arg" == "-lsm" || "$new_arg" == "--lockStoreMode" ]]; then if [[ "$found" == 0 ]]; then if [ -z "${CMD_LINE_ARGS}" ]; then
git@github.com:signalapp/Signal-Android.git,22e2bfacae5c987e0de48683657f87dc5010af63,Signal-Android,24081,
git@github.com:Netflix/Hystrix.git,7c03bafe32b518182e09e92fa57358a01043a504,Hystrix,23621,
git@github.com:doocs/leetcode.git,28f3092aa45910c8993971408054020eacf4d345,leetcode,23395,
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/demangle_unittest.sh
lines,95
function,1

die () {
for,0

if,6
if test -e "$DEMANGLER"; then if ! test -e "$DEMANGLER"; then nm "$LIBGLOG" | perl -nle 'print $1 if /\s(_Z\S+$)/' > "$NM_OUTPUT" if ! grep --quiet '^_Z' "$NM_OUTPUT"; then if test "$NM_LINES" != "$DM_LINES"; then if grep --quiet '^_Z' "$DM_OUTPUT"; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/signalhandler_unittest.sh
lines,131
function,1

die () {
for,4
for pattern in SIGSEGV 0xdead main "Aborted at [0-9]"; do for pattern in SIGTERM "by PID $!" "$from_pid" main "Aborted at [0-9]"; do for pattern in SIGFPE DieInThread "TID $EXPECTED_TID" "Aborted at [0-9]"; do for pattern in SIGABRT main "Aborted at [0-9]"; do
if,11
if test -e "$BINARY"; then if ! test -e "$BINARY"; then if [ x`$BINARY` != 'xOK' ]; then if [ x`uname -p` = x"powerpc" ]; then if ! grep --quiet "$pattern" signalhandler.out1; then if ! grep --quiet "a message before segv" $LOG_INFO; then if grep --quiet looping signalhandler.out2; then if [ x`uname` = "xLinux" ]; then if ! grep --quiet "$pattern" signalhandler.out2; then if ! grep --quiet "$pattern" signalhandler.out3; then if ! grep --quiet "$pattern" signalhandler.out4; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/logging_striplog_test.sh
lines,72
function,3

get_strings () { check_eq () { die () {
for,2
./logging_striptest2 2>/dev/null && die "Did not abort for STRIP_LOG=2" ./logging_striptest10 2>/dev/null && die "Did not abort for STRIP_LOG=10"
if,3
if test -e ".libs/$1"; then elif test -e "$1.exe"; then if [ "$1" != "$2" ]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/windows/preprocess.sh
lines,118
function,0


for,1
for file in `echo "$1"/glog/*.in`; do
if,2
if [ -z "$1" ]; then // NOTE: if you are statically linking the template library into your binary\n\
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/protobuf/protobuf/src/google/protobuf/io/gzip_stream_unittest.sh
lines,44
function,0


for,0

if,0

git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/third_party/breakpad/src/third_party/protobuf/protobuf/src/google/protobuf/compiler/zip_output_unittest.sh
lines,91
function,1

fail() {
for,0

if,2
if unzip -h > /dev/null; then if jar c $TEST_TMPDIR/testzip.proto > /dev/null; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/ffmpeg/build_ffmpeg/build_ffmpeg.sh
lines,175
function,1
function build_one {

for,0

if,3
--enable-decoder=gif \ --enable-demuxer=gif \ if [[ -e ./build_ffmpeg/android ]]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/ffmpeg/build_ffmpeg/vpx-android/build-vpx.sh
lines,84
function,1

configure_make() {
for,3
echo -e "\n** BUILD STARTED: ${LIB_VPX} (${version}) for ${ABI} **" for ((i=0; i < ${ echo -e "** BUILD COMPLETED: ${LIB_VPX} for ${ABIS[i]} **\n\n"
if,3
if [[ -f "${LIB_VPX}/build/make/version.sh" ]]; then if [[ $1 =~ x86.* ]]; then if [[ $
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/ffmpeg/build_ffmpeg/vpx-android/_settings.sh
lines,103
function,1

configure() {
for,0

if,2
if [[ -z $ANDROID_NDK ]] || [[ ! -d $ANDROID_NDK ]] ; then if [[ -e ${TOOLCHAIN_PREFIX} ]]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/boringssl/third_party/googletest/xcode/Scripts/runtests.sh
lines,65
function,0

failed_list=()
for,1
for test in ${test_executables[*]}; do
if,2
if [ $result -eq 0 ]; then if [ $failed -ne 0 ]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/boringssl/third_party/googletest/xcode/Samples/FrameworkSample/runtests.sh
lines,62
function,0

failed_list=()
for,1
for test in ${test_executables[*]}; do
if,2
if [ $result -eq 0 ]; then if [ $failed -ne 0 ]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/boringssl/crypto/cipher_extra/test/make_all_legacy_aead_tests.sh
lines,15
function,0


for,0

if,0

git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/boringssl/util/generate-coverage.sh
lines,58
function,0


for,0

if,1
if [ -n "$1" ]; then
git@github.com:DrKLO/Telegram.git,fea5ca949acc2afeaa3f724e4e25e04a15b96c35,Telegram,22704,./Telegram/TMessagesProj/jni/boringssl/util/fipstools/break-tests.sh
lines,53
function,0


for,3
for test in $TESTS; do for test in $TESTS; do echo "Waiting for keypress..."
if,1
if [ "x$1" = "xbuild" ]; then
git@github.com:google/gson.git,2de2d5648429457f4a1451264698d828fcf37f19,gson,22466,
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/docker/data-generator/docker-entrypoint.sh
lines,46
function,0


for,2
for i in oap-libs/*.jar for i in "${EXT_LIB_DIR}"/*.jar
if,1
if [ "$(ls -A $EXT_CONFIG_DIR)" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/docker/ui/docker-entrypoint.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/docker/oap/docker-entrypoint.sh
lines,42
function,0


for,2
for i in oap-libs/*.jar for i in "${EXT_LIB_DIR}"/*.jar
if,1
if [ "$(ls -A $EXT_CONFIG_DIR)" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-helm.sh
lines,28
function,0


for,0

if,1
if ! command -v helm &> /dev/null; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-etcdctl.sh
lines,37
function,0


for,0

if,2
if ! command -v etcdctl &> /dev/null; then if [ $utype = "darwin" ]
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-istioctl.sh
lines,28
function,0


for,0

if,1
if ! command -v istioctl &> /dev/null; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-yq.sh
lines,29
function,0


for,0

if,1
if ! command -v yq &> /dev/null; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-kubectl.sh
lines,28
function,0


for,0

if,1
if ! command -v kubectl &> /dev/null; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install-swctl.sh
lines,39
function,1

install_swctl() {
for,0

if,2
if ! command -v swctl &> /dev/null; then elif ! swctl --version | grep -q "${SW_CTL_COMMIT}"; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-e2e-shell/install.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/script/prepare/setup-oap/download-mysql.sh
lines,32
function,0


for,0

if,2
if ! command -v curl &> /dev/null; then if ! curl -Lo "${LIB_HOME}/${MYSQL_DRIVER}" ${MYSQL_URL}; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/cases/elasticsearch/es-e2e-data-mock.sh
lines,80
function,0


for,0

if,1
if [ $i -eq 10 ]
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/cases/mongodb/setup.sh
lines,45
function,0


for,1
echo "Waiting for startup.."
if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/cases/php/entrypoint.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/cases/redis/redis-exporter/scripts/slowlog.sh
lines,28
function,0


for,0

if,1
if [[ $len -gt 0 ]]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/test/e2e-v2/cases/redis/redis-exporter/scripts/start.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/oap-server/server-tools/data-generator/src/main/assembly/bin/start.sh
lines,49
function,0


for,1
for i in "$OAP_HOME"/oap-libs/*.jar
if,2
if [ ! -d "${OAP_LOG_DIR}" ]; then if [ $? -eq 0 ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/dist-material/bin/webappService.sh
lines,38
function,0


for,0

if,1
if [ ! -d "${WEBAPP_LOG_DIR}" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/dist-material/bin/startup.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/dist-material/bin/oapServiceInit.sh
lines,46
function,0


for,1
for i in "$OAP_HOME"/oap-libs/*.jar
if,2
if [ ! -d "${OAP_HOME}/logs" ]; then if [ -z "$CLASSPATH" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/dist-material/bin/oapServiceNoInit.sh
lines,46
function,0


for,1
for i in "$OAP_HOME"/oap-libs/*.jar
if,2
if [ ! -d "${OAP_HOME}/logs" ]; then if [ -z "$CLASSPATH" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/dist-material/bin/oapService.sh
lines,46
function,0


for,1
for i in "$OAP_HOME"/oap-libs/*.jar
if,2
if [ ! -d "${OAP_LOG_DIR}" ]; then if [ -z "$CLASSPATH" ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/tools/profile-exporter/profile_exporter.sh
lines,99
function,0


for,1
for i in "${oap_libs_dir}"/*.jar
if,1
if [ `ls -l ${work_dir}/work | wc -l` -lt 2 ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/tools/TLS/tls_key_generate.sh
lines,49
function,0


for,0

if,0

git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/tools/releasing/create_source_release.sh
lines,79
function,0


for,0

if,2
if [ "$RELEASE_VERSION" == "" ]; then if [ ${TAG_EXIST} -ne 1 ]; then
git@github.com:apache/skywalking.git,39eae22b9402d3d2597d82e6e0056158887ce9fb,skywalking,22455,./skywalking/graal/dist-material/bin/oapService-native-jar.sh
lines,47
function,0


for,1
for i in "$OAP_HOME"/oap-libs/*.jar
if,1
if [ ! -d "${OAP_LOG_DIR}" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-table/flink-sql-gateway/bin/sql-gateway.sh
lines,98
function,1
function usage() {
function usage() {
for,0

if,8
if [ "$iteration" -gt 100 ]; then if [ "$FLINK_IDENT_STRING" = "" ]; then if [[ "$1" = *--help ]] || [[ "$1" = *-h ]]; then if [ -z "$STARTSTOP" ]; then if [[ $STARTSTOP != "start" ]] && [[ $STARTSTOP != "start-foreground" ]] && [[ $STARTSTOP != "stop" ]] && [[ $STARTSTOP != "stop-all" ]]; then if [[ "$STARTSTOP" = start* ]] && ( [[ "$*" = *--help* ]] || [[ "$*" = *-h* ]] ); then if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [[ $STARTSTOP == "start-foreground" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-table/flink-sql-client/bin/sql-client.sh
lines,98
function,0


for,0

if,8
if [ "$iteration" -gt 100 ]; then if [ "$FLINK_IDENT_STRING" = "" ]; then if [[ ! "$CC_CLASSPATH" =~ .*flink-python.*.jar ]]; then if [ -n "$FLINK_PYTHON_JAR" ]; then if [[ ! "$CC_CLASSPATH" =~ .*flink-sql-gateway.*.jar ]]; then if [ -n "$FLINK_SQL_GATEWAY_JAR" ]; then if [[ "$CC_CLASSPATH" =~ .*flink-sql-client.*.jar ]]; then elif [ -n "$FLINK_SQL_CLIENT_JAR" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/flink-tpcds-test/tpcds-tool/data_generator.sh
lines,143
function,2
function download_and_validate() { function cleanup() {
function download_and_validate() { function cleanup() {
for,0

if,10
if [ $ if [[ -e $generator_dir/$fileName ]]; then if [[ ${osType} == "mac" ]]; then if [[ ${actualMd5} == *${expectedMd5}* ]]; then if [[ -e $destDir/$fileName ]]; then if [[ "$OS_TYPE" == "mac" ]]; then if [[ "$errCode_download_dsgen" == "0" ]] && [[ "$errCode_download_idx" == "0" ]]; then elif [[ "$OS_TYPE" == "linux" ]]; then if [[ `uname -i` == 'aarch64' ]]; then if [[ "$errCode_download_dsgen" == "0" ]] && [[ "$errCode_download_idx" == "0" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/run-single-test.sh
lines,69
function,0


for,0

if,5
if [ $ if [ -z "$END_TO_END_DIR" ] ; then if [ -z "$FLINK_DIR" ] ; then if [ -z "$FLINK_LOG_DIR" ] ; then if [[ "$1" = "skip" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_s3.sh
lines,80
function,2
function s3_setup { function s3_setup_with_provider {

for,0

if,4
if [[ $S3_SOURCED ]]; then if [[ -z "${IT_CASE_S3_BUCKET:-}" ]]; then if [[ -z "${IT_CASE_S3_ACCESS_KEY:-}" ]]; then if [[ -z "${IT_CASE_S3_SECRET_KEY:-}" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_docker_embedded_job.sh
lines,69
function,0


for,0

if,1
if ! retry_times $DOCKER_IMAGE_BUILD_RETRIES ${BUILD_BACKOFF_TIME} "build_image ${FLINK_DOCKER_IMAGE_NAME}"; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_nat.sh
lines,73
function,0


for,0

if,1
if ! retry_times $DOCKER_IMAGE_BUILD_RETRIES ${BUILD_BACKOFF_TIME} "build_image ${FLINK_DOCKER_IMAGE_NAME}"; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_stateful_stream_job_upgrade.sh
lines,86
function,1
function job() {
function job() {
for,0

if,3
if (( $ORIGINAL_DOP >= $NEW_DOP )); then if [ -z "$SAVEPOINT_DIR" ]; then elif [ ! -d "$SAVEPOINT_DIR" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_confluent_schema_registry.sh
lines,117
function,4
function verify_output { function test_setup { function test_cleanup { function schema_registry_test {

for,0

if,1
if [[ "$result" != "$expected" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_heavy_deployment.sh
lines,52
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_streaming_distributed_cache_via_blob.sh
lines,40
function,0


for,0

if,1
if [[ "$OUTPUT" != "$EXPECTED" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_high_parallelism_iterations.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_s3_minio.sh
lines,117
function,4
function s3_start { function s3_stop { function s3_setup { function s3_setup_with_provider {

for,1
echo "Spawning minio for s3 tests"
if,2
if [[ $S3_SOURCED ]]; then if [[ $MINIO_CONTAINER_ID ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_dummy_fs.sh
lines,33
function,2
function dummy_fs_setup() { function cp_dummy_fs_to_opt() {
function dummy_fs_setup() { function cp_dummy_fs_to_opt() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_rocksdb_state_memory_control.sh
lines,117
function,3
function buildBaseJobCmd { function find_max_block_cache_usage() { function memory_under_limit() {
function find_max_block_cache_usage() { function memory_under_limit() {
for,1
echo "[INFO] Current block cache usage for RocksDB instance in slot was $MAX_BLOCK_CACHE_USAGE"
if,2
if [ -z $N ]; then if [ "$MAX_BLOCK_CACHE_USAGE" -gt "$EXPECTED_MAX_MEMORY_USAGE" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_queryable_state.sh
lines,57
function,2
function run_test { function test_cleanup {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common.sh
lines,987
function,71
function set_hadoop_classpath { function print_mem_use_osx { function print_mem_use { function backup_flink_dir() { function revert_flink_dir() { function add_optional_lib() { function add_optional_plugin() { function swap_planner_loader_with_planner_scala() { function swap_planner_scala_with_planner_loader() { function delete_config_key() { function set_config_key() { function create_ha_config() { function get_node_ip { function start_ha_cluster { function start_local_zk { function wait_rest_endpoint_up { function relocate_rocksdb_logs { function wait_dispatcher_running { function start_cluster { function wait_sql_gateway_running { function start_sql_gateway() { function stop_sql_gateway() { function start_taskmanagers { function start_and_wait_for_tm { function query_running_tms { function query_number_of_running_tms { function wait_for_number_of_running_tms { function check_logs_for_errors { function internal_check_logs_for_errors { function internal_check_logs_for_exceptions { function check_logs_for_exceptions() { function check_logs_for_non_empty_out_files { function shutdown_all { function stop_cluster { function wait_for_job_state_transition { function wait_job_running { function wait_job_terminal_state { function stop_with_savepoint { function take_savepoint { function cancel_job { function check_result_hash { function check_result_hash_no_exit { function tm_watchdog { function jm_kill_all { function tm_kill_all { function kill_all { function kill_random_taskmanager { function setup_flink_slf4j_metric_reporter() { function get_job_exceptions { function get_job_metric { function get_metric_processed_records { function get_num_metric_samples { function wait_oper_metric_num_in_records { function wait_num_of_occurence_in_logs { function wait_num_checkpoints { function start_timer { function end_timer { function clean_stdout_files { function expect_in_taskmanager_logs { function wait_for_restart_to_complete { function find_latest_completed_checkpoint { function retry_times() { function retry_times_with_backoff_and_cleanup() { function retry_times_with_exponential_backoff { function extract_job_id_from_job_submission_return() {
function backup_flink_dir() { function revert_flink_dir() { function add_optional_lib() { function add_optional_plugin() { function swap_planner_loader_with_planner_scala() { function swap_planner_scala_with_planner_loader() { function delete_config_key() { function set_config_key() { function create_ha_config() { function start_sql_gateway() { function stop_sql_gateway() { local additional_allowed_errors=() local additional_allowed_exceptions=() function check_logs_for_exceptions() { function setup_flink_slf4j_metric_reporter() { function retry_times() { function retry_times_with_backoff_and_cleanup() { function extract_job_id_from_job_submission_return() { kill_test_watchdog() { internal_run_with_timeout() { run_on_test_failure() { run_test_with_timeout() { run_with_timeout() {
for,33
for mem_type in "${mem_types[@]}" for dirname in ${BACKUP_FLINK_DIRS}; do for dirname in ${BACKUP_FLINK_DIRS}; do echo "Warning: Unsupported OS_TYPE '${OS_TYPE}' for 'get_node_ip'. Falling back to 'hostname -I' (linux)" echo "[ERROR] Parse error. Only available for localhost. Expected address 'localhost' but got '${address}'" for i in $(seq 1 ${TIMEOUT}); do echo "Waiting for ${endpoint_name} REST endpoint to come up..." for (( c=0; c<tmnum; c++ )) for i in $(seq 1 ${TIMEOUT_COUNTER}); do echo "Checking for errors..." for error in "$@"; do for error in "${all_allowed_errors[@]}"; do echo "Found error in log files; printing first 500 lines; see full logs for details:" echo "Checking for exceptions..." for exception in "$@"; do for exception in "${all_allowed_exceptions[@]}"; do echo "Found exception in log files; printing first 500 lines; see full logs for details:" echo "Checking for non-empty .out files..." echo "Found non-empty .out files; printing first 500 lines; see full logs for details:" echo "Waiting for job ($job) to switch from state ${initial_state} to state ${next_state} ..." for i in $(seq 1 ${TIMEOUT}); do echo "Waiting for job ($job) to reach terminal state $expected_terminal_state ..." echo "Waiting for job to process up to ${MAX_NUM_METRICS} records, current progress: ${NUM_RECORDS} records ..." echo "A timeout occurred waiting for job to process up to ${MAX_NUM_METRICS} records" echo "Waiting for text ${text} to appear ${number} of times in logs..." echo "A timeout occurred waiting for ${text} to appear ${number} of times in logs." echo "Waiting for job ($JOB) to have at least $NUM_CHECKPOINTS completed checkpoints ..." N=$(grep -o "Completed checkpoint [1-9]* for job $JOB" $FLINK_LOG_DIR/*standalonesession*.log* | awk '{print $3}' | tail -1) echo "A timeout occurred waiting for job ($JOB) to have at least $NUM_CHECKPOINTS completed checkpoints ." echo "A timeout occurred waiting for '${expected}' to appear in the taskmanager logs" echo "Waiting for restart to happen" echo "Still waiting for restarts. Expected: $expected_num_restarts Current: $current_num_restarts" for i in $(seq 1 ${retriesNumber})
if,45
if [[ -z "${FLINK_DIR:-}" ]]; then if [ -z "$FLINK_LOG_DIR" ] ; then if [ ! -f $YARN_CLASSPATH_LOCATION ]; then if [[ "$OS_TYPE" == "mac" ]]; then if [ -d "${TEST_DATA_DIR}/tmp/backup/${dirname}" ]; then if [ -e $TEST_DATA_DIR/recovery ]; then if [[ ${OS_TYPE} == "linux" ]]; then elif [[ ${OS_TYPE} == "mac" ]]; then if [[ $server =~ ^server\.([0-9]+)[[:space:]]*\=[[:space:]]*([^: \ if [ "${address}" != "localhost" ]; then if [[ ${QUERY_RESULT} =~ ${successful_response_regex} ]]; then if ! [[ ${tm_query_result} =~ \{\"taskmanagers\":\[.*\]\} ]]; then if [ $((TM_NUM - TM_NUM_TO_WAIT)) -eq 0 ]; then if [[ $grep_command == "" ]]; then if [[ ${error_count} -gt 0 ]]; then if [[ $grep_command == "" ]]; then if [[ ${exception_count} -gt 0 ]]; then if grep -ri -v \ if [[ ${zookeeper_process_count} -gt 0 ]]; then if [[ -z $N ]]; then if [[ "$JOB_LIST_RESULT" == "" ]]; then if [[ -z $N ]]; then if [[ -z $expected_terminal_state ]] || [[ "$expected_terminal_state" == "$actual_terminal_state" ]]; then if [ "$error_code" != "0" ] if [ "`command -v md5`" != "" ]; then elif [ "`command -v md5sum`" != "" ]; then if [[ "$actual" != "$expected" ]] if (( count != 0 )); then if [ -z $N ]; then if [ -z $N ]; then if (( $OLD_NUM_METRICS >= $NUM_METRICS )) ; then if (( $NUM_RECORDS < $MAX_NUM_METRICS )); then if ((i > timeout)); then if [ -z $N ]; then if (( N < number )); then if ((i > timeout)); then if [ -z $N ]; then if (( N < NUM_CHECKPOINTS )); then if ((i > timeout)); then if ((i > timeout)); then if [[ -z ${current_num_restarts} ]]; then if ${command}; then if [ $count -lt $retries ]; then if [[ $1 =~ $JOB_ID_REGEX_EXTRACTOR ]]; if kill -0 $watchdog_pid > /dev/null 2>&1; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_quickstarts.sh
lines,101
function,0


for,0

if,2
if [[ `grep -c "org/apache/flink/api/java" contentsInJar.txt` -eq '0' && \ if [[ `grep -c "org/apache/flink/quickstarts/test/Utils.class" contentsInJar.txt` -eq '0' && \
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_batch_allround.sh
lines,38
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_utils.sh
lines,48
function,2
function _on_exit_callback { function on_exit {
_on_exit_commands=()
for,1
for command in "${_on_exit_commands[@]-}"; do
if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_state_migration.sh
lines,53
function,1
function run_test {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_failure_enricher.sh
lines,77
function,1
function cleanup {

for,0

if,4
if [[ -z $JOB_ID ]]; then if [[ -z ${exceptions_json} ]]; then if [[ -z ${failure_labels} ]]; then if [[ $failure_labels == *"$except_labels"* ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_table_shaded_dependencies.sh
lines,118
function,2
function checkCodeDependencies { function checkAllowedPackages {

for,0

if,2
if [[ `cat $CONTENTS_FILE | wc -l` -eq '0' ]]; then if [[ `cat $CONTENTS_FILE | wc -l` -eq '0' ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_pyflink_yarn.sh
lines,83
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_azure_fs.sh
lines,75
function,1
function azure_setup {

for,0

if,3
if [[ -z "${IT_CASE_AZURE_ACCOUNT:-}" ]]; then if [[ -z "${IT_CASE_AZURE_ACCESS_KEY:-}" ]]; then if [[ -z "${IT_CASE_AZURE_CONTAINER:-}" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_stream_state_ttl.sh
lines,85
function,1
function job_id() {
function job_id() {
for,1
echo "The TTL verification logic failed. See *.out file for more information."
if,3
if [ "${PARALLELISM}" -gt "1" ]; then if [ -n "$1" ]; then if [ $EXIT_CODE != 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_streaming_examples.sh
lines,53
function,1
function run_example() {
function run_example() {
for,0

if,1
if [ $EXIT_CODE == 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test-runner-common.sh
lines,158
function,6
function run_test { function post_test_validation { function log_environment_info { function cleanup_proc { function cleanup_tmp_files { function cleanup {
function test_error() {
for,0

if,7
if [[ "${check_logs_action}" == "skip_check_exceptions" ]]; then elif [[ "${check_logs_action}" == "custom_check_exceptions" ]]; then if [[ ${exit_code} == 0 ]]; then if [[ ${EXIT_CODE} != 0 ]]; then if [[ ${EXIT_CODE} != 0 ]]; then if [[ ${exit_code} == 0 ]]; then if sudo -n true 2>/dev/null; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_ha.sh
lines,198
function,10
function stop_watchdogs() { function verify_num_occurences_in_logs() { function verify_logs() { function jm_watchdog() { function start_jm_cmd { function start_ha_jm_watchdog() { function kill_single { function start_expected_num_tms() { function ha_tm_watchdog() { function start_ha_tm_watchdog() {
function stop_watchdogs() { function verify_num_occurences_in_logs() { function verify_logs() { function jm_watchdog() { function start_ha_jm_watchdog() { function start_expected_num_tms() { function ha_tm_watchdog() { function start_ha_tm_watchdog() {
for,1
for (( c=0; c<MISSING_JMS; c++ )); do
if,10
if [ ${CLEARED} -eq 0 ]; then if ! [ ${JM_WATCHDOG_PID} -eq 0 ]; then if ! [ ${TM_WATCHDOG_PID} -eq 0 ]; then if ! check_logs_for_non_empty_out_files; then if ! verify_num_occurences_in_logs 'standalonesession' 'Recovered JobGraph' ${JM_FAILURES}; then if [ "$VERIFY_CHECKPOINTS" = true ]; then if ! verify_num_occurences_in_logs 'standalonesession' 'Completed checkpoint' $((JM_FAILURES + 1)); then if [[ $EXIT_CODE != 0 ]]; then if [[ ${CHECKPOINTS} == "" ]]; then elif [[ ${CHECKPOINTS} =~ ^[0-9]+$ ]] && [ "${CHECKPOINTS}" -gt "0" ] && [ "${CHECKPOINTS}" -ne "${SUCCESSFUL_CHCKP}" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_file_sink.sh
lines,192
function,5
function out_cleanup { function get_complete_result { function get_total_number_of_valid_lines { function wait_for_complete_result { function run_file_sink_test {

for,0

if,10
OPENSSL_LINKAGE=$(if (( RANDOM % 2 )) ; then echo "dynamic"; else echo "static"; fi) if [ "${OUT_TYPE}" == "local" ]; then elif [ "${OUT_TYPE}" == "s3" ]; then if [ "${OUT_TYPE}" == "s3" ]; then if [ "${OUT_TYPE}" == "s3" ]; then if [ "${OUT_TYPE}" == "local" ]; then elif [ "${OUT_TYPE}" == "s3" ]; then if [[ ${seconds_elapsed} -ge ${polling_timeout} ]]; then if [[ ${previous_number_of_values} -ne ${number_of_values} ]]; then if [[ -z $JOB_ID ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_resume_externalized_checkpoints.sh
lines,148
function,1
function run_resume_externalized_checkpoints() {
function run_resume_externalized_checkpoints() {
for,0

if,7
if [ -z $1 ] || [ -z $2 ]; then if (( $ORIGINAL_DOP >= $NEW_DOP )); then if [[ $SIMULATE_FAILURE == "true" ]]; then if [[ $SIMULATE_FAILURE == "true" ]]; then if [ -z "${CHECKPOINT_PATH:-}" ]; then if [[ $SIMULATE_FAILURE == "true" ]]; then if [ -z $DATASTREAM_JOB ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_streaming_kinesis.sh
lines,70
function,2
function start_kinesalite { function test_cleanup {

for,0

if,1
if ! retry_times ${START_KINESALITE_MAX_RETRIES} 0 start_kinesalite; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_pyflink.sh
lines,276
function,5
function create_data_stream_kafka_source { function sort_msg { function test_clean_up { function send_msg_to_kafka { function read_msg_from_kafka {
arr=()
for,0

if,1
if [[ "${EXPECTED_MSG[*]}" != "${SORTED_READ_MSG[*]}" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_batch_wordcount.sh
lines,94
function,1
function fetch_it() {
fetch_complete_result=() function fetch_it() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_ssl.sh
lines,133
function,5
function _set_conf_ssl_helper { function _set_conf_mutual_rest_ssl { function set_conf_rest_ssl { function set_conf_ssl { function rollback_openssl_lib() {
function rollback_openssl_lib() {
for,2
echo "Unknown library type for openSSL: ${provider_lib}. It can be either 'dynamic' or 'static'" for NODEIP in $(get_node_ip) ; do
if,7
if [ "${type}" != "internal" ] && [ "${type}" != "rest" ]; then if [ "${provider}" != "JDK" ] && [ "${provider}" != "OPENSSL" ]; then if [ "${provider_lib}" != "dynamic" ] && [ "${provider_lib}" != "static" ]; then if [ -e "${ssl_dir}" ]; then if [ "${provider}" = "OPENSSL" -a "${provider_lib}" = "dynamic" ]; then elif [ "${provider}" = "OPENSSL" -a "${provider_lib}" = "static" ]; then if [ "${auth}" == "mutual" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_batch_sql.sh
lines,82
function,1
function sqlJobQuery() {
function sqlJobQuery() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_pyflink_application.sh
lines,126
function,1
function internal_cleanup {

for,0

if,3
if ! retry_times $IMAGE_BUILD_RETRIES $IMAGE_BUILD_BACKOFF "build_image ${PURE_FLINK_IMAGE_NAME}"; then if [[ -d "dist" ]]; then rm -Rf dist; fi if [[ -d "dist" ]]; then rm -Rf dist; fi
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_session.sh
lines,99
function,1
function internal_cleanup {

for,0

if,3
if ! retry_times $IMAGE_BUILD_RETRIES $IMAGE_BUILD_BACKOFF "build_image ${FLINK_IMAGE_NAME} $(get_host_machine_address)"; then if ! check_logs_output $jm_pod_name 'Starting KubernetesSessionClusterEntrypoint'; then if ! check_logs_output $tm_pod_name 'Starting Kubernetes TaskExecutor runner'; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_netty_shuffle_memory_control.sh
lines,49
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/kafka-common.sh
lines,224
function,18
function setup_kafka_dist { function setup_confluent_dist { function wait_for_zookeeper_running { function start_kafka_cluster { function stop_kafka_cluster { function create_kafka_topic { function send_messages_to_kafka { function read_messages_from_kafka { function send_messages_to_kafka_avro { function read_messages_from_kafka_avro { function modify_num_partitions { function get_num_partitions { function get_partition_end_offset { function start_confluent_schema_registry { function get_schema_subjects { function get_and_verify_schema_subjects_exist { function stop_confluent_schema_registry { function debug_error {

for,4
echo "waiting for Zookeeper to start." echo "Waiting for broker..." for i in {1..30}; do echo "Waiting for schema registry..."
if,9
if [[ -z "${TEST_DATA_DIR:-}" ]]; then if [ $time_diff -ge $MAX_RETRY_SECONDS ]; then if [[ -z $KAFKA_DIR ]]; then if [ $time_diff -ge $MAX_RETRY_SECONDS ]; then if ! [[ -z $($KAFKA_DIR/bin/kafka-server-stop.sh) ]]; then if [ ! -z "$PIDS" ]; then if [ ! -z "$PIDS" ]; then if get_and_verify_schema_subjects_exist; then if ! get_and_verify_schema_subjects_exist; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_s3_operations.sh
lines,160
function,9
function aws_cli_start() { function aws_cli_stop() { function aws_cli() { function s3_get_by_full_path_and_filename_prefix() { function s3_delete_by_full_path_prefix() { function s3_get_number_of_lines_by_prefix() {
function aws_cli_start() { function aws_cli_stop() { function aws_cli() { function s3_get_by_full_path_and_filename_prefix() { function s3_delete_by_full_path_prefix() { function s3_get_number_of_lines_by_prefix() {
for,1
for part in $parts; do
if,6
if [[ $AWSCLI_CONTAINER_ID ]]; then if [[ $S3_ENDPOINT ]]; then if ! docker exec "$AWSCLI_CONTAINER_ID" aws $endpoint "$@"; then if [[ $3 ]]; then if [[ "$4" == true ]]; then if [[ $(basename "${part}") == $file_prefix* ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_streaming_classloader.sh
lines,102
function,1
function classloader_cleanup() {
function classloader_cleanup() {
for,0

if,3
if ! [[ "$OUTPUT" =~ $EXPECTED ]]; then if ! [[ "$OUTPUT" =~ $EXPECTED ]]; then if ! [[ "$OUTPUT" =~ $EXPECTED ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_kubernetes.sh
lines,261
function,12
function setup_kubernetes_for_linux { function check_kubernetes_status { function start_kubernetes_if_not_running { function start_kubernetes { function stop_kubernetes { function debug_and_show_logs { function wait_rest_endpoint_up_k8s { function wait_num_checkpoints { function wait_for_logs { function check_logs_output { function cleanup { function get_host_machine_address {

for,8
echo "Current logs for $pod: " echo "Previous logs for $pod: " echo "Waiting for job ($POD_NAME) to have at least $NUM_CHECKPOINTS completed checkpoints ..." for i in $(seq 1 ${TIMEOUT}); do N=$(kubectl logs $POD_NAME 2> /dev/null | grep -o "Completed checkpoint [1-9]* for job" | awk '{print $3}' | tail -1) echo "Waiting for jobmanager pod ${jm_pod_name} ready." echo "Waiting for log \"$2\"..." for i in $(seq 1 ${timeout}); do
if,17
if [[ `uname -i` == 'aarch64' ]]; then if ! [ -x "$(command -v kubectl)" ]; then if [ -x "$(command -v minikube)" ] && [[ "$(minikube version | grep -c $MINIKUBE_VERSION)" == "0" ]]; then if ! [ -x "$(command -v minikube)" ]; then if ! check_kubernetes_status; then if [[ "${OS_TYPE}" != "linux" ]]; then if ! check_kubernetes_status; then if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} start_kubernetes_if_not_running; then if [[ "${OS_TYPE}" != "linux" ]]; then if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} "${stop_command}"; then if [[ ${restart_count} -gt 0 ]];then if [ -z $N ]; then if (( N < NUM_CHECKPOINTS )); then if check_logs_output $jm_pod_name $successful_response_regex; then if [[ ${LOG_CONTENT} =~ ${successful_response_regex} ]]; then if [ $TRAPPED_EXIT_CODE != 0 ];then if [[ "${OS_TYPE}" != "linux" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_state_evolution.sh
lines,78
function,1
function run_test {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_application_ha.sh
lines,83
function,1
function internal_cleanup {

for,0

if,2
if [[ "${OS_TYPE}" != "linux" ]]; then if ! retry_times $IMAGE_BUILD_RETRIES $IMAGE_BUILD_BACKOFF "build_image ${FLINK_IMAGE_NAME} $(get_host_machine_address)"; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_ha_per_job_cluster_datastream.sh
lines,156
function,4
function ha_cleanup() { function run_job() { function verify_logs_per_job() { function run_ha_test() {
function ha_cleanup() { function run_job() { function verify_logs_per_job() { function run_ha_test() {
for,3
wait_num_of_occurence_in_logs "Completed checkpoint [1-9]* for job ${JOB_ID}" 2 "standalonejob" for (( c=1; c<=${JM_KILLS}; c++ )); do wait_num_of_occurence_in_logs "Completed checkpoint [1-9]* for job ${JOB_ID}" 2 "standalonejob-${c}"
if,5
if ! check_logs_for_non_empty_out_files; then if ! verify_num_occurences_in_logs 'standalonejob' 'Found 0 checkpoints in ZooKeeper' 1; then if ! verify_num_occurences_in_logs 'standalonejob' 'Found [[:digit:]]\+ checkpoints in ZooKeeper' $((JM_FAILURES + 1)); then if ! verify_num_occurences_in_logs 'standalonejob' 'Completed checkpoint' $((JM_FAILURES + 1)); then if [[ $EXIT_CODE != 0 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_datastream_walkthroughs.sh
lines,96
function,0


for,0

if,5
if [[ `grep -c "BUILD FAILURE" compile-output.txt` -eq '1' ]]; then if [[ `grep -c "org/apache/flink/api/java" contentsInJar.txt` -eq '0' && \ if [ $EXIT_CODE == 0 ]; then if [[ `grep -c "$JOB_ID" "$RETURN"` -eq '1' ]]; then if [ $EXIT_CODE == 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_docker.sh
lines,83
function,3
function containers_health_check() { function build_image() { function start_file_server() {
function containers_health_check() { function build_image() { function start_file_server() {
for,3
for container in ${container_names}; do echo "Starting fileserver for Flink distribution" echo "Could not find python(3) installation for starting fileserver."
if,4
if ! [ $(docker inspect -f '{{.State.Running}}' ${container} 2>&1) = 'true' ]; if [[ ${PROFILE} == *"jdk11"* ]]; then if [[ $? -eq 0 ]]; then if [[ $? -eq 0 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_queryable_state_restart_tm.sh
lines,166
function,3
function run_test() { function wait_for_number_of_checkpoints { function get_completed_number_of_checkpoints {
function run_test() {
for,2
echo "Starting to wait for completion of ${expected_num_checkpoints} checkpoints" echo "A timeout occurred waiting for successful checkpoints"
if,3
if [ $? != 0 ]; then if ((latest_snapshot_count > num_entries_in_map_state_after)); then if [[ ${count} -gt ${timeout} ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_application.sh
lines,62
function,1
function internal_cleanup {

for,0

if,1
if ! retry_times $IMAGE_BUILD_RETRIES $IMAGE_BUILD_BACKOFF "build_image ${FLINK_IMAGE_NAME} $(get_host_machine_address)"; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_tpch.sh
lines,90
function,0


for,1
for i in {1..22}
if,1
if [[ -e "$MODIFIED_QUERY_DIR/q$i.sql" ]]
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/queryable_state_base.sh
lines,44
function,3
function link_queryable_state_lib { function get_queryable_state_server_ip { function get_queryable_state_proxy_port {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_yarn_application_kerberos_docker.sh
lines,104
function,0


for,0

if,3
if docker exec master bash -c "export HADOOP_CLASSPATH=\`hadoop classpath\` && \ if [[ ! "${YARN_APPLICATION_LOGS}" =~ "Receive initial delegation tokens from resource manager" ]]; then if [[ ! "${STD_ERR_AND_STD_OUT}" =~ "Hadoop security with Kerberos is enabled but the login user does not have Kerberos credentials" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_tpcds.sh
lines,148
function,3
function run_test() { function check_logs_for_exceptions_for_adaptive_batch_scheduler { function check_logs_for_errors_for_adaptive_batch_scheduler {
function run_test() {
for,4
echo "ERROR: Scheduler ${scheduler} is unsupported for tpcds test. Aborting..." "Cannot find task to fail for execution" \ echo "Only supports checking exceptions for adaptive batch scheduler." echo "ERROR: Action ${ACTION} is unsupported for tpcds test. Aborting..."
if,5
if [ "${scheduler}" == "Default" ]; then elif [ "${scheduler}" == "AdaptiveBatch" ]; then if [ "${ACTION}" == "run_test" ]; then elif [ "${ACTION}" == "check_exceptions" ]; then if [[ "${SCHEDULER}" != "AdaptiveBatch" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_yarn_docker.sh
lines,272
function,13
function cluster_shutdown { function start_hadoop_cluster() { function build_image() { function start_hadoop_cluster_and_prepare_flink() { function debug_copy_and_show_logs { function extract_hadoop_logs() { function print_logs() { function wait_for_single_yarn_application { function get_output { function get_yarn_application_id { function get_yarn_application_logs { function docker_kinit { function docker_kdestroy {
function start_hadoop_cluster() { function build_image() { function start_hadoop_cluster_and_prepare_flink() { function extract_hadoop_logs() { function print_logs() {
for,4
echo "Waiting for hadoop cluster to come up. We have been trying for ${time_diff} seconds, retrying ..." echo "We only have ${nm_running} NodeManagers up. We have been trying for ${time_diff} seconds, retrying ..." for docker_container_alias in $(echo ${docker_container_aliases}); do echo "Application ${application_id} is in state ${application_state}. We have been waiting for ${time_diff} seconds, looping ..."
if,7
if [ ${TRAPPED_EXIT_CODE} != 0 ];then if [ ${time_diff} -ge ${MAX_RETRY_SECONDS} ]; then if [ ${time_diff} -ge ${MAX_RETRY_SECONDS} ]; then if ! retry_times ${IMAGE_BUILD_RETRIES} 2 build_image; then if ! retry_times $CLUSTER_SETUP_RETRIES 0 start_hadoop_cluster; then if [[ $time_diff -ge $MAX_RETRY_SECONDS ]]; then if [[ ${final_application_state} != "SUCCEEDED" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_sql_jdbc_driver.sh
lines,44
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/docker-hadoop-secure-cluster/hadoop/entrypoint.sh
lines,141
function,0


for,3
cd $HADOOP_PREFIX/share/hadoop/common ; for cp in ${ACP//,/ }; do echo == $cp; curl -LO $cp ; done; cd - echo "We tried creating a Kerberos principal for $time_diff seconds, max is $MAX_RETRY_SECONDS seconds, aborting" echo "Creating a Kerberos principal failed. We have been trying for $time_diff seconds, retrying ..."
if,4
if [ $time_diff -ge $MAX_RETRY_SECONDS ]; then if [ "$1" == "--help" -o "$1" == "-h" ]; then elif [ "$1" == "master" ]; then elif [ "$1" == "worker" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/docker-hadoop-secure-cluster/kdc/entrypoint.sh
lines,78
function,5

create_config() { create_db() { create_admin_user() { start_kdc() { main() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_embedded_job.sh
lines,54
function,1
function internal_cleanup {

for,0

if,1
if ! retry_times $IMAGE_BUILD_RETRIES $IMAGE_BUILD_BACKOFF "build_image ${FLINK_IMAGE_NAME} $(get_host_machine_address)"; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/common_artifact_download_cacher.sh
lines,46
function,1
function get_artifact {

for,0

if,3
if [ -z "${E2E_TARBALL_CACHE:-}" ] ; then if [ ! -f "$E2E_TARBALL_CACHE/$BASENAME" ]; then if [ ! 0 -eq $res ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_ha_datastream.sh
lines,101
function,2
function ha_cleanup() { function run_ha_test() {
function ha_cleanup() { function run_ha_test() {
for,3
wait_num_of_occurence_in_logs "Completed checkpoint [1-9]* for job ${JOB_ID}" 2 "standalonesession" for (( c=1; c<=${JM_KILLS}; c++ )); do wait_num_of_occurence_in_logs "Completed checkpoint [1-9]* for job ${JOB_ID}" 2 "standalonesession-${c}"
if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_cli.sh
lines,190
function,3
function extract_valid_pact_from_job_info_return() { function extract_valid_job_list_by_type_from_job_list_return() { function extract_task_manager_slot_request_count() {
function extract_valid_pact_from_job_info_return() { function extract_valid_job_list_by_type_from_job_list_return() { function extract_task_manager_slot_request_count() {
for,0

if,21
if [[ $1 =~ $JOB_INFO_PACT_DATA_SOURCE_REGEX_EXTRACTOR ]]; if [[ $1 =~ $JOB_INFO_PACT_DATA_SINK_REGEX_EXTRACTOR ]]; if [[ $1 =~ $JOB_LIST_REGEX_EXTRACTOR ]]; if [[ $RESULT != *"(java.util.ArrayList) [170 elements]"* ]];then if [ $EXIT_CODE == 0 ]; then if [ $EXIT_CODE == 0 ]; then if [ $((ROW_COUNT)) -ne 111 ]; then if [ $EXIT_CODE == 0 ]; then if [[ $RECEIVED_TASKMGR_REQUEST != 5 ]]; then if [ $EXIT_CODE == 0 ]; then if [[ $PACT_MATCH == -1 ]]; then if [ $EXIT_CODE == 0 ]; then if [ $EXIT_CODE == 0 ]; then if [[ $JOB_LIST_MATCH == -1 ]]; then if [ $EXIT_CODE == 0 ]; then if [[ $JOB_LIST_MATCH == -1 ]]; then if [ $EXIT_CODE == 0 ]; then if [[ $JOB_LIST_MATCH != -1 ]]; then if [ $EXIT_CODE == 0 ]; then if [ $EXIT_CODE == 0 ]; then if [[ $JOB_LIST_MATCH == -1 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_ha_dataset.sh
lines,100
function,4
function ha_cleanup() { function run_ha_test() { function setup_and_start_cluster() { function kill_and_replace_random_task_manager() {
function ha_cleanup() { function run_ha_test() { function setup_and_start_cluster() { function kill_and_replace_random_task_manager() {
for,2
for (( c=0; c<${JM_KILLS}; c++ )); do for (( c=0; c<${TM_KILLS}; c++ )); do
if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_yarn_job_kerberos_docker.sh
lines,85
function,0


for,0

if,3
if docker exec master bash -c "export HADOOP_CLASSPATH=\`hadoop classpath\` && \ if [[ ! "${YARN_APPLICATION_LOGS}" =~ "Receive initial delegation tokens from resource manager" ]]; then if [[ ! "$STD_ERR_AND_STD_OUT" =~ "Hadoop security with Kerberos is enabled but the login user does not have Kerberos credentials" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_streaming_sql.sh
lines,44
function,0


for,0

if,1
if [ "$PLANNER" = "scala-planner" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_resume_savepoint.sh
lines,130
function,1

run_resume_savepoint_test() {
for,0

if,5
if [ -z $1 ] || [ -z $2 ]; then if (( $ORIGINAL_DOP >= $NEW_DOP )); then if [ $STATE_BACKEND_ROCKS_TIMER_SERVICE_TYPE == 'heap' ]; then if [ -z "$SAVEPOINT_DIR" ]; then elif [ ! -d "$SAVEPOINT_DIR" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_local_recovery_and_scheduling.sh
lines,111
function,3
function check_logs { function cleanup_after_test { function run_local_recovery_test {

for,2
echo "FAILURE: Found ${failed_local_recovery} failed attempt(s) for local recovery of correctly scheduled task(s)." echo "FAILURE: Found no attempt for local recovery. Configuration problem?"
if,2
if [ ${failed_local_recovery} -ne 0 ] if [ ${attempt_local_recovery} -eq 0 ]
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/test_kubernetes_itcases.sh
lines,52
function,1
function run_mvn_test {

for,0

if,2
if [ -z "$DEBUG_FILES_OUTPUT_DIR"] ; then if [ $EXIT_CODE != 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/test-scripts/kafka_sql_common.sh
lines,63
function,2
function create_kafka_json_source { function get_kafka_json_source_schema {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-end-to-end-tests/run-nightly-tests.sh
lines,278
function,3
function run_on_exit { function run_group_1 { function run_group_2 {

for,0

if,14
if [ -z "$END_TO_END_DIR" ] ; then if [ -z "${FLINK_DIR:-}" ] ; then if [ -z "$FLINK_LOG_DIR" ] ; then if [ -z "$DEBUG_FILES_OUTPUT_DIR" ] ; then if [[ ${PROFILE} == *"enable-adaptive-scheduler"* ]]; then if [[ ${PROFILE} != *"enable-adaptive-scheduler"* ]]; then if [[ `uname -i` != 'aarch64' ]]; then if [[ ${PROFILE} != *"jdk11"* ]]; then if [[ ${PROFILE} != *"enable-adaptive-scheduler"* ]]; then if [[ `uname -i` != 'aarch64' ]]; then if [[ ${PROFILE} != *"jdk11"* ]] && [[ `uname -i` != 'aarch64' ]]; then if [[ ${PROFILE} != *"enable-adaptive-scheduler"* ]]; then if [ "$1" == "1" ]; then elif [ "$1" == "2" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/docs/setup_hugo.sh
lines,27
function,0


for,0

if,1
if ! curl --fail -OL $HUGO_REPO ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/docs/build_docs.sh
lines,29
function,0


for,1
echo "Please see docs/README.md for more details"
if,1
if ! command -v hugo &> /dev/null
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/docs/static/downloads/setup-pyflink-virtual-env.sh
lines,57
function,0


for,0

if,3
if [[ ${sys_os} == "Darwin" ]]; then elif [[ ${sys_os} == "Linux" ]]; then if [[ $1 = "" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/docs/setup_docs.sh
lines,59
function,1
function integrate_connector_docs {

for,0

if,1
if [[ "$HERE" != "docs" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/pyflink/bin/pyflink-udf-runner.sh
lines,43
function,0


for,0

if,4
if [[ "$FLINK_TESTING" = "1" ]]; then if [[ -f "${FLINK_PYTHON}/pyflink/fn_execution/boot.py" ]]; then if [[ "$_PYTHON_WORKING_DIR" != "" ]]; then if [[ "$python" == ${_PYTHON_WORKING_DIR}* ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/dev/integration_test.sh
lines,65
function,2
function test_module() { function test_all_modules() {
function test_module() { function test_all_modules() {
for,0

if,2
if [[ $? -ne 0 ]]; then if [[ "$?" == 0 ]] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/dev/build-wheels.sh
lines,55
function,0


for,5
for ((i=0;i<${ echo "Installing dependencies for environment: ${py_env[i]}" for ((i=0;i<${ echo "Building wheel for environment: ${py_env[i]}" for wheel_file in dist/*.whl; do
if,2
if [[ "$(uname)" != "Darwin" ]]; then if [[ "$(uname)" != "Darwin" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/dev/lint-python.sh
lines,886
function,32
function download() { function print_function() { function regexp_match() { function contains_element() { function checkpoint_stage() { function restore_stage() { function check_valid_stage() { function parse_component_args() { function get_os_index() { function install_brew() { function install_wget() { function install_miniconda() { function install_py_env() { function install_tox() { function install_flake8() { function install_sphinx() { function install_mypy() { function need_install_component() { function install_environment() { function create_dir() { function activate () { function deactivate() { function collect_checks() { function include_stage() { function get_all_supported_checks() { function get_all_supported_install_components() { function check_stage() { function tox_check() { function flake8_check() { function sphinx_check() { function mypy_check() {
function download() { function print_function() { function regexp_match() { function contains_element() { function checkpoint_stage() { function restore_stage() { function check_valid_stage() { function parse_component_args() { local REAL_COMPONENTS=() function get_os_index() { function install_brew() { function install_wget() { function install_miniconda() { function install_py_env() { function install_tox() { function install_flake8() { function install_sphinx() { function install_mypy() { function need_install_component() { function install_environment() { function create_dir() { function activate () { function deactivate() { function collect_checks() { REAL_SUPPORT_CHECKS=() function include_stage() { function get_all_supported_checks() { SUPPORT_CHECKS=() function get_all_supported_install_components() { local REAL_COMPONENTS=() function check_stage() { function tox_check() { function flake8_check() { function sphinx_check() { function mypy_check() { SUPPORT_CHECKS=() SUPPORTED_INSTALLATION_COMPONENTS=() INSTALLATION_COMPONENTS=()
for,10
for component in ${INSTALLATION_COMPONENTS[@]}; do for ((i=0;i<${ for py_dir in $CURRENT_DIR/.conda/envs/* for (( i = 0; i < ${ for (( i = 0; i < ${ for fun in $(declare -F); do for fun in $(declare -F); do for component in ${SUPPORTED_INSTALLATION_COMPONENTS[@]}; do for fun in ${SUPPORT_CHECKS[@]}; do for fun in ${SUPPORT_CHECKS[@]}; do
if,87
if hash "wget" 2>/dev/null; then if [ $DOWNLOAD_STATUS -ne 0 ]; then if echo $1 | grep -e $2 &>/dev/null; then if echo "${arr[@]}" | grep -w "$2" &>/dev/null; then if [ ! -d `dirname $STAGE_FILE` ]; then if [ -f "$STAGE_FILE" ]; then if [ $lines -eq 1 ]; then if [ $? -eq 0 ]; then if [ $2 -le $STAGE_INSTALL_STEPS ] && [ $2 -ge 0 ]; then if [[ "$component" == "basic" ]] || [[ "$component" == "miniconda" ]]; then if [[ "$component" == "all" ]]; then if [[ `contains_element "${SUPPORTED_INSTALLATION_COMPONENTS[*]}" "${component}"` = true ]]; then if [[ `contains_element "${REAL_COMPONENTS[*]}" "environment"` = false ]]; then if [ ${sys_os} == "Darwin" ]; then elif [[ ${sys_os} == "Linux" ]]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $1 -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ ! -f "$CONDA_INSTALL" ]; then if [ $? -ne 0 ]; then if [ -d "$CURRENT_DIR/.conda" ]; then if [ $? -ne 0 ]; then if [ ! -d "$CURRENT_DIR/.conda" ]; then if [ $? -ne 0 ]; then if [ -d "$CURRENT_DIR/.conda/envs/${py_env[i]}" ]; then if [ $? -ne 0 ]; then if [[ ${status} -ne 0 ]]; then if [ -f "$TOX_PATH" ]; then if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [ -f "$FLAKE8_PATH" ]; then if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [ -f "$SPHINX_PATH" ]; then if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [ $? -ne 0 ]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [[ -f "$MYPY_PATH" ]]; then if [[ $? -ne 0 ]]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [[ $? -ne 0 ]]; then if failed many times, you can try to exec in the form of sudo ./lint-python.sh -f" if [[ `contains_element "${SUPPORTED_INSTALLATION_COMPONENTS[*]}" "$1"` = true ]]; then if [ $STEP -lt 1 ]; then if [ $STEP -lt 2 ]; then if [ $STEP -lt 3 ] && [ `need_install_component "py_env"` = true ]; then if [ $STEP -lt 4 ] && [ `need_install_component "tox"` = true ]; then if [ $STEP -lt 5 ] && [ `need_install_component "flake8"` = true ]; then if [ $STEP -lt 6 ] && [ `need_install_component "sphinx"` = true ]; then if [[ ${STEP} -lt 7 ]] && [[ `need_install_component "mypy"` = true ]]; then if [ ! -d $1 ]; then if [ $? -ne 0 ]; then if [ ! -d $CURRENT_DIR/.conda/envs ]; then if [ $? -ne 0 ]; then if ! [ -z "${_OLD_PATH+_}" ] ; then if [ ! -z "$EXCLUDE_CHECKS" ] && [ ! -z "$INCLUDE_CHECKS" ]; then if [ ! -z "$EXCLUDE_CHECKS" ]; then if [[ `contains_element "${SUPPORT_CHECKS[*]}" "${EXCLUDE_CHECKS[i]}_check"` = true ]]; then if [ ! -z "$INCLUDE_CHECKS" ]; then if [[ `contains_element "${SUPPORT_CHECKS[*]}" "${INCLUDE_CHECKS[i]}_check"` = true ]]; then if [[ `contains_element "${SUPPORT_CHECKS[*]}" "$1"` = true ]]; then if [[ `regexp_match "$fun" "_check$"` = true ]]; then if [[ `regexp_match "${fun:11}" "^install_"` = true ]]; then if [[ `contains_element "${DELETE_COMPONENTS[*]}" "${component}"` = false ]]; then if [[ ${BUILD_REASON} = 'IndividualCI' ]]; then if [ $TOX_RESULT -eq '0' ]; then if [ $TOX_RESULT -eq '0' ]; then if [ ! -f "$FLAKE8_PATH" ]; then if [[ ! "$PYTHON_SOURCE" ]]; then if [ $PYCODESTYLE_STATUS -ne 0 ]; then if [ $SPHINXBUILD_STATUS -ne 0 ]; then if [ ${TYPE_HINT_CHECK_STATUS} -ne 0 ]; then if [ -z "${FLINK_CONDA_HOME+x}" ]; then if [ "$FLINK_IDENT_STRING" == "" ]; then if [ "$HOSTNAME" == "" ]; then if [[ ${CLEAN_UP_FLAG} -eq 1 ]]; then if [ ! -z "$INSTALLATION_COMPONENTS" ]; then if [ $FORCE_START -eq 1 ]; then if [[ ${CLEAN_UP_FLAG} -eq 0 ]]; then if [ $skip_checks -eq 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/dev/run_pip_test.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/dev/install_command.sh
lines,46
function,0


for,0

if,2
if [[ "$@" =~ 'apache-flink-libraries' ]]; then if [[ `uname -s` == "Darwin" && `uname -m` == "arm64" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-python/bin/pyflink-shell.sh
lines,84
function,1
function parse_options() {
function parse_options() { OPTIONS=()
for,0

if,3
if [[ "$@" =~ '--help' ]] || [[ "$@" =~ '-h' ]]; then if ! [[ ${LAUNCHER_EXIT_CODE} =~ ^[0-9]+$ ]]; then if [[ ${LAUNCHER_EXIT_CODE} != 0 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/.github/workflows/docs.sh
lines,77
function,1

-Dheader="<a href=\"http://flink.apache.org/\" target=\"_top\"><h1>Back to Flink Website</h1></a> <script>var _paq=window._paq=window._paq||[];_paq.push([\"disableCookies\"]),_paq.push([\"setDomains\",[\"*.flink.apache.org\",\"*.nightlies.apache.org/flink\"]]),_paq.push([\"trackPageView\"]),_paq.push([\"enableLinkTracking\"]),function(){var u=\"//matomo.privacy.apache.org/\";_paq.push([\"setTrackerUrl\",u+\"matomo.php\"]),_paq.push([\"setSiteId\",\"1\"]);var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s)}();</script>"
for,0

if,2
if [ $? -ne 0 ]; then if [ -f ./flink-python/dev/lint-python.sh ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-external-resources/flink-external-resource-gpu/src/test/resources/test-coordination-mode.sh
lines,78
function,5

test_non_coordination_mode() { test_coordinate_indexes() { test_preempt_from_dead_processes() { test_coordination_file() { clean_state() {
for,2
for i in output1 for j in output2
if,5
if [ ${ if [[ ${ if [ $i == $j ]; then if [[ ${ if ![ -f $coordination_file ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-external-resources/flink-external-resource-gpu/src/test/resources/testing-gpu-discovery.sh
lines,68
function,0


for,0

if,3
if [ $ if [ "$EXIT_NON_ZERO" == "exit-non-zero" ]; then if [ $AMOUNT -eq 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-external-resources/flink-external-resource-gpu/src/main/resources/gpu-discovery-common.sh
lines,92
function,3

non_coordination_allocate() { coordination_allocate() { to_occupy_indexes=() recorded_indexes=() gpu_discovery() {
for,3
for i in ${indexes[@]} for i in ${!recorded_indexes[@]} for i in "${to_occupy_indexes[@]}"
if,7
if [ $amount -gt ${ if [ ${ elif [ `grep -c "^$i " $coordination_file` -ne 0 ]; then if [ ${ if [ -n $owner ] && [ `ps -p $owner | grep -c $owner` -eq 0 ]; then if [ $amount -gt ${ if [ "$coordination_mode" == "coordination" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-external-resources/flink-external-resource-gpu/src/main/resources/nvidia-gpu-discovery.sh
lines,60
function,0


for,0

if,3
if [ $ if [ $AMOUNT -eq 0 ]; then if [ $? -ne 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/test/bin/runBashJavaUtilsCmd.sh
lines,43
function,0


for,0

if,1
if [[ -z "${COMMAND}" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/test/bin/runExtractLoggingOutputs.sh
lines,38
function,0


for,0

if,1
if [[ -z "${INPUT}" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/yarn-bin/yarn-session.sh
lines,41
function,0


for,0

if,1
if [ "$FLINK_IDENT_STRING" = "" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/kubernetes-bin/kubernetes-jobmanager.sh
lines,42
function,0


for,0

if,1
if [ ! -z "${DYNAMIC_PARAMETERS}" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/kubernetes-bin/kubernetes-session.sh
lines,42
function,0


for,0

if,1
if [ "$FLINK_IDENT_STRING" = "" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/kubernetes-bin/kubernetes-taskmanager.sh
lines,45
function,0


for,0

if,1
if [ -z "${FLINK_ENV_JAVA_OPTS}" ] && [ -z "${FLINK_ENV_JAVA_OPTS_TM}" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/find-flink-home.sh
lines,28
function,0


for,0

if,1
if [ ! -f "$FIND_FLINK_HOME_PYTHON_SCRIPT" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/zookeeper.sh
lines,68
function,0


for,0

if,7
if [[ $STARTSTOP != "start" ]] && [[ $STARTSTOP != "start-foreground" ]] && [[ $STARTSTOP != "stop" ]] && [[ $STARTSTOP != "stop-all" ]]; then if [ ! -f "$ZK_CONF" ]; then if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [ -z $PEER_ID ]; then if [[ ! ${ZK_HEAP} =~ ${IS_NUMBER} ]]; then if [ "$ZK_HEAP" -gt 0 ]; then if [[ $STARTSTOP == "start-foreground" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/config.sh
lines,631
function,17

constructFlinkClassPath() { findFlinkDistJar() { findSqlGatewayJar() { findFlinkPythonJar() { manglePath() { manglePathList() { readFromConfig() { extractHostName() { readMasters() { MASTERS=() WEBUIPORTS=() readWorkers() { WORKERS=() TMWorkers() { runBashJavaUtilsCmd() { extractExecutionResults() { extractLoggingOutputs() { parseResourceParamsAndExportLogs() { parseJmArgsAndExportLogs() { parseTmArgsAndExportLogs() {
for,2
for worker in ${WORKERS[@]}; do for worker in ${WORKERS[@]}; do
if,73
if [[ "$jarfile" =~ .*/flink-dist[^/]*.jar$ ]]; then elif [[ "$FLINK_CLASSPATH" == "" ]]; then if [[ "$FLINK_DIST" == "" ]]; then elif [[ "$FLINK_DIST_COUNT" -gt 1 ]]; then if [[ "$FLINK_DIST" == "" ]]; then elif [[ "$FLINK_DIST_COUNT" -gt 1 ]]; then if [[ "$SQL_GATEWAY" == "" ]]; then elif [[ "$SQL_GATEWAY_COUNT" -gt 1 ]]; then if [[ "$FLINK_PYTHON" == "" ]]; then elif [[ "$FLINK_PYTHON_COUNT" -gt 1 ]]; then if [ "${UNAME:0:6}" == "CYGWIN" ]; then if [ "${UNAME:0:6}" == "CYGWIN" ]; then if [ "$iteration" -gt 100 ]; then if [ -z "$_FLINK_HOME_DETERMINED" ]; then if [ -z "$FLINK_LIB_DIR" ]; then FLINK_LIB_DIR=$FLINK_HOME/lib; fi if [ -z "$FLINK_PLUGINS_DIR" ]; then FLINK_PLUGINS_DIR=$FLINK_HOME/plugins; fi if [ -z "$FLINK_OPT_DIR" ]; then FLINK_OPT_DIR=$FLINK_HOME/opt; fi if [ -z "$FLINK_CONF_DIR" ]; then FLINK_CONF_DIR=$FLINK_HOME_DIR_MANGLED/conf; fi if [ -z "${MY_JAVA_HOME}" ]; then if [ -z "${MY_JAVA_HOME}" ] && ! type java > /dev/null 2> /dev/null; then if [ "${UNAME:0:6}" == "CYGWIN" ]; then if [[ -d "$JAVA_HOME" ]]; then if [ -z "${HOSTNAME}" ]; then if [[ $? -ne 0 ]]; then if [ -z "${FLINK_TM_COMPUTE_NUMA}" ]; then if [ -z "${MAX_LOG_FILE_NUMBER}" ]; then if [ -z "${ROOT_LOG_LEVEL}" ]; then if [ -z "${STD_REDIRECT_TO_FILE}" ]; then if [ -z "${FLINK_LOG_DIR}" ]; then if [ -z "${YARN_CONF_DIR}" ]; then if [ -z "${HADOOP_CONF_DIR}" ]; then if [ -z "${HBASE_CONF_DIR}" ]; then if [ -z "${FLINK_PID_DIR}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS_JM}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS_TM}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS_HS}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS_CLI}" ]; then if [ -z "${FLINK_ENV_JAVA_OPTS_SQL_GATEWAY}" ]; then if [ -z "${FLINK_SSH_OPTS}" ]; then if [ -z "${ZK_HEAP}" ]; then if [ -z "${HIGH_AVAILABILITY}" ]; then if [ -z "${HIGH_AVAILABILITY}" ]; then if [ -z "${DEPRECATED_HA}" ]; then elif [ ${DEPRECATED_HA} == "standalone" ]; then if [ -z "${JVM_ARGS}" ]; then if [ -z "$HADOOP_CONF_DIR" ]; then if [ -n "$HADOOP_HOME" ]; then if [ -d "$HADOOP_HOME/conf" ]; then if [ -d "$HADOOP_HOME/etc/hadoop" ]; then if [ -z "$HADOOP_CONF_DIR" ] && [ -z "$HADOOP_CLASSPATH" ]; then if [ -d "/etc/hadoop/conf" ]; then if [ -z "$HBASE_CONF_DIR" ]; then if [ -n "$HBASE_HOME" ]; then if [ -d "$HBASE_HOME/conf" ]; then if [ -z "$HBASE_CONF_DIR" ]; then if [ -d "/etc/hbase/conf" ]; then if [ -n "${HBASE_CONF_DIR}" ]; then if [[ "$WORKER" =~ ^.*/([0-9a-zA-Z.-]+)$ ]]; then if [[ ! -f "${MASTERS_FILE}" ]]; then if [ -n "$HOSTWEBUIPORT" ]; then if [ -z "$WEBUIPORT" ]; then if [ "${HOST}" != "localhost" ] && [ "${HOST}" != "127.0.0.1" ] ; then if [[ ! -f "$WORKERS_FILE" ]]; then if [ -n "$HOST" ] ; then if [ "${HOST}" != "localhost" ] && [ "${HOST}" != "127.0.0.1" ] ; then if [ ${WORKERS_ALL_LOCALHOST} = true ] ; then if [[ $? -ne 0 ]]; then if [[ $? -ne 0 ]]; then if [[ -z ${execution_results} ]]; then if [[ ${num_lines} -ne ${expected_lines} ]]; then if [[ $? -ne 0 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/stop-cluster.sh
lines,47
function,0


for,2
for master in ${MASTERS[@]}; do for master in ${MASTERS[@]}; do
if,2
if [[ $HIGH_AVAILABILITY == "zookeeper" ]]; then if [ ${MASTERS_ALL_LOCALHOST} = true ] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/flink-console.sh
lines,128
function,0


for,0

if,4
if [ "$FLINK_IDENT_STRING" = "" ]; then if [[ ${flock_exist} -eq 0 ]]; then if [ -f "$pid" ]; then if [ "${STD_REDIRECT_TO_FILE}" == "true" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/historyserver.sh
lines,39
function,0


for,0

if,2
if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [[ $STARTSTOP == "start-foreground" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/taskmanager.sh
lines,80
function,0


for,1
for NODE_ID in "${NODE_LIST[@]:1}"; do
if,6
if [[ $STARTSTOP != "start" ]] && [[ $STARTSTOP != "start-foreground" ]] && [[ $STARTSTOP != "stop" ]] && [[ $STARTSTOP != "stop-all" ]]; then if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [ -z "${FLINK_ENV_JAVA_OPTS}" ] && [ -z "${FLINK_ENV_JAVA_OPTS_TM}" ]; then if [ ! -z "${DYNAMIC_PARAMETERS}" ]; then if [[ $STARTSTOP == "start-foreground" ]]; then if [[ $FLINK_TM_COMPUTE_NUMA == "false" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/flink-daemon.sh
lines,199
function,1
function guaranteed_kill {
active=()
for,0

if,13
if [ "$FLINK_IDENT_STRING" = "" ]; then if [[ $? -eq 0 ]]; then if command -v timeout &> /dev/null ; then if [ "$?" -eq 124 ]; then if [ -f "$pid" ]; then if [ $? -eq 0 ]; then if [ ${count} -gt 0 ]; then if [[ ${mypid} =~ ${IS_NUMBER} ]] && kill -0 $mypid > /dev/null 2>&1 ; then if [ -f "$pid" ]; then if [ -z $to_stop ]; then if kill -0 $to_stop > /dev/null 2>&1; then if [ -f "$pid" ]; then if kill -0 $to_stop > /dev/null 2>&1; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/start-cluster.sh
lines,53
function,0


for,1
for ((i=0;i<${
if,2
if [[ $HIGH_AVAILABILITY == "zookeeper" ]]; then if [ ${MASTERS_ALL_LOCALHOST} = true ] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/standalone-job.sh
lines,55
function,0


for,0

if,4
if [[ $STARTSTOP != "start" ]] && [[ $STARTSTOP != "start-foreground" ]] && [[ $STARTSTOP != "stop" ]]; then if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [ ! -z "${DYNAMIC_PARAMETERS}" ]; then if [[ $STARTSTOP == "start-foreground" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/start-zookeeper-quorum.sh
lines,46
function,0


for,0

if,2
if [ ! -f "$ZK_CONF" ]; then if [[ $server =~ ^server\.([0-9]+)[[:space:]]*\=[[:space:]]*([^: \
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/stop-zookeeper-quorum.sh
lines,46
function,0


for,0

if,2
if [ ! -f "$ZK_CONF" ]; then if [[ $server =~ ^server\.([0-9]+)[[:space:]]*\=[[:space:]]*([^: \
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/flink-dist/src/main/flink-bin/bin/jobmanager.sh
lines,76
function,0


for,0

if,8
if [ -z $2 ] || [[ $2 == "-D" ]]; then elif [ -z $3 ] || [[ $3 == "-D" ]]; then if [[ $STARTSTOP != "start" ]] && [[ $STARTSTOP != "start-foreground" ]] && [[ $STARTSTOP != "stop" ]] && [[ $STARTSTOP != "stop-all" ]]; then if [[ $STARTSTOP == "start" ]] || [[ $STARTSTOP == "start-foreground" ]]; then if [ ! -z $HOST ]; then if [ ! -z $WEBUIPORT ]; then if [ ! -z "${DYNAMIC_PARAMETERS}" ]; then if [[ $STARTSTOP == "start-foreground" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/update_branch_version.sh
lines,64
function,0


for,0

if,2
if [ -z "${NEW_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/create_binary_release.sh
lines,174
function,2

make_binary_release() { make_python_release() {
for,3
for wheel_file in *.whl; do for wheel_file in *.whl; do for wheel_file in *.whl; do
if,11
if [ -z "${RELEASE_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then if [ "$(uname)" == "Darwin" ]; then if [ $SCALA_VERSION = "2.12" ]; then if [ "$SKIP_GPG" == "false" ] ; then if [[ "$apache_flink_libraries_actual_name" != "$apache_flink_libraries_release_name" ]] ; then if [[ "$pyflink_actual_name" != "$pyflink_release_name" ]] ; then if [[ ! ${wheel_file} =~ ^apache_flink-$PYFLINK_VERSION- ]]; then if [[ ${wheel_packages_num} != ${EXPECTED_WHEEL_PACKAGES_NUM} ]]; then if [ "$SKIP_GPG" == "false" ] ; then if [ "$SCALA_VERSION" == "none" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/create_release_branch.sh
lines,80
function,0


for,1
git commit -am "Commit for release $NEW_VERSION"
if,3
if [ -z "${NEW_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then if [ "$RELEASE_CANDIDATE" != "none" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/create_source_release.sh
lines,82
function,0


for,0

if,3
if [ -z "${RELEASE_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then if [ "$(uname)" == "Darwin" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/update_japicmp_configuration.sh
lines,94
function,3
function enable_public_evolving_compatibility_checks() { function set_japicmp_reference_version() { function clear_exclusions() {
function enable_public_evolving_compatibility_checks() { function set_japicmp_reference_version() { function clear_exclusions() {
for,0

if,7
if [ -z "${NEW_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then if [[ $exclusion_start -lt $exclusion_end ]]; then if [[ ${current_branch} =~ -rc ]]; then if ! [[ ${minor} == "0" ]]; then elif [[ ${current_branch} =~ ^master$ ]]; then elif [[ ${current_branch} =~ ^release- ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/collect_license_files.sh
lines,65
function,0


for,1
for i in $(find -L "${SRC}" -name "*.jar")
if,1
if [ "${SRC}" = "-h" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/create_snapshot_branch.sh
lines,70
function,0


for,1
git commit -am "Update for ${RELEASE_VERSION}"
if,3
if [ -z "${SHORT_RELEASE_VERSION:-}" ]; then if [ -z "${RELEASE_VERSION:-}" ]; then if [[ `basename $CURR_DIR` != "tools" ]] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/releasing/deploy_staging_jars.sh
lines,47
function,0


for,0

if,1
if [[ `basename $CURR_DIR` != "tools" ]] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/create_build_artifact.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/cache_docker_images.sh
lines,97
function,3

helpFunction() saveImages() loadImages()
for,1
for IMAGE in ${IMAGES_TO_CACHE}
if,5
if [ -z "${DOCKER_IMAGES_CACHE_FOLDER:-}" ] if [ -z "$IMAGES_TO_CACHE" ] if [ -f "$DOCKER_IMAGES_CACHE_PATH" ]; if [ "$1" == "save" ]; elif [ "$1" == "load" ];
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/free_disk_space.sh
lines,54
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/build_properties.sh
lines,100
function,4
function github_num_commits() { function is_docs_only_pullrequest() { function pr_contains_docs_changes() { function pr_contains_cython_changes() {
function github_num_commits() { function is_docs_only_pullrequest() { function pr_contains_docs_changes() { function pr_contains_cython_changes() {
for,0

if,9
if [[ ! $BUILD_SOURCEBRANCHNAME == ci_* ]] ; then if ! [[ "$PR_ID" =~ ^[0-9]+$ ]] ; then if [[ "$GITHUB_PULL_HEAD_SHA" != "$THIS_BRANCH_SHA" ]] ; then if [[ $GITHUB_NUM_COMMITS == 0 ]]; then if [[ $(git diff --name-only HEAD..HEAD~$GITHUB_NUM_COMMITS | grep -v "docs/") == "" ]] ; then if [[ $GITHUB_NUM_COMMITS == 0 ]]; then if [[ $(git diff --name-only HEAD..HEAD~"$GITHUB_NUM_COMMITS" | grep "docs/") != "" ]] ; then if [[ ${GITHUB_NUM_COMMITS} == 0 ]]; then if [[ $(git diff --name-only HEAD..HEAD~"$GITHUB_NUM_COMMITS" | grep -E "pyx|pxd") != "" ]] ; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/unpack_build_artifact.sh
lines,42
function,0


for,0

if,1
if ! [ -e $FLINK_ARTIFACT_DIR ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/uploading_watchdog.sh
lines,87
function,1
function timeout_watchdog() {
function timeout_watchdog() {
for,0

if,3
if [ -z "$HERE" ] ; then if [[ $secondsToKill -lt 0 ]]; then if [[ "$TEST_EXIT_CODE" == 0 ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/azure-pipelines/debug_files_utils.sh
lines,27
function,1
function prepare_debug_files {

for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/update_notice_year.sh
lines,40
function,0


for,1
for path in $(find "${FLINK_DIR}" -name "NOTICE*"); do
if,1
if [[ -z "${FLINK_DIR}" || "${FLINK_DIR}" = "-h" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/change-version.sh
lines,34
function,0


for,0

if,1
if [[ "$HERE" != "tools" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/verify_scala_suffixes.sh
lines,89
function,1

usage() {
for,3
echo "Analyzing modules for Scala dependencies using 'mvn dependency:tree'." echo "Suffix Check failed. The dependency tree could not be determined. See previous output for details." echo "Suffix Check failed. See previous output for details."
if,2
if [ $EXIT_CODE != 0 ]; then if [ $EXIT_CODE != 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/compile_ci.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/stage.sh
lines,203
function,2
function get_compile_modules_for_stage() { function get_test_modules_for_stage() {
function get_compile_modules_for_stage() { function get_test_modules_for_stage() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/docs.sh
lines,32
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/test_controller.sh
lines,129
function,0


for,0

if,6
if [ -z "$HERE" ] ; then if [ -z "${DEBUG_FILES_OUTPUT_DIR:-}" ] ; then if [ ! -d "$DEBUG_FILES_OUTPUT_DIR" ] ; then if [ -z "${STAGE:-}" ] ; then if [ $EXIT_CODE != 0 ]; then if [ $STAGE == $STAGE_PYTHON ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/controller_utils.sh
lines,62
function,3

print_system_info() { put_yarn_logs_to_artifacts() { print_stacktraces () {
for,2
for file in `find ./flink-yarn-tests/target -type f -name '*.log*' -or -name '*.out'`; do for pid in "${pids[@]}"; do
if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/watchdog.sh
lines,129
function,5
function run_with_watchdog() {
max_of() { mod_time () { the_time() { watchdog () { function run_with_watchdog() {
for,2
for number in "${@:2}"; do echo "Process produced no output for ${MAX_NO_OUTPUT} seconds."
if,2
if ((number > max)); then if [ $time_diff -ge $MAX_NO_OUTPUT ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/compile.sh
lines,135
function,0


for,1
echo "License header check failure detected. Printing first 50 lines for convenience:"
if,5
if [ $EXIT_CODE != 0 ]; then if [ $? != 0 ]; then if [ $EXIT_CODE != 0 ] ; then if [ $EXIT_CODE != 0 ] ; then if [[ ${PROFILE} != *"jdk17"* ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/deploy_nightly_to_s3.sh
lines,43
function,1
function upload_to_s3() {
function upload_to_s3() {
for,0

if,0

git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/shade.sh
lines,151
function,2

check_shaded_artifacts() { check_shaded_artifacts_s3_fs() {
for,0

if,15
if [ "$ASM" != "0" ]; then if [ "$GUAVA" != "0" ]; then if [ "$CODEHAUS_JACKSON" != "0" ]; then if [ "$FASTERXML_JACKSON" != "0" ]; then if [ "$SNAPPY" = "0" ]; then if [ "$IO_NETTY" != "0" ]; then if [ "$ORG_NETTY" != "0" ]; then if [ "$ZOOKEEPER" != "0" ]; then if [ "$CURATOR" != "0" ]; then if [ "$FLINK_PYTHON" != "0" ]; then if [ "$HADOOP" != "0" ]; then if [ ! `cat ${jarContents} | grep '^META-INF/services/org\.apache\.flink\.core\.fs\.FileSystemFactory$'` ]; then if [ "${VARIANT}" = "hadoop" ]; then elif [ "${VARIANT}" = "presto" ]; then if [ "${FS_SERVICE_FILE_CLASSES}" != "${EXPECTED_FS_SERVICE_FILE_CLASSES}" ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/maven-utils.sh
lines,107
function,4
function run_mvn { function setup_maven { function set_mirror_config { function collect_coredumps {

for,3
echo "Checking for availability of CI Maven mirror" echo "Searching for .dump, .dumpstream and related files in '$SEARCHDIR'" for file in `find $SEARCHDIR -type f -regextype posix-extended -iregex '.*\.hprof|.*\.dump|.*\.dumpstream|.*hs.*\.log(\.[0-9]+)?|.*/core(\.[0-9]+)?$'`; do
if,7
if [[ "$M2_HOME" != "" ]]; then if [[ "$MVN_RUN_VERBOSE" != "false" ]]; then if [ ! -d "${MAVEN_VERSIONED_DIR}" ]; then if [ -d "${HOME}/.m2/repository/" ]; then find ${HOME}/.m2/repository/ -name "*.jar" -exec sh -c 'if ! zip -T {} >/dev/null ; then echo "deleting invalid file: {}"; rm -f {} ; fi' \; if [[ "$MAVEN_MIRROR_CONFIG_FILE" != "" ]]; then if [[ "$?" == "0" ]]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/license_check.sh
lines,60
function,1

usage() {
for,1
echo "License Check failed. See previous output for details."
if,2
if [[ "$ if [ $EXIT_CODE != 0 ]; then
git@github.com:apache/flink.git,a2681f6a85aaad21179f91e03a91b4a05158841e,flink,22024,./flink/tools/ci/verify_bundled_optional.sh
lines,76
function,1

usage() {
for,2
echo "Optional Check failed. The dependency tree could not be determined. See previous output for details." echo "Optional Check failed. See previous output for details."
if,3
if [[ "$ if [ $EXIT_CODE != 0 ]; then if [ $EXIT_CODE != 0 ]; then
git@github.com:libgdx/libgdx.git,5aad36eb97af778159447bda90616eeb0731b0b5,libgdx,22019,./libgdx/backends/gdx-backend-robovm/build-objectal.sh
lines,27
function,0


for,0

if,0

git@github.com:redisson/redisson.git,b0f8bb756002c50672a51a6059837411b5b6a2b7,redisson,21827,
git@github.com:jenkinsci/jenkins.git,f613605a2e0bd4e4c1911ef406af42c68b1e95c9,jenkins,21499,./jenkins/test/src/test/resources/hudson/model/DirectoryBrowserSupportTest/outsideWorkspaceStructure.sh
lines,14
function,0


for,0

if,0

git@github.com:jenkinsci/jenkins.git,f613605a2e0bd4e4c1911ef406af42c68b1e95c9,jenkins,21499,./jenkins/test/src/test/resources/hudson/model/DirectoryBrowserSupportTest/insideWorkspaceStructure.sh
lines,8
function,0


for,0

if,0

git@github.com:jenkinsci/jenkins.git,f613605a2e0bd4e4c1911ef406af42c68b1e95c9,jenkins,21499,./jenkins/war/src/main/webapp/scripts/yui/cutdown.sh
lines,25
function,0


for,0

if,0

git@github.com:jenkinsci/jenkins.git,f613605a2e0bd4e4c1911ef406af42c68b1e95c9,jenkins,21499,./jenkins/ath.sh
lines,56
function,0


for,0

if,2
if [[ $ if [[ -n ${MAVEN_SETTINGS-} ]]; then
git@github.com:alibaba/Sentinel.git,d00798ff8d04c805a0f64772d7802b801e1c86e3,Sentinel,21440,./Sentinel/sentinel-demo/sentinel-demo-quarkus/build.sh
lines,4
function,0


for,0

if,0

git@github.com:alibaba/Sentinel.git,d00798ff8d04c805a0f64772d7802b801e1c86e3,Sentinel,21440,./Sentinel/sentinel-demo/sentinel-demo-quarkus/build-native.sh
lines,10
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/java/proguard/proguard6.2.2/buildscripts/build.sh
lines,16
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/java/proguard/proguard6.2.2/buildscripts/functions.sh
lines,85
function,4
function download { function compile { function createjar { function updatejar {

for,0

if,5
if [ ! -f "$2" ]; then if type wget > /dev/null 2>&1; then \( -name \*.properties -o -name \*.png -o -name \*.gif -o -name \*.pro \) \ if [ -f "$SRC/META-INF/MANIFEST.MF" ]; then if [ -f "$SRC/META-INF/MANIFEST.MF" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/java/proguard/proguard6.2.2/bin/retrace.sh
lines,24
function,0


for,0

if,2
if test "$PROGUARD" = '' if test "$PROGUARD" = ''
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/java/proguard/proguard6.2.2/bin/proguardgui.sh
lines,27
function,0


for,0

if,2
if test "$PROGUARD" = '' if test "$PROGUARD" = ''
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/java/proguard/proguard6.2.2/bin/proguard.sh
lines,24
function,0


for,0

if,2
if test "$PROGUARD" = '' if test "$PROGUARD" = ''
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/zlib/os400/make.sh
lines,366
function,4

action_needed() make_module() db2_name() copy_hfile()
for,4
for TEXT in "${TOPDIR}/ChangeLog" "${TOPDIR}/FAQ" \ for HFILE in "${TOPDIR}/"*.h for SRC in ${CSOURCES} for MODULE in ${MODULES}
if,20
if action_needed "${MODIFSNAME}" "${2}" elif [ ! "`sed -e \"/<source name=\\\"${CSRC}\\\">/,/<\\\\/source>/!d\" \ do if action_needed \"${MODIFSNAME}\" \"${IFSDIR}/include/${HDR}\" if action_needed "${LIBIFSNAME}" if action_needed "${LIBIFSNAME}/DOCS.FILE" if action_needed "${MEMBER}" "${TEXT}" if action_needed "${SRCPF}" if action_needed "${IFSDIR}/include" if action_needed "${DEST}" "${HFILE}" if action_needed "${IFSFILE}" "${DEST}" if action_needed "${DEST}" "${HFILE}" if action_needed "${IFSFILE}" "${DEST}" if action_needed "${LIBIFSNAME}/${STATBNDDIR}.BNDDIR" if [ "${LINK}" ] if action_needed "${LIBIFSNAME}/TOOLS.FILE" if action_needed "${SCRIPTDIR}/bndsrc" "${DEST}" if action_needed "${LIBIFSNAME}/${SRVPGM}.SRVPGM" if [ "${LINK}" ] if action_needed "${LIBIFSNAME}/${DYNBNDDIR}.BNDDIR" if [ "${LINK}" ]
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/ijar/test/testenv.sh
lines,47
function,0

function statfmt() { function statfmt() {
for,0

if,1
if [[ "$PLATFORM" = "linux" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/ijar/test/ijar_test.sh
lines,603
function,41
function cleanup() { function set_file_length() { function check_consistent_file_contents() { function set_up() { function tear_down() { function test_output_bigger_than_input() { function test_class_more_64k() { function test_ijar_output() { function do_test_large_file() { function test_large_files() { function test_z_2gb_plus_data_file() { function test_upper_bound_up_2gb() { function test_empty_jar() { function test_wrong_centraldir() { function test_type_annotation() { function test_invokedynamic() { function test_object_class() { function test_corrupted_end_of_centraldir() { function test_inner_class_argument() { function test_inner_class_pruning() { function test_method_parameters_attribute() { function test_dynamic_constant() { function test_nestmates_attribute() { function test_records_attribute() { function test_sealed_attribute() { function test_source_debug_extension_attribute() { function test_keep_for_compile() { function test_central_dir_largest_regular() { function test_central_dir_smallest_zip64() { function test_central_dir_zip64() {
function cleanup() { function set_file_length() { function check_consistent_file_contents() { function set_up() { function tear_down() { function test_output_bigger_than_input() { function test_class_more_64k() { echo " public int getBottleOnTheWall${i}() { return ${i}; }" >> $BOTTLES_JAVA function test_ijar_output() { function do_test_large_file() { function test_large_files() { function test_z_2gb_plus_data_file() { function test_upper_bound_up_2gb() { function test_empty_jar() { function test_wrong_centraldir() { function test_type_annotation() { function test_invokedynamic() { function test_object_class() { function test_corrupted_end_of_centraldir() { function test_inner_class_argument() { public static void c() { function test_inner_class_pruning() { public static int number() { public static int number() { public static void message() { public static void message() { System.out.println("hello " + L.I.number()); public static void message() { System.out.println("hello " + L.I.J.number()); function test_method_parameters_attribute() { function test_dynamic_constant() { function test_nestmates_attribute() { function test_records_attribute() { function test_sealed_attribute() { function test_source_debug_extension_attribute() { function test_keep_for_compile() { function test_central_dir_largest_regular() { function test_central_dir_smallest_zip64() { function test_central_dir_zip64() {
for,8
for i in $(seq 1 16384); do for flag0 in '' '0'; do for flag0 in '' '0'; do for file in $(find $TEST_TMPDIR/classes -name '*.class'); do for flag0 in '' '0'; do for size in $((1024*1024)) $((15*1024*1024)); do for i in $(seq 200); do for i in $(seq 200); do
if,4
if (grep -q "^${filename} " <<<"${expected_output}"); then if [[ -n "${1-}" ]]; then if [[ -n "${2-}" ]]; then if [[ $IJAR_FILES != 2 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/third_party/ijar/test/zip_test.sh
lines,241
function,13
function assert_unzip_same_as_zipper() { function assert_zipper_same_after_unzip() { function test_zipper() { function test_zipper_junk_paths() { function test_zipper_unzip_selective_files() { function test_zipper_unzip_to_optional_dir() { function test_zipper_compression() { function test_zipper_specify_path() { function test_zipper_permissions() { function test_unzipper_zip64_archive() { function test_zipper_file_large_than_2G() {
function assert_unzip_same_as_zipper() { function assert_zipper_same_after_unzip() { function test_zipper() { function test_zipper_junk_paths() { function test_zipper_unzip_selective_files() { function test_zipper_unzip_to_optional_dir() { function test_zipper_compression() { function test_zipper_specify_path() { function test_zipper_permissions() { function test_unzipper_zip64_archive() { function test_zipper_file_large_than_2G() {
for,1
for i in $(seq 1 1000); do
if,2
if ! test -x ${LOCAL_TEST_DIR}/out/executable; then if test -x ${LOCAL_TEST_DIR}/out/non_executable; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/upload_java_tools.sh
lines,122
function,0


for,0

if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/package-bazel.sh
lines,121
function,0


for,0

if,6
if [[ "$OUT" == *jdk_allmodules.zip ]]; then if [[ $DEV_BUILD -eq 0 ]]; then if [ -n "${EMBEDDED_TOOLS}" ]; then if [[ $(find . -maxdepth 1 -type d -name "platforms~*" | wc -l) -eq 1 ]]; then if [[ $(find . -maxdepth 1 -type d -name "rules_java~*" | wc -l) -eq 1 ]]; then if [[ "$DEV_BUILD" -eq 1 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/import_deps_checker/javatests/com/google/devtools/build/importdeps/golden_test.sh
lines,89
function,0


for,0

if,5
if [ -d "$TEST_TMPDIR" ]; then if [ -d "$TEST_UNDECLARED_OUTPUTS_DIR" ]; then if [[ "${checker_ret}" != ${expected_exit_code} ]]; then if [[ "${gold_output_ret}" != 0 ]] ; then if [[ "${gold_stderr_ret}" != 0 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/utf8_test_log_test.sh
lines,51
function,3
function expect_log() { function test_utf8_log() {
function expect_log() { function test_utf8_log() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/stack_trace_integration_tests.sh
lines,152
function,8
function count_in_log() { function check_ge() { function check_le() { function check_eq() { function expect_thread_dumps_in_log() { function test_ShutdownHook() { function test_SlowSuite() { function test_PrematureExit() {
function count_in_log() { function check_ge() { function check_le() { function check_eq() { function expect_thread_dumps_in_log() { function test_ShutdownHook() { function test_SlowSuite() { function test_PrematureExit() {
for,0

if,2
if [ "$JUNIT_VERSION" = "3" ]; then if [ "$JUNIT_VERSION" = "3" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/deploy_jar_integration_tests.sh
lines,51
function,1
function test_Warning() {
function test_Warning() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/antxmlresultwriter_integration_test.sh
lines,57
function,1
function test_XmlOutputExercises() {
function test_XmlOutputExercises() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/junit4_testbridge_integration_tests.sh
lines,111
function,6
function set_up() { function test_Junit4() { function test_Junit4FlagOverridesEnv() { function test_Junit4FailFast() {
function set_up() { function test_Junit4() { function test_Junit4FlagOverridesEnv() { function test_Junit4FailFast() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/minimize_jdk.sh
lines,86
function,0


for,0

if,4
if [ "$1" == "--allmodules" ]; then if [[ "${ARCH}" == 'ppc64le' ]] || [[ "${ARCH}" == 's390x' ]]; then if [[ "$UNAME" =~ msys_nt* ]]; then if [[ "$UNAME" =~ darwin ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/combine_derived_java_srcs.sh
lines,43
function,0


for,1
for i in $*
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/upload_all_java_tools.sh
lines,102
function,0

JAVA_VERSIONS=`cat src/test/shell/bazel/BUILD | grep '^JAVA_VERSIONS = ' | sed -e 's/JAVA_VERSIONS = //' | sed -e 's/["(),]//g'`
for,1
for java_version in $JAVA_VERSIONS; do
if,4
if [[ "$platform" == "windows" ]]; then if [[ "$platform" == "windows" ]]; then if [[ "$platform" != "windows" ]]; then if [[ "$platform" == "linux" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/zip_builtins.sh
lines,61
function,0


for,1
for src in "$@"; do
if,1
if [ -z "$1" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/create_java_tools_release.sh
lines,148
function,0


for,1
for platform in "linux" "windows" "darwin_x86_64" "darwin_arm64"; do
if,2
if [[ $release == "true" ]]; then if [[ $release == "true" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/java/com/google/devtools/build/skydoc/diff_test_runner.sh
lines,37
function,0


for,0

if,1
if [ "$DIFF" != "" ]
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/shell_utils_symlinks_test.sh
lines,179
function,4
function assert_fails_to() { function test_resolve_bad_links() { function test_resolve_symlinks() { function test_get_realpath() {
function assert_fails_to() { function test_resolve_bad_links() { function test_resolve_symlinks() { function test_get_realpath() {
for,3
"$method" "$arg" && fail "'$method' should have failed for '$arg'" "$method" && fail "'$method' should have failed for empty argument" run_suite "Tests for Bash utilities"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -n "$arg" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/sandboxing_test_utils.sh
lines,31
function,1
function check_sandbox_allowed {

for,0

if,1
if ! $linux_sandbox -- /bin/true; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/shell_utils.sh
lines,163
function,8
function resolve_links() { function normalize_path() { function get_real_path() { function md5_file() { function expect_query_targets() { function expect_log_once() { function expect_log_n() {
function resolve_links() { function normalize_path() { function get_real_path() { function md5_file() { function expect_query_targets() { function expect_log_once() { function expect_log_n() {
for,1
for arg in $@; do
if,10
if [ -e "$name" ]; then if [ "$(echo "$target" | head -c1)" = "/" ]; then if [ "$segment" = ".." ]; then if [ "$uplevels" -gt 0 ]; then if [ "$name" = "." ]; then if [ "$name" = "/" ]; then if [ -n "$name" ]; then if [ $ if [[ ${PLATFORM} == "darwin" ]] || [[ ${PLATFORM} == "freebsd" ]] || [[ ${PLATFORM} == "openbsd" ]]; then if [ -n "$result" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/watchfs_test.sh
lines,102
function,7
function set_up() { function tear_down() { function helper() { function test_nowatchfs() { function test_startup() { function test_command() { function test_both() {
function set_up() { function tear_down() { function helper() { function test_nowatchfs() { function test_startup() { function test_command() { function test_both() {
for,1
run_suite "Integration tests for --watchfs."
if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/runfiles_test_utils.sh
lines,28
function,2
function get_python_runtime_runfiles() { function get_repo_mapping_manifest_file() {
function get_python_runtime_runfiles() { function get_repo_mapping_manifest_file() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/workspace_status_test.sh
lines,131
function,6
function test_workspace_status_with_stderr() { function test_workspace_status_invalidation() { function test_false_and_verbose_failures() { function test_that_script_is_run_from_workspace_directory() { function test_errmsg() { function test_embed_label_must_be_single_line() {
function test_workspace_status_with_stderr() { function test_workspace_status_invalidation() { function test_false_and_verbose_failures() { function test_that_script_is_run_from_workspace_directory() { function test_errmsg() { function test_embed_label_must_be_single_line() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/linux-sandbox_network_test.sh
lines,68
function,5
function set_up { function test_network_no_namespace() { function test_network_namespace() { function test_ping_loopback() { function test_ping_no_loopback() {
function test_network_no_namespace() { function test_network_namespace() { function test_ping_loopback() { function test_ping_no_loopback() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/cpp_test.sh
lines,379
function,8
function test_no_rebuild_on_irrelevant_header_change() { function test_new_header_is_required() { function test_no_recompile_on_shutdown() { function test_default_host_crosstool_top() {
function try_with_timeout() { $* ; } function test_no_rebuild_on_irrelevant_header_change() { function test_new_header_is_required() { function test_no_recompile_on_shutdown() { function test_default_host_crosstool_top() { def _get_make_variables(): def _get_action_configs(): action_configs = _get_action_configs(), make_variables = _get_make_variables(),
for,2
[toolchains(id) for id in [ run_suite "Tests for Bazel's C++ rules"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/execution_phase_tests.sh
lines,460
function,17
function set_up() { function tear_down() { function assert_last_log() { function assert_cache_stats() { function test_cache_computed_file_digests_behavior() { function DISABLED_test_cache_computed_file_digests_uncaught_changes() { function test_cache_computed_file_digests_ui() { function test_max_open_file_descriptors() { function test_action_symlink_output_change_detected() { function test_resource_flags_syntax() { function test_track_directory_crossing_package() { function test_fixed_mtime_move_detected_as_change() { function test_fixed_mtime_source_file() {
function try_with_timeout() { $* ; } function set_up() { function tear_down() { function assert_last_log() { function assert_cache_stats() { function test_cache_computed_file_digests_behavior() { function DISABLED_test_cache_computed_file_digests_uncaught_changes() { function log_metadata_for_test_debugging() { function test_cache_computed_file_digests_ui() { function test_max_open_file_descriptors() { function test_action_symlink_output_change_detected() { function test_resource_flags_syntax() { function test_track_directory_crossing_package() { function test_fixed_mtime_move_detected_as_change() { "output": attr.output(), "to_sub" : attr.string_dict(), function test_fixed_mtime_source_file() { "output": attr.output(), "to_sub" : attr.string_dict(),
for,1
for run in 1 2 3; do
if,8
if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then if ! grep "${context}" "${log}" | grep -q "${message}" ; then if which md5sum >/dev/null; then elif which md5 >/dev/null; then if [[ "$(uname -s)" == Darwin ]]; then if [[ "${exp_nfiles}" == "unlimited" || "${exp_nfiles}" -gt "${maxfiles}" ]] elif "${is_windows}"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/configured_query_test.sh
lines,1549
function,69
function test_basic_query() { function test_basic_query_output_textproto() { function test_basic_query_output_labelkind() { function test_config_checksum_determinism() { function test_respects_selects() { function test_empty_results_printed() { function test_universe_scope_specified() { function test_transitions_lite() { function test_transitions_full() { function write_test_targets() { function test_show_transitive_config_fragments() { function test_show_transitive_config_fragments_select() { function test_show_transitive_config_fragments_alias() { function test_direct_alias_requirements() { function test_show_transitive_config_fragments_host_deps() { function test_show_transitive_config_fragments_through_output_file() { function test_show_direct_config_fragments() { function test_show_direct_config_fragments_select() { function test_show_config_fragments_select_on_starlark_option() { function test_show_config_fragments_starlark_rule_requires_starlark_option() { function test_show_config_fragments_select_on_feature_flag_info_provider() { function test_show_config_fragments_on_define() { function test_show_config_fragments_on_starlark_required_fragments() { function test_show_config_fragments_includes_starlark_aspects() { function test_manual_tagged_targets_always_included_for_queries() { function test_include_test_suites() { function test_build_tests_only_override() { function test_label_output_shows_alias_labels() { function test_transitions_output_shows_alias_labels() { function test_starlark_output_mode() { function test_starlark_build_options() { function test_starlark_build_options_invalid_arg() { function test_starlark_output_both_options() { function test_starlark_output_invalid_expression() { function test_starlark_output_missing_file() { function test_starlark_output_missing_format() { function test_starlark_output_format_wrong_number_args() { function test_starlark_output_format_not_function() { function test_starlark_output_cc_library_files() { function test_starlark_file_output() { function test_starlark_common_libs() { function test_starlark_output_providers_function() { function test_starlark_output_providers_starlark_provider() { function test_starlark_output_providers_starlark_provider_for_alias() { function test_bazelignore_error_cquery_nocrash() { function test_external_repo_scope() { function test_test_arg_in_bazelrc() { function set_up_config_test() { function test_config_function() { function test_config_function_wrong_order() { function test_config_function_invalid_config() { function test_error_keep_going() { function test_does_not_fail_horribly_with_file() { function test_files_include_source_files() {
function test_basic_query() { function test_basic_query_output_textproto() { function test_basic_query_output_labelkind() { function test_config_checksum_determinism() { You may have added an option without a meaningful toString() implementation function test_respects_selects() { function test_empty_results_printed() { function test_universe_scope_specified() { function test_transitions_lite() { function test_transitions_full() { function write_test_targets() { function test_show_transitive_config_fragments() { function test_show_transitive_config_fragments_select() { function test_show_transitive_config_fragments_alias() { function test_direct_alias_requirements() { function test_show_transitive_config_fragments_host_deps() { function test_show_transitive_config_fragments_through_output_file() { function test_show_direct_config_fragments() { function test_show_direct_config_fragments_select() { function test_show_config_fragments_select_on_starlark_option() { build_setting = config.string() function test_show_config_fragments_starlark_rule_requires_starlark_option() { build_setting = config.string() function test_show_config_fragments_select_on_feature_flag_info_provider() { function test_show_config_fragments_on_define() { function test_show_config_fragments_on_starlark_required_fragments() { function test_show_config_fragments_includes_starlark_aspects() { function test_manual_tagged_targets_always_included_for_queries() { function test_include_test_suites() { function test_build_tests_only_override() { function test_label_output_shows_alias_labels() { function test_transitions_output_shows_alias_labels() { function test_starlark_output_mode() { --starlark:expr="str(target.label) + '%' + str(target.files.to_list()[1].is_directory)" \ return str(t.label) + '%' + str(t.files.to_list()[1].is_directory) function test_starlark_build_options() { function test_starlark_build_options_invalid_arg() { assert_contains "Error in build_options: in call to build_options()" "$TEST_log" --starlark:expr="build_options()" > output 2>"$TEST_log" || fail "Expected success" assert_contains "build_options() missing 1 required positional argument: target" "$TEST_log" assert_contains "build_options() accepts no more than 1 positional argument but got 2" "$TEST_log" function test_starlark_output_both_options() { function test_starlark_output_invalid_expression() { --starlark:expr="def foo(): return 5" \ function test_starlark_output_missing_file() { function test_starlark_output_missing_format() { function test_starlark_output_format_wrong_number_args() { function test_starlark_output_format_not_function() { function test_starlark_output_cc_library_files() { --starlark:expr="' '.join([f.basename for f in target.files.to_list()])" \ function test_starlark_file_output() { --starlark:expr="'path=' + target.files.to_list()[0].path" \ function test_starlark_common_libs() { --starlark:expr="str(type(depset())) + ' ' + str(json.encode(struct(foo = 'bar')))" \ function test_starlark_output_providers_function() { return [DefaultInfo()] ret = str(target.label) + ':providers=' + str(sorted(p.keys())) function test_starlark_output_providers_starlark_provider() { function test_starlark_output_providers_starlark_provider_for_alias() { function test_bazelignore_error_cquery_nocrash() { function test_external_repo_scope() { function test_test_arg_in_bazelrc() { function set_up_config_test() { function test_config_function() { function test_config_function_wrong_order() { function test_config_function_invalid_config() { function test_error_keep_going() { function test_does_not_fail_horribly_with_file() { function test_files_include_source_files() {
for,4
assert_contains "Starlark evaluation error for //$pkg:pylib" "$TEST_log" assert_contains "Starlark evaluation error for //$pkg:pylib" "$TEST_log" assert_contains "invalid --starlark:file:.* for 'format', want function" $TEST_log --starlark:expr="' '.join([f.basename for f in target.files.to_list()])" \
if,16
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ "$output1" != "$output2" ]] if bo == None: third = str(bo['//$pkg:mylistflag'] if '//$pkg:mylistflag' in bo else None) if "$is_windows"; then elif is_darwin; then if not p: if vis_info: if output_group_info: if [ "${PRODUCT_NAME}" != "bazel" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/target_pattern_file_test.sh
lines,104
function,4
function setup() { function test_target_pattern_file_build() { function test_target_pattern_file_test() { function test_target_pattern_file_and_cli_pattern() {
function setup() { function test_target_pattern_file_build() { function test_target_pattern_file_test() { function test_target_pattern_file_and_cli_pattern() {
for,1
run_suite "Tests for using target_pattern_file"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/nojdk_startup_options_test.sh
lines,74
function,2
function test_autodetect_server_javabase() { function test_noautodetect_server_javabase() {
function test_autodetect_server_javabase() { function test_noautodetect_server_javabase() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/java_sandboxing_test.sh
lines,139
function,7
function tear_down() { function do_succeed_when_executor_not_initialized_test() { function build_with_params() { function do_test_params_files() { function test_params_files_default_sandbox() { function test_params_files_process_wrapper_sandbox() { function test_params_files_worker() {
function tear_down() { function do_succeed_when_executor_not_initialized_test() { function build_with_params() { function do_test_params_files() { function test_params_files_default_sandbox() { function test_params_files_process_wrapper_sandbox() { function test_params_files_worker() {
for,1
echo "Waiting for Blaze to finish initializing all modules"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/run_test.sh
lines,534
function,19
function write_py_files() { function write_cc_source_files() { function test_run_py_binary() { function test_run_py_test() { function test_runfiles_present_cc_binary() { function test_runfiles_updated_correctly_with_nobuild_runfile_links { function test_run_with_no_build_runfile_manifests { function test_script_file_generation { function test_consistent_command_line_encoding { function test_no_color_on_failed_run() { function test_no_ansi_stripping_in_stdout_or_stderr() { function test_location_in_args() { function test_run_for_alias() { function test_run_for_custom_executable() { function test_run_a_test_and_a_binary_rule_with_input_from_stdin() { function test_default_test_tmpdir() { function test_blaze_run_with_custom_test_tmpdir() { function test_run_binary_with_env_attribute() { function assert_starts_with() {
function write_py_files() { function write_cc_source_files() { function test_run_py_binary() { function test_run_py_test() { function test_runfiles_present_cc_binary() { function test_no_color_on_failed_run() { function test_no_ansi_stripping_in_stdout_or_stderr() { function test_location_in_args() { function test_run_for_alias() { function test_run_for_custom_executable() { function test_run_a_test_and_a_binary_rule_with_input_from_stdin() { function test_default_test_tmpdir() { function test_blaze_run_with_custom_test_tmpdir() { function test_run_binary_with_env_attribute() { function assert_starts_with() {
for,2
echo 'for t in "$@"; do echo "arg: $t"; done' > fubar/fubar.sh for arg in $@; do
if,23
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if (f == NULL) { if (f == NULL) { if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if $is_windows; then if $is_windows; then if "$is_windows"; then if $IsWindows: content = "@if '%1' equ '' (echo Run Forest run) else (echo>%1 Run Forest run)" "if [ -z \$1 ]; then\\n" + if "$is_windows"; then if ${is_windows}; then if "${is_windows}"; then if [[ "${tmpdir}" == "${TEST_TMPDIR}"* ]]; then if [[ "${2}" != "${1}"* ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/profiler_test.sh
lines,88
function,5
function set_up() { function tear_down() { function helper() { function test_metrics() { function test_metrics_with_load_average() {
function set_up() { function tear_down() { function helper() { function test_metrics() { function test_metrics_with_load_average() {
for,1
run_suite "Integration tests for profiler data."
if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/sandboxing_test.sh
lines,1013
function,44
function set_up() { function tear_down() { function do_sandbox_base_wiped_only_on_startup_test { function test_sandbox_base_wiped_only_on_startup_with_sync_deletions() { function test_sandbox_base_wiped_only_on_startup_with_async_deletions() { function do_succeed_when_executor_not_initialized_test() { function test_succeed_when_executor_not_initialized_with_defaults() { function test_succeed_when_executor_not_initialized_with_async_deletions() { function test_sandbox_base_can_be_rm_rfed() { function test_sandbox_not_used_with_legacy_fallback() { function test_sandbox_local_not_used_without_legacy_fallback() { function test_sandbox_local_used_with_proper_strategy() { function test_sandbox_base_top_is_removed() { function test_sandbox_old_contents_not_reused_in_consecutive_builds() { function test_sandbox_hardening_with_cgroups_v1() { function test_sandbox_hardening_with_cgroups_v2() { function test_sandboxed_genrule() { function test_sandboxed_genrule_with_tools() { function test_sandbox_relative_symlink_in_inputs() { function test_sandbox_undeclared_deps() { function test_sandbox_undeclared_deps_with_local() { function test_sandbox_undeclared_deps_with_local_tag() { function test_sandbox_undeclared_deps_with_local_tag_no_fallback() { function write_starlark_breaks1() { function test_sandbox_undeclared_deps_starlark() { function test_sandbox_undeclared_deps_starlark_with_local_tag() { function test_sandbox_cyclic_symlink_in_inputs() { function test_requires_root() { function test_sandbox_proc_self() { function test_succeeding_action_with_ioexception_while_copying_outputs_throws_correct_exception() { function test_failing_action_with_ioexception_while_copying_outputs_throws_correct_exception() { function test_read_non_hermetic_tmp { function test_read_hermetic_tmp { function test_read_hermetic_tmp_user_override { function test_write_non_hermetic_tmp { function test_write_hermetic_tmp { function test_write_hermetic_tmp_user_override { function test_sandbox_reuse_stashes_sandbox() { function test_sandbox_reuse_stashes_sandbox_with_changing_hermetic_tmp() { function test_sandbox_reuse_clean() {
function set_up() { function tear_down() { do_build() { function test_sandbox_base_wiped_only_on_startup_with_sync_deletions() { function test_sandbox_base_wiped_only_on_startup_with_async_deletions() { function do_succeed_when_executor_not_initialized_test() { function test_succeed_when_executor_not_initialized_with_defaults() { function test_succeed_when_executor_not_initialized_with_async_deletions() { function test_sandbox_base_can_be_rm_rfed() { do_build() { function test_sandbox_not_used_with_legacy_fallback() { function test_sandbox_local_not_used_without_legacy_fallback() { function test_sandbox_local_used_with_proper_strategy() { function test_sandbox_base_top_is_removed() { do_build() { function test_sandbox_old_contents_not_reused_in_consecutive_builds() { function test_sandbox_hardening_with_cgroups_v1() { function test_sandbox_hardening_with_cgroups_v2() { function test_sandboxed_genrule() { function test_sandboxed_genrule_with_tools() { function test_sandbox_relative_symlink_in_inputs() { function test_sandbox_undeclared_deps() { function test_sandbox_undeclared_deps_with_local() { function test_sandbox_undeclared_deps_with_local_tag() { function test_sandbox_undeclared_deps_with_local_tag_no_fallback() { function write_starlark_breaks1() { "action_tags": attr.string_list(), function test_sandbox_undeclared_deps_starlark() { function test_sandbox_undeclared_deps_starlark_with_local_tag() { function test_sandbox_cyclic_symlink_in_inputs() { function test_requires_root() { function test_sandbox_proc_self() { function test_succeeding_action_with_ioexception_while_copying_outputs_throws_correct_exception() { function test_failing_action_with_ioexception_while_copying_outputs_throws_correct_exception() { function test_sandbox_reuse_stashes_sandbox() { function test_sandbox_reuse_stashes_sandbox_with_changing_hermetic_tmp() { function test_sandbox_reuse_clean() {
for,3
echo "Waiting for Blaze to finish initializing all modules" for i in $(seq 5); do execution_requirements = { tag: '' for tag in ctx.attr.action_tags },
if,15
if ! grep -E '^cgroup +[^ ]+ +cgroup +.*memory.*' /proc/mounts; then if ! grep -E '^[0-9]*:[^:]*memory[^:]*:' /proc/self/cgroup &>/dev/null; then if [[ ! -w "$memdir" ]]; then if ! grep -E '^cgroup2 +[^ ]+ +cgroup2 ' /proc/mounts; then if ! grep -E '^0::' /proc/self/cgroup &>/dev/null; then if ! XDG_RUNTIME_DIR=/run/user/$( id -u ) systemd-run --user --scope true; then if [ $(wc -l $output_file) -gt 1 ]; then if [ $(wc -l $output_file) -gt 1 ]; then if [[ "$(uname -s)" != Linux ]]; then if [[ ! -d /proc/self ]]; then if [[ "$(head -n1 "bazel-genfiles/examples/genrule/check_proc_works.txt")" \ if [[ "$(uname -s)" != Linux ]]; then if [[ "$(uname -s)" != Linux ]]; then if [[ "$(uname -s)" != Linux ]]; then if [[ "$(uname -s)" != Linux ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/rc_options_test.sh
lines,104
function,3
function create_pkg() { function test_terminal_columns_honored() { function test_options_override() {
function create_pkg() { function test_terminal_columns_honored() { function test_options_override() {
for,1
run_suite "Integration tests for rc options handling"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/minimal_jdk_test.sh
lines,98
function,5
function test_size_less_than_370MB() { function test_cc() { function test_java() {
function test_size_less_than_370MB() { function test_cc() { int main() { function test_java() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$TEST_SRCDIR/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [ $size -gt $maxsize ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/aquery_test.sh
lines,1907
function,71
function has_iso_8859_1_locale() { function has_utf8_locale() { function assert_only_action_foo() { function assert_only_action_foo_textproto() { function test_basic_aquery() { function test_basic_aquery_text() { function test_basic_aquery_proto() { function test_basic_aquery_jsonproto() { function test_aquery_include_artifacts() { function test_aquery_starlark_env() { function test_aquery_aspect() { function test_aquery_all_filters_only_match_foo() { function test_aquery_inputs_filter_only_mach_foo() { function test_aquery_outputs_filter_only_mach_foo() { function test_aquery_mnemonic_filter_only_mach_foo() { function test_aquery_inputs_filter_exact_filename_only_mach_foo() { function test_aquery_outputs_filter_exact_filename_only_mach_foo() { function test_aquery_mnemonic_filter_exact_mnemonic_only_mach_foo() { function test_aquery_filters_non_aquery_enclosing_function_query_error() { function test_aquery_filters_chain_inputs_only_match_one() { function test_aquery_filters_chain_outputs_only_match_one() { function test_aquery_filters_chain_mnemonic_only_match_one() { function test_aquery_noinclude_artifacts() { function test_aquery_include_param_file_cc_binary() { function test_aquery_include_param_file_starlark_rule() { function test_aquery_include_param_files_tree_artifact_writes_unexpanded_dir() { function test_aquery_include_param_file_not_enabled_by_default() { function test_aquery_cpp_action_template_treeartifact_output() { function test_aquery_single_aspect() { function test_aquery_aspect_on_aspect() { function test_aquery_skyframe_state_no_filter_no_previous_build_empty() { function test_aquery_skyframe_state_wrong_syntax() { function test_aquery_skyframe_state_no_filter_with_previous_build() { function test_aquery_skyframe_state_with_filter_with_previous_build() { function test_aquery_textproto_skyframe_state() { function test_aquery_json_skyframe_state() { function test_aquery_json_skyframe_state_invalid_format() { function test_dump_skyframe_state_after_build_default_output() { function test_dump_skyframe_state_after_build_to_specified_file() { function test_dump_skyframe_state_after_build_invalid_format() { function test_summary_output() { function test_aquery_include_template_substitution_for_template_expand_of_py_binary() { function test_aquery_include_template_substitution_for_template_expand_action() { function test_aquery_multiple_expand_templates() { function test_starlark_action_with_reqs_has_deterministic_action_key() { function test_execution_info() { function test_unicode_text() { function test_file_write() { function test_file_write_is_executable() { function test_source_symlink_manifest() { function test_unresolved_symlinks() { function test_does_not_fail_horribly_with_file() { function test_cpp_compile_action_env() { function DISABLED_test_unicode_textproto() { function assert_matches() {
function has_iso_8859_1_locale() { function has_utf8_locale() { function assert_only_action_foo() { function assert_only_action_foo_textproto() { function test_basic_aquery() { function test_basic_aquery_text() { function test_basic_aquery_proto() { function test_basic_aquery_jsonproto() { function test_aquery_include_artifacts() { function test_aquery_starlark_env() { function test_aquery_aspect() { ins = depset(transitive = [src.files for src in ctx.rule.attr.srcs]).to_list() "deps": attr.label_list(), function test_aquery_all_filters_only_match_foo() { function test_aquery_inputs_filter_only_mach_foo() { function test_aquery_outputs_filter_only_mach_foo() { function test_aquery_mnemonic_filter_only_mach_foo() { function test_aquery_inputs_filter_exact_filename_only_mach_foo() { function test_aquery_outputs_filter_exact_filename_only_mach_foo() { function test_aquery_mnemonic_filter_exact_mnemonic_only_mach_foo() { function test_aquery_filters_non_aquery_enclosing_function_query_error() { function test_aquery_filters_chain_inputs_only_match_one() { function test_aquery_filters_chain_outputs_only_match_one() { function test_aquery_filters_chain_mnemonic_only_match_one() { function test_aquery_noinclude_artifacts() { function test_aquery_include_param_file_cc_binary() { function test_aquery_include_param_file_starlark_rule() { args = ctx.actions.args() function test_aquery_include_param_files_tree_artifact_writes_unexpanded_dir() { args = ctx.actions.args() function test_aquery_include_param_file_not_enabled_by_default() { function test_aquery_cpp_action_template_treeartifact_output() { function test_aquery_single_aspect() { inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], return struct() function test_aquery_aspect_on_aspect() { inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], return struct() inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], return [struct()] return struct() assert_contains "^.*->.*:rule.bzl%intermediate_aspect()\]$" output function test_aquery_skyframe_state_no_filter_no_previous_build_empty() { function test_aquery_skyframe_state_wrong_syntax() { function test_aquery_skyframe_state_no_filter_with_previous_build() { function test_aquery_skyframe_state_with_filter_with_previous_build() { function test_aquery_textproto_skyframe_state() { function test_aquery_json_skyframe_state() { function test_aquery_json_skyframe_state_invalid_format() { function test_dump_skyframe_state_after_build_default_output() { function test_dump_skyframe_state_after_build_to_specified_file() { function test_dump_skyframe_state_after_build_invalid_format() { function test_summary_output() { function test_aquery_include_template_substitution_for_template_expand_of_py_binary() { function test_aquery_include_template_substitution_for_template_expand_action() { function test_aquery_multiple_expand_templates() { function test_starlark_action_with_reqs_has_deterministic_action_key() { function test_execution_info() { function test_unicode_text() { function test_file_write() { function test_file_write_is_executable() { "path": attr.string(), function test_source_symlink_manifest() { function test_unresolved_symlinks() { "path": attr.string(), function test_does_not_fail_horribly_with_file() { function test_cpp_compile_action_env() { function DISABLED_test_unicode_textproto() { function assert_matches() {
for,7
ins = depset(transitive = [src.files for src in ctx.rule.attr.srcs]).to_list() all_dummies = depset([dummy], transitive = [dep[DummyProvider].dummies for dep in ctx.rule.attr.deps]) return struct(files = depset(transitive = [dep[DummyProvider].dummies for dep in ctx.attr.deps])) inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], inputs = [f for src in ctx.rule.attr.srcs for f in src.files.to_list()], execution_requirements = {"requires-" + str(i): "1" for i in range(100)},
if,13
if "$is_windows"; then if $is_windows; then if hasattr(ctx.rule.attr, 'srcs'): if (is_darwin || $is_windows); then if hasattr(ctx.rule.attr, 'srcs'): if hasattr(ctx.rule.attr, 'srcs'): if hasattr(ctx.rule.attr, 'srcs'): if ! "$is_windows"; then if ! has_iso_8859_1_locale && ! has_utf8_locale; then if which base64 >/dev/null; then if "$is_windows"; then if ! "$is_windows"; then if ! has_iso_8859_1_locale && ! has_utf8_locale; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/client_test.sh
lines,412
function,36
function test_client_debug() { function test_client_debug_change_does_not_restart_server() { function test_server_restart_due_to_startup_options() { function test_multiple_requests_same_server() { function test_no_server_restart_if_options_order_changes() { function test_server_restart_if_number_of_option_instances_increases() { function test_server_restart_if_number_of_option_instances_decreases() { function test_server_not_restarted_when_only_TMPDIR_changes() { function test_server_restarted_on_explicit_heap_dump_path_change() { function test_shutdown() { function test_shutdown_different_options() { function test_server_restart_due_to_startup_options_with_client_debug_information() { function test_exit_code() { function test_output_base() { function test_output_base_is_file() { function test_cannot_create_output_base() { function test_nonwritable_output_base() { function test_install_base_races_dont_leave_temp_files() { function test_no_arguments() { function test_local_startup_timeout() { function test_max_idle_secs() { function test_dashdash_before_command() { function test_dashdash_after_command() { function test_nobatch() { function test_bazel_dash_dash_help_is_passed_through() { function test_bazel_dash_help() { function test_bazel_dash_h() { function test_bazel_dash_s_is_not_parsed() { function test_batch() { function test_cmdline_not_written_in_batch_mode() { function test_bad_command_batch() { function test_bad_command_nobatch() { function get_pid_environment() { function test_proxy_settings() { function test_macos_qos_class() { function test_ignores_jdk_option_environment_variables() {
function test_client_debug() { function test_client_debug_change_does_not_restart_server() { function test_server_restart_due_to_startup_options() { function test_multiple_requests_same_server() { function test_no_server_restart_if_options_order_changes() { function test_server_restart_if_number_of_option_instances_increases() { function test_server_restart_if_number_of_option_instances_decreases() { function test_server_not_restarted_when_only_TMPDIR_changes() { function test_server_restarted_on_explicit_heap_dump_path_change() { function test_shutdown() { function test_shutdown_different_options() { function test_server_restart_due_to_startup_options_with_client_debug_information() { function test_exit_code() { function test_output_base() { function test_output_base_is_file() { function test_cannot_create_output_base() { function test_nonwritable_output_base() { function test_install_base_races_dont_leave_temp_files() { function test_no_arguments() { function test_local_startup_timeout() { function test_max_idle_secs() { function test_dashdash_before_command() { function test_dashdash_after_command() { function test_nobatch() { function test_bazel_dash_dash_help_is_passed_through() { function test_bazel_dash_help() { function test_bazel_dash_h() { function test_bazel_dash_s_is_not_parsed() { function test_batch() { function test_cmdline_not_written_in_batch_mode() { function test_bad_command_batch() { function test_bad_command_nobatch() { function get_pid_environment() { function test_proxy_settings() { function test_macos_qos_class() { function test_ignores_jdk_option_environment_variables() {
for,6
for i in {1..3}; do for pid in "${client_pids[@]}"; do for var in http{,s}_proxy HTTP{,S}_PROXY; do for var in no_proxy NO_PROXY; do for class in utility background; do for class in user-interactive user-initiated default ; do
if,2
if ! ps > /dev/null; then if get_pid_environment "${server_pid}" > "${TEST_TMPDIR}/server_env"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/prelude_test.sh
lines,107
function,2
function test_prelude() { function test_prelude_external_repository() {
function test_prelude() { function test_prelude_external_repository() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/info_test.sh
lines,101
function,6
function test_info() { function test_server_pid() { function test_used_heap_size_after_gc() { function test_starlark_semantics() { function test_multiple_keys() { function test_multiple_keys_wrong_keys() {
function test_info() { function test_server_pid() { function test_used_heap_size_after_gc() { function test_starlark_semantics() { function test_multiple_keys() { function test_multiple_keys_wrong_keys() {
for,1
run_suite "Integration tests for ${PRODUCT_NAME} info."
if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_worker_multiplexer_test.sh
lines,628
function,23
function set_up() { function prepare_example_worker() { function test_example_worker_multiplexer() { function test_multiple_flagfiles() { function test_workers_quit_after_build() { function DISABLED_test_build_fails_when_worker_exits() { function test_worker_restarts_when_worker_binary_changes() { function test_worker_restarts_when_worker_runfiles_change() { function test_build_fails_when_worker_returns_junk() { function test_input_digests() { function test_worker_verbose() { function test_logs_are_deleted_on_server_restart() { function test_missing_execution_requirements_fallback_to_standalone() { function test_environment_is_clean() { function test_workers_quit_on_clean() { function test_crashed_worker_causes_log_dump() { function DISABLED_test_multiple_target_without_delay() { function DISABLED_test_multiple_target_with_delay() { function test_multiplexer_files() { function test_sandboxed_multiplexer_files() { function test_sandboxed_multiplexer_files_fails_if_ignoring_sandbox() {
function set_up() { function prepare_example_worker() { "worker_args": attr.string_list(), "args": attr.string_list(), function test_example_worker_multiplexer() { function test_multiple_flagfiles() { function test_workers_quit_after_build() { function DISABLED_test_build_fails_when_worker_exits() { function test_worker_restarts_when_worker_binary_changes() { function test_worker_restarts_when_worker_runfiles_change() { function test_build_fails_when_worker_returns_junk() { function test_input_digests() { function test_worker_verbose() { function test_logs_are_deleted_on_server_restart() { function test_missing_execution_requirements_fallback_to_standalone() { function test_environment_is_clean() { function test_workers_quit_on_clean() { function test_crashed_worker_causes_log_dump() { function DISABLED_test_multiple_target_without_delay() { function DISABLED_test_multiple_target_with_delay() { function test_multiplexer_files() { function test_sandboxed_multiplexer_files() { function test_sandboxed_multiplexer_files_fails_if_ignoring_sandbox() {
for,10
for arg in ["--output_file=" + output.path] + ctx.attr.args: ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)]
if,2
if ctx.attr.multiflagfiles: flagfile_prefix = "@" if (idx % 2 == 0) else "--flagfile="
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/starlark_configurations_test.sh
lines,733
function,25
function set_up() { function write_build_setting_bzl() { function test_default_flag() { function test_set_flag() { function test_starlark_and_native_flag() { function test_dont_parse_flags_after_dash_dash() { function test_multiple_starlark_flags() { function test_flag_default_change() { function test_incremental_delete_build_setting() { function test_incremental_delete_build_setting_in_different_package() { function test_incremental_add_build_setting() { function test_incremental_change_build_setting() { function test_label_flag() { function test_output_same_config_as_generating_target() { function test_starlark_flag_change_causes_action_rerun() { function test_invalid_mnemonic_from_transition_top_level() { function test_rc_flag_alias_canonicalizes() { function test_rc_flag_alias_unsupported_under_test_command() { function test_rc_flag_alias_unsupported_under_conditional_build_command() { function test_rc_flag_alias_unsupported_with_space_assignment_syntax() { function test_rule_exec_transition_warning() {
function set_up() { function write_build_setting_bzl() { function test_default_flag() { function test_set_flag() { function test_starlark_and_native_flag() { function test_dont_parse_flags_after_dash_dash() { function test_multiple_starlark_flags() { function test_flag_default_change() { function test_incremental_delete_build_setting() { function test_incremental_delete_build_setting_in_different_package() { function test_incremental_add_build_setting() { function test_incremental_change_build_setting() { attrs = {"flag" : attr.label()} attrs = {"flag" : attr.label()} function test_label_flag() { "value":attr.string(), function test_output_same_config_as_generating_target() { function test_starlark_flag_change_causes_action_rerun() { function test_invalid_mnemonic_from_transition_top_level() { function test_rc_flag_alias_canonicalizes() { function test_rc_flag_alias_unsupported_under_test_command() { function test_rc_flag_alias_unsupported_under_conditional_build_command() { function test_rc_flag_alias_unsupported_with_space_assignment_syntax() { function test_rule_exec_transition_warning() { cfg = config.exec(),
for,1
expect_log "`cfg` must be set to a transition appropriate for a rule"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/python_stub_test.sh
lines,150
function,3
function test_python_version() { function test_can_build_py_library_at_top_level_regardless_of_version() { function test_python_through_bash_without_runfile_links() {
function test_python_version() { function test_can_build_py_library_at_top_level_regardless_of_version() { function test_python_through_bash_without_runfile_links() {
for,1
run_suite "Tests for the Python rules without Python execution"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/rule_transition_test.sh
lines,421
function,13
function set_up() { function create_transitions() { function create_rules_with_incoming_transition_and_selects() { function test_rule_transition_can_inspect_configure_attributes(){ function test_rule_transition_can_inspect_configure_attributes_with_flag(){ function test_rule_transition_can_not_inspect_configure_attribute() { function test_unresolvable_select_does_not_error_out_before_applying_rule_transition() { function test_unresolvable_select_error_out_after_applying_rule_transition() {
function set_up() { function create_transitions() { "deps": attr.label_list(), "deps": attr.label_list(), function create_rules_with_incoming_transition_and_selects() { function test_rule_transition_can_inspect_configure_attributes(){ function test_rule_transition_can_inspect_configure_attributes_with_flag(){ function test_rule_transition_can_not_inspect_configure_attribute() { "deps": attr.label_list(), function test_unresolvable_select_does_not_error_out_before_applying_rule_transition() { "cpu_name": attr.string(), function test_unresolvable_select_error_out_after_applying_rule_transition() { "cpu_name": attr.string(),
for,11
print("Flag value for %s: %s" % ( expect_log 'Flag value for transition_not_attached_dep: True' expect_log 'Flag value for transition_not_attached_dep_of_dep: False' expect_log 'Flag value for transition_attached_dep: False' expect_log 'Flag value for top_level: True' expect_log 'Flag value for transition_not_attached_dep: False' expect_log 'Flag value for transition_not_attached_dep_of_dep: False' expect_log 'Flag value for transition_attached_dep: False' expect_log 'Flag value for top_level: False' print("Flag value for %s: %s" % ( expect_log "No attribute 'apply_transition'. Either this attribute does not exist for this rule or the attribute was not resolved because it is set by a select that reads flags the transition may set."
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if getattr(attr, "apply_transition") and settings["//%s:transition_input_flag" % example_package]: if getattr(attr, "apply_transition") and settings["//%s:transition_input_flag" % example_package]:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_command_log_test.sh
lines,122
function,7
function tear_down() { function strip_lines_from_bazel_cc() { function strip_protobuf_unsafe_warning() { function test_batch_mode() { function test_batch_mode_with_logging_flag() { function test_client_server_mode() { function test_client_server_mode_with_logging_flag() {
function tear_down() { function strip_lines_from_bazel_cc() { function strip_protobuf_unsafe_warning() { function test_batch_mode() { function test_batch_mode_with_logging_flag() { function test_client_server_mode() { function test_client_server_mode_with_logging_flag() {
for,2
'/^WARNING: Waiting for server process to terminate (waited 5 seconds, waiting at most 60)$/d' \ || fail "grep for server_log path failed"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_query_test.sh
lines,1107
function,51
function set_up() { function tear_down() { function test_does_not_fail_horribly() { function test_invalid_query_fails_parsing() { function test_visibility_affects_xml_output() { function test_visibility_affects_proto_output() { function make_depth_tests() { function assert_depth_query_idempotence() { function test_depth_query_idempotence_ordered() { function test_depth_query_idempotence_unordered() { function test_universe_scope_with_without_star() { function test_outside_universe_ok() { function test_minrank_le_depth_bound() { function test_starlark_dep_in_sky_query() { function test_starlark_regular_file_not_included_in_rbuildfiles() { function test_starlark_symlink_source_not_included_in_rbuildfiles() { function test_starlark_symlink_target_not_included_in_rbuildfiles() { function test_starlark_glob_regular_file_not_included_in_rbuildfiles() { function test_starlark_glob_symlink_source_not_included_in_rbuildfiles() { function test_starlark_glob_symlink_target_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_regular_file_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_symlink_source_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_symlink_target_not_included_in_rbuildfiles() { function test_starlark_subdir_dep_in_sky_query() { function test_parent_independent_of_child() { function test_does_not_fail_horribly_with_file() { function test_location_output_not_allowed_with_buildfiles_or_loadfiles() { function test_location_output_relative_locations() { function test_location_output_source_files() { function test_proto_output_source_files() { function test_xml_output_source_files() { function test_subdirectory_named_external() { function test_buildfiles_with_build_bazel() { function test_buildfile_in_genquery() { function test_genquery_bad_output_formatter() { function test_graphless_genquery_somepath_output_in_dependency_order() { function test_graphless_query_matches_graphless_genquery_output() { function test_graphless_query_resilient_to_cycles() { function test_lexicographical_output_does_not_affect_order_output_no() { function test_lexicographical_output_does_not_affect_somepath() { function test_rbuildfiles_can_handle_non_loading_phase_edges() { function test_infer_universe_scope_considers_only_target_patterns() { function test_bogus_visibility() { function test_infer_universe_scope_defers_to_universe_scope_value() { function test_query_failure_exit_code_behavior() { function test_query_environment_keep_going_does_not_fail() { function test_unnecessary_external_workspaces_not_loaded() { function test_query_sees_aspect_hints_deps_on_starlark_rule() { function test_same_pkg_direct_rdeps_loads_only_inputs_packages() { function test_basic_query_streamed_jsonproto() {
function set_up() { function tear_down() { function test_does_not_fail_horribly() { function test_invalid_query_fails_parsing() { function test_visibility_affects_xml_output() { function test_visibility_affects_proto_output() { function make_depth_tests() { function assert_depth_query_idempotence() { function test_depth_query_idempotence_ordered() { function test_depth_query_idempotence_unordered() { function test_universe_scope_with_without_star() { function test_outside_universe_ok() { function test_minrank_le_depth_bound() { function test_starlark_dep_in_sky_query() { function test_starlark_regular_file_not_included_in_rbuildfiles() { function test_starlark_symlink_source_not_included_in_rbuildfiles() { function test_starlark_symlink_target_not_included_in_rbuildfiles() { function test_starlark_glob_regular_file_not_included_in_rbuildfiles() { function test_starlark_glob_symlink_source_not_included_in_rbuildfiles() { function test_starlark_glob_symlink_target_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_regular_file_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_symlink_source_not_included_in_rbuildfiles() { function test_starlark_recursive_glob_symlink_target_not_included_in_rbuildfiles() { function test_starlark_subdir_dep_in_sky_query() { function test_parent_independent_of_child() { function test_does_not_fail_horribly_with_file() { function test_location_output_not_allowed_with_buildfiles_or_loadfiles() { function test_location_output_relative_locations() { function test_location_output_source_files() { function test_proto_output_source_files() { function test_xml_output_source_files() { function test_subdirectory_named_external() { function test_buildfiles_with_build_bazel() { function test_buildfile_in_genquery() { function test_genquery_bad_output_formatter() { function test_graphless_genquery_somepath_output_in_dependency_order() { function test_graphless_query_matches_graphless_genquery_output() { function test_graphless_query_resilient_to_cycles() { function test_lexicographical_output_does_not_affect_order_output_no() { function test_lexicographical_output_does_not_affect_somepath() { function test_rbuildfiles_can_handle_non_loading_phase_edges() { function test_infer_universe_scope_considers_only_target_patterns() { function test_bogus_visibility() { function test_infer_universe_scope_defers_to_universe_scope_value() { function test_query_failure_exit_code_behavior() { function test_query_environment_keep_going_does_not_fail() { function test_unnecessary_external_workspaces_not_loaded() { function test_query_sees_aspect_hints_deps_on_starlark_rule() { "deps": attr.label_list(), function test_same_pkg_direct_rdeps_loads_only_inputs_packages() { function test_basic_query_streamed_jsonproto() {
for,7
for run in {1..5}; do for depth in {5..0}; do for rank in $(cut -d' ' -f 1 $TEST_log); do for query_string in 'buildfiles(//foo)' 'loadfiles(//foo)' for command in \ for incompatible in "--incompatible" "--noincompatible" for command in \
if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $order_results ; then if [ $run -gt 1 ]; then if $order_results ; then if [ "${PRODUCT_NAME}" != "bazel" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/test_test.sh
lines,450
function,19
function test_passing_test_is_reported_correctly() { function test_failing_test_is_reported_correctly() { function test_build_fail_terse_summary() { function test_process_spawned_by_test_doesnt_block_test_from_completing() { function test_test_suite_non_expansion() { function test_print_relative_test_log_paths() { function test_a_test_rule_with_input_from_stdin() { function run_bazel_and_interrupt() { function do_test_interrupt_streamed_output() { function test_interrupt_streamed_output_local() { function test_interrupt_streamed_output_sandboxed() { function do_sigint_test() { function test_sigint_not_graceful_by_default_local() { function test_sigint_not_graceful_by_default_sandboxed() { function do_test_sigint_with_graceful_termination() { function test_sigint_with_graceful_termination_local() { function test_sigint_with_graceful_termination_sandboxed() { function test_env_attribute() {
function test_passing_test_is_reported_correctly() { function test_failing_test_is_reported_correctly() { function test_build_fail_terse_summary() { function test_process_spawned_by_test_doesnt_block_test_from_completing() { new ProcessBuilder("sleep", "300").inheritIO().start(); function test_test_suite_non_expansion() { function test_print_relative_test_log_paths() { function test_a_test_rule_with_input_from_stdin() { expect_log "foo=()" function run_bazel_and_interrupt() { function do_test_interrupt_streamed_output() { function test_interrupt_streamed_output_local() { function test_interrupt_streamed_output_sandboxed() { function do_sigint_test() { function test_sigint_not_graceful_by_default_local() { function test_sigint_not_graceful_by_default_sandboxed() { function do_test_sigint_with_graceful_termination() { function test_sigint_with_graceful_termination_local() { function test_sigint_with_graceful_termination_sandboxed() { function test_env_attribute() {
for,7
echo 'Sending SIGINT to Bazel and waiting for completion' echo 'Ready for interrupt' for i in 1 2; do run_bazel_and_interrupt "Ready for interrupt" \ echo 'Ready for interrupt' for i in $(seq 10000); do run_bazel_and_interrupt "Ready for interrupt" \
if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ "${timeout}" -eq 0 ]]; then if wait "${bazel_pid}"; then if grep -q 'crash in async thread' "${jvm_out}"; then if [[ "$(uname -s)" == "Linux" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/aspect_test.sh
lines,1679
function,96
function test_cycle_under_command_line_aspect() { function test_aspect_on_target_with_analysis_failure() { function test_aspect_required_providers_with_toplevel_aspects() { function test_aspect_required_providers_default_no_required_providers() { function test_aspect_required_providers_flat_set_of_required_providers() { function test_aspect_required_providers_with_list_of_required_providers_lists() { function test_aspects_propagating_other_aspects() { function test_aspects_propagating_other_aspects_stack_of_required_aspects() { function test_aspect_has_access_to_aspect_hints_attribute_in_native_rules() { function test_aspect_has_access_to_aspect_hints_attribute_in_starlark_rules() { function setup_aspect_hints() { function create_aspect_hints_BUILD_file() { function create_aspect_hints_rule_and_aspect() { function create_aspect_hints_custom_rule() { function create_aspect_hints_cc_files() { function test_aspect_requires_aspect_no_providers_duplicates() { function test_aspect_requires_aspect_no_providers_duplicates_2() { function test_top_level_aspects_parameters() { function test_top_level_aspects_parameters_with_same_aspect_propagated_from_rule() { function test_top_level_aspects_parameters_invalid_multiple_param_values() { function test_int_top_level_aspects_parameters_invalid_value() { function test_aspect_runs_once_with_diff_order_in_base_aspects() { function test_aspect_on_target_with_exec_gp() { function test_aspect_on_aspect_with_exec_gp() { function test_aspect_on_aspect_with_missing_exec_gp() { function test_aspect_with_missing_attr() { function test_aspect_on_aspect_propagate_to_underlying_aspect_dep() { function test_aspect_reruns_on_target_with_changed_dep() {
function test_cycle_under_command_line_aspect() { return struct() function test_aspect_on_target_with_analysis_failure() { return struct() function test_aspect_required_providers_with_toplevel_aspects() { prov_a = provider() prov_b = provider() prov_c = provider() return [prov_a()] return [prov_b(), prov_c()] attrs = {'deps': attr.label_list()}, attrs = {'deps': attr.label_list()}, function test_aspect_required_providers_default_no_required_providers() { prov_a = provider() prov_b = provider() return [prov_a(), prov_b()] attrs = {'deps': attr.label_list()}, attrs = {'deps': attr.label_list()}, function test_aspect_required_providers_flat_set_of_required_providers() { prov_a = provider() prov_b = provider() return [prov_a()] return [prov_a(), prov_b()] attrs = {'deps': attr.label_list()}, attrs = {'deps': attr.label_list()}, attrs = {'deps': attr.label_list()}, function test_aspect_required_providers_with_list_of_required_providers_lists() { prov_a = provider() prov_b = provider() prov_c = provider() return [prov_a()] attrs = {'deps': attr.label_list()}, return [prov_c()] attrs = {'deps': attr.label_list()}, return [prov_a(), prov_b()] attrs = {'deps': attr.label_list()}, attrs = {'deps': attr.label_list()}, function test_aspects_propagating_other_aspects() { prov_a = provider() attrs = {'dep': attr.label()}) return [prov_a()] function test_aspects_propagating_other_aspects_stack_of_required_aspects() { echo "inline int x() { return 42; }" > "${package}/x.h" int a() { return x(); } function test_aspect_has_access_to_aspect_hints_attribute_in_native_rules() { function test_aspect_has_access_to_aspect_hints_attribute_in_starlark_rules() { function setup_aspect_hints() { function create_aspect_hints_BUILD_file() { function create_aspect_hints_rule_and_aspect() { function create_aspect_hints_custom_rule() { CustomInfo = provider() return [CustomInfo()] "deps": attr.label_list(), function create_aspect_hints_cc_files() { int callFourtyTwo() { return fourtyTwo(); inline int fourtyTwo() { function test_aspect_requires_aspect_no_providers_duplicates() { prov_a = provider() prov_b = provider() function test_aspect_requires_aspect_no_providers_duplicates_2() { prov_a = provider() prov_b = provider() 'dep_2': attr.label(), function test_top_level_aspects_parameters() { attrs = { 'dep' : attr.label() }, function test_top_level_aspects_parameters_with_same_aspect_propagated_from_rule() { 'p': attr.string()}, function test_top_level_aspects_parameters_invalid_multiple_param_values() { 'p': attr.string()}, function test_int_top_level_aspects_parameters_invalid_value() { attrs = { 'p' : attr.int() }, attrs = { 'p' : attr.string() }, attrs = { 'dep' : attr.label() }, function test_aspect_runs_once_with_diff_order_in_base_aspects() { 'p' : attr.int(), 'p' : attr.int(), function test_aspect_on_target_with_exec_gp() { exec_groups = {"exec_gp": exec_group()}, function test_aspect_on_aspect_with_exec_gp() { prov_b = provider() return [prov_b()] exec_groups = {"exec_gp": exec_group()}, function test_aspect_on_aspect_with_missing_exec_gp() { prov_b = provider() return [prov_b()] function test_aspect_with_missing_attr() { return [DefaultInfo()] function test_aspect_on_aspect_propagate_to_underlying_aspect_dep() { prov_a = provider() prov_b = provider() 'dep' : attr.label(), function test_aspect_reruns_on_target_with_changed_dep() { prov = provider() 'dep' : attr.label(), 'param' : attr.string(),
for,6
for hint in ctx.rule.attr.aspect_hints: for dep in ctx.rule.attr.deps: for dep in ctx.attr.deps: expect_log "//test:defs.bzl%aspect_a: expected value of type 'int' for attribute 'p' but got 'val'" expect_log "Attr '\$tool' declares a transition for non-existent exec group 'exec_gp'" run_suite "Tests for aspects"
if,14
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if HintInfo in hint: if HintsCntInfo in dep: if HintsCntInfo in dep: if prov_b in target: if hasattr(ctx.rule.attr, '_tool') and ctx.rule.attr._tool[prov_a]: if hasattr(ctx.rule.attr, 'dep') and ctx.rule.attr.dep and ctx.rule.attr.dep[prov_a]: if hasattr(ctx.rule.attr, 'dep') and ctx.rule.attr.dep and ctx.rule.attr.dep[prov]:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/unicode_test.sh
lines,95
function,5
function set_up { function test_unicode_genrule_cmd { function test_unicode_action_run_argument { function test_unicode_action_write_content { function test_unicode_action_run_param_file {

for,1
run_suite "Integration tests for ${PRODUCT_NAME}'s unicode i/o in actions"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/java_integration_test.sh
lines,890
function,43
function setup_local_jdk() { function write_hello_world_files() { function write_hello_world_files_for_singlejar() { function write_hello_library_files() { function write_hello_sailor_files() { function test_compiles_hello_world() { function test_compiles_hello_world_from_deploy_jar() { function test_explicit_bogus_wrapper_args_are_rejected() { function assert_singlejar_works() { function test_singlejar_with_default_jdk_with_stamp() { function test_singlejar_with_default_jdk_without_stamp() { function test_singlejar_with_custom_jdk_with_stamp() { function test_singlejar_with_custom_jdk_without_stamp() { function test_deterministic_nostamp_build() { function test_compiles_hello_library() { function test_compiles_hello_library_using_ijars() { function test_compiles_hello_library_from_deploy_jar() { function test_building_deploy_jar_twice_does_not_rebuild() { function test_does_not_create_executable_when_not_asked_for() { function test_building_deploy_jar_dependent_on_deploy_jar() { function test_wrapper_script_arg_handling() { function test_srcjar_compilation() { function test_private_initializers() { function test_java_plugin() { function test_jvm_flags_are_passed_verbatim() { function test_classpath_fiddling() { function test_java7() { function test_header_compilation() { function test_header_compilation_errors() { function test_java_import_with_empty_jars_attribute() { function test_arg_compile_action() {
function setup_local_jdk() { function write_hello_world_files() { function write_hello_world_files_for_singlejar() { for (Object key : p.keySet()) { Properties properties = new Properties(); function write_hello_library_files() { HelloLibrary.funcHelloLibrary(); public static void funcHelloLibrary() { function write_hello_sailor_files() { function test_compiles_hello_world() { function check_deploy_jar_should_not_exist() { function check_arglists() { function test_compiles_hello_world_from_deploy_jar() { function test_explicit_bogus_wrapper_args_are_rejected() { function check_arg_rejected() { function check_arglists() { function assert_singlejar_works() { function test_singlejar_with_default_jdk_with_stamp() { function test_singlejar_with_default_jdk_without_stamp() { function test_singlejar_with_custom_jdk_with_stamp() { function test_singlejar_with_custom_jdk_without_stamp() { function test_deterministic_nostamp_build() { function test_compiles_hello_library() { function test_compiles_hello_library_using_ijars() { function test_compiles_hello_library_from_deploy_jar() { function test_building_deploy_jar_twice_does_not_rebuild() { function test_does_not_create_executable_when_not_asked_for() { function test_building_deploy_jar_dependent_on_deploy_jar() { function test_wrapper_script_arg_handling() { System.out.println(); function test_srcjar_compilation() { function test_private_initializers() { function test_java_plugin() { public SourceVersion getSupportedSourceVersion() { return SourceVersion.latestSupported(); Filer filer = mainEnvironment.getFiler(); Writer writer = output.openWriter(); writer.close(); @TestAnnotation() function test_jvm_flags_are_passed_verbatim() { function test_classpath_fiddling() { if (!new java.io.File(jar).exists()) { function check_classpath_invocations() { function test_java7() { ArrayList<Object> list = new ArrayList<>(); // In Java 7 language only function test_header_compilation() { function test_header_compilation_errors() { function test_java_import_with_empty_jars_attribute() { function test_arg_compile_action() {
for,9
for (Object key : p.keySet()) { for (String arg : args) { System.err.println("Value for key '" + keyValue[0] + "' is '" + value for (String arg : args) { for flag in \ for (String jar : jars) { throw new Error("No match for regex: " + jarRegex); for prog in "$PROG" "./$PROG" "$PWD/$PROG"; do javac_actions = [a for a in target.actions if a.mnemonic == "Javac"]
if,11
if (value == null) { if (keyValue.length > 1 && !keyValue[1].equals(value)) { if "$copy_jdk"; then if [[ ! -e ${PRODUCT_NAME}-bin/$pkg/java/hellosailor/hellosailor.jar ]]; then if [[ -e ${PRODUCT_NAME}-bin/$pkg/java/hellosailor/hellosailor ]]; then if [[ ! -e ${PRODUCT_NAME}-bin/$pkg/java/hellosailor/hellosailor_deploy.jar ]]; then if (jars.length != 2 && !singlejar) { if (!jar.matches(jarRegex)) { if (!new java.io.File(jar).exists()) { javac_actions = [a for a in target.actions if a.mnemonic == "Javac"] if len(javac_actions) != 1:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_javabase_test.sh
lines,86
function,2
function test_use_depot_javabase() { function test_fallback_depot_javabase() {
function test_use_depot_javabase() { function test_fallback_depot_javabase() {
for,0

if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then if ! bazel --batch --server_javabase=$path version >& $TEST_log; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/progress_reporting_test.sh
lines,382
function,7
function wait_for_command() { function test_respects_progress_interval() { function test_action_counters_dont_account_for_actions_without_progress_msg() { function test_counts_cached_actions_as_completed_ones() { function test_failed_actions_with_keep_going() { function test_seemingly_too_many_total_actions_due_to_change_pruning() { function test_counts_exclusive_tests_in_total_work() {
function wait_for_command() { function test_respects_progress_interval() { function test_action_counters_dont_account_for_actions_without_progress_msg() { function test_counts_cached_actions_as_completed_ones() { function test_failed_actions_with_keep_going() { function test_seemingly_too_many_total_actions_due_to_change_pruning() { function test_counts_exclusive_tests_in_total_work() {
for,7
for i in $(seq 1 $wait_time); do expect_log "PROGRESS.*: . .. Still waiting for 1 job to complete:" ) for i in [2, 3, 4, 5, 6, 7]] expect_log "\[3 / 4\] Still waiting for 1 job to complete:" ) for i in [2, 3, 4, 5, 6, 7]] ) for i in [1, 2, 3]] run_suite "Tests for execution phase progress reporting"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/jvm_flags_escaping_test.sh
lines,292
function,8
function create_java_file_that_prints_jvm_args() { function create_build_file_for_untokenizable_flag() { function create_build_file_with_many_jvm_flags() { function assert_output_of_the_program_with_many_jvm_flags() { function expect_program_runs() { function expect_program_cannot_run() { function test_jvm_flags_escaping() { function test_untokenizable_jvm_flag_when_escaping_is_enabled() {
function create_java_file_that_prints_jvm_args() { function create_build_file_for_untokenizable_flag() { function create_build_file_with_many_jvm_flags() { function assert_output_of_the_program_with_many_jvm_flags() { expect_log 'arg0=()' function expect_program_runs() { function expect_program_cannot_run() { function test_jvm_flags_escaping() { function test_untokenizable_jvm_flag_when_escaping_is_enabled() {
for,1
for (int i = 0; ; ++i) {
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if (value == null) { if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/java_integration_test_utils.sh
lines,43
function,1
function create_java_test_platforms() {
function create_java_test_platforms() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/execution_strategies_test.sh
lines,236
function,8
function test_multiple_strategies() { function test_no_worker_defaults() { function test_empty_strategy_in_list_is_forbidden() { function test_empty_strategy_means_default() { function build_and_interrupt() { function test_local_deletes_plain_outputs_on_interrupt() { function test_local_deletes_tree_artifacts_on_interrupt() { function test_ignore_local_failures() {
function test_multiple_strategies() { function test_no_worker_defaults() { function test_empty_strategy_in_list_is_forbidden() { function test_empty_strategy_means_default() { function build_and_interrupt() { function test_local_deletes_plain_outputs_on_interrupt() { function test_local_deletes_tree_artifacts_on_interrupt() { function test_ignore_local_failures() {
for,2
echo "Still waiting for action to create outputs" >>$TEST_log run_suite "Tests for the execution strategy selection."
if,14
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if [[ -d "${dir}" ]]; then if [[ -f "${file}" ]]; then if "$is_windows"; then if [[ -f "${file}" ]]; then if "$is_windows"; then "if pwd | grep sandbox ; then "
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bash_runfiles_v1_test.sh
lines,44
function,0


for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_java_test.sh
lines,356
function,10
function test_server_javabase() { function test_java_runtime() { function test_toolchain_java_runtime_set_from_toolchain() { function test_exec_toolchain_java_runtime_not_set_from_tool_java_runtime_version() { function test_javabase() { function write_javabase_files() { function test_no_javabase() { function test_no_javabase() { function test_no_java_home_path() { function test_genrule() {
function test_server_javabase() { function test_java_runtime() { function test_toolchain_java_runtime_set_from_toolchain() { function test_exec_toolchain_java_runtime_not_set_from_tool_java_runtime_version() { function test_javabase() { function write_javabase_files() { function test_no_javabase() { function test_no_javabase() { function test_no_java_home_path() { function test_genrule() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/stamping_test.sh
lines,81
function,2
function set_up() { function test_source_date_epoch() {
function set_up() { function test_source_date_epoch() {
for,1
run_suite "Tests for genrule stamping"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/modify_execution_info_test.sh
lines,325
function,9
function set_up() { function tear_down() { function test_aquery_respects_modify_execution_info_changes { function test_modify_execution_info_multiple { function test_modify_execution_info_various_types() { function test_modify_execution_info_deterministic_order() { function test_modify_execution_info_changes_test_runner_cache_key() {
function try_with_timeout() { $* ; } function set_up() { function tear_down() { function test_modify_execution_info_various_types() { rules_proto_dependencies() rules_proto_toolchains() function test_modify_execution_info_deterministic_order() { function test_modify_execution_info_changes_test_runner_cache_key() {
for,0

if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then if [[ "$PRODUCT_NAME" = "bazel" ]]; then if [[ "$PRODUCT_NAME" != "bazel" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/execution_statistics_utils.sh
lines,65
function,1
function assert_execution_time_in_range() {
function assert_execution_time_in_range() {
for,0

if,6
if ! [[ -e "${stats_out_path}" ]]; then if ! [[ -e "${stats_out_decoded_path}" ]]; then if grep -q utime_sec "${stats_out_decoded_path}"; then if grep -q stime_sec "${stats_out_decoded_path}"; then if ! [[ ${utime} -ge ${utime_low} && ${utime} -le ${utime_high} ]]; then if ! [[ ${stime} -ge ${stime_low} && ${stime} -le ${stime_high} ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/nonincremental_builds_test.sh
lines,169
function,6
function tear_down() { function create_minimal_target() { function test_build_is_incremental_with_keep_state() { function test_build_is_nonincremental_with_nokeep_state() { function test_inmemory_state_present_after_build() { function test_inmemory_state_absent_after_build_with_nokeep_state() {
function try_with_timeout() { $* ; } function tear_down() { function create_minimal_target() { function test_build_is_incremental_with_keep_state() { function test_build_is_nonincremental_with_nokeep_state() { function test_inmemory_state_present_after_build() { function test_inmemory_state_absent_after_build_with_nokeep_state() {
for,1
run_suite "test for --keep_state_after_build"
if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if [[ $javabase = external/* ]]; then if ! type try_with_timeout >&/dev/null; then if grep -sq -- 'GenRuleAction$' histo.txt; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/process-wrapper_test.sh
lines,272
function,20
function set_up() { function assert_stdout() { function assert_output() { function test_basic_functionality() { function test_to_stderr() { function test_exit_code() { function test_signal_death() { function test_signal_catcher() { function test_basic_timeout() { function test_timeout_grace() { function test_timeout_exits_as_soon_as_process_terminates() { function test_timeout_kill() { function test_sigterm_grace() { function test_sigterm_exits_as_soon_as_process_terminates() { function test_sigterm_kill() { function test_execvp_error_message() { function assert_process_wrapper_exec_time() { function test_stats_high_user_time() { function test_stats_high_system_time() { function test_stats_high_user_time_and_high_system_time() {
function set_up() { function assert_stdout() { function assert_output() { function test_basic_functionality() { function test_to_stderr() { function test_exit_code() { function test_signal_death() { function test_signal_catcher() { function test_basic_timeout() { function test_timeout_grace() { function test_timeout_exits_as_soon_as_process_terminates() { function test_timeout_kill() { function test_sigterm_grace() { function test_sigterm_exits_as_soon_as_process_terminates() { function test_sigterm_kill() { function test_execvp_error_message() { function assert_process_wrapper_exec_time() { function test_stats_high_user_time() { function test_stats_high_system_time() { function test_stats_high_user_time_and_high_system_time() {
for,4
for i in $(seq 5); do sleep 1; done; echo after' \ for i in $(seq 5); do echo sleeping $i; sleep 1; done' \ for i in $(seq 5); do sleep 1; done; echo after' \ for i in $(seq 5); do echo sleeping $i; sleep 1; done' \
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/implicit_dependency_reporting_test.sh
lines,106
function,1

test_custom_message() {
for,3
arguments = [f.path for f in ctx.files._data] + [out.path], progress_message = "Copying implicit data dependency for %s" % ctx.label run_suite "Integration tests for reporting missing implicit dependencies"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/target_compatible_with_test_external_repo.sh
lines,242
function,6
function set_up() { function tear_down() { function test_failure_on_incompatible_top_level_target_in_external_repo() { function test_repository_defines_target_compatible_with() {
function set_up() { function tear_down() { function test_failure_on_incompatible_top_level_target_in_external_repo() { int main() { function test_repository_defines_target_compatible_with() { "target_compatible_with": attr.label_list(),
for,0

if,1
if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/action_aspect_test.sh
lines,457
function,19
function test_directory_args_inspection() { function test_directory_args_inspection_param_file() { function test_starlark_action_with_shadowed_action_not_rerun_after_shutdown() { function test_starlark_action_rerun_after_shadowed_action_inputs_change() { function create_starlark_action_with_shadowed_action_cache_test_files() { function test_aspect_requires_aspect_no_action_conflict() {
function test_directory_args_inspection() { digest_args = ctx.actions.args() function test_directory_args_inspection_param_file() { digest_args = ctx.actions.args() function test_starlark_action_with_shadowed_action_not_rerun_after_shutdown() { function test_starlark_action_rerun_after_shadowed_action_inputs_change() { echo "inline int x() { return 0; }" > "${package}/x.h" function create_starlark_action_with_shadowed_action_cache_test_files() { echo "inline int x() { return 42; }" > "${package}/x.h" int a() { return x(); } function test_aspect_requires_aspect_no_action_conflict() { args = ctx.actions.args() f.path.split('/')[-1] for f in target[OutputGroupInfo].aspect_b_out.to_list()]) files = target[OutputGroupInfo].aspect_b_out.to_list() files += ctx.attr.dep_1[OutputGroupInfo].rule_2_out.to_list() files += ctx.attr.dep_2[OutputGroupInfo].aspect_a_out.to_list() 'dep_1': attr.label(), f.path.split('/')[-1] for f in ctx.attr.dep[OutputGroupInfo].aspect_b_out.to_list()]) files += ctx.attr.dep[OutputGroupInfo].aspect_b_out.to_list()
for,3
for action in target.actions: f.path.split('/')[-1] for f in target[OutputGroupInfo].aspect_b_out.to_list()]) f.path.split('/')[-1] for f in ctx.attr.dep[OutputGroupInfo].aspect_b_out.to_list()])
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if action.mnemonic == "CppCompile": if not compile_action: if ctx.attr.dep_1: if ctx.attr.dep_2: if ctx.attr.dep:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/action_env_test.sh
lines,496
function,25
function set_up() { function test_simple() { function test_simple_latest_wins() { function test_client_env() { function test_redo_action() { function test_latest_wins_arg() { function test_latest_wins_env() { function test_env_freezing() { function test_use_default_shell_env { function test_use_default_shell_env_and_fixed_env { function test_action_env_changes_honored { function test_host_env_using_tools_simple() { function test_host_env_using_tools_latest_wins() { function test_client_env_using_tools() { function test_redo_host_env_using_tools() { function test_latest_wins_arg_using_tools() { function test_latest_wins_env_using_tools() { function test_host_env_using_tools_simple() { function test_host_env_using_tools_latest_wins() { function test_client_env_using_tools() { function test_redo_host_env_using_tools() { function test_latest_wins_arg_using_tools() { function test_latest_wins_env_using_tools() { function test_host_env_using_successive_tools_simple() {
function set_up() { "fixed_env": attr.string_dict(), function test_simple() { function test_simple_latest_wins() { function test_client_env() { function test_redo_action() { function test_latest_wins_arg() { function test_latest_wins_env() { function test_env_freezing() { function test_host_env_using_tools_simple() { function test_host_env_using_tools_latest_wins() { function test_client_env_using_tools() { function test_redo_host_env_using_tools() { function test_latest_wins_arg_using_tools() { function test_latest_wins_env_using_tools() { function test_host_env_using_tools_simple() { function test_host_env_using_tools_latest_wins() { function test_client_env_using_tools() { function test_redo_host_env_using_tools() { function test_latest_wins_arg_using_tools() { function test_latest_wins_env_using_tools() { function test_host_env_using_successive_tools_simple() {
for,5
|| fail "expected to pass with correct value for FOO" && fail "expected to fail with incorrect value for FOO") || true || fail "expected to pass with correct value for FOO from the environment" && fail "expected to fail with incorrect value for FOO from the environment") || true run_suite "Tests for bazel's handling of environment variables in actions"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/nestedset_as_skykey_test.sh
lines,223
function,8
function set_up() { function test_dirty_file() { function test_missing_file() { function test_incremental_err_reporting() {
function try_with_timeout() { $* ; } function set_up() { output.write(input.read()) "deps": attr.label_list(), srcs_list = trans_srcs.to_list() "deps": attr.label_list(), function test_dirty_file() { function test_missing_file() { function test_incremental_err_reporting() {
for,3
for path in sys.argv[2:]: transitive = [dep[FooFiles].transitive_sources for dep in deps]) arguments = [out.path] + [src.path for src in srcs_list],
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then if __name__ == "__main__":
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/starlark_dependency_pruning_test.sh
lines,326
function,12
function set_up() { function tear_down() { function check_unused_content() { function check_output_content() { function test_dependency_pruning_scenario() { function test_unused_shutdown() { function test_used_shutdown() { function test_invalid_unused() { function test_missing_unused_inputs_list() {
function set_up() { for input in inputs.to_list(): "inputs": attr.label(), "out": attr.output(), function tear_down() { function check_unused_content() { function check_output_content() { function test_dependency_pruning_scenario() { function test_unused_shutdown() { function test_used_shutdown() { function test_invalid_unused() { function test_missing_unused_inputs_list() {
for,3
for input in inputs.to_list(): for input in "$@"; do for input in "$@"; do
if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if grep -q "invalidUnused" "${input}"; then if [[ ! -z "${unused}" ]]; then elif grep -q "unused" "${input}"; then if [[ ! -z "${unused}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/config_stripped_outputs_lib.sh
lines,67
function,1
function assert_paths_stripped() {
function assert_paths_stripped() {
for,3
for o in $(echo $cmd | xargs -d' ' -n 1 | egrep -o "${bazel_out}[^)]*"); do for o in $(echo $cmd | xargs -d' ' -n 1 | egrep -o "${bazel_out}[^)]*.params"); do for k in $(grep "${bazel_out}" $local_path); do
if,2
if [[ "$o" == *"$identifying_action_output"* ]]; then if [[ "$k" == *"$identifying_action_output"* ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/config_stripped_outputs_test.sh
lines,205
function,9
function is_bazel() { function test_builtin_java_support() { function write_java_classpath_reduction_files() { function test_inmemory_jdeps_support() {
function is_bazel() { function test_builtin_java_support() { public static void runMyLib() { MyLib.runMyLib(); function write_java_classpath_reduction_files() { public void f(B b) { b.getC().getD(); } public C getC() { return null; } public D getD() { return null; } function test_inmemory_jdeps_support() {
for,1
run_suite "Tests stripping config prefixes from output paths for better action caching"
if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [ $bazel_out == "bazel-out" ]; then if is_bazel; then return; fi if is_bazel; then return; fi
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/client_sigint_test.sh
lines,88
function,5
function runbazel() { function tear_down() { function assert_sigint_stops_build() { function test_sigint_server_mode() { function test_sigint_batch_mode() {
function runbazel() { function tear_down() { function assert_sigint_stops_build() { function test_sigint_server_mode() { function test_sigint_batch_mode() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_worker_test.sh
lines,815
function,33
function set_up() { function tear_down() { function write_hello_library_files() { function test_compiles_hello_library_using_persistent_javac() { function test_compiles_hello_library_using_persistent_javac_sibling_layout() { function prepare_example_worker() { function test_example_worker() { function test_worker_requests() { function test_missing_worker_directory() { function test_shared_worker() { function test_multiple_flagfiles() { function test_workers_quit_after_build() { function DISABLED_test_build_succeeds_even_if_worker_exits() { function test_build_fails_if_worker_dies_during_action() { function test_worker_restarts_when_worker_binary_changes() { function test_worker_restarts_when_worker_runfiles_change() { function test_build_fails_when_worker_returns_junk() { function test_input_digests() { function test_worker_verbose() { function test_logs_are_deleted_on_server_restart() { function test_requires_worker_protocol_missing_defaults_to_proto { function test_missing_execution_requirements_fallback_to_standalone() { function test_environment_is_clean() { function test_workers_quit_on_clean() { function test_crashed_worker_causes_log_dump() { function test_worker_memory_limit() { function test_total_worker_memory_limit_log_starting() { function test_worker_metrics_collection() {
function set_up() { function tear_down() { function write_hello_library_files() { HelloLibrary.funcHelloLibrary(); public static void funcHelloLibrary() { function test_compiles_hello_library_using_persistent_javac() { function test_compiles_hello_library_using_persistent_javac_sibling_layout() { function prepare_example_worker() { "worker_args": attr.string_list(), "worker_key_mnemonic": attr.string(), "args": attr.string_list(), function test_example_worker() { function test_worker_requests() { function test_missing_worker_directory() { function test_shared_worker() { function test_multiple_flagfiles() { function test_workers_quit_after_build() { function DISABLED_test_build_succeeds_even_if_worker_exits() { function test_build_fails_if_worker_dies_during_action() { function test_worker_restarts_when_worker_binary_changes() { function test_worker_restarts_when_worker_runfiles_change() { function test_build_fails_when_worker_returns_junk() { function test_input_digests() { function test_worker_verbose() { function test_logs_are_deleted_on_server_restart() { function test_missing_execution_requirements_fallback_to_standalone() { function test_environment_is_clean() { function test_workers_quit_on_clean() { function test_crashed_worker_causes_log_dump() { function test_worker_memory_limit() { function test_total_worker_memory_limit_log_starting() { function test_worker_metrics_collection() {
for,13
for arg in ["--output_file=" + output.path] + ctx.attr.args: ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)] ) for idx in range(10)]
if,4
if ctx.attr.multiflagfiles: flagfile_prefix = "@" if (idx % 2 == 0) else "--flagfile=" if ctx.attr.worker_key_mnemonic: if bazel info bazel-bin >/dev/null 2>&1; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/analysis_test_test.sh
lines,260
function,8
function test_passing_test() { function test_failing_test() { function test_failing_test_shell_escape_in_message() { function test_failing_test_cmd_escape_in_message() { function test_failing_test_eof_string_in_message() { function test_expected_failure_test() {
function test_passing_test() { function test_failing_test() { function test_failing_test_shell_escape_in_message() { function test_failing_test_cmd_escape_in_message() { function test_failing_test_eof_string_in_message() { function test_expected_failure_test() { dep_failure.causes.to_list()[0].message) f = "foo".method_doesnt_exist()
for,0

if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if AnalysisFailureInfo in ctx.attr.target_under_test[0]:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/runfiles_test.sh
lines,514
function,11
function create_pkg() { function recursive_path_info() { function test_hidden() { function test_foo_runfiles() { function test_workspace_name_change() { function test_fail_on_middleman_in_transitive_runfiles_for_executable() { function test_manifest_action_reruns_on_output_base_change() { function test_removal_of_old_tempfiles() {
function create_pkg() { function recursive_path_info() { function test_hidden() { function test_foo_runfiles() { function test_workspace_name_change() { int main() { return 0; } function test_fail_on_middleman_in_transitive_runfiles_for_executable() { attrs = {"bin" : attr.label()}, int main() { return 0; } function test_manifest_action_reruns_on_output_base_change() { function test_removal_of_old_tempfiles() {
for,4
for path in $(find "$1" | sort); do for i in $(find ${WORKSPACE_NAME} \! -type d); do for i in $(find ${WORKSPACE_NAME} \! -type d); do for d in $(ls -a | grep -v '^test$' | grep -v '^\.*$'); do
if,24
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ -L "$path" ]]; then if [[ -f "$path" ]]; then elif [[ -d "$path" ]]; then if "$is_windows"; then if [[ -z "$target" ]]; then if "$is_windows"; then if [[ "$PRODUCT_NAME" == "bazel" ]]; then if "$is_windows"; then if "$is_windows"; then if [[ "$PRODUCT_NAME" == "bazel" ]]; then if [[ "$PRODUCT_NAME" == "bazel" ]]; then if [[ -z "$target" ]]; then if "$is_windows"; then if [[ "$PRODUCT_NAME" == "bazel" ]]; then if "$is_windows"; then if $is_windows; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/py_args_escaping_test.sh
lines,323
function,8
function create_py_file_that_prints_args() { function create_build_file_for_untokenizable_args() { function create_build_file_with_many_args() { function assert_good_output_of_the_program_with_many_args() { function test_args_escaping() { function test_untokenizable_args() { function test_host_config() {
function create_py_file_that_prints_args() { function create_build_file_for_untokenizable_args() { function create_build_file_with_many_args() { function assert_good_output_of_the_program_with_many_args() { expect_log 'arg1=()' function test_args_escaping() { function test_untokenizable_args() { function test_host_config() { "out": attr.output(), expect_log 'arg3=()'
for,2
for i in range(1, len(sys.argv)): for i in range(2, len(sys.argv)):
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/starlark_configurations_external_workspaces_test.sh
lines,249
function,3
function write_build_setting_bzl() { function test_set_flag_with_workspace_name() { function test_reference_inner_repository_flags() {
function write_build_setting_bzl() { function test_set_flag_with_workspace_name() { function test_reference_inner_repository_flags() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/discard_graph_edges_lib.sh
lines,29
function,1
function extract_histogram_count() {
function extract_histogram_count() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/starlark_flag_test.sh
lines,261
function,8
function test_build_file() { function test_bzl_file_and_macro() { function test_rule() { function test_aspect() { function test_nested_set_depth() {
function test_build_file() { function test_bzl_file_and_macro() { macro() def macro(): function test_rule() { function test_aspect() { function test_nested_set_depth() { x_list = x.to_list()
for,1
for i in range(1, 1000):
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/python_test.sh
lines,156
function,4
function test_python_binary_empty_files_in_runfiles_are_regular_files() { function test_building_transitive_py_binary_runfiles_trees() {
function test_python_binary_empty_files_in_runfiles_are_regular_files() { print("This is my working directory: %s" % os.getcwd()) print("This is my new working directory: %s" % os.getcwd()) function test_building_transitive_py_binary_runfiles_trees() {
for,1
run_suite "Tests for the Python rules"
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if not os.path.exists(file_to_check): if not os.path.isfile(realpath):
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/loading_phase_posix_test.sh
lines,150
function,8
function set_up() { function tear_down() { function test_glob_control_chars() { function test_glob_utf8() { function run_test_glob_with_io_error() { function test_glob_with_io_error_nokeep_going() { function test_glob_with_io_error_keep_going() { function test_build_file_symlinks() {
function set_up() { function tear_down() { function test_glob_control_chars() { function test_glob_utf8() { function run_test_glob_with_io_error() { function test_glob_with_io_error_nokeep_going() { function test_glob_with_io_error_keep_going() { function test_build_file_symlinks() {
for,2
for char in {1..31} 127; do perl -CS -e 'for $i (160..0xd7ff) {print chr $i, $i%20?"":"\n"}' | xargs touch || true
if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/linux-sandbox_test.sh
lines,490
function,36
function set_up { function test_basic_functionality() { function test_execvp_error_message_contains_path() { function test_default_user_is_current_user() { function test_user_switched_to_root() { function test_user_switched_to_nobody() { function test_exit_code() { function test_signal_death() { function test_signal_catcher() { function test_basic_timeout() { function test_timeout_exceeded_with_large_kill_delay() { function test_timeout_and_kill_delay_exceeded() { function test_sigint_sends_sigterm() { function test_debug_logging() { function test_debug_logging_does_not_pollute_stdout_nor_stderr() { function test_debug_logging_does_not_leak_descriptor() { function test_mount_additional_paths_success() { function test_mount_additional_paths_relative_path() { function test_mount_additional_paths_leading_m() { function test_mount_additional_paths_m_not_preceeded_by_M() { function test_mount_additional_paths_other_flag_between_M_m_pair() { function test_mount_additional_paths_multiple_sources_mount_to_one_target() { function test_redirect_output() { function test_tmp_is_writable() { function test_dev_shm_is_writable() { function assert_linux_sandbox_exec_time() { function test_stats_high_user_time() { function test_stats_high_system_time() { function test_stats_high_user_time_and_high_system_time() { function test_sigterm_is_forwarded_to_child() { function test_child_ignores_sigterm_and_sigalrm() { function test_child_ignores_sigterm_and_sigalrm_no_kill_delay() { function test_cgroups1_memory_limit() { function test_cgroups2_memory_limit() {
function test_basic_functionality() { function test_execvp_error_message_contains_path() { function test_default_user_is_current_user() { function test_user_switched_to_root() { function test_user_switched_to_nobody() { function test_exit_code() { function test_signal_death() { function test_signal_catcher() { function test_basic_timeout() { function test_timeout_exceeded_with_large_kill_delay() { function test_timeout_and_kill_delay_exceeded() { function test_sigint_sends_sigterm() { function test_debug_logging() { function test_debug_logging_does_not_pollute_stdout_nor_stderr() { function test_debug_logging_does_not_leak_descriptor() { function test_mount_additional_paths_success() { function test_mount_additional_paths_relative_path() { function test_mount_additional_paths_leading_m() { function test_mount_additional_paths_m_not_preceeded_by_M() { function test_mount_additional_paths_other_flag_between_M_m_pair() { function test_mount_additional_paths_multiple_sources_mount_to_one_target() { function test_redirect_output() { function test_tmp_is_writable() { function test_dev_shm_is_writable() { function assert_linux_sandbox_exec_time() { function test_stats_high_user_time() { function test_stats_high_system_time() { function test_stats_high_user_time_and_high_system_time() { function test_sigterm_is_forwarded_to_child() { function test_child_ignores_sigterm_and_sigalrm() { function test_child_ignores_sigterm_and_sigalrm_no_kill_delay() { function test_cgroups1_memory_limit() { function test_cgroups2_memory_limit() {
for,0

if,6
if ! grep -E '^cgroup +[^ ]+ +cgroup +.*memory.*' /proc/mounts; then if ! grep -E '^[0-9]*:[^:]*memory[^:]*:' /proc/self/cgroup &>/dev/null; then if [[ ! -w "$memdir" ]]; then if ! grep '^0::' /proc/self/cgroup &>/dev/null; then if ! XDG_RUNTIME_DIR=/run/user/$( id -u ) systemd-run --user --scope true; then if ! grep memory "\$cgroups_parent/cgroup.controllers" &>/dev/null ; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/toolchain_transition_test.sh
lines,510
function,13
function set_up() { function write_constraints() { function write_platforms() { function write_toolchains() { function write_rules() { function test_toolchain_transition() { function test_toolchain_transition_test_rule() { function test_toolchain_transition_cquery() {
function set_up() { function write_constraints() { function write_platforms() { function write_toolchains() { "message": attr.string(), "deps": attr.label_list(), "message": attr.string(), function write_rules() { "message": attr.string(), "message": attr.string(), function test_toolchain_transition() { function test_toolchain_transition_test_rule() { function test_toolchain_transition_cquery() {
for,1
for dep in ctx.attr.deps:
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if platform_info.level: if ctx.target_platform_has_constraint(target_constraint): elif ctx.target_platform_has_constraint(exec_constraint): elif ctx.target_platform_has_constraint(host_constraint): if ctx.target_platform_has_constraint(alpha_constraint): elif ctx.target_platform_has_constraint(beta_constraint):
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/toolchain_test.sh
lines,2778
function,73
function set_up() { function write_test_toolchain() { function write_test_rule() { function write_test_aspect() { function write_register_toolchain() { function test_toolchain_provider() { function test_toolchain_use_in_rule { function test_toolchain_alias_use_in_rule { function test_toolchain_alias_chain_use_in_rule { function test_toolchain_type_alias_use_in_toolchain { function test_toolchain_type_alias_use_in_rule { function test_toolchain_use_in_rule_missing { function test_multiple_toolchain_use_in_rule { function test_multiple_toolchain_use_in_rule_with_optional_missing { function test_multiple_toolchain_use_in_rule_one_missing { function test_toolchain_use_in_rule_non_required_toolchain { function test_toolchain_debug_messages { function test_toolchain_debug_messages_target { function test_toolchain_use_in_aspect { function test_toolchain_use_in_aspect_with_output_file { function test_toolchain_use_in_aspect_non_required_toolchain { function test_toolchain_constraints() { function test_register_toolchain_error_invalid_label() { function test_register_toolchain_error_invalid_target() { function test_register_toolchain_error_target_not_a_toolchain() { function test_register_toolchain_error_invalid_pattern() { function test_toolchain_error_invalid_target() { function test_platforms_options_error_invalid_target() { function test_native_rule_target_exec_constraints() { function test_rule_with_default_execution_constraints() { function test_target_with_execution_constraints() { function test_rule_and_target_with_execution_constraints() { function test_target_setting() { function test_target_setting_with_transition() { function test_default_constraint_values { function test_make_variables_custom_rule() { function test_local_config_platform() { function test_registered_toolchain_cycle() { function test_target_platform_cycle() { function test_platform_duplicate_constraint_error() { function test_toolchain_duplicate_constraint_error() { function test_exec_transition() { function test_config_setting_with_constraints { function test_config_setting_with_constraints_alias { function test_toolchain_modes { function test_add_exec_constraints_to_targets() { function test_deps_includes_exec_group_toolchain() { function test_two_toolchain_types_resolve_to_same_label() { function test_invalid_toolchain_type() { function test_toolchain_requires_toolchain() { function test_repository_relative_toolchain_type() { function test_exec_platform_order_with_mandatory_toolchains { function test_exec_platform_order_with_optional_toolchains {
function set_up() { 'fields': attr.string_list(), function write_test_toolchain() { 'extra_label': attr.label(), 'extra_str': attr.string(), function write_test_rule() { 'message': attr.string(), function write_test_aspect() { function write_register_toolchain() { function test_toolchain_provider() { 'message': attr.string(), 'message': attr.string(), 'message': attr.string(), 'message': attr.string(), 'message': attr.string(), 'message': attr.string(), 'message': attr.string(), 'out': attr.output(), 'message': attr.string(), function test_toolchain_constraints() { function test_register_toolchain_error_invalid_label() { function test_register_toolchain_error_invalid_target() { function test_register_toolchain_error_target_not_a_toolchain() { function test_register_toolchain_error_invalid_pattern() { function test_toolchain_error_invalid_target() { function test_platforms_options_error_invalid_target() { function test_native_rule_target_exec_constraints() { function test_rule_with_default_execution_constraints() { function test_target_with_execution_constraints() { function test_rule_and_target_with_execution_constraints() { function test_target_setting() { function test_target_setting_with_transition() { function test_make_variables_custom_rule() { toolchain = platform_common.ToolchainInfo() function test_local_config_platform() { function test_registered_toolchain_cycle() { 'message': attr.string(), 'message': attr.string(), function test_target_platform_cycle() { function test_platform_duplicate_constraint_error() { function test_toolchain_duplicate_constraint_error() { function test_exec_transition() { function test_add_exec_constraints_to_targets() { function test_deps_includes_exec_group_toolchain() { function test_two_toolchain_types_resolve_to_same_label() { 'message': attr.string(), function test_invalid_toolchain_type() { function test_toolchain_requires_toolchain() { function test_repository_relative_toolchain_type() { **{name: getattr(ctx.attr, name) for name in _ATTRS.keys()} 'message': attr.string(), 'message': attr.string(),
for,9
for field in ctx.attr.fields: expect_log "While resolving toolchains for target //${pkg}/demo:use[^:]*: No matching toolchains found for types //${pkg}/toolchain:test_toolchain." expect_log "While resolving toolchains for target //${pkg}/demo:use[^:]*: No matching toolchains found for types //${pkg}/toolchain:test_toolchain_2." expect_log "While resolving toolchains for target //${pkg}/demo:use[^:]*: No matching toolchains found for types //${pkg}/toolchain:test_toolchain." expect_log "While resolving toolchains for target //${pkg}/demo:use[^:]*: invalid registered toolchain '//${pkg}/demo:not_a_target': no such target '//${pkg}/demo:not_a_target': target 'not_a_target' not declared in package '${pkg}/demo'" expect_log "While resolving toolchains for target //${pkg}/demo:use[^:]*: invalid registered toolchain '//${pkg}/demo:invalid': target does not provide the DeclaredToolchainInfo provider" expect_log "While resolving toolchains for target //${pkg}:foo[^:]*: invalid registered toolchain '//${pkg}:bad[12]': no such target" expect_log "While resolving toolchains for target //${pkg}/demo:target[^:]*: . .. from available execution platforms \[\]" **{name: getattr(ctx.attr, name) for name in _ATTRS.keys()}
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if type(value) == 'Target': if [[ ! -e "${pkg}/toolchain/BUILD" ]]; then if '//${pkg}/toolchain:${toolchain_name}' not in ctx.toolchains: if [[ ! -e "register/${pkg}/BUILD" ]]; then if [ "${PRODUCT_NAME}" != "bazel" ]; then if [ "${PRODUCT_NAME}" != "bazel" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/outputs_test.sh
lines,262
function,10
function test_plain_outputs() { function test_function_outputs() { function test_output_select_error() { function test_configurable_output_error() { function test_build_generated_file_with_selects_succeeds() {
function test_plain_outputs() { 'foo': attr.string(), function test_function_outputs() { 'foo': attr.string(), function test_output_select_error() { 'foo': attr.string(), function test_configurable_output_error() { 'foo': attr.string(), function test_build_generated_file_with_selects_succeeds() { 'foo': attr.string(),
for,0

if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if bazel build //$pkg:demo &> $TEST_log; then if bazel build //$pkg:demo &> $TEST_log; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/builtins_injection_test.sh
lines,152
function,3
function test_injection() {
function test_injection() { foo() def foo():
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/subrules_test.sh
lines,150
function,13
function set_up() { function test_query_xml_outputs_subrule_implicit_deps() { function test_query_xml_outputs_subrule_implicit_deps_via_aspect() { function test_query_xml_outputs_subrule_attributes() { function test_subrule_attributes_are_not_visible_to_native.existing_rules() {
function set_up() { my_subrule() "_foo": attr.label(), function test_query_xml_outputs_subrule_implicit_deps() { function test_query_xml_outputs_subrule_implicit_deps_via_aspect() { function test_query_xml_outputs_subrule_attributes() { function test_subrule_attributes_are_not_visible_to_native.existing_rules() { def print_rules(): rules = native.existing_rules() for name, rule in rules.items(): for attr, value in rule.items(): print_rules()
for,3
for name, rule in rules.items(): for attr, value in rule.items(): run_suite "Tests for subrules"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/target_compatible_with_test.sh
lines,1679
function,53
function set_up() { function tear_down() { function set_up_custom_toolchain() { function test_config_setting_in_target_compatible_with() { function test_console_log_for_builds() { function test_console_log_for_tests() { function test_skipping_for_rules_that_dont_create_actions() { function test_failure_on_incompatible_top_level_target() { function test_failure_on_incompatible_top_level_target_and_auto_cpu_environment_group() { function test_success_on_incompatible_top_level_target_with_skipping() { function test_build_event_protocol() { function test_non_top_level_skipping() { function test_starlark_skipping() { function test_dependencies_with_providers() { function test_dependencies_with_extensions() { function test_cc_test() { function test_cc_test_multiple_constraints() { function test_or_logic() { function test_missing_default() { function test_inverse_logic() { function test_composition() { function test_incompatible_with_aliased_constraint() { function test_incompatible_with_aliased_target() { function test_alias_incompatibility() { function test_incompatible_with_missing_toolchain() { function test_invalid_deps_are_ignored_when_incompatible() { function test_host_tool() { function test_analysistest() { function write_query_test_targets() { function test_query() { function test_query_no_tools() { function test_cquery_compatible_target() { function test_cquery_with_glob() { function test_cquery_incompatible_target() { function test_cquery_with_starlark_formatting() { function test_aquery_compatible_target() { function test_aquery_with_glob() { function test_aquery_incompatible_target() { function test_aspect_skipping() { function test_skipping_with_missing_toolchain() {
function set_up() { function tear_down() { function set_up_custom_toolchain() { "compiler_path": attr.string(), function test_config_setting_in_target_compatible_with() { function test_console_log_for_builds() { function test_console_log_for_tests() { function test_skipping_for_rules_that_dont_create_actions() { function test_failure_on_incompatible_top_level_target() { function test_failure_on_incompatible_top_level_target_and_auto_cpu_environment_group() { function test_success_on_incompatible_top_level_target_with_skipping() { function test_build_event_protocol() { function test_non_top_level_skipping() { function test_starlark_skipping() { "text": attr.string(), "out": attr.output(), function test_dependencies_with_providers() { DummyProvider = provider() return [DummyProvider()] function test_dependencies_with_extensions() { function test_cc_test() { int main() { printf("int main() { return 1; }\\n"); function test_cc_test_multiple_constraints() { int main() { printf("int main() { return 1; }\\n"); function test_or_logic() { function test_missing_default() { function test_inverse_logic() { function test_composition() { function test_incompatible_with_aliased_constraint() { function test_incompatible_with_aliased_target() { function test_alias_incompatibility() { function test_incompatible_with_missing_toolchain() { function test_invalid_deps_are_ignored_when_incompatible() { function test_host_tool() { int main() { function test_analysistest() { function write_query_test_targets() { function test_query() { function test_query_no_tools() { function test_cquery_compatible_target() { function test_cquery_with_glob() { function test_cquery_incompatible_target() { function test_cquery_with_starlark_formatting() { function test_aquery_compatible_target() { function test_aquery_with_glob() { function test_aquery_incompatible_target() { function test_aspect_skipping() { BasicProvider = provider() return [DefaultInfo(), BasicProvider()] BasicProvider(), function test_skipping_with_missing_toolchain() {
for,2
for incompatible_target in "${incompatible_targets[@]}"; do for incompatible_target in "${incompatible_targets[@]}"; do
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if "IncompatiblePlatformProvider" in providers(target):
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_aquery_test.sh
lines,99
function,1
function test_repo_mapping_manifest() {
function test_repo_mapping_manifest() {
for,0

if,2
if "$is_windows"; then if which base64 >/dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/bazel_testjobs_test.sh
lines,130
function,4
function create_test_files() { function test_local_test_jobs_constrains_test_execution() { function test_no_local_test_jobs_causes_local_resources_to_constrain_test_execution() { function test_local_test_jobs_exceeds_jobs_causes_warning() {
function create_test_files() { function test_local_test_jobs_constrains_test_execution() { function test_no_local_test_jobs_causes_local_resources_to_constrain_test_execution() { function test_local_test_jobs_exceeds_jobs_causes_warning() {
for,2
expect_log 'High value for --local_test_jobs' run_suite "Tests for --local_test_jobs option."
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ ! -d dir ]]; then if [[ "\${numtestfiles}" -gt 3 ]] ; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/discard_graph_edges_test.sh
lines,484
function,32
function set_up() { function test_build() { function test_test() { function test_failed_build() { function test_info() { function test_empty_build() { function test_query() { function test_configured_query() { function test_top_level_aspect() { function prepare_histogram() { function test_packages_cleared() { function test_action_conflict() { function test_remove_actions() { function test_modules() { function test_no_batch() { function test_no_discard_analysis_cache() { function test_packages_cleared_nobatch() { function test_packages_cleared_implicit_noincrementality_data() { function test_actions_not_deleted_after_execution() { function test_dump_after_discard_incrementality_data() { function test_query_after_discard_incrementality_data() { function test_shutdown_after_discard_incrementality_data() { function test_clean_after_discard_incrementality_data() { function test_switch_back_and_forth() { function test_warns_on_unexpected_combos() {
function set_up() { echo "int main() {return 0;}" > testing/mytest.cc || fail function test_build() { function test_test() { function test_failed_build() { function test_info() { function test_empty_build() { function test_query() { function test_configured_query() { function test_top_level_aspect() { for orig_out in target.files.to_list(): function prepare_histogram() { def foo(): def bar(): def baz(): function test_packages_cleared() { function test_action_conflict() { action_cmd = "touch " + files_to_build.to_list()[0].path outputs=files_to_build.to_list(), function test_remove_actions() { function test_modules() { function test_no_batch() { function test_no_discard_analysis_cache() { function test_packages_cleared_nobatch() { function test_packages_cleared_implicit_noincrementality_data() { function test_actions_not_deleted_after_execution() { function test_dump_after_discard_incrementality_data() { function test_query_after_discard_incrementality_data() { function test_shutdown_after_discard_incrementality_data() { function test_clean_after_discard_incrementality_data() { function test_switch_back_and_forth() { function test_warns_on_unexpected_combos() {
for,4
for orig_out in target.files.to_list(): content = "Hello from aspect for %s" % orig_out.basename) transitive = [src.aspectouts for src in ctx.rule.attr.srcs]) run_suite "test for --discard_graph_edges"
if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$IS_WINDOWS"; then if [[ $javabase = external/* ]]; then if [[ "$STARTUP_FLAGS" =~ "--nobatch" ]]; then if [[ "$genrule_action_count" -lt 1 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/stub_finds_runfiles_test.sh
lines,171
function,12
function set_up() { function tear_down() { function test_javabin() { function test_javatest() { function test_pybin() { function test_pytest() { function test_sh_runs_javabin() { function test_sh_runs_javatest() { function test_sh_runs_pybin() { function test_sh_runs_pytest() { function test_genrule_runs_pybin() { function test_genrule_runs_javabin() {
function set_up() { function tear_down() { function test_javabin() { function test_javatest() { function test_pybin() { function test_pytest() { function test_sh_runs_javabin() { function test_sh_runs_javatest() { function test_sh_runs_pybin() { function test_sh_runs_pytest() { function test_genrule_runs_pybin() { function test_genrule_runs_javabin() {
for,0

if,1
if [ $
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/validation_actions_test.sh
lines,564
function,25
function setup_test_project() { function setup_passing_validation_action() { function setup_failing_validation_action() { function setup_slow_failing_validation_action() { function assert_exists() { function test_validation_actions() { function test_validation_actions_with_validation_aspect() { function test_validation_actions_with_validation_and_another_aspect() { function test_validation_actions_implicit_output() { function test_validation_actions_through_deps() { function test_failing_validation_action_fails_build() { function test_failing_validation_action_fails_build_manual_validation_aspect() { function test_failing_validation_action_fails_build_implicit_output() { function test_failing_validation_action_fails_build_genrule_output() { function test_failing_validation_action_with_validations_off_does_not_fail_build() { function test_failing_validation_action_for_host_dep_does_not_fail_build() { function test_failing_validation_action_for_tool_dep_does_not_fail_build() { function test_failing_validation_action_for_dep_from_test_fails_build() { function test_slow_failing_validation_action_for_dep_from_test_fails_build() { function test_failing_validation_action_fails_multiple_tests() { function test_slow_failing_validation_action_fails_multiple_tests() { function test_slow_failing_validation_action_fails_multiple_tests_keep_going() { function test_validation_actions_do_not_propagate_through_genquery() { function test_validation_actions_flags() { function test_validation_actions_in_rule_and_aspect() {
function setup_test_project() { function setup_passing_validation_action() { function setup_failing_validation_action() { function setup_slow_failing_validation_action() { function assert_exists() { function test_validation_actions() { function test_validation_actions_with_validation_aspect() { function test_validation_actions_with_validation_and_another_aspect() { function test_validation_actions_implicit_output() { function test_validation_actions_through_deps() { function test_failing_validation_action_fails_build() { function test_failing_validation_action_fails_build_manual_validation_aspect() { function test_failing_validation_action_fails_build_implicit_output() { function test_failing_validation_action_fails_build_genrule_output() { function test_failing_validation_action_with_validations_off_does_not_fail_build() { function test_failing_validation_action_for_host_dep_does_not_fail_build() { function test_failing_validation_action_for_tool_dep_does_not_fail_build() { function test_failing_validation_action_for_dep_from_test_fails_build() { function test_slow_failing_validation_action_for_dep_from_test_fails_build() { function test_failing_validation_action_fails_multiple_tests() { function test_slow_failing_validation_action_fails_multiple_tests() { function test_slow_failing_validation_action_fails_multiple_tests_keep_going() { function test_validation_actions_do_not_propagate_through_genquery() { function test_validation_actions_flags() { function test_validation_actions_in_rule_and_aspect() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/force_delete_output_test.sh
lines,102
function,4
function tear_down() { function test_delete_in_unwritable_dir() { function test_delete_tree_in_unwritable_dir() {
function tear_down() { function test_delete_in_unwritable_dir() { function test_delete_tree_in_unwritable_dir() { attrs = {"content": attr.string()},
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/build_event_stream_test.sh
lines,1507
function,71
function set_up() { function tear_down() { function test_basic() { function test_target_information_early() { function test_workspace_status() { function test_target_summary() { function test_suite() { function test_test_summary() { function test_target_summary_for_test() { function test_test_individual_results() { function test_test_attempts() { function test_undeclared_output_annotations() { function test_undeclared_output_annotations_pb() { function test_test_runtime() { function test_test_start_times() { function test_test_attempts_multi_runs() { function test_test_attempts_multi_runs_flake_detection() { function test_cached_test_results() { function test_target_complete() { function test_target_summary_for_build() { function test_test_target_complete() { function test_extra_action() { function test_action_ids() { function test_bep_output_groups() { function test_aspect_artifacts() { function test_aspect_target_summary() { function test_failing_aspect() { function test_aspect_analysis_failure_no_target_summary() { function test_failing_aspect_bep_output_groups() { function test_build_only() { function test_command_whitelisting() { function test_multiple_transports() { function test_basic_json() { function test_root_cause_early() { function test_root_cause_before_target_summary() { function test_action_conf() { function test_loading_failure() { function test_visibility_failure() { function test_visibility_indirect() { function test_independent_visibility_failures() { function test_loading_failure_keep_going() { function test_loading_failure_keep_going_two_targets() { function test_stdout_stderr_reported() { function test_unbuffered_stdout_stderr() { function test_srcfiles() { function test_test_fails_to_build() { function test_test_fails_to_build_without_default_output_group() { function test_no_tests_found() { function test_no_tests_found_build_failure() { function test_alias() { function test_circular_dep() { function test_missing_file() { function test_tool_command_line() { function test_noanalyze() { function test_nobuild() { function test_server_pid() { function test_bep_report_only_important_artifacts() { function test_starlark_flags() { function test_empty_tree_in_named_files() { function test_tree_to_split_in_named_files() { function test_memory_profile() { function test_packages_loaded_contains_only_successfully_loaded_packages() {
function set_up() { for orig_out in ctx.rule.attr.outs.to_list(): bad_outputs = list() good_outputs = list() mixed_outputs = list() "outs": attr.output_list(), function tear_down() { function test_basic() { function test_target_information_early() { function test_workspace_status() { function test_target_summary() { function test_suite() { function test_test_summary() { function test_target_summary_for_test() { function test_test_individual_results() { function test_test_attempts() { function test_undeclared_output_annotations() { function test_undeclared_output_annotations_pb() { function test_test_runtime() { function test_test_start_times() { function test_test_attempts_multi_runs() { function test_test_attempts_multi_runs_flake_detection() { function test_cached_test_results() { function test_target_complete() { function test_target_summary_for_build() { function test_test_target_complete() { function test_extra_action() { function test_action_ids() { function test_bep_output_groups() { function test_aspect_artifacts() { function test_aspect_target_summary() { function test_failing_aspect() { function test_aspect_analysis_failure_no_target_summary() { function test_failing_aspect_bep_output_groups() { function test_build_only() { function test_command_whitelisting() { function test_multiple_transports() { function test_basic_json() { function test_root_cause_early() { function test_root_cause_before_target_summary() { function test_action_conf() { function test_loading_failure() { function test_visibility_failure() { function test_visibility_indirect() { function test_independent_visibility_failures() { function test_loading_failure_keep_going() { function test_loading_failure_keep_going_two_targets() { function test_stdout_stderr_reported() { function test_unbuffered_stdout_stderr() { function test_srcfiles() { function test_test_fails_to_build() { function test_test_fails_to_build_without_default_output_group() { function test_no_tests_found() { function test_no_tests_found_build_failure() { function test_alias() { function test_circular_dep() { function test_missing_file() { function test_tool_command_line() { function test_noanalyze() { function test_nobuild() { function test_server_pid() { function test_bep_report_only_important_artifacts() { function test_starlark_flags() { function test_empty_tree_in_named_files() { attrs = {"out1": attr.output(), "out2": attr.output()}, attrs = { "deps": attr.label_list()} function test_tree_to_split_in_named_files() { attrs = {"out1": attr.output(), "out2": attr.output()}, attrs = { "deps": attr.label_list()} function test_memory_profile() { function test_packages_loaded_contains_only_successfully_loaded_packages() {
for,16
for orig_out in ctx.rule.attr.outs: for orig_out in ctx.rule.attr.outs.to_list(): for out in ctx.rule.attr.outs: cmd = "for f in $(OUTS); do echo foo > $(RULEDIR)/$$f; done" for i in `seq 1 10` for name, exit in (("foo", 0), ("bar", 0), ("baz", 1), ("skip", 0)): for name, exit, suffix in ( for id_line in $(grep -n 'action_completed {' $TEST_log | cut -f 1 -d :) for name in foo bar; do for suffix in out out2 out3 out4 out5; do for name in baz skip; do for name in foo bar; do for name in baz skip; do for dep in ctx.attr.deps]))] for dep in ctx.attr.deps]))] run_suite "Integration tests for the build event stream"
if,3
if not ctx.rule.attr.outs: if out.name[0] == "f": if out.name[3] == "2":
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/analysis_phase_options_test.sh
lines,116
function,3
function set_up() { function test_oom_sensitive_skyfunctions_semaphore_size_values_changed() { function test_skyframe_cpu_heavy_skykeys_thread_pool_size_values_changed() {
function try_with_timeout() { $* ; } function set_up() { function test_oom_sensitive_skyfunctions_semaphore_size_values_changed() { function test_skyframe_cpu_heavy_skykeys_thread_pool_size_values_changed() {
for,1
run_suite "Integration tests for the options for Skyframe's analysis phase."
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/loading_phase_test.sh
lines,624
function,37
function set_up() { function tear_down() { function test_query_buildfiles_with_load() { function test_non_error_target_in_bad_pkg() { function test_options_errors() { function test_bazelrc_option() { function test_all_help_topics_succeed() { function test_regress_cycle_during_analysis_phase() { function test_glob_with_subpackage() { function test_glob_with_subpackage2() { function test_incremental_deleting_package_roots() { function test_no_package_loading_on_benign_workspace_file_changes() { function test_disallow_load_labels_to_cross_package_boundaries() { function test_package_loading_errors_in_target_parsing() { function test_severe_package_loading_errors_via_test_suites_in_target_parsing() { function test_illegal_glob_exclude_pattern_in_bzl() { function test_windows_only__glob_with_junction() { function test_bazel_bin_is_not_a_package() { function test_starlark_cpu_profile() { function test_actions_write_utf8_attribute() { function test_actions_write_not_latin1_path() { function test_target_with_BUILD() { function test_directory_with_BUILD() { function test_missing_BUILD() {
function try_with_timeout() { $* ; } function set_up() { function tear_down() { function test_query_buildfiles_with_load() { function test_non_error_target_in_bad_pkg() { function test_options_errors() { function test_bazelrc_option() { function test_all_help_topics_succeed() { function test_regress_cycle_during_analysis_phase() { function test_glob_with_subpackage() { function test_glob_with_subpackage2() { function test_incremental_deleting_package_roots() { function test_no_package_loading_on_benign_workspace_file_changes() { function test_disallow_load_labels_to_cross_package_boundaries() { function test_package_loading_errors_in_target_parsing() { function test_severe_package_loading_errors_via_test_suites_in_target_parsing() { fail() function test_illegal_glob_exclude_pattern_in_bzl() { f() def f(): function test_windows_only__glob_with_junction() { function test_bazel_bin_is_not_a_package() { function test_starlark_cpu_profile() { echo 'load("inc.bzl", "main"); main()' > test/BUILD def main(): foo() def foo(): main() function test_actions_write_utf8_attribute() { "text": attr.string(), "out": attr.output(), function test_actions_write_not_latin1_path() { "out": attr.output(), function test_target_with_BUILD() { function test_directory_with_BUILD() { function test_missing_BUILD() {
for,8
expect_not_log "Loading succeeded for only" for topic in "${topics[@]}"; do for keep_going in "--keep_going" "--nokeep_going" for target_pattern in "//bad:BUILD" "//bad:all" "//bad/..." for keep_going in "--keep_going" "--nokeep_going" for i in range(2000): for str in sorted list range foo test/BUILD test/inc.bzl main; do fail('expected exactly 1 file for srcs. got %d' % len(ctx.attr.srcs))
if,14
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! type try_with_timeout >&/dev/null; then if [ -f WORKSPACE ]; then if [ -f "${TEST_TMPDIR}/OLD_WORKSPACE" ]; then if ! $is_windows; then if $is_windows; then if $is_windows ; then if len(ctx.attr.srcs) != 1:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/startup_options_test.sh
lines,121
function,6
function test_different_startup_options() { function test_command_args_are_not_parsed_as_startup_args() { function test_autodetect_server_javabase() { function test_multiple_bazelrc_later_overwrites_earlier() { function test_multiple_bazelrc_set_different_options() { function test_bazelrc_after_devnull_ignored() {
function test_different_startup_options() { function test_command_args_are_not_parsed_as_startup_args() { function test_autodetect_server_javabase() { function test_multiple_bazelrc_later_overwrites_earlier() { function test_multiple_bazelrc_set_different_options() { function test_bazelrc_after_devnull_ignored() {
for,0

if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/discard_analysis_cache_test.sh
lines,197
function,5
function write_hello_world_files() { function test_compile_helloworld() { function extract_histogram_count() { function test_aspect_and_configured_target_cleared() {
function write_hello_world_files() { function test_compile_helloworld() { function extract_histogram_count() { function test_aspect_and_configured_target_cleared() { for orig_out in target.files.to_list():
for,4
for orig_out in target.files.to_list(): content = "Hello from aspect for %s" % orig_out.basename) transitive = [src.aspectouts for src in ctx.rule.attr.srcs]) run_suite "test for --discard_analysis_cache"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$IS_WINDOWS"; then if [[ $javabase = external/* ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/ui_test.sh
lines,730
function,39
function set_up() { function create_pkg() { function test_basic_progress() { function test_line_wrapping() { function test_noshow_progress() { function test_basic_progress_no_curses() { function test_no_curses_no_linebreak() { function test_pass() { function test_fail() { function test_timestamp() { function test_skymeld_ui() { function test_skymeld_ui_with_starlark_flags() { function test_skymeld_ui_works_with_timestamps() { function test_info_spacing() { function test_query_spacing() { function test_query_progress() { function test_clean_nobuild { function test_clean_color_nobuild { function test_help_nobuild { function test_help_color_nobuild { function test_version_nobuild { function test_version_nobuild_announce_rc { function test_subcommand { function test_subcommand_notdefault { function test_loading_progress { function test_failure_scrollback_buffer_curses { function test_terminal_title { function test_failure_scrollback_buffer { function test_streamed { function test_stdout_bundled { function test_experimental_ui_attempt_to_print_relative_paths_failing_action() { function test_experimental_ui_attempt_to_print_relative_paths_pkg_error() { function test_fancy_symbol_encoding() { function test_ui_events_filters() { function test_max_stdouterr_bytes_capping_behavior() { function test_max_stdouterr_bytes_is_for_individual_outputs() { function test_interleaved_errors_and_progress() { function test_progress_bar_after_stderr() { function test_bazel_run_error_visible() {
function set_up() { function create_pkg() { function test_basic_progress() { function test_line_wrapping() { function test_noshow_progress() { function test_basic_progress_no_curses() { function test_no_curses_no_linebreak() { function test_pass() { function test_fail() { function test_timestamp() { function test_skymeld_ui() { function test_skymeld_ui_with_starlark_flags() { function test_skymeld_ui_works_with_timestamps() { function test_info_spacing() { function test_query_spacing() { function test_query_progress() { function test_experimental_ui_attempt_to_print_relative_paths_failing_action() { function test_experimental_ui_attempt_to_print_relative_paths_pkg_error() { function test_fancy_symbol_encoding() { function test_ui_events_filters() { function test_max_stdouterr_bytes_capping_behavior() { function test_max_stdouterr_bytes_is_for_individual_outputs() { function test_interleaved_errors_and_progress() { function test_progress_bar_after_stderr() { function test_bazel_run_error_visible() {
for,9
for _ in \`seq 1 10240\` ) for i in RANGE] ) for i in RANGE] srcs = ["true_%s" % i for i in RANGE], [ withdebug(name = "target%d" % (i,)) for i in range(50) ] for n in stdout stderr; do ) for i in range(1000)] for i in $(seq 0 999); do run_suite "Integration tests for ${PRODUCT_NAME}'s UI"
if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ -d pkg ]]; then if ! $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/exec_group_test.sh
lines,991
function,33
function test_target_exec_properties_starlark() { function test_target_exec_properties_starlark_test() { function test_target_exec_properties_cc() { function test_target_exec_properties_cc_test() { function test_target_test_properties_sh_test() { function test_platform_execgroup_properties_cc_test() { function test_starlark_test_has_test_execgroup_by_default() { function test_starlark_test_can_define_test_execgroup_manually() { function test_platform_execgroup_properties_nongroup_override_cc_test() { function test_platform_execgroup_properties_group_override_cc_test() { function test_platform_execgroup_properties_override_group_and_default_cc_test() { function test_platform_execgroup_properties_test_inherits_default() { function test_platform_properties_only_applied_for_relevant_execgroups_cc_test() { function test_cannot_set_properties_for_irrelevant_execgroup_on_target_cc_test() { function write_toolchains_for_exec_group_tests() { function test_aspect_exec_groups_inherit_toolchains() { function test_aspect_exec_groups_different_toolchains() { function test_exec_group_rule_constraint_inheritance() { function test_exec_group_target_constraint_inheritance() { function test_override_exec_group_of_test() {
function test_target_exec_properties_starlark() { "output": attr.output(), function test_target_exec_properties_starlark_test() { function test_target_exec_properties_cc() { int main() { function test_target_exec_properties_cc_test() { int main() { function test_target_test_properties_sh_test() { function test_platform_execgroup_properties_cc_test() { int main() {} function test_starlark_test_has_test_execgroup_by_default() { function test_starlark_test_can_define_test_execgroup_manually() { "test": exec_group(), function test_platform_execgroup_properties_nongroup_override_cc_test() { int main() {} function test_platform_execgroup_properties_group_override_cc_test() { int main() {} function test_platform_execgroup_properties_override_group_and_default_cc_test() { int main() {} function test_platform_execgroup_properties_test_inherits_default() { int main() {} function test_platform_properties_only_applied_for_relevant_execgroups_cc_test() { int main() {} function test_cannot_set_properties_for_irrelevant_execgroup_on_target_cc_test() { int main() {} function write_toolchains_for_exec_group_tests() { 'message': attr.string(), function test_aspect_exec_groups_inherit_toolchains() { function test_aspect_exec_groups_different_toolchains() { function test_exec_group_rule_constraint_inheritance() { function test_exec_group_target_constraint_inheritance() { function test_override_exec_group_of_test() { exec_groups = {"foo": exec_group()},
for,1
grep "Tried to set properties for non-existent exec group" $TEST_log || fail "Did not complain about unknown exec group"
if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/param_file_flag_per_line_test.sh
lines,155
function,3
function test_param_file_flag_per_line() {
function test_param_file_flag_per_line() { args_file = args_in.read() args = ctx.actions.args()
for,1
for arg in argv[3:]:
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if __name__ == '__main__':
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/output_filter_test.sh
lines,363
function,10
function test_output_filter_cc() { function test_output_filter_java() { function test_test_output_printed() { function test_output_filter_build() { function test_output_filter_build_hostattribute() { function test_output_filter_does_not_apply_to_test_output() { function test_filters_deprecated_targets() { function test_workspace_status_command_error_output_printed() {
function test_output_filter_cc() { function test_output_filter_java() { HelloLibrary.funcHelloLibrary(); public static void funcHelloLibrary() { function test_test_output_printed() { function test_output_filter_build() { function test_output_filter_build_hostattribute() { function test_output_filter_does_not_apply_to_test_output() { function test_filters_deprecated_targets() { function test_workspace_status_command_error_output_printed() {
for,0

if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then if type try_with_timeout >&/dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration/server_logging_test.sh
lines,87
function,1
function test_log_file_uses_single_line_formatter() {
function test_log_file_uses_single_line_formatter() {
for,1
fail "invalid format in java.log; see output for sample lines"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! grep -E "${sample_re}" "${client_log}"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/integration_test_setup.sh
lines,68
function,2
function print_message_and_exit() { function inplace-sed() {
function print_message_and_exit() { function inplace-sed() {
for,0

if,2
if type rlocation >&/dev/null; then if [ $(uname) = "Darwin" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_starlark_execute_test.sh
lines,122
function,2

test_children_waited() { test_interrupted_children_waited() {
for,1
grep baz output || fail "repo rule failed to wait for child process"
if,1
if kill -0 "${repo_pid}"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_path_test.sh
lines,760
function,22

repo_with_local_include() { library_with_local_include() { test_local_paths_main () { test_local_paths_remote() { test_lib_paths_main() { test_lib_paths_remote() { test_lib_paths_all_remote() { repo_with_local_path_reference() { test_fixed_path_local() { DISABLED_test_fixed_path_remote() { repo_with_local_implicit_dependencies() { test_local_rules() { test_remote_rules() { test_remote_remote_rules() { repo_with_embedded_paths() { test_embedded_local() { test_embedded_remote() { test_embedded_remote_remote() { repo_with_embedded_foreign_path() { repo_data_file() { test_embedded_foreign_paths_local() { test_embedded_foreign_paths_remote() {
for,7
arguments = [f.path for f in ctx.files._toupper_sh] + [f.path for f in ctx.files.src] + [output.path], arguments = [f.path for f in ctx.files._to_html] + [f.path for f in ctx.files.src] + [output.path], arguments = [f.path for f in ctx.files._add_preamb] \ + [f.path for f in ctx.files.src] + [output.path], run_suite "path tests for multiple repositories"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_sandboxing_cpp_test.sh
lines,248
function,9
function set_up { function test_sandboxed_cpp_build_rebuilds_on_change() { function test_sandboxed_cpp_build_catches_missing_header_via_sandbox() { function DISABLED_test_sandboxed_cpp_build_catches_header_only_in_srcs() { function test_standalone_cpp_build_rebuilds_on_change() { function test_standalone_cpp_build_catches_missing_header() { function DISABLED_test_standalone_cpp_build_catches_header_only_in_srcs() {
static inline void greet_from_header() { greet_from_header(); function test_sandboxed_cpp_build_rebuilds_on_change() { function test_sandboxed_cpp_build_catches_missing_header_via_sandbox() { function DISABLED_test_sandboxed_cpp_build_catches_header_only_in_srcs() { function test_standalone_cpp_build_rebuilds_on_change() { function test_standalone_cpp_build_catches_missing_header() { function DISABLED_test_standalone_cpp_build_catches_header_only_in_srcs() {
for,0

if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "${IS_WINDOWS}"; then if [[ -n "${WINDOWS_SANDBOX+x}" ]]; then if [[ -n "${BAZEL_VC+x}" ]]; then if [[ -n "${WIN10_SDK+x}" ]]; then if (argc > 1) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/python_version_test.sh
lines,452
function,17
function test_can_run_py_binaries() { function test_can_access_runfiles() { function test_build_python_zip_works_with_workspace_runtime() { function test_build_python_zip_bzlmod_repo_mapping_runfiles() { function test_build_python_zip_cleans_up_temporary_module_space() { function test_get_python_zip_file_via_output_group() { function test_source_file_does_not_override_standard_library() { function test_output_roots() { function test_default_output_root_is_bazel_bin() { function test_py_binary_with_autodetecting_toolchain_usable_as_tool() { function test_external_runfiles() {
function test_can_run_py_binaries() { print("I am Python " + platform.python_version_tuple()[0]) function test_can_access_runfiles() { r = runfiles.Create() print("File contents: " + f.read()) function test_build_python_zip_works_with_workspace_runtime() { function test_build_python_zip_bzlmod_repo_mapping_runfiles() { rf = runfiles.Create() fp.read() function test_build_python_zip_cleans_up_temporary_module_space() { function test_get_python_zip_file_via_output_group() { function test_source_file_does_not_override_standard_library() { function test_output_roots() { function test_default_output_root_is_bazel_bin() { function test_py_binary_with_autodetecting_toolchain_usable_as_tool() { "out": attr.output(), function test_external_runfiles() {
for,1
run_suite "Tests for how the Python rules handle Python 2 vs Python 3"
if,13
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if path is not None: if "$is_windows"; then if "$is_windows"; then if [[ -d "$module_space_dir" ]]; then if "$is_windows"; then if ! "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_package_loader_test.sh
lines,52
function,1
function test_bazel_package_loader() {
function test_bazel_package_loader() {
for,1
run_suite "End-to-end tests for BazelPackageLoader"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_thinlto_obj_dir_test.sh
lines,105
function,3
function write_hello_world_files { function test_bazel_thinlto() {
int hello1() { void hello2() { int main() { hello2(); function test_bazel_thinlto() {
for,0

if,4
if is_darwin; then if [[ ! -x ${clang_tool:-/usr/bin/clang_tool} ]]; then if [[ $major_version < 6 ]]; then if [[ -z $(find "bazel-bin/hello/hello.lto" -path "*hello/_objs/hello/hello.o.thinlto.bc" -print -quit) ]] \
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_java_test.sh
lines,1280
function,60
function set_up() { function test_java_test_coverage() { function test_java_test_coverage_combined_report() { function test_java_test_java_import_coverage() { function test_run_jar_in_subprocess_empty_env() { function test_runtime_deploy_jar() { function test_runtime_and_data_deploy_jars() { function test_java_string_switch_coverage() { function test_finally_block_branch_coverage() { function test_java_test_coverage_cc_binary() { function setup_external_java_target() { function test_external_java_target_can_collect_coverage() { function test_external_java_target_coverage_not_collected_by_default() {
function set_up() { function test_java_test_coverage() { public void testGetCollatzFinal() { FN:3,com/example/Collatz::<init> ()V FNDA:0,com/example/Collatz::<init> ()V function test_java_test_coverage_combined_report() { public void testGetCollatzFinal() { FN:3,com/example/Collatz::<init> ()V FNDA:0,com/example/Collatz::<init> ()V function test_java_test_java_import_coverage() { public void testGetCollatzFinal() { FN:3,com/example/Collatz::<init> ()V FNDA:0,com/example/Collatz::<init> ()V function test_run_jar_in_subprocess_empty_env() { pb.environment().clear(); return pb.start(); public void testTrivial() throws Exception { subprocessTrue.waitFor(); subprocessFalse.waitFor(); BufferedReader input = new BufferedReader(new InputStreamReader(subprocessTrue.getInputStream())); while ((line = input.readLine()) != null) { input.close(); BufferedReader err = new BufferedReader(new InputStreamReader(subprocessTrue.getErrorStream())); while ((line = err.readLine()) != null) { err.close(); input = new BufferedReader(new InputStreamReader(subprocessFalse.getInputStream())); while ((line = input.readLine()) != null) { input.close(); err = new BufferedReader(new InputStreamReader(subprocessFalse.getErrorStream())); while ((line = err.readLine()) != null) { err.close(); function test_runtime_deploy_jar() { public void testTrivial() throws Exception { function test_runtime_and_data_deploy_jars() { return new ProcessBuilder(command).start(); public void testTrivial() throws Exception { subprocessTrue.waitFor(); subprocessFalse.waitFor(); BufferedReader input = new BufferedReader(new InputStreamReader(subprocessTrue.getInputStream())); while ((line = input.readLine()) != null) { input.close(); BufferedReader err = new BufferedReader(new InputStreamReader(subprocessTrue.getErrorStream())); while ((line = err.readLine()) != null) { err.close(); input = new BufferedReader(new InputStreamReader(subprocessFalse.getInputStream())); while ((line = input.readLine()) != null) { input.close(); err = new BufferedReader(new InputStreamReader(subprocessFalse.getErrorStream())); while ((line = err.readLine()) != null) { err.close(); FN:2,cov/Cov::<init> ()V FNDA:0,cov/Cov::<init> ()V FN:2,cov/RandomBinary::<init> ()V FNDA:0,cov/RandomBinary::<init> ()V function test_java_string_switch_coverage() { public void testValues() { FN:3,com/example/Switch::<init> ()V FNDA:0,com/example/Switch::<init> ()V function test_finally_block_branch_coverage() { throw new RuntimeException(); public void testEven() { public void testOdd() { public void testNegativeEven() { public void testNegativeOdd() { public void testException() { assertThrows(RuntimeException.class, () -> Finally.runFinally(1)); public void testNegativeException() { assertThrows(RuntimeException.class, () -> Finally.runFinally(-1)); function test_java_test_coverage_cc_binary() { Runtime.getRuntime().exec("examples/cpp/num-world"); function setup_external_java_target() { public void testGetCollatzFinal() { function test_external_java_target_can_collect_coverage() { FN:3,com/example/Math::<init> ()V FNDA:0,com/example/Math::<init> ()V FN:3,com/example/Collatz::<init> ()V FNDA:0,com/example/Collatz::<init> ()V function test_external_java_target_coverage_not_collected_by_default() { FN:3,com/example/Math::<init> ()V FNDA:0,com/example/Math::<init> ()V
for,14
bazel coverage --test_output=all //:test &>$TEST_log || fail "Coverage for //:test failed" bazel coverage --test_output=all --java_toolchain=//:custom_toolchain //:test &>$TEST_log || fail "Coverage with default_java_toolchain for //:test failed" || echo "Coverage for //:test failed" bazel coverage --test_output=all //:test &>$TEST_log || fail "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed" //:NumJava &>$TEST_log || fail "Coverage for //:NumJava failed" || echo "Coverage for //:test failed" || echo "Coverage for //:test failed"
if,26
if [[ "${JAVA_TOOLS_ZIP}" != "released" ]]; then if [[ "${JAVA_TOOLS_ZIP}" == file* ]]; then if [[ "${JAVA_TOOLS_PREBUILT_ZIP}" != "released" ]]; then if [[ "${JAVA_TOOLS_PREBUILT_ZIP}" == file* ]]; then if [[ "${COVERAGE_GENERATOR_DIR}" != "released" ]]; then if [[ $ if [[ ! -z "${JAVA_TOOLS_ZIP_FILE_URL}" ]]; then if (n == 1) { if (n % 2 == 0) { if (n == 1) { if (n % 2 == 0) { if (n == 1) { if (n % 2 == 0) { if (args.length == 1) { if (Boolean.parseBoolean(args[0])) { if (args.length == 1) { if (Boolean.parseBoolean(args[0])) { if (args.length == 1) { if (Boolean.parseBoolean(args[0])) { if (x == 1 || x == -1) { if (x % 2 == 0) { if (x >= 0) { if is_gcov_missing_or_wrong_version; then if (argc > 1) { if (n == 1) { if (Math.isEven(n)) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_execution_tls_test.sh
lines,133
function,7
function set_up() { function _prepareBasicRule(){ function tear_down() { function test_remote_grpcs_cache() { function test_mtls_fails_if_client_has_no_cert() { function test_remote_grpc_cache() { function test_remote_cache_with_incompatible_tls_enabled_removed_grpc_scheme() {
function set_up() { function _prepareBasicRule(){ function tear_down() { function test_remote_grpcs_cache() { function test_mtls_fails_if_client_has_no_cert() { function test_remote_grpc_cache() { function test_remote_cache_with_incompatible_tls_enabled_removed_grpc_scheme() {
for,0

if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ $1 == "--mtls" ]]; then if [[ $enable_mtls == 1 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_execution_with_xattr_test.sh
lines,99
function,3
function set_up() { function tear_down() { function test_remote_grpc_cache_with_xattr() {
function set_up() { function tear_down() { function test_remote_grpc_cache_with_xattr() {
for,2
fail "Bazel should not have computed a digest for file1" fail "Bazel should have computed a digest for file2"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if type xattr 2> /dev/null; then elif type setfattr 2> /dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_execution_http_test.sh
lines,539
function,19
function set_up() { function tear_down() { function test_remote_http_cache_flag() { function test_cc_binary_http_cache() { function test_cc_binary_http_cache_bad_server() { function set_directory_artifact_starlark_testfixtures() { function test_directory_artifact_starlark_local() { function test_directory_artifact_starlark() { function test_directory_artifact_starlark_grpc_cache() { function test_directory_artifact_starlark_http_cache() { function test_directory_artifact_in_runfiles_starlark_http_cache() { function test_remote_state_cleared() { function test_genrule_combined_disk_http_cache() { function test_tag_no_remote_cache() { function test_remote_http_cache_with_bad_netrc_content() { function test_remote_http_cache_with_unused_netrc_no_warning() { function test_remote_http_cache_with_netrc_warning() {
function set_up() { function tear_down() { function test_remote_http_cache_flag() { function test_cc_binary_http_cache() { int main() { std::cout << "Hello world!" << std::endl; return 0; } function test_cc_binary_http_cache_bad_server() { int main() { std::cout << "Hello world!" << std::endl; return 0; } function set_directory_artifact_starlark_testfixtures() { function test_directory_artifact_starlark_local() { function test_directory_artifact_starlark() { function test_directory_artifact_starlark_grpc_cache() { function test_directory_artifact_starlark_http_cache() { function test_directory_artifact_in_runfiles_starlark_http_cache() { function test_remote_state_cleared() { function test_genrule_combined_disk_http_cache() { function test_tag_no_remote_cache() { function test_remote_http_cache_with_bad_netrc_content() { function test_remote_http_cache_with_unused_netrc_no_warning() { function test_remote_http_cache_with_netrc_warning() {
for,0

if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ "$PLATFORM" = "linux" ]]; then if netstat -tn | grep -qE ":${http_port}\\s+ESTABLISHED$"; then if [[ "$PLATFORM" = "linux" ]]; then if netstat -tn | grep -qE ":${http_port}\\s+ESTABLISHED$"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_execution_test.sh
lines,3415
function,118
function set_up() { function tear_down() { function has_utf8_locale() { function setup_credential_helper_test() { function test_credential_helper_remote_cache() { function test_credential_helper_remote_execution() { function test_credential_helper_clear_cache() { function test_remote_grpc_cache_with_protocol() { function DISABLED_test_remote_grpc_via_unix_socket_proxy() { function DISABLED_test_remote_grpc_via_unix_socket_direct() { function test_cc_binary() { function test_cc_test() { function test_cc_test_split_xml() { function test_cc_binary_grpc_cache() { function test_cc_binary_grpc_cache_statsline() { function test_failing_cc_test() { function test_local_fallback_works_with_local_strategy() { function test_local_fallback_with_local_strategy_lists() { function test_local_fallback_with_sandbox_strategy_lists() { function test_local_fallback_to_sandbox_by_default() { function test_local_fallback_works_with_sandboxed_strategy() { function test_local_fallback_if_no_remote_executor() { function test_local_fallback_if_remote_executor_unavailable() { function is_file_uploaded() { function test_failed_test_outputs_not_uploaded() { function test_genrule_large_output_chunking() { function test_py_test() { function test_py_test_with_xml_output() { function test_failing_py_test_with_xml_output() { function test_noinput_action() { function test_timeout() { function test_passed_env_user() { function test_exitcode() { function test_display_non_testerrors() { function set_symlinks_in_directory_testfixtures() { function test_symlinks_in_directory() { function test_symlinks_in_directory_cache_only() { function test_treeartifact_in_runfiles() { function test_remote_exec_properties() { function test_tag_no_cache() { function test_tag_no_cache_for_disk_cache() { function test_tag_no_remote_cache() { function test_tag_no_remote_cache_upload() { function test_tag_no_remote_cache_for_disk_cache() { function test_tag_no_remote_exec() { function test_require_cached() { function test_nobuild_runfile_links() { function test_platform_default_properties_invalidation() { function test_platform_default_properties_invalidation_with_platform_exec_properties() { function test_platform_default_properties_invalidation_with_platform_remote_execution_properties() { function test_combined_disk_remote_exec_with_flag_combinations() { function genrule_combined_disk_remote_exec() { function test_combined_disk_remote_exec_nocache_tag() { function test_genrule_combined_disk_grpc_cache() { function test_combined_cache_upload() { function test_combined_cache_with_no_remote_cache_tag_remote_cache() { function test_combined_cache_with_no_remote_cache_tag_remote_execution() { function combined_cache_with_no_remote_cache_tag() { function test_combined_cache_with_no_remote_tag() { function test_repo_remote_exec() { function test_repo_remote_exec_path_argument() { function test_repo_remote_exec_timeout() { function test_repo_remote_exec_file_upload() { function test_remote_cache_intermediate_outputs() { function setup_exclusive_test_case() { function test_exclusive_test_hit_remote_cache() { function test_exclusive_test_and_no_cache_test_results() { function test_exclusive_test_wont_remote_exec() { function test_java_rbe_coverage_produces_report() { function generate_empty_tree_artifact_as_inputs() { function test_empty_tree_artifact_as_inputs() { function test_empty_tree_artifact_as_inputs_remote_cache() { function generate_tree_artifact_output() { function test_create_tree_artifact_outputs() { function test_create_tree_artifact_outputs_remote_cache() { function test_symlink_in_tree_artifact() { function test_cc_rbe_coverage_produces_report() { function test_cc_rbe_coverage_produces_report_with_llvm() { function test_grpc_connection_errors_are_propagated() { function test_async_upload_works_for_flaky_tests() { function test_missing_outputs_dont_upload_action_result() { function test_failed_action_dont_check_declared_outputs() { function test_local_test_execution_with_disk_cache() { function test_unicode() { function setup_external_cc_test() { function test_external_cc_test() { function test_external_cc_test_sibling_repository_layout() { function do_test_unresolved_symlink() { function test_unresolved_symlink_internal_relative() { function test_unresolved_symlink_internal_absolute() { function test_unresolved_symlink_spawn_relative() { function test_unresolved_symlink_spawn_absolute() { function setup_cc_binary_tool_with_dynamic_deps() { function test_cc_binary_tool_with_dynamic_deps() { function test_cc_binary_tool_with_dynamic_deps_sibling_repository_layout() { function test_external_cc_binary_tool_with_dynamic_deps() { function test_external_cc_binary_tool_with_dynamic_deps_sibling_repository_layout() { function test_shard_status_file_checked_remote_download_minimal() { function test_cache_key_scrubbing() {
function set_up() { function tear_down() { function has_utf8_locale() { function setup_credential_helper_test() { function test_credential_helper_remote_cache() { function test_credential_helper_remote_execution() { function test_credential_helper_clear_cache() { function test_remote_grpc_cache_with_protocol() { function DISABLED_test_remote_grpc_via_unix_socket_proxy() { function DISABLED_test_remote_grpc_via_unix_socket_direct() { function test_cc_binary() { int main() { std::cout << "Hello world!" << std::endl; return 0; } function test_cc_test() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_cc_test_split_xml() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_cc_binary_grpc_cache() { int main() { std::cout << "Hello world!" << std::endl; return 0; } function test_cc_binary_grpc_cache_statsline() { int main() { std::cout << "Hello world!" << std::endl; return 0; } function test_failing_cc_test() { int main() { std::cout << "Fail me!" << std::endl; return 1; } function test_local_fallback_works_with_local_strategy() { function test_local_fallback_with_local_strategy_lists() { function test_local_fallback_with_sandbox_strategy_lists() { function test_local_fallback_to_sandbox_by_default() { function test_local_fallback_works_with_sandboxed_strategy() { function test_local_fallback_if_no_remote_executor() { function test_local_fallback_if_remote_executor_unavailable() { function is_file_uploaded() { function test_failed_test_outputs_not_uploaded() { int main() { std::cout << "Fail me!" << std::endl; return 1; } function test_genrule_large_output_chunking() { function test_py_test() { function test_py_test_with_xml_output() { function test_failing_py_test_with_xml_output() { function test_noinput_action() { function test_timeout() { function test_passed_env_user() { function test_exitcode() { function test_display_non_testerrors() { function set_symlinks_in_directory_testfixtures() { function test_symlinks_in_directory() { function test_symlinks_in_directory_cache_only() { function test_treeartifact_in_runfiles() { myrunfiles = ctx.runfiles(files=ctx.attr.dir.default_runfiles.files.to_list()) function test_remote_exec_properties() { function test_tag_no_cache() { function test_tag_no_cache_for_disk_cache() { function test_tag_no_remote_cache() { function test_tag_no_remote_cache_upload() { function test_tag_no_remote_cache_for_disk_cache() { function test_tag_no_remote_exec() { function test_require_cached() { function test_nobuild_runfile_links() { function test_platform_default_properties_invalidation() { function test_platform_default_properties_invalidation_with_platform_exec_properties() { function test_platform_default_properties_invalidation_with_platform_remote_execution_properties() { function test_combined_disk_remote_exec_with_flag_combinations() { function genrule_combined_disk_remote_exec() { function test_combined_disk_remote_exec_nocache_tag() { function test_genrule_combined_disk_grpc_cache() { function test_combined_cache_upload() { function test_combined_cache_with_no_remote_cache_tag_remote_cache() { function test_combined_cache_with_no_remote_cache_tag_remote_execution() { function combined_cache_with_no_remote_cache_tag() { function test_combined_cache_with_no_remote_tag() { function test_repo_remote_exec() { function test_repo_remote_exec_path_argument() { function test_repo_remote_exec_timeout() { function test_repo_remote_exec_file_upload() { if res.stdout.strip() != "hello world": function test_remote_cache_intermediate_outputs() { function setup_exclusive_test_case() { function test_exclusive_test_hit_remote_cache() { function test_exclusive_test_and_no_cache_test_results() { function test_exclusive_test_wont_remote_exec() { function test_java_rbe_coverage_produces_report() { public void testFactorialOfZeroIsOne() throws Exception { FN:3,factorial/Factorial::<init> ()V FNDA:0,factorial/Factorial::<init> ()V function generate_empty_tree_artifact_as_inputs() { function test_empty_tree_artifact_as_inputs() { function test_empty_tree_artifact_as_inputs_remote_cache() { function generate_tree_artifact_output() { function test_create_tree_artifact_outputs() { function test_create_tree_artifact_outputs_remote_cache() { function test_symlink_in_tree_artifact() { function test_cc_rbe_coverage_produces_report() { function test_cc_rbe_coverage_produces_report_with_llvm() { function test_grpc_connection_errors_are_propagated() { function test_async_upload_works_for_flaky_tests() { function test_missing_outputs_dont_upload_action_result() { function test_failed_action_dont_check_declared_outputs() { function test_local_test_execution_with_disk_cache() { function test_unicode() { function setup_external_cc_test() { void print_greeting(); void print_greeting() { int main() { print_greeting(); function test_external_cc_test() { function test_external_cc_test_sibling_repository_layout() { function do_test_unresolved_symlink() { function test_unresolved_symlink_internal_relative() { function test_unresolved_symlink_internal_absolute() { function test_unresolved_symlink_spawn_relative() { function test_unresolved_symlink_spawn_absolute() { function setup_cc_binary_tool_with_dynamic_deps() { void print_greeting(); void print_greeting() { int main() { print_greeting(); function test_cc_binary_tool_with_dynamic_deps() { function test_cc_binary_tool_with_dynamic_deps_sibling_repository_layout() { function test_external_cc_binary_tool_with_dynamic_deps() { function test_external_cc_binary_tool_with_dynamic_deps_sibling_repository_layout() { function test_shard_status_file_checked_remote_download_minimal() { function test_cache_key_scrubbing() {
for,8
) for x in ["a", "b"]] "(for i in {1..22} ; do cat tmp.txt >> \$@; cp \$@ tmp.txt; done)", for i in {1..3} for flags in "${testcases[@]}"; do "for i in {1..3}; do echo \"Sleeping $i...\" && sleep 1; done"], timeout=1) || fail "Failed to run coverage for cc_test" || fail "Failed to run coverage for cc_test" expect_log "Sharding requested, but the test runner did not advertise support for it by touching TEST_SHARD_STATUS_FILE."
if,44
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [ -e "$cas_path/${h:0:64}" ]; then return 0; else return 1; fi if __name__ == "__main__": if __name__ == "__main__": if __name__ == "__main__": if bazel build \ if [[ "$testcase_flags" == --noremote_accept_cached* ]]; then if res.return_code != 0: if len(entries) != 2: if entries[0] != "ISA=x86-64": if entries[1] != "OSFamily=Linux": if res.return_code != 0: if res.stdout.strip() != "hello world": if [[ "$PLATFORM" == "darwin" ]]; then if (argc > 1) { if [[ ! -s bazel-testlogs/a/cc/coverage_test/hello-test/coverage.dat ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ ! -x "${clang}" ]]; then if [ "$clang_version" -lt 9 ]; then if ! type -P llvm-cov; then if ! type -P llvm-profdata; then if (argc > 1) { if [[ ! -s bazel-testlogs/a/cc/coverage_test/hello-test/coverage.dat ]]; then if ! "$is_windows"; then if ! has_utf8_locale; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if ctx.attr.strategy == "internal": elif ctx.attr.strategy == "spawn": if [[ "$(cat bazel-bin/pkg/b.txt)" != "$link_target" ]]; then if [[ "$(cat bazel-bin/pkg/b.txt)" != "$link_target" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_utils.sh
lines,107
function,8
function start_worker() { function stop_worker() { function count_disk_ac_files() { function count_disk_cas_files() { function count_remote_ac_files() { function count_remote_cas_files() { function remote_cas_file_exist() { function append_remote_cas_files() {
function start_worker() { function stop_worker() { function count_disk_ac_files() { function count_disk_cas_files() { function count_remote_ac_files() { function count_remote_cas_files() { function remote_cas_file_exist() { function append_remote_cas_files() {
for,1
fail "Timed out waiting for remote worker to start."
if,8
if [ ! -s "${pid_file}" ]; then if [ -s "${pid_file}" ]; then if [ -d "${work_path}" ]; then if [ -d "${cas_path}" ]; then if [ -d "$1/ac" ]; then if [ -d "$1/cas" ]; then if [ -d "$cas_path/ac" ]; then if [ -d "$cas_path/cas" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_build_event_uploader_test.sh
lines,566
function,22
function set_up() { function tear_down() { function expect_bes_file_uploaded() { function expect_bes_file_not_uploaded() { function test_upload_minimal_convert_paths_for_existed_blobs() { function test_upload_all_convert_paths_for_existed_blobs() { function test_upload_minimal_doesnt_upload_missing_blobs() { function test_upload_all_upload_missing_blobs() { function test_upload_minimal_respect_no_upload_results() { function test_upload_all_ignore_no_upload_results() { function test_upload_minimal_respect_no_upload_results_combined_cache() { function test_upload_all_combined_cache() { function test_upload_minimal_alias_action_doesnt_upload_missing_blobs() { function test_upload_all_alias_action() { function test_upload_minimal_trees_doesnt_upload_missing_blobs() { function test_upload_all_trees() { function test_upload_minimal_upload_testlogs() { function test_upload_all_upload_testlogs() { function test_upload_minimal_upload_buildlogs() { function test_upload_all_upload_buildlogs() { function test_upload_minimal_upload_profile() { function test_upload_all_upload_profile() {
function set_up() { function tear_down() { function expect_bes_file_uploaded() { function expect_bes_file_not_uploaded() { function test_upload_minimal_convert_paths_for_existed_blobs() { function test_upload_all_convert_paths_for_existed_blobs() { function test_upload_minimal_doesnt_upload_missing_blobs() { function test_upload_all_upload_missing_blobs() { function test_upload_minimal_respect_no_upload_results() { function test_upload_all_ignore_no_upload_results() { function test_upload_minimal_respect_no_upload_results_combined_cache() { function test_upload_all_combined_cache() { function test_upload_minimal_alias_action_doesnt_upload_missing_blobs() { function test_upload_all_alias_action() { function test_upload_minimal_trees_doesnt_upload_missing_blobs() { function test_upload_all_trees() { function test_upload_minimal_upload_testlogs() { function test_upload_all_upload_testlogs() { function test_upload_minimal_upload_buildlogs() { function test_upload_all_upload_buildlogs() { function test_upload_minimal_upload_profile() { function test_upload_all_upload_profile() {
for,0

if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ $(cat $BEP_JSON) =~ ${file}\",\"uri\":\"bytestream://localhost:${worker_port}/blobs/([^/]*) ]]; then if ! remote_cas_file_exist ${BASH_REMATCH[1]}; then if [[ $(cat $BEP_JSON) =~ ${file}\",\"uri\":\"bytestream://localhost:${worker_port}/blobs/([^/]*) ]]; then if remote_cas_file_exist ${BASH_REMATCH[1]}; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/build_without_the_bytes_test.sh
lines,2194
function,72
function set_up() { function tear_down() { function setup_cc_tree() { function test_cc_tree_remote_executor() { function test_cc_tree_remote_cache() { function test_cc_tree_prefetching() { function test_cc_include_scanning_and_minimal_downloads() { function test_downloads_minimal_hit_action_cache() { function setup_genrule_with_dep() { function test_downloads_all() { function test_downloads_toplevel() { function test_downloads_toplevel_change_toplevel_targets() { function test_downloads_toplevel_runfiles() { function test_downloads_toplevel_symlink_action() { function setup_symlink_output() { function test_downloads_toplevel_non_dangling_symlink_output() { function test_downloads_toplevel_dangling_symlink_output() { function test_download_toplevel_tree_artifact() { function test_download_toplevel_templated_tree_artifact() { function test_downloads_toplevel_src_runfiles() { function test_download_toplevel_test_rule() { function do_test_non_test_toplevel_targets() { function test_non_test_toplevel_targets_toplevel() { function test_non_test_toplevel_targets_minimal() { function test_downloads_minimal_bep() { function test_bytestream_uri_prefix() { function test_undeclared_test_outputs_bep() { function test_nozip_undeclared_test_outputs() { function test_multiple_test_attempts() { function test_downloads_minimal_bep_partially_failed_target() { function test_downloads_minimal_bep_partially_failed_aspect() { function test_downloads_minimal_stable_status() { function test_testxml_download_toplevel() { function test_download_toplevel_no_remote_execution() { function test_download_toplevel_can_delete_directory_outputs() { function test_prefetcher_change_permission() { function test_prefetcher_change_permission_writable_outputs() { function do_test_prefetcher_recreate_dir() { function test_prefetcher_recreate_non_tree_dir() { function test_prefetcher_recreate_tree_dir() { function test_remote_cache_intermediate_outputs_toplevel() { function test_remote_download_toplevel_with_non_toplevel_unused_inputs_list() { function test_remote_download_minimal_with_test_xml_generation() { function test_output_file_permission() { function test_output_file_permission() { function test_download_toplevel_when_turn_remote_cache_off() { function test_download_top_level_remote_execution_after_local_fetches_inputs() { function test_remote_download_regex() { function test_bazel_run_with_minimal() { function test_java_rbe_coverage_produces_report() { function test_remote_cache_eviction_retries() { function test_remote_cache_eviction_retries_with_fixed_invocation_id() { function test_download_toplevel_symlinks_runfiles() { function test_download_toplevel_root_symlinks_runfiles() { function test_output_path_is_symlink() {
function set_up() { function tear_down() { function setup_cc_tree() { function test_cc_tree_remote_executor() { function test_cc_tree_remote_cache() { function test_cc_tree_prefetching() { function test_cc_include_scanning_and_minimal_downloads() { int main() { return 0; } int main() { return 1; } function test_downloads_minimal_hit_action_cache() { function setup_genrule_with_dep() { function test_downloads_all() { function test_downloads_toplevel() { function test_downloads_toplevel_change_toplevel_targets() { function test_downloads_toplevel_runfiles() { int main() { std::cout << "foo" << std::endl; return 0; } function test_downloads_toplevel_symlink_action() { int f() { extern int f(); int main() { return f() == 42 ? 0 : 1; } function setup_symlink_output() { "target": attr.string(), function test_downloads_toplevel_non_dangling_symlink_output() { function test_downloads_toplevel_dangling_symlink_output() { function test_download_toplevel_tree_artifact() { function test_download_toplevel_templated_tree_artifact() { command = "echo 'int main(){return 0;}' > %s/foo.cc" % out.path, function test_downloads_toplevel_src_runfiles() { function test_download_toplevel_test_rule() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function do_test_non_test_toplevel_targets() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_non_test_toplevel_targets_toplevel() { function test_non_test_toplevel_targets_minimal() { function test_downloads_minimal_bep() { function test_bytestream_uri_prefix() { function test_undeclared_test_outputs_bep() { function test_nozip_undeclared_test_outputs() { function test_multiple_test_attempts() { function test_downloads_minimal_bep_partially_failed_target() { "outs": attr.output_list(), function test_downloads_minimal_bep_partially_failed_aspect() { bad_outputs = list() good_outputs = list() function test_downloads_minimal_stable_status() { function test_testxml_download_toplevel() { function test_download_toplevel_no_remote_execution() { function test_download_toplevel_can_delete_directory_outputs() { function test_prefetcher_change_permission() { function test_prefetcher_change_permission_writable_outputs() { function do_test_prefetcher_recreate_dir() { function test_prefetcher_recreate_non_tree_dir() { function test_prefetcher_recreate_tree_dir() { function test_remote_cache_intermediate_outputs_toplevel() { function test_remote_download_toplevel_with_non_toplevel_unused_inputs_list() { "out": attr.output(), function test_remote_download_minimal_with_test_xml_generation() { public void test() {} function test_output_file_permission() { function test_output_file_permission() { function test_download_toplevel_when_turn_remote_cache_off() { function test_download_top_level_remote_execution_after_local_fetches_inputs() { function test_remote_download_regex() { public void test() { Assert.assertTrue(Library.TEST); } function test_bazel_run_with_minimal() { function test_java_rbe_coverage_produces_report() { public void testFactorialOfZeroIsOne() throws Exception { FN:2,factorial/Factorial::<init> ()V FNDA:0,factorial/Factorial::<init> ()V function test_remote_cache_eviction_retries() { function test_remote_cache_eviction_retries_with_fixed_invocation_id() { function test_download_toplevel_symlinks_runfiles() { function test_download_toplevel_root_symlinks_runfiles() { function test_output_path_is_symlink() {
for,5
for name, exit in (("foo", 0), ("bar", 0)): for name, exit, suffix in ( for out in ctx.rule.attr.outs: cmd = "for f in $(OUTS); do echo foo > $(RULEDIR)/$$f; done" for input in inputs:
if,37
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if ! [[ -f bazel-bin/a/foo.txt ]]; then if ! [[ -f bazel-bin/a/foobar.txt ]]; then if ! [[ -f bazel-bin/a/foo.txt ]]; then if ! [[ -f bazel-bin/a/foobar.txt ]]; then if [[ -f bazel-bin/a/foo.txt ]]; then if ! [[ -f bazel-bin/a/foobar.txt ]]; then if ! [[ -f bazel-bin/a/foobar.txt ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$(readlink bazel-bin/pkg/sym)" != "target.txt" ]]; then if [[ "$(readlink bazel-bin/pkg/sym)" != "target.txt" ]]; then if ! [[ -f bazel-bin/a/tree/file.txt ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if ! [[ -f bazel-bin/a/_pic_objs/main/dir/foo.pic.o ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if not ctx.rule.attr.outs: if out.name[0] == "f": if ! [[ -f "bazel-bin/some/nested/file" ]]; then if ! [[ -f "bazel-bin/some/nested/file" ]]; then if ! [[ -f "bazel-bin/some/nested/file" ]]; then if ! [[ -f "bazel-bin/some/nested/file" ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [[ -f bazel-bin/a/foo.out ]]; then if [ "$first_id" == "$second_id" ]; then if [[ -f bazel-bin/a/foo.out ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote/remote_execution_sandboxing_test.sh
lines,133
function,5
function set_up() { function tear_down() { function test_genrule() { function test_genrule_can_write_to_path() { function test_genrule_cannot_write_to_other_path() {
function set_up() { function tear_down() { function test_genrule() { function test_genrule_can_write_to_path() { function test_genrule_cannot_write_to_other_path() {
for,0

if,9
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [ -d "${readonly_path}" ]; then if [ -d "${writable_path}" ]; then if [[ "$(uname -s)" != Linux ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_sh_test.sh
lines,516
function,16
function set_up_sh_test_coverage() { function test_sh_test_coverage() { function test_sh_test_coverage_indirect() { function test_sh_test_coverage_cc_binary() { function test_sh_test_coverage_cc_binary_and_java_binary() { function test_coverage_as_tree_artifact() {
function set_up_sh_test_coverage() { public void print() { orangeLib orange = new orangeLib(); orange.print(); FN:3,com/google/orange/orangeBin::<init> ()V FNDA:0,com/google/orange/orangeBin::<init> ()V FN:3,com/google/orange/orangeLib::<init> ()V FN:6,com/google/orange/orangeLib::print ()V FNDA:1,com/google/orange/orangeLib::<init> ()V FNDA:1,com/google/orange/orangeLib::print ()V function test_sh_test_coverage() { function test_sh_test_coverage_indirect() { function test_sh_test_coverage_cc_binary() { function test_sh_test_coverage_cc_binary_and_java_binary() { public void print() { orangeLib orange = new orangeLib(); orange.print(); FN:2,com/google/orange/orangeBin::<init> ()V FNDA:0,com/google/orange/orangeBin::<init> ()V FN:2,com/google/orange/orangeLib::<init> ()V FN:4,com/google/orange/orangeLib::print ()V FNDA:1,com/google/orange/orangeLib::<init> ()V FNDA:1,com/google/orange/orangeLib::print ()V function test_coverage_as_tree_artifact() { echo "FN:2,com/google/orange/orangeLib::<init> ()V" > $COVERAGE_OUTPUT_FILE
for,6
bazel coverage --test_output=all //:orange-sh &>$TEST_log || fail "Coverage for //:orange-sh failed" cmp expected.dat "$coverage_file_path" || fail "Coverage output file is different than the expected file for data dep of sh_binary" bazel coverage --test_output=all //:orange-sh-indirect &>$TEST_log || fail "Coverage for //:orange-sh-indirect failed" cmp expected.dat "$coverage_file_path" || fail "Coverage output file is different than the expected file for data dep of sh_library" //:num-sh &>$TEST_log || fail "Coverage for //:orange-sh failed" //:num-sh &>$TEST_log || fail "Coverage for //:orange-sh failed"
if,4
if is_gcov_missing_or_wrong_version; then if (argc > 1) { if is_gcov_missing_or_wrong_version; then if (argc > 1) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/repository_abort_test.sh
lines,124
function,2

test_other_fail() { test_timeout() {
for,0

if,1
if st.return_code == 0:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_permissions_test.sh
lines,146
function,3
function test_output_readonly() { function test_output_writable() { function test_create_tree_artifact_outputs_permissions() {
function test_output_readonly() { function test_output_writable() { function test_create_tree_artifact_outputs_permissions() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_thinlto_test.sh
lines,105
function,3
function write_hello_world_files { function test_bazel_thinlto() {
int hello1() { void hello2() { int main() { hello2(); function test_bazel_thinlto() {
for,0

if,4
if is_darwin; then if [[ ! -x ${clang_tool:-/usr/bin/clang_tool} ]]; then if [[ $major_version < 6 ]]; then if [[ -z $(find "bazel-bin/hello/hello.lto" -path "*hello/_objs/hello/hello.o.thinlto.bc" -print -quit) ]] \
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/cc_import_starlark_test.sh
lines,51
function,1
function test_all_starlark_written_tests() {
function test_all_starlark_written_tests() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_with_jdk_test.sh
lines,293
function,11
function bazel() { function set_up() { function test_bazel_uses_bundled_jdk() { function test_bazel_license_prints_jdk_license() { function test_bazel_reports_missing_local_jdk() { function test_bazel_detects_local_jdk_version8() { function test_bazel_detects_local_jdk_version11() { function test_bazel_detects_local_jdk_version11_with_only_major() { function test_bazel_gracefully_handles_unknown_java() { function test_bazel_compiles_with_localjdk() {
function bazel() { function set_up() { function test_bazel_uses_bundled_jdk() { function test_bazel_license_prints_jdk_license() { function test_bazel_reports_missing_local_jdk() { function test_bazel_detects_local_jdk_version8() { function test_bazel_detects_local_jdk_version11() { function test_bazel_detects_local_jdk_version11_with_only_major() { function test_bazel_gracefully_handles_unknown_java() { function test_bazel_compiles_with_localjdk() {
for,0

if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if [[ $javabase = external/* ]]; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_hermetic_py_test.sh
lines,178
function,11
function set_up() { function get_coverage_file_path_from_test_log() { function set_up_py_test_coverage() { function test_py_test_coverage() {
function set_up() { function get_coverage_file_path_from_test_log() { function set_up_py_test_coverage() { parser = argparse.ArgumentParser() args = parser.parse_args() out_file.write(in_file.read()) def Hello(): def Goodbye(): hello.Hello() unittest.main() function test_py_test_coverage() {
for,2
bazel coverage --test_output=all //:hello_test &>$TEST_log || fail "Coverage for //:hello_test failed" cmp expected.dat "$coverage_file_path" || fail "Coverage output file is different than the expected file for py_library."
if,2
if mode == "run": if __name__ == "__main__":
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_build_event_stream_test.sh
lines,266
function,7
function set_up() { function test_fetch_test() { function test_fetch_in_build() { function test_query() { function test_fetch_failure() { function test_residue_in_run_bep(){ function test_no_residue_in_run_bep(){
function set_up() { function test_fetch_test() { function test_fetch_in_build() { function test_query() { function test_fetch_failure() { function test_residue_in_run_bep(){ function test_no_residue_in_run_bep(){
for,3
for i in "$@"; do for i in "$@"; do run_suite "Bazel-specific integration tests for the build-event stream"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/remote_helpers.sh
lines,295
function,18
function serve_file() { function serve_file_auth() { function serve_jar() { function make_test_jar() { function make_test_aar() { function serve_redirect() { function serve_not_found() { function serve_timeout() { function wait_for_server_startup() { function create_artifact() { function serve_artifact() { function startup_server() { function startup_auth_server() { function shutdown_server() { function kill_nc() { function setup_credential_helper() { function expect_credential_helper_calls() {
function serve_file() { function serve_file_auth() { function serve_jar() { function make_test_jar() { public static void frolic() { function make_test_aar() { function serve_redirect() { function serve_not_found() { function serve_timeout() { function wait_for_server_startup() { function create_artifact() { function serve_artifact() { function startup_server() { function startup_auth_server() { function shutdown_server() { function kill_nc() { function setup_credential_helper() { function expect_credential_helper_calls() {
for,2
echo "waiting for server, exit code: $?" echo "done waiting for server, exit code: $?"
if,3
if [ $packaging == "aar" ]; then if [ ! -z "${srcjar_artifact+x}" ]; then if [[ "$expected" != "$actual" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_integration_test.sh
lines,2801
function,96
function zip_up() { function tar_gz_up() { function tar_xz_up() { function http_archive_helper() { function assert_files_same() { function test_http_archive_zip() { function test_http_archive_tgz() { function test_http_archive_tar_xz() { function test_http_archive_tar_zstd() { function test_http_archive_upper_case_sha() { function test_http_archive_no_server() { function test_http_archive_mismatched_sha256() { function test_sha256_caching() { function test_cached_across_server_restart() { function test_jar_download() { function test_http_to_https_redirect() { function test_http_404() { function test_http_download() { function test_http_timeout() { function test_http_redirect() { function test_empty_file() { function test_new_remote_repo_with_build_file() { function test_new_remote_repo_with_build_file_content() { function test_new_remote_repo_with_workspace_file() { function test_new_remote_repo_with_workspace_file_content() { function do_new_remote_repo_test() { function test_fetch() { function test_prefix_stripping_tar_gz() { function test_prefix_stripping_zip() { function test_prefix_stripping_existing_repo() { function test_adding_prefix_zip() { function test_adding_and_stripping_prefix_zip() { function test_moving_build_file() { function test_changing_build_file() { function test_android_sdk_basic_load() { function test_use_bind_as_repository() { function test_flip_flopping() { function test_sha256_weird() { function test_sha256_incorrect() { function test_integrity_correct() { function test_integrity_weird() { function test_integrity_incorrect() { function test_same_name() { function test_missing_build() { function test_inherit_build() { function test_failing_fetch_with_keep_going() { function test_query_cached() { function test_repository_cache_relative_path() { function test_repository_cache_default() { function test_cache_split() { function test_cache_disable { function test_repository_cache() { function test_cache_probe() { function test_cache_hit_reported() { function test_distdir() { function test_distdir_outputname() { function test_distdir_relative_path() { function test_distdir_non_existent() { function test_good_symlinks() { function test_distdir_option_not_sticky() { function test_bad_symlinks() { function test_progress_reporting() { function test_progress_reporting() { function test_prefix_suggestions() { function test_suggest_nostripprefix() { function test_loaded_file_reported() { function test_report_files_searched() { function test_report_package_external() { function test_location_reported() { function test_circular_definition_reported() { function test_missing_repo_reported() { function test_overwrite_existing_workspace_build() { function test_external_java_target_depends_on_external_resources() { function test_query_external_packages() { function test_query_external_all_targets() { function test_external_deps_skymeld() {
set_up() { Mongoose.frolic(); tear_down() { function zip_up() { function tar_gz_up() { function tar_xz_up() { function http_archive_helper() { function assert_files_same() { function test_http_archive_zip() { function test_http_archive_tgz() { function test_http_archive_tar_xz() { function test_http_archive_tar_zstd() { function test_http_archive_upper_case_sha() { function test_http_archive_no_server() { function test_http_archive_mismatched_sha256() { function test_sha256_caching() { function test_cached_across_server_restart() { function test_jar_download() { Mongoose.frolic(); function test_http_to_https_redirect() { function test_http_404() { function test_http_download() { function test_http_timeout() { function test_http_redirect() { function test_empty_file() { function test_new_remote_repo_with_build_file() { function test_new_remote_repo_with_build_file_content() { function test_new_remote_repo_with_workspace_file() { function test_new_remote_repo_with_workspace_file_content() { function do_new_remote_repo_test() { function test_fetch() { function test_prefix_stripping_tar_gz() { function test_prefix_stripping_zip() { function test_prefix_stripping_existing_repo() { function test_adding_prefix_zip() { function test_adding_and_stripping_prefix_zip() { function test_moving_build_file() { function test_changing_build_file() { function test_android_sdk_basic_load() { function test_use_bind_as_repository() { function test_flip_flopping() { function test_sha256_weird() { function test_sha256_incorrect() { function test_integrity_correct() { function test_integrity_weird() { function test_integrity_incorrect() { function test_same_name() { function test_missing_build() { function test_inherit_build() { function test_failing_fetch_with_keep_going() { function test_query_cached() { function test_repository_cache_relative_path() { test_default_cache() function test_repository_cache_default() { function test_cache_split() { function test_repository_cache() { function test_cache_probe() { attrs = {"sha256" : attr.string()}, function test_cache_hit_reported() { function test_distdir() { function test_distdir_outputname() { attrs = { "urls" : attr.string_list(), "sha256" : attr.string() }, function test_distdir_relative_path() { function test_distdir_non_existent() { function test_good_symlinks() { function test_distdir_option_not_sticky() { function test_bad_symlinks() { function test_progress_reporting() { function test_progress_reporting() { function test_prefix_suggestions() { function test_suggest_nostripprefix() { function test_loaded_file_reported() { foo() function test_report_files_searched() { function test_report_package_external() { function test_location_reported() { repos() def repos(): foo_repos() def foo_repos(): function test_circular_definition_reported() { def foo(): def bar(): foo() bar() function test_missing_repo_reported() { attrs = { "value" : attr.string(), function test_overwrite_existing_workspace_build() { function test_external_java_target_depends_on_external_resources() { function test_query_external_packages() { function test_query_external_all_targets() { function test_external_deps_skymeld() {
for,5
for i in $(seq 1 3); do && fail "Should fail for lack of fetchable archive" || : expect_log 'no need for `strip_prefix`' for bad_file in \ for BUILD_FILE in \
if,6
if [[ $write_workspace -eq 0 ]]; then if [[ $write_workspace = 0 ]]; then if [ "$1" = "build_file" ] ; then if [ "$1" = "workspace_file" ]; then elif [ "$1" = "workspace_file_content" ]; then if not result.success:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_rules_test.sh
lines,1319
function,41
function test_sh_test() { function test_extra_action() { function test_with_arguments() { function test_top_level_test() { function test_cpp_libdeps() { function test_genrule_default_env() { function test_genrule_remote() { function test_genrule_remote_d() { function test_genrule_toolchain_dependency { function test_python_with_workspace_name() { function test_build_python_zip_with_middleman() { function test_build_with_aliased_input_file() { function test_visibility() { function test_executable_without_default_files() { function test_starlark_test_with_test_environment() { function test_starlark_rule_with_run_environment() { function setup_bash_runfiles_current_repository() { function library() { function library2() { function clean_runfiles_run() { function test_bash_runfiles_current_repository_binary_enable_runfiles() { function test_bash_runfiles_current_repository_binary_enable_runfiles_direct_run() { function test_bash_runfiles_current_repository_test_enable_runfiles() { function test_bash_runfiles_current_repository_binary_noenable_runfiles() { function test_bash_runfiles_current_repository_binary_noenable_runfiles_direct_run() { function test_bash_runfiles_current_repository_test_noenable_runfiles() { function test_bash_runfiles_current_repository_binary_nobuild_runfile_links() { function test_bash_runfiles_current_repository_binary_nobuild_runfile_links_direct_run() { function test_bash_runfiles_current_repository_test_nobuild_runfile_links() { function test_bash_runfiles_current_repository_action_binary_main_repo() { function test_bash_runfiles_current_repository_action_generated_binary_main_repo() { function test_bash_runfiles_current_repository_action_binary_external_repo() { function test_bash_runfiles_current_repository_action_generated_binary_external_repo() {
function test_sh_test() { function test_extra_action() { public void sayHi() { function test_with_arguments() { function test_top_level_test() { function test_cpp_libdeps() { int main() { function test_genrule_default_env() { function test_genrule_remote() { function test_genrule_remote_d() { function test_python_with_workspace_name() { def GetNumber(): def PrintNumber(): print("Print the number %d" % foo.GetNumber()) print("The number is %d" % foo.GetNumber()) print("The number is %d" % foo.GetNumber()) bar.PrintNumber() function test_build_python_zip_with_middleman() { function test_build_with_aliased_input_file() { function test_visibility() { function test_executable_without_default_files() { function test_starlark_test_with_test_environment() { function test_starlark_rule_with_run_environment() { function setup_bash_runfiles_current_repository() { function library() { function library2() { function clean_runfiles_run() { function test_bash_runfiles_current_repository_binary_enable_runfiles() { function test_bash_runfiles_current_repository_binary_enable_runfiles_direct_run() { function test_bash_runfiles_current_repository_test_enable_runfiles() { function test_bash_runfiles_current_repository_binary_noenable_runfiles() { function test_bash_runfiles_current_repository_binary_noenable_runfiles_direct_run() { function test_bash_runfiles_current_repository_test_noenable_runfiles() { function test_bash_runfiles_current_repository_binary_nobuild_runfile_links() { function test_bash_runfiles_current_repository_binary_nobuild_runfile_links_direct_run() { function test_bash_runfiles_current_repository_test_nobuild_runfile_links() { function test_bash_runfiles_current_repository_action_binary_main_repo() { function test_bash_runfiles_current_repository_action_generated_binary_main_repo() { function test_bash_runfiles_current_repository_action_binary_external_repo() { function test_bash_runfiles_current_repository_action_generated_binary_external_repo() {
for,0

if,29
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ ! -e "$(rlocation {{WORKSPACE_NAME}}/mypkg/runfile)" ]]; then if $is_windows; then if n < 2: if "$is_windows"; then if "$is_windows"; then if not "%FIXED_ONLY%" == "fixed" exit /B 1 if not "%FIXED_AND_INHERITED%" == "inherited" exit /B 1 if not "%FIXED_AND_INHERITED_BUT_NOT_SET%" == "fixed" exit /B 1 if not "%INHERITED_ONLY%" == "inherited" exit /B 1 if defined INHERITED_BUT_UNSET exit /B 1 if "$is_windows"; then if not "%FIXED_ONLY%" == "fixed" exit /B 1 if not "%FIXED_AND_INHERITED%" == "inherited" exit /B 1 if not "%FIXED_AND_INHERITED_BUT_NOT_SET%" == "fixed" exit /B 1 if not "%INHERITED_ONLY%" == "inherited" exit /B 1 if defined INHERITED_BUT_UNSET exit /B 1
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_localtest_test.sh
lines,51
function,1
function test_run_local() {
function test_run_local() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_embedded_starlark_test.sh
lines,154
function,4

test_pkg_tar() { test_pkg_tar_quoting() { test_http_archive() { test_new_git_repository() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/starlark_repository_test.sh
lines,2411
function,92
function test_macro_local_repository() { function test_load_from_symlink_to_outside_of_workspace() { function test_external_load_from_workspace() { function test_load_repository_with_load() { function test_cycle_load_repository() { function test_load_nonexistent_with_subworkspace() { function test_starlark_local_repository() { function setup_starlark_repository() { function test_starlark_flags_affect_repository_rule() { function test_starlark_repository_which_and_execute() { function test_starlark_repository_execute_stderr() { function test_starlark_repository_execute_env_and_workdir() { function test_starlark_repository_environ() { function write_environ_starlark() { function setup_invalidation_test() { function environ_invalidation_test_template() { function environ_invalidation_action_env_test_template() { function test_starlark_repository_environ_invalidation() { function test_starlark_repository_environ_invalidation_batch() { function test_starlark_repository_environ_invalidation_action_env() { function test_starlark_repository_environ_invalidation_action_env_batch() { function bzl_invalidation_test_template() { function test_starlark_repository_bzl_invalidation() { function test_starlark_repository_bzl_invalidation_batch() { function file_invalidation_test_template() { function test_starlark_repository_file_invalidation() { function test_starlark_repository_file_invalidation_batch() { function starlark_invalidation_test_template() { function test_starlark_invalidation() { function test_starlark_invalidation_batch() { function test_repo_env() { function test_repo_env_inverse() { function test_repo_env_invalidation() { function test_starlark_repository_executable_flag() { function test_starlark_repository_download() { function test_starlark_repository_context_downloads_return_struct() { function test_starlark_repository_download_args() { function test_starlark_repository_download_and_extract() { function test_bazel_version() { function test_existing_rule() { function test_configure_like_repos() { function test_timeout_tunable() { function test_sync_only() { function test_download_failure_message() { function test_circular_load_error_message() { function test_ciruclar_load_error_with_path_message() { function setup_auth() { function test_auth_from_starlark() { function test_auth_from_credential_helper() { function test_auth_from_credential_helper_overrides_starlark() { function test_netrc_reading() { function test_use_netrc() { function test_disallow_unverified_http() { function tear_down() { function test_http_archive_netrc() { function test_http_archive_auth_patterns() { function test_http_archive_implicit_netrc() { function test_http_archive_credential_helper() { function test_http_archive_credential_helper_overrides_netrc() { function test_disable_download_should_prevent_downloading() { function test_disable_download_should_allow_distdir() { function test_disable_download_should_allow_local_repository() { function test_no_restarts_fetching_with_worker_thread() { function test_duplicate_value_in_environ() {
function test_macro_local_repository() { function test_load_from_symlink_to_outside_of_workspace() { def c(): function test_external_load_from_workspace() { function test_load_repository_with_load() { def macro(): macro() macro() function test_cycle_load_repository() { def macro(): macro() function test_load_nonexistent_with_subworkspace() { function test_starlark_local_repository() { function setup_starlark_repository() { function test_starlark_flags_affect_repository_rule() { function test_starlark_repository_which_and_execute() { function test_starlark_repository_execute_stderr() { function test_starlark_repository_execute_env_and_workdir() { function test_starlark_repository_environ() { function write_environ_starlark() { execution = int(exe_result.stdout.strip()) + 1 function setup_invalidation_test() { function environ_invalidation_test_template() { function environ_invalidation_action_env_test_template() { function test_starlark_repository_environ_invalidation() { function test_starlark_repository_environ_invalidation_batch() { function test_starlark_repository_environ_invalidation_action_env() { function test_starlark_repository_environ_invalidation_action_env_batch() { function bzl_invalidation_test_template() { function test_starlark_repository_bzl_invalidation() { function test_starlark_repository_bzl_invalidation_batch() { function file_invalidation_test_template() { function test_starlark_repository_file_invalidation() { function test_starlark_repository_file_invalidation_batch() { function starlark_invalidation_test_template() { function test_starlark_invalidation() { function test_starlark_invalidation_batch() { function test_repo_env() { function test_repo_env_inverse() { function test_repo_env_invalidation() { function test_starlark_repository_executable_flag() { function test_starlark_repository_download() { function test_starlark_repository_context_downloads_return_struct() { function test_starlark_repository_download_args() { "urls" : attr.string_list(), "output" : attr.string(), "sha256" : attr.string(), function test_starlark_repository_download_and_extract() { function test_bazel_version() { function test_existing_rule() { macro() s in native.existing_rules())) def macro(): function test_configure_like_repos() { attrs = {"reference" : attr.label()}, attrs = {"reference" : attr.label()}, function test_timeout_tunable() { function test_sync_only() { function test_download_failure_message() { attrs = { "data" : attr.label() }, def root_cause(): root_cause() def root_cause(): function test_circular_load_error_message() { function test_ciruclar_load_error_with_path_message() { function setup_auth() { "url" : attr.string(), "sha256" : attr.string(), function test_auth_from_starlark() { function test_auth_from_credential_helper() { function test_auth_from_credential_helper_overrides_starlark() { function test_netrc_reading() { attrs = {"path": attr.string()}, def check_equal_expected(): cmd = "echo %s > $@" % (check_equal_expected(),) function test_use_netrc() { attrs = {"path": attr.string(), "urls": attr.string_list() def check_equal_expected(): cmd = "echo %s > $@" % (check_equal_expected(),) function test_disallow_unverified_http() { function tear_down() { function test_http_archive_netrc() { function test_http_archive_auth_patterns() { function test_http_archive_implicit_netrc() { function test_http_archive_credential_helper() { function test_http_archive_credential_helper_overrides_netrc() { function test_disable_download_should_prevent_downloading() { function test_disable_download_should_allow_distdir() { function test_disable_download_should_allow_local_repository() { function test_no_restarts_fetching_with_worker_thread() { function test_duplicate_value_in_environ() {
for,2
) for name in ["source", "configure"] ] ) for name in ["login", "password"]]
if,38
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if bash == None: if bin == None: if result.return_code != 0: if result.stderr != "": if result.return_code != 1: if result.stdout != "": if result.return_code != 0: if "$is_windows"; then return r_ctx.os.environ[var] if var in r_ctx.os.environ else "undefined" if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if [ "$version" == "development version" ]; then if st.return_code: return r_ctx.os.environ[var] if var in r_ctx.os.environ else "undefined" if [[ $ if [[ $ auth = { ctx.attr.url: AUTH_ATTRS } if AUTH_ATTRS else {}, if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if netrc == expected: if "$is_windows"; then if auth == expected: if [ -d "${TEST_TMPDIR}/server_dir" ]; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/run_test.sh
lines,214
function,4
function test_running_test_target_with_runfiles_disabled() { function test_windows_argument_escaping() { function test_run_with_runfiles_env() { function test_run_test_exit_code() {
function test_running_test_target_with_runfiles_disabled() { function test_windows_argument_escaping() { function test_run_with_runfiles_env() { function test_run_test_exit_code() {
for,0

if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then content = "@echo my_test" if $IsWindows else " if ! "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/unix_digest_hash_attribute_name_test.sh
lines,72
function,2
function test_xattr_operations_in_profile_log {
fail "Bazel did not perform getxattr() calls"
for,1
run_suite "Integration tests for --unix_digest_hash_attribute_name"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if type xattr 2> /dev/null; then elif type setfattr 2> /dev/null; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_tools_dist_test.sh
lines,147
function,13
function expect_path_in_java_tools() { function test_java_tools_has_ijar() { function test_java_tools_has_zlib() { function test_java_tools_has_native_windows() { function test_java_tools_has_cpp_util() { function test_java_tools_has_desugar_deps() { function test_java_tools_has_singlejar() { function test_java_tools_has_native_singlejar() { function test_java_tools_has_buildjar() { function test_java_tools_has_turbine() { function test_java_tools_has_junitrunner() { function test_java_tools_has_jacocoagent() { function test_java_tools_has_proguard() {
function expect_path_in_java_tools() { function test_java_tools_has_ijar() { function test_java_tools_has_zlib() { function test_java_tools_has_native_windows() { function test_java_tools_has_cpp_util() { function test_java_tools_has_desugar_deps() { function test_java_tools_has_singlejar() { function test_java_tools_has_native_singlejar() { function test_java_tools_has_buildjar() { function test_java_tools_has_turbine() { function test_java_tools_has_junitrunner() { function test_java_tools_has_jacocoagent() { function test_java_tools_has_proguard() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_cc_test_gcc.sh
lines,1084
function,30
function setup_a_cc_lib_and_t_cc_test() { function test_cc_test_coverage_gcov() { function test_cc_test_coverage_gcov_virtual_includes() { function test_cc_test_gcov_multiple_headers() { function test_cc_test_gcov_multiple_headers_instrument_test_target() { function test_cc_test_gcov_same_header_different_libs() { function test_cc_test_gcov_same_header_different_libs_multiple_exec() { function test_failed_coverage() { function test_coverage_with_experimental_split_coverage_postprocessing_only() { function test_coverage_doesnt_fail_on_empty_output() { function setup_external_cc_target() { function test_external_cc_target_can_collect_coverage() { function test_external_cc_target_coverage_not_collected_by_default() {
function setup_a_cc_lib_and_t_cc_test() { function test_cc_test_coverage_gcov() { function test_cc_test_coverage_gcov_virtual_includes() { int num_whatever() const { A* a = new A(); return number + value + a->num_whatever(); function test_cc_test_gcov_multiple_headers() { function test_cc_test_gcov_multiple_headers_instrument_test_target() { function test_cc_test_gcov_same_header_different_libs() { function test_cc_test_gcov_same_header_different_libs_multiple_exec() { int a_redirect(); int a_redirect() { return b_for_all(); int b_for_all() { // Line 21: executed 3 times (2x from a.cc and 1x from c.cc) int c_redirect(); int c_redirect() { return b_for_all(); a_redirect(); a_redirect(); c_redirect(); function test_failed_coverage() { int a(); int a() { return a(); function test_coverage_with_experimental_split_coverage_postprocessing_only() { int main() { function test_coverage_doesnt_fail_on_empty_output() { function setup_external_cc_target() { function test_external_cc_target_can_collect_coverage() { function test_external_cc_target_coverage_not_collected_by_default() {
for,10
|| fail "Coverage for //:t failed" &>"$TEST_log" || fail "Coverage for //:t failed" || fail "Coverage for //examples/cpp:num-world_test failed" &>"$TEST_log" || fail "Coverage for //:t failed" --test_output=all //:t &>"$TEST_log" || fail "Coverage for //:t failed" &>"$TEST_log" || fail "Coverage for //:t failed" &>"$TEST_log" || fail "Coverage for //:t failed" || fail "Coverage for //empty_cov:empty-cov-test failed" &>"$TEST_log" || fail "Coverage for @other_repo//:t failed" &>"$TEST_log" || fail "Coverage for @other_repo//:t failed"
if,28
if [[ "${COVERAGE_GENERATOR_DIR}" != "released" ]]; then if (what) { if is_gcov_missing_or_wrong_version; then if is_gcov_missing_or_wrong_version; then if (argc > 1) { if is_gcov_missing_or_wrong_version; then if (what) { if (what > 0) { if is_gcov_missing_or_wrong_version; then if (what) { if (what > 0) { if is_gcov_missing_or_wrong_version; then if (what) { if (what > 0) { // Line 3: executed once if (what > 0) { // Line 12: executed once if (what) { if is_gcov_missing_or_wrong_version; then if (what) { if (what > 0) { // Line 3: executed once if (what > 0) { // Line 12: executed once if (what) { if [[ ! -x ${LCOV:-/usr/bin/lcov} ]]; then if [[ ! -x ${LCOV:-/usr/bin/lcov} ]]; then if is_gcov_missing_or_wrong_version; then if (what) { if (what) { if is_gcov_missing_or_wrong_version; then if is_gcov_missing_or_wrong_version; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_strategy_test.sh
lines,47
function,3
function set_up() { function test_regexp_strategy() { function test_regexp_strategy_regexp() {
function set_up() { function test_regexp_strategy() { function test_regexp_strategy_regexp() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/maven_starlark_test.sh
lines,280
function,15
function setup_zoo() { function setup_local_maven_settings_xml() { function tear_down() { function test_maven_jar_starlark() { function DISABLEDtest_maven_jar_with_classifier_starlark() { function setup_android_binary() { function test_maven_aar_starlark() { function test_maven_jar_no_sha1_starlark() { function test_maven_jar_404_starlark() { function test_maven_jar_mismatched_sha1_starlark() { function test_unimplemented_server_attr_starlark() {
function setup_zoo() { Mongoose.frolic(); function setup_local_maven_settings_xml() { function tear_down() { function test_maven_jar_starlark() { function DISABLEDtest_maven_jar_with_classifier_starlark() { function setup_android_binary() { function test_maven_aar_starlark() { function test_maven_jar_no_sha1_starlark() { function test_maven_jar_404_starlark() { function test_maven_jar_mismatched_sha1_starlark() { function test_unimplemented_server_attr_starlark() {
for,1
"see the WORKSPACE file for instructions"
if,2
if [ "$ if [[ ! -d "${TEST_SRCDIR}/androidsdk" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/empty_package.sh
lines,62
function,2
function test_empty_package() { function test_empty_external() {
function test_empty_package() { function test_empty_external() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/client_test.sh
lines,47
function,2
function test_product_name_with_bazel_info() { function test_server_process_name_has_workspace_name() {
function test_product_name_with_bazel_info() { function test_server_process_name_has_workspace_name() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_bootstrap_distfile_test.sh
lines,114
function,1
function test_bootstrap() {
function test_bootstrap() {
for,1
fail "missing argument for DISTFILE"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -n "${1:-}" ]]; then if [[ -n "${2:-}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/platforms_test.sh
lines,110
function,3
function test_platforms_repository_builds_itself() { function test_platforms_can_be_overridden() { function test_platform_accessor() {
function test_platforms_repository_builds_itself() { function test_platforms_can_be_overridden() { function test_platform_accessor() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_android_tools_test.sh
lines,67
function,5
function expect_path_in_android_tools() { function test_android_tools_has_WORKSPACE() { function test_android_tools_has_import_deps_checker_deploy() { function test_android_tools_has_all_android_tools_deploy() { function test_android_tools_has_BUILD() {
function expect_path_in_android_tools() { function test_android_tools_has_WORKSPACE() { function test_android_tools_has_import_deps_checker_deploy() { function test_android_tools_has_all_android_tools_deploy() { function test_android_tools_has_BUILD() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_tools_test.sh
lines,48
function,2
function test_build_objc_tools() { function test_bzl_srcs() {
function test_build_objc_tools() { function test_bzl_srcs() {
for,1
for found_file in $found_files; do
if,1
if ! [[ "$registered_files" =~ "$expected_label" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/srcs_test.sh
lines,40
function,0


for,0

if,1
if [ -n "${res}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_example_test.sh
lines,191
function,13
function set_up() { function test_cpp() { function assert_binary_run_from_subdir() { function test_java() { function test_java_test() { function test_java_test_with_junitrunner() { function test_genrule_and_genquery() { function test_native_python() { function test_native_python_with_zip() { function test_shell() { function test_python() { function test_java_starlark() { function test_java_test_starlark() {
function set_up() { function test_cpp() { function assert_binary_run_from_subdir() { function test_java() { function test_java_test() { function test_java_test_with_junitrunner() { function test_genrule_and_genquery() { function test_native_python() { function test_native_python_with_zip() { function test_shell() { function test_python() { function test_java_starlark() { function test_java_test_starlark() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ $javabase = external/* ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/java_launcher_test.sh
lines,97
function,3
function test_java_launcher_classpath_limit() {
function test_java_launcher_classpath_limit() { public static String getHello() { System.out.println(HelloLib.getHello());
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_instrumentation_test_integration_test.sh
lines,212
function,13
function setup_android_instrumentation_test_env() { function test_correct_target_package_build_succeed() { function test_incorrect_target_package_build_failure() { function test_multiple_instrumentations_with_different_package_names_build_failure() { function test_android_instrumentation_binary_class_filtering() {
function setup_android_instrumentation_test_env() { public Bar getBar() { return new Bar(); function test_correct_target_package_build_succeed() { function test_incorrect_target_package_build_failure() { function test_multiple_instrumentations_with_different_package_names_build_failure() { function test_android_instrumentation_binary_class_filtering() { public Bar getBar() { return new Bar(); public Baz getBaz() { return new Baz(); public Baz getBaz() { return new Baz();
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_ndk_integration_test.sh
lines,597
function,28
function create_android_binary() { function check_num_sos() { function check_soname() { function test_android_binary() { function test_android_binary_sibling_repository_layout() { function test_android_binary_clang() { function test_clang_include_paths() { function test_android_ndk_repository_path_from_environment() { function test_android_ndk_repository_no_path_or_android_ndk_home() { function test_android_ndk_repository_wrong_path() { function test_stripped_cc_binary() { function test_stripped_cc_test() { function test_crosstool_stlport() { function test_crosstool_libcpp() { function test_crosstool_gnu_libstdcpp() { function test_platforms_and_toolchains() { function test_crosstool_libcpp_with_multiarch() {
function create_android_binary() { public static String message() { public static native String hello(); return NewStringLatin1(env, (hello + " " + jni).c_str()); function check_num_sos() { function check_soname() { function test_android_binary() { function test_android_binary_sibling_repository_layout() { function test_android_binary_clang() { function test_clang_include_paths() { int main() { return 0; } function test_android_ndk_repository_path_from_environment() { function test_android_ndk_repository_no_path_or_android_ndk_home() { function test_android_ndk_repository_wrong_path() { " Is the path in android_ndk_repository() or \$ANDROID_NDK_HOME set correctly?" function test_stripped_cc_binary() { int main() { return 0; } function test_stripped_cc_test() { int main() { return 0; } function test_crosstool_stlport() { int main(){ function test_crosstool_libcpp() { int main(){ function test_crosstool_gnu_libstdcpp() { int main(){ function test_platforms_and_toolchains() { int main(){ function test_crosstool_libcpp_with_multiarch() {
for,1
for (int i = 0; i < len; i++) {
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/aidl_integration_test.sh
lines,83
function,3
function test_simple_idl_srcs() {
function test_simple_idl_srcs() { public IBinder asBinder() { ILib lib = new Lib();
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/resource_processing_integration_test.sh
lines,139
function,4
function setup_font_resources() { function test_font_support() { function test_persistent_resource_processor() { function test_persistent_multiplex_resource_processor() {
function setup_font_resources() { function test_font_support() { function test_persistent_resource_processor() { function test_persistent_multiplex_resource_processor() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/aar_integration_test.sh
lines,184
function,5
function test_empty_tree_artifact_action_inputs_mount_empty_directories() { function test_nonempty_aar_resources_tree_artifact() { function test_android_binary_depends_on_aar() { function test_android_binary_fat_apk_contains_all_shared_libraries() { function test_aar_extractor_worker() {
function test_empty_tree_artifact_action_inputs_mount_empty_directories() { function test_nonempty_aar_resources_tree_artifact() { function test_android_binary_depends_on_aar() { function test_android_binary_fat_apk_contains_all_shared_libraries() { function test_aar_extractor_worker() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_integration_test.sh
lines,448
function,23
function test_sdk_library_deps() { function test_allow_custom_manifest_name() { function test_legacy_multidex() { function write_hello_android_files() { function test_apk_manifest_created_by() { function test_d8_dexes_hello_android() { function test_d8_dexes_and_sandbox_desugars_hello_android() { function test_d8_dexes_and_worker_desugars_hello_android() { function test_hello_android_bzlmod() { function test_android_tools_version() { function write_large_java_file() { function assert_multiple_dex_files() { function test_native_multidex() { function test_manual_main_dex() { function test_native_multidex_proguard() { function test_native_multidex_dex_shards() { function test_native_multidex_dex_shards_proguard() { function test_reduce_merged_assets() { function test_dont_reduce_merged_assets() {
function test_sdk_library_deps() { function test_allow_custom_manifest_name() { function test_legacy_multidex() { function write_hello_android_files() { function test_apk_manifest_created_by() { function test_d8_dexes_hello_android() { function test_d8_dexes_and_sandbox_desugars_hello_android() { function test_d8_dexes_and_worker_desugars_hello_android() { function test_hello_android_bzlmod() { function test_android_tools_version() { function write_large_java_file() { echo "public int foo_$i() { return $i ; }" >> "$f" function assert_multiple_dex_files() { function test_native_multidex() { function test_manual_main_dex() { function test_native_multidex_proguard() { public int foo*(); public int foo*(); function test_native_multidex_dex_shards() { function test_native_multidex_dex_shards_proguard() { public int foo*(); public int foo*(); function test_reduce_merged_assets() { function test_dont_reduce_merged_assets() {
for,1
for i in $(seq 33000); do
if,1
if [[ -f bazel-bin/java/com/example/hello/hello_lib_files/assets.zip ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/desugarer_integration_test.sh
lines,147
function,13
function create_java_8_android_binary() { function test_java_8_android_binary() { function test_java_8_android_binary_worker_strategy() { function test_java_8_android_binary_multiplex_worker_strategy() {
function create_java_8_android_binary() { A bar() { int someHashcode() { int getSumOfInts() { .stream() .sum(); function test_java_8_android_binary() { function test_java_8_android_binary_worker_strategy() { function test_java_8_android_binary_multiplex_worker_strategy() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/aapt_integration_test.sh
lines,59
function,1
function test_build_with_aapt2() {
function test_build_with_aapt2() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_sdk_integration_test.sh
lines,142
function,7
function test_android_sdk_repository_path_from_environment() { function test_android_sdk_repository_no_path_or_android_home() { function test_android_sdk_repository_wrong_path() { function test_specifying_android_sdk_flag() { function test_android_sdk_repository_returns_null_if_env_vars_missing() { function test_android_sdk_repository_present_not_set() {
function test_android_sdk_repository_path_from_environment() { function test_android_sdk_repository_no_path_or_android_home() { function test_android_sdk_repository_wrong_path() { " Is the path in android_sdk_repository() or \$ANDROID_SDK_HOME set correctly?" function test_specifying_android_sdk_flag() { function test_android_sdk_repository_returns_null_if_env_vars_missing() { function test_android_sdk_repository_present_not_set() {
for,1
run_suite "Android integration tests for SDK"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_local_test_integration_test.sh
lines,242
function,7
function setup_android_local_test_env() { function get_coverage_file_path_from_test_log() { function assert_coverage_result() { function test_android_local_test() { function test_android_local_test_with_coverage() { function test_android_local_test_with_combined_coverage() {
function setup_android_local_test_env() { public void testGetCollatzFinal() { function get_coverage_file_path_from_test_log() { function assert_coverage_result() { function test_android_local_test() { function test_android_local_test_with_coverage() { FN:3,com/bin/Collatz::<init> ()V FNDA:0,com/bin/Collatz::<init> ()V function test_android_local_test_with_combined_coverage() { FN:3,com/bin/Collatz::<init> ()V FNDA:0,com/bin/Collatz::<init> ()V
for,3
//javatests/com/bin:test &>$TEST_log || fail "Tests for //javatests/com/bin:test failed" //javatests/com/bin:test &>$TEST_log || fail "Test with coverage for //javatests/com/bin:test failed" //javatests/com/bin:test &>$TEST_log || fail "Test with coverage for //javatests/com/bin:test failed"
if,3
if [[ "$1" = '--with_platforms' ]]; then if (n == 1) { if (n % 2 == 0) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/DexFileSplitter_synthetic_classes_test.sh
lines,177
function,7
function create_test_app() { function generate_java_file_with_many_synthetic_classes() { function test_DexFileSplitter_synthetic_classes_crossing_dexfiles() { function test_DexMapper_synthetic_classes_crossing_dexfiles() {
function create_test_app() { function generate_java_file_with_many_synthetic_classes() { echo " public int bar() {" echo " int supply();" echo " public IntSupplier[] foo() {" echo " () -> $i," function test_DexFileSplitter_synthetic_classes_crossing_dexfiles() { function test_DexMapper_synthetic_classes_crossing_dexfiles() {
for,3
for (( i = 0; i < $inner_class_count; i++ )) do for ((i = 0; i < $lambda_count; i++ )) do run_suite "Tests for DexFileSplitter with synthetic classes crossing dexfiles"
if,2
if [[ ! "$dex_file_count" -ge "2" ]]; then if [[ ! "$dex_file_count" -eq "5" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/library_desugarer_integration_test.sh
lines,62
function,2
function test_library_desugar_lib_builds() { function test_library_desugaring() {
function test_library_desugar_lib_builds() { function test_library_desugaring() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/android_helper.sh
lines,126
function,7
function fail_if_no_android_sdk() { function fail_if_no_android_ndk() { function create_android_binary() { function setup_head_android_tools_if_exists() { function resolve_android_toolchains() {
function fail_if_no_android_sdk() { function fail_if_no_android_ndk() { function create_android_binary() { public static String message() { return "Hello Lib" + Sample.getZero(); function setup_head_android_tools_if_exists() { function resolve_android_toolchains() {
for,0

if,5
if [[ ! -r "$android_sdk_anchor" ]]; then if [[ ! -r "${TEST_SRCDIR}/androidndk/ndk/RELEASE.TXT" ]]; then if [[ ! -r "${TEST_SRCDIR}/androidndk/ndk/source.properties" ]]; then if [[ -f $head_android_tools ]]; then if [[ "$1" = '--with_platforms' ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/android/proguard_integration_test.sh
lines,112
function,3
function test_proguard() {
function test_proguard() { public Renamed getLib() { return new Renamed();
for,1
run_suite "Android integration tests for Proguard"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_ui_test.sh
lines,96
function,2
function set_up() { function test_fetch {
function set_up() {
for,1
run_suite "Bazel-specific integration tests for the UI"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_sandboxing_test.sh
lines,286
function,10
function set_up { function test_sandboxed_tooldir() { function test_sandbox_block_filesystem() { function DISABLED_test_sandbox_different_nobody_uid() { function test_can_enable_pseudoterminals() { function test_sandbox_debug() { function test_sandbox_expands_tree_artifacts_in_runfiles_tree() { function test_create_tree_artifact_outputs() { function test_empty_tree_artifact_as_inputs() {
function test_sandboxed_tooldir() { function test_sandbox_block_filesystem() { function DISABLED_test_sandbox_different_nobody_uid() { function test_can_enable_pseudoterminals() { pty.openpty() function test_sandbox_debug() { function test_sandbox_expands_tree_artifacts_in_runfiles_tree() { function test_create_tree_artifact_outputs() { function test_empty_tree_artifact_as_inputs() {
for,4
<< EOF || fail "Hermetic genrule with different UID for nobody failed" \ echo "Skipping test: flag intended for linux systems" expect_log "Use --sandbox_debug to see verbose messages from the sandbox and retain the sandbox build root for debugging" expect_not_log "Use --sandbox_debug to see verbose messages from the sandbox and retain the sandbox build root for debugging"
if,4
if [ "$(wc -l $output_file | awk '{print $1}')" -gt 1 ]; then if [[ "$(uname -s)" != Linux ]]; then if [[ "$PLATFORM" == "darwin" ]]; then if [ ! -f file -o -L file ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_compatibility_test.sh
lines,100
function,3
function set_up_sh_test_coverage() { function test_sh_test_coverage() { function test_sh_test_coverage() {
function set_up_sh_test_coverage() { function test_sh_test_coverage() { function test_sh_test_coverage() {
for,2
|| fail "Coverage for //:all failed" || fail "Coverage for //:all failed"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/starlark_rule_test.sh
lines,141
function,3
function test_basic_output() { function test_execution_failure() { function test_execute_tool_from_root_package() {
function test_basic_output() { function test_execution_failure() { function test_execute_tool_from_root_package() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/windows_arg_esc_test.sh
lines,125
function,3
function create_pkg() { function assert_command_succeeded() { function test_windows_style_arg_escaping() {
function create_pkg() { function assert_command_succeeded() { function test_windows_style_arg_escaping() {
for,0

if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ -d foo ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/verify_workspace.sh
lines,76
function,1
function test_verify_urls() {
function test_verify_urls() { invalid_urls=() checked_urls=()
for,2
for file in "${WORKSPACE_FILES[@]}"; do for url in $(grep -E '"https://|http://' "${file}" | \
if,10
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ " ${URL_ALLOWLIST[*]} " =~ " ${url} " ]]; then if [[ ${ if ! curl --head --silent --show-error --fail --output /dev/null --retry 3 "${url}"; then if [[ ${
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_execute_testlog.sh
lines,52
function,1
function test_execute_testlog() {
function test_execute_testlog() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/unicode_filenames_test.sh
lines,240
function,12
function unicode_filenames_test_setup() { function has_iso_8859_1_locale() { function has_utf8_locale() { function test_utf8_source_artifact() { function test_traditional_encoding_source_artifact() { function test_utf8_source_artifact_in_bep() { function test_utf8_filename_in_java_test() {
function unicode_filenames_test_setup() { function has_iso_8859_1_locale() { function has_utf8_locale() { function test_utf8_source_artifact() { function test_traditional_encoding_source_artifact() { function test_utf8_source_artifact_in_bep() { function test_utf8_filename_in_java_test() {
for,1
run_suite "Tests for handling of Unicode filenames"
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! "$is_windows"; then if ! has_iso_8859_1_locale && ! has_utf8_locale; then if ! has_iso_8859_1_locale; then if ! "$is_windows"; then if ! has_iso_8859_1_locale && ! has_utf8_locale; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_windows_example_test.sh
lines,367
function,21
function set_up() { function assert_binary_run_from_subdir() { function test_cpp() { function test_cpp_with_msys_gcc() { function test_cpp_with_mingw_gcc() { function test_cpp_alwayslink() { function test_java() { function create_tmp_drive() { function delete_tmp_drive() { function test_java_with_jar_under_different_drive() { function test_java_test() { function test_native_python() { function test_native_python_with_runfiles() { function test_native_python_with_python3() { function test_python_test_with_data() {
function set_up() { function assert_binary_run_from_subdir() { function test_cpp() { function test_cpp_with_msys_gcc() { function test_cpp_with_mingw_gcc() { function test_cpp_alwayslink() { int init() { int x = init(); int y = init(); function test_java() { function create_tmp_drive() { function delete_tmp_drive() { function test_java_with_jar_under_different_drive() { function test_java_test() { function test_native_python() { function test_native_python_with_runfiles() { function test_native_python_with_python3() { function test_python_test_with_data() { line = f.readline().strip() print("CWD = " + os.getcwd()) unittest.main()
for,1
for X in {A..Z}
if,13
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if ! "$is_windows"; then if [ -n "${TMP_DRIVE}" ]; then if [ -z "${TMP_DRIVE}" ]; then if [ -n "${TMP_DRIVE}" ]; then if [ ! -x "${PYTHON3_PATH}/python.exe" ]; then if __name__ == '__main__':
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/archive_contents_test.sh
lines,109
function,0

test_tar_utf8() {
for,1
run_suite "Tests for extracting archives containing strangely-named files"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/build_files_test.sh
lines,99
function,6
function write_rule { function test_build_only { function test_build_bazel_only { function test_build_and_build_bazel { function test_multiple_package_roots { function test_build_as_target() {
function test_build_as_target() {
for,1
for src in "$@"; do
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_sandboxing_networking_test.sh
lines,314
function,15
function set_up() { function setup_network_tests() { function check_network_ok() { function check_network_not_ok() { function test_sandbox_network_access() { function test_sandbox_block_network_access() { function test_sandbox_network_access_with_local() { function test_sandbox_network_access_with_requires_network() { function test_sandbox_network_access_with_block_network() { function test_sandbox_can_resolve_own_hostname() { function test_hostname_inside_sandbox_is_localhost_when_using_sandbox_fake_hostname_flag() {
function set_up() { function setup_network_tests() { function check_network_ok() { function check_network_not_ok() { function test_sandbox_network_access() { function test_sandbox_block_network_access() { function test_sandbox_network_access_with_local() { function test_sandbox_network_access_with_requires_network() { function test_sandbox_network_access_with_block_network() { function test_sandbox_can_resolve_own_hostname() { public void testGetHostName() throws Exception { assertNotNull(InetAddress.getLocalHost().getHostName()); function test_hostname_inside_sandbox_is_localhost_when_using_sandbox_fake_hostname_flag() { public void testHostNameIsLocalhost() throws Exception { assertEquals("localhost", InetAddress.getLocalHost().getHostName());
for,1
echo "Not registering tests for remote network sandboxing;" \
if,12
if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then if which host 2>/dev/null; then elif which dig 2>/dev/null; then if [[ -z "${remote_ip}" ]]; then if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then if [[ -n "${REMOTE_NETWORK_ADDRESS}" ]]; then // This will throw an exception, if the local hostname cannot be resolved via DNS. if [[ "$(uname -s)" != Linux ]]; then // This will throw an exception, if the local hostname cannot be resolved via DNS.
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/apple/bazel_apple_test.sh
lines,203
function,4
function set_up() { function test_host_xcodes() { function test_host_available_xcodes() { function test_xcode_config_select() {
function set_up() { function test_host_xcodes() { function test_host_available_xcodes() { function test_xcode_config_select() {
for,0

if,3
if [ "${PLATFORM}" != "darwin" ]; then if [[ ! $XCODE_VERSION =~ [0-9].[0-9].[0-9] ]] if [[ ! $XCODE_VERSION =~ [0-9].[0-9].[0-9] ]]
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/apple/bazel_objc_test.sh
lines,45
function,1
function test_xcodelocator_embedded_tool() {
function test_xcodelocator_embedded_tool() {
for,0

if,1
if [ "${PLATFORM}" != "darwin" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_test.sh
lines,1969
function,135
function set_up() { function tear_down() { function write_hello_library_files() { function write_files_for_java_provider_in_attr() { function write_java_custom_rule() { function test_build_hello_world() { function test_build_hello_world_reduced_classpath() { function test_worker_strategy_is_default() { function test_strategy_overrides_worker_default() { function test_strategy_picks_first_preferred_worker() { function test_strategy_picks_first_preferred_local() { function test_build_with_deploy_env() { function test_build_with_sourcepath() { function test_java_common_compile_sourcepath_with_implicit_class() { function test_build_and_run_hello_world_without_runfiles() { function test_errorprone_error_fails_build_by_default() { function test_extrachecks_off_disables_errorprone() { function test_java_test_main_class() { function test_basic_java_sandwich() { function test_java_library_exports_java_sandwich() { function test_java_library_runtime_deps_java_sandwich() { function test_java_import_exports_java_sandwich() { function test_java_import_runtime_deps_java_sandwich() { function test_java_binary_deps_java_sandwich() { function test_java_binary_runtime_deps_java_sandwich() { function test_java_test_java_sandwich() { function test_explicit_java_test_deps_flag() { function test_java_sandwich_resources_file() { function test_java_sandwich_resources_filegroup() { function test_basic_java_sandwich_with_exports() { function test_basic_java_sandwich_with_exports_and_java_library() { function test_java_sandwich_default_strict_deps() { function test_basic_java_sandwich_with_transitive_deps_and_java_library_should_fail() { function test_basic_java_sandwich_with_deps_should_fail() { function test_java_merge_outputs() { function test_java_info_constructor_e2e() { function test_build_hello_world_with_remote_embedded_tool_targets() { function test_target_exec_properties_java() { function test_current_host_java_runtime_runfiles() { function test_jni() { function test_java15_plugins() { function test_auto_bazel_repository() {
function set_up() { function tear_down() { function write_hello_library_files() { HelloLibrary.funcHelloLibrary(); public static void funcHelloLibrary() { function write_files_for_java_provider_in_attr() { public void printB() { public void printA() { A myObjectA = new A(); myObjectA.printA(); B myObjectB = new B(); myObjectB.printB(); function write_java_custom_rule() { "deps": attr.label_list(), "exports": attr.label_list(), function test_build_hello_world() { function test_build_hello_world_reduced_classpath() { function test_worker_strategy_is_default() { function test_strategy_overrides_worker_default() { function test_strategy_picks_first_preferred_worker() { function test_strategy_picks_first_preferred_local() { function test_build_with_deploy_env() { function test_build_with_sourcepath() { public A() { new B(); public B() { function test_java_common_compile_sourcepath() { public A() { new B(); public B() { "sourcepath": attr.label_list(), function test_java_common_compile_sourcepath_with_implicit_class() { public A() { new B(); public B() { "sourcepath": attr.label_list(), function test_build_and_run_hello_world_without_runfiles() { function test_errorprone_error_fails_build_by_default() { public static boolean funcHelloLibrary() { function test_extrachecks_off_disables_errorprone() { public static boolean funcHelloLibrary() { function test_java_test_main_class() { public void testTest() { function test_basic_java_sandwich() { public void printC() { public void printB() { myObject = new C(); myObject.printC(); public void printA() { myObject = new B(); myObject.printB(); A myObject = new A(); myObject.printA(); function test_java_library_exports_java_sandwich() { function test_java_library_runtime_deps_java_sandwich() { function test_java_import_exports_java_sandwich() { function test_java_import_runtime_deps_java_sandwich() { function test_java_binary_deps_java_sandwich() { public void print() { public void print() { myObject = new B(); myObject.print(); A myObject = new A(); myObject.print(); function test_java_binary_runtime_deps_java_sandwich() { public void print() { A myObject = new A(); myObject.print(); function test_java_test_java_sandwich() { B myObj = new B(); public boolean returnsTrue() { return myObj.returnsTrue(); public boolean returnsTrue() { public void testReturnsTrue() { A myObj = new A(); assertTrue(myObj.returnsTrue()); function test_explicit_java_test_deps_flag() { public void testTest() { function test_java_sandwich_resources_file() { function test_java_sandwich_resources_filegroup() { function test_basic_java_sandwich_with_exports() { public static void print() { public static void print() { public static void print() { A.print(); B.print(); C.print(); function test_basic_java_sandwich_with_exports_and_java_library() { public static void print() { public static void print() { public static void print() { A.print(); B.print(); C.print(); function test_java_sandwich_default_strict_deps() { function test_basic_java_sandwich_with_transitive_deps_and_java_library_should_fail() { public static void print() { public static void print() { public static void print() { A.print(); B.print(); C.print(); function test_basic_java_sandwich_with_deps_should_fail() { public static void print() { public static void print() { public static void print() { A.print(); B.print(); C.print(); function test_java_merge_outputs() { public void printB() { public void printA() { function test_java_info_constructor_e2e() { result = provider() 'output_source_jar' : attr.string(), function test_build_hello_world_with_remote_embedded_tool_targets() { function test_target_exec_properties_java() { function test_current_host_java_runtime_runfiles() { function test_jni() { function test_java15_plugins() { public void m() {} public void m() { new C1().m(); Elements els = processingEnv.getElementUtils(); processingEnv.getMessager().printMessage(Kind.WARNING, "deprecated"); function test_auto_bazel_repository() { public static void printRepositoryName() { Library.printRepositoryName(); Library.printRepositoryName(); public static void printRepositoryName() { Library2.printRepositoryName(); Library.printRepositoryName(); Library2.printRepositoryName(); Library.printRepositoryName();
for,4
deps = [dep[java_common.provider] for dep in ctx.attr.deps] exports = [export[java_common.provider] for export in ctx.attr.exports] bazel test java/com/google/sandwich:MainTest --test_output=streamed > "$TEST_log" || fail "Java sandwich for java_test failed" for (Element el : roundEnv.getElementsAnnotatedWith(Anno.class)) {
if,25
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ "${JAVA_TOOLS_ZIP}" != "released" ]]; then if [[ "${JAVA_TOOLS_ZIP}" == file* ]]; then elif "$is_windows"; then if [[ "${JAVA_TOOLS_PREBUILT_ZIP}" != "released" ]]; then if [[ "${JAVA_TOOLS_PREBUILT_ZIP}" == file* ]]; then elif "$is_windows"; then if [[ $ if [[ $ if [[ "${JAVA_RUNTIME_VERSION}" == 8 ]]; then elif [[ "${JAVA_RUNTIME_VERSION}" == 11 ]]; then if [[ ! -z "${JAVA_TOOLS_ZIP_FILE_URL}" ]]; then if [ "$rule_type" = "java_import" ]; then if [ "$attribute_name" = "runtime_deps" ]; then if [ "$attribute_name" = "runtime_deps" ]; then if [ "$rule_type" = "java_library" ]; then if [[ "$rule_type" = "java_library" && "$attribute_name" = "exports" ]]; then if "$is_windows"; then if (els.isDeprecated(el)) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_py_test.sh
lines,502
function,20
function is_gcov_missing_or_wrong_version() { function set_up_py_test_coverage() { function test_py_test_coverage() { function test_py_test_coverage_indirect() { function test_py_test_coverage_cc_binary() { function test_py_test_coverage_cc_binary_and_java_binary() {
function is_gcov_missing_or_wrong_version() { function set_up_py_test_coverage() { subprocess.Popen(["java/com/google/orange/orange-bin"]).wait() public void print() { orangeLib orange = new orangeLib(); orange.print(); FN:3,com/google/orange/orangeBin::<init> ()V FNDA:0,com/google/orange/orangeBin::<init> ()V FN:3,com/google/orange/orangeLib::<init> ()V FN:6,com/google/orange/orangeLib::print ()V FNDA:1,com/google/orange/orangeLib::<init> ()V FNDA:1,com/google/orange/orangeLib::print ()V function test_py_test_coverage() { function test_py_test_coverage_indirect() { function test_py_test_coverage_cc_binary() { subprocess.Popen(["examples/cpp/num-world"]).wait() function test_py_test_coverage_cc_binary_and_java_binary() { subprocess.Popen(["examples/cpp/num-world"]).wait() subprocess.Popen(["java/com/google/orange/orange-bin"]).wait() public void print() { orangeLib orange = new orangeLib(); orange.print(); FN:2,com/google/orange/orangeBin::<init> ()V FNDA:0,com/google/orange/orangeBin::<init> ()V FN:2,com/google/orange/orangeLib::<init> ()V FN:4,com/google/orange/orangeLib::print ()V FNDA:1,com/google/orange/orangeLib::<init> ()V FNDA:1,com/google/orange/orangeLib::print ()V
for,6
bazel coverage --test_output=all //:orange_test &>$TEST_log || fail "Coverage for //:orange_test failed" cmp expected.dat "$coverage_file_path" || fail "Coverage output file is different than the expected file for data dep of py_binary" bazel coverage --test_output=all //:orange_indirect_test &>$TEST_log || fail "Coverage for //:orange_indirect_test failed" cmp expected.dat "$coverage_file_path" || fail "Coverage output file is different than the expected file for data dep of py_library" //:num_test &>$TEST_log || fail "Coverage for //:num_test failed" //:num_test &>$TEST_log || fail "Coverage for //:num_test failed"
if,5
if [[ ! -x ${gcov_location:-/usr/bin/gcov} ]]; then if is_gcov_missing_or_wrong_version; then if (argc > 1) { if is_gcov_missing_or_wrong_version; then if (argc > 1) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_proto_library_test.sh
lines,826
function,27
function add_local_repos_to_workspace() { function write_workspace() { function write_setup() { function write_regression_setup() { function write_workspaces_setup() { function write_macro() { function write_java_library() { function test_legacy_proto_library_include_well_known_protos() { function test_javainfo_proto_aspect() { function test_strip_import_prefix() { function test_strip_import_prefix_fails() { function test_strip_import_prefix_macro() { function DISABLED_test_strip_import_prefix_with_java_library() { function test_strip_import_prefix_glob() { function test_strip_import_prefix_multiple_workspaces() { function test_cc_proto_library() { function test_cc_proto_library_with_toolchain_resolution() { function test_cc_proto_library_import_prefix_stripping() { function test_import_prefix_stripping() { function test_cross_repo_protos() {
function add_local_repos_to_workspace() { function write_workspace() { rules_proto_dependencies() rules_proto_toolchains() function write_setup() { function write_regression_setup() { function write_workspaces_setup() { function write_macro() { function write_java_library() { PhoneNumberProto number = person.getPhone(); function test_legacy_proto_library_include_well_known_protos() { function test_javainfo_proto_aspect() { for jar in merged_java_info.transitive_runtime_jars.to_list(): function test_strip_import_prefix() { function test_strip_import_prefix_fails() { function test_strip_import_prefix_macro() { function DISABLED_test_strip_import_prefix_with_java_library() { function test_strip_import_prefix_glob() { function test_strip_import_prefix_multiple_workspaces() { function test_cc_proto_library() { void f() { function test_cc_proto_library_with_toolchain_resolution() { void f() { function test_cc_proto_library_import_prefix_stripping() { void f() { function test_import_prefix_stripping() { function test_cross_repo_protos() {
for,4
for dep in ctx.attr.deps: for jar in merged_java_info.transitive_runtime_jars.to_list(): for dep in ctx.rule.attr.deps: run_suite "Integration tests for proto_library"
if,2
if [ ! -z "$1" ]; if [ "${include_macro}" -eq "" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/local_repository_test.sh
lines,1481
function,69
function test_glob_local_repository_dangling_symlink() { function test_globbing_external_directory() { function test_local_repository_java() { function test_non_existent_external_ref() { function test_new_local_repository_with_build_file() { function test_new_local_repository_with_labeled_build_file() { function test_new_local_repository_with_build_file_content() { function do_new_local_repository_test() { function test_external_hdrs() { function test_external_includes() { function test_external_query() { function test_repository_package_query() { function test_repository_buildfiles_package_query() { function test_override_workspace_file() { function test_missing_path_reported_as_user_defined_it() { function test_path_looking_like_home_directory_is_reported_as_user_defined_it() { function test_overlaid_build_file() { function test_external_deps_in_remote_repo() { function test_local_deps() { function test_globs() { function test_cc_binary_in_local_repository() { function test_output_file_in_local_repository() { function test_remote_pkg_boundaries() { function test_visibility_through_bind() { function test_load_in_remote_repository() { function test_python_in_remote_repository() { function test_package_wildcard_in_remote_repository() { function test_recursive_wildcard_in_remote_repository() { function test_package_name_constants() { function test_slash_in_repo_name() { function test_remote_includes() { function test_change_new_repository_build_file() { function test_build_all() { function test_local_repository_path_does_not_exist() { function test_local_repository_missing_workspace_file() { function test_overwrite_build_file() { function test_new_local_repository_path_not_existing() { function test_new_local_repository_path_not_directory() { function test_new_local_repository_path_symlink_to_dir() { function test_new_local_repository_path_symlink_to_file() { function test_indirect_dep_message() { function test_public_includes_external_dependencies() { function test_public_includes_main_repo_from_external_dep() {
function test_glob_local_repository_dangling_symlink() { function test_globbing_external_directory() { function test_local_repository_java() { public static void frolic() { Mongoose.frolic(); function test_non_existent_external_ref() { function test_new_local_repository_with_build_file() { function test_new_local_repository_with_labeled_build_file() { function test_new_local_repository_with_build_file_content() { function do_new_local_repository_test() { public static void frolic() { Mongoose.frolic(); public static void frolic() { function test_external_hdrs() { void greet(); void greet() { int main() { greet(); function test_external_includes() { int x(); int x() { int main() { printf("My number is %d\n", x()); function test_external_query() { function test_repository_package_query() { function test_repository_buildfiles_package_query() { function test_override_workspace_file() { function test_missing_path_reported_as_user_defined_it() { function test_path_looking_like_home_directory_is_reported_as_user_defined_it() { function test_overlaid_build_file() { function test_external_deps_in_remote_repo() { function test_local_deps() { function test_globs() { function test_cc_binary_in_local_repository() { int main() { return 0; }; function test_output_file_in_local_repository() { function test_remote_pkg_boundaries() { function test_visibility_through_bind() { function test_load_in_remote_repository() { function test_python_in_remote_repository() { print("Hello " + lib.lib.User()) def User(): function test_package_wildcard_in_remote_repository() { function test_recursive_wildcard_in_remote_repository() { function test_package_name_constants() { cmd = 'echo ' + repository_name() + ' ' + package_name() + ' > $@') function test_slash_in_repo_name() { int main() { return 0; }; function test_remote_includes() { int getNum() { int getNum(); int main() { printf("%d\n", getNum()); return 0; }; function test_change_new_repository_build_file() { int a() { return 42; } int b() { return 42; } function test_build_all() { function test_local_repository_path_does_not_exist() { function test_local_repository_missing_workspace_file() { function test_overwrite_build_file() { function test_new_local_repository_path_not_existing() { function test_new_local_repository_path_not_directory() { function test_new_local_repository_path_symlink_to_dir() { function test_new_local_repository_path_symlink_to_file() { function test_indirect_dep_message() { X.print(); public static void print() { public static void print() { function test_public_includes_external_dependencies() { function test_public_includes_main_repo_from_external_dep() {
for,2
for repo in foo1 foo2 foo3a foo3b foo4a foo4b; do for repo in foo1 foo2 foo3a foo3b foo4a foo4b; do
if,2
if [ "$1" == "build_file" -o "$1" == "build_file+label" ] ; then if [ "$1" == "build_file+label" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_rules_cc_test.sh
lines,93
function,2
function test_rules_cc_can_be_overridden() { function test_rules_cc_repository_builds_itself() {
function test_rules_cc_can_be_overridden() { function test_rules_cc_repository_builds_itself() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_rules_java_test.sh
lines,153
function,7
function test_rules_java_can_be_overridden() { function test_rules_java_repository_builds_itself() { function test_experimental_java_library_export_do_not_use() {
function test_rules_java_can_be_overridden() { def rules_java_dependencies(): def rules_java_toolchains(): function test_rules_java_repository_builds_itself() { function test_experimental_java_library_export_do_not_use() { ).values() public static void funcHelloLibrary() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_workspace_status_test.sh
lines,261
function,11
function test_workspace_status_parameters() { function test_workspace_status_overrides() { function test_workspace_status_cpp() { function test_errmsg() { function test_stable_and_volatile_status() { function test_env_var_in_workspace_status() {
function test_workspace_status_parameters() { function test_workspace_status_overrides() { function test_workspace_status_cpp() { ::std::string BuildScmStatus() { return BUILD_SCM_STATUS; } ::std::string BuildScmStatus(); int main() { ::std::cout << "BUILD_SCM_STATUS is: " << BuildScmStatus(); return ("funky" == BuildScmStatus()) ? 0 : 1; function test_errmsg() { function test_stable_and_volatile_status() { function test_env_var_in_workspace_status() {
for,0

if,2
if [[ $(uname -s) == "Darwin" ]] if [[ $timestamp_formatted_date != $formatted_date ]]
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/rule_test_test.sh
lines,233
function,6
function set_up() { function test_local_rule_test_in_root() { function test_local_rule_test_in_subpackage() { function test_repository_rule_test_in_root() { function test_repository_rule_test_in_subpackage() { function test_kwargs_with_macro_rules() {
function set_up() { function test_local_rule_test_in_root() { function test_local_rule_test_in_subpackage() { function test_repository_rule_test_in_root() { function test_repository_rule_test_in_subpackage() { function test_kwargs_with_macro_rules() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_determinism_test.sh
lines,113
function,2
function hash_outputs() { function test_determinism() {
function hash_outputs() { function test_determinism() {
for,0

if,3
if hash sha1sum 2>/dev/null; then elif hash shasum 2>/dev/null; then if ! diff -U0 "${TEST_TMPDIR}/sum1" "${TEST_TMPDIR}/sum2" >$TEST_log; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/platform_mapping_test.sh
lines,211
function,6
function set_up() { function test_top_level_flags_to_platform_mapping() { function test_top_level_platform_to_flags_mapping() { function test_custom_platform_mapping_location() { function test_custom_platform_mapping_location_after_exec_transition() { function test_transition_platform_mapping() {
function set_up() { function test_top_level_flags_to_platform_mapping() { function test_top_level_platform_to_flags_mapping() { function test_custom_platform_mapping_location() { function test_custom_platform_mapping_location_after_exec_transition() { function test_transition_platform_mapping() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/resource_compiler_toolchain_test.sh
lines,239
function,6
function _create_pkg() { function _symlink_res_toolchain_files() { function _assert_outputs() { function _assert_no_outputs() { function test_toolchain_selection() {
function _create_pkg() { function _symlink_res_toolchain_files() { function _assert_outputs() { function _assert_no_outputs() { function test_toolchain_selection() { run_suite "Tests for windows_resources() rule and toolchain selection"
for,7
) for i in [1, 2]] ) for i in [1, 2]] ) for i in [1, 2] for j in [1, 2]] for %%i in (%*) do ( for a in $*; do for f in BUILD win_res.bzl winsdk_configure.bzl winsdk_toolchain.bzl; do run_suite "Tests for windows_resources() rule and toolchain selection"
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if "!j:~0,3!" == "/fo" (set out=!j:~3!) if "!j:~-2!" == "rc" (set src=!j!) if [[ "$a" =~ /fo.* ]]; then elif [[ "$a" =~ .*rc$ ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_cc_code_coverage_test.sh
lines,378
function,17
function get_file_id() { function set_up() { function generate_and_execute_instrumented_binary() { function tear_down() { function assert_gcov_coverage_srcs_a_cc() { function:4,1,_Z1ab function assert_gcov_coverage_srcs_t_cc() { function:5,1,main function assert_gcov_coverage_srcs_b_h() { function:1,1,_Z1bi function assert_gcov_coverage_srcs_d_a_cc() { function:1,1,_Z11different_ab function assert_gcov_coverage_srcs_a_cc_json() { function assert_gcov_coverage_srcs_t_cc_json() { function assert_gcov_coverage_srcs_b_h_json() { function assert_gcov_coverage_srcs_d_a_cc_json() { function test_cc_test_coverage_gcov() {
function get_file_id() { function set_up() { function generate_and_execute_instrumented_binary() { function tear_down() { function assert_gcov_coverage_srcs_a_cc() { function assert_gcov_coverage_srcs_t_cc() { function assert_gcov_coverage_srcs_b_h() { function assert_gcov_coverage_srcs_d_a_cc() { function assert_gcov_coverage_srcs_a_cc_json() { function assert_gcov_coverage_srcs_t_cc_json() { function assert_gcov_coverage_srcs_b_h_json() { function assert_gcov_coverage_srcs_d_a_cc_json() { function test_cc_test_coverage_gcov() {
for,0

if,5
if (what) { if (what) { if (what > 0) { if [ -f $output_file ]; then if [[ $not_found -ne 0 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_repository_cache_test.sh
lines,567
function,23
function set_up() { function tear_down() { function setup_repository() { function setup_starlark_repository() { function http_archive_helper() { function assert_files_same() { function test_build() { function test_fetch() { function test_directory_structure() { function test_cache_entry_exists() { function test_fetch_value_with_existing_cache_and_no_network() { function test_load_cached_value() { function test_write_cache_without_hash() { function test_failed_fetch_without_cache() { function test_starlark_download_file_exists_in_cache() { function test_starlark_download_and_extract_file_exists_in_cache() { function test_load_cached_value_starlark_download() { function test_starlark_download_fail_without_cache() { function test_load_cached_value_starlark_download_and_extract() { function test_starlark_download_and_extract_fail_without_cache() { function test_break_url() { function test_repository_cache_urls_as_default_canonical_id() { function test_repository_legacy_default_canonical_id() {
function set_up() { function tear_down() { function setup_repository() { function setup_starlark_repository() { function http_archive_helper() { function assert_files_same() { function test_build() { function test_fetch() { function test_directory_structure() { function test_cache_entry_exists() { function test_fetch_value_with_existing_cache_and_no_network() { function test_load_cached_value() { function test_write_cache_without_hash() { function test_failed_fetch_without_cache() { function test_starlark_download_file_exists_in_cache() { function test_starlark_download_and_extract_file_exists_in_cache() { function test_load_cached_value_starlark_download() { function test_starlark_download_fail_without_cache() { function test_load_cached_value_starlark_download_and_extract() { function test_starlark_download_and_extract_fail_without_cache() { function test_break_url() { function test_repository_cache_urls_as_default_canonical_id() { function test_repository_legacy_default_canonical_id() {
for,0

if,6
if [[ $write_workspace -eq 0 ]]; then if [[ $write_workspace = 0 ]]; then if [ ! -d $repo_cache_dir/content_addressable/sha256/ ]; then if [ ! -f $repo_cache_dir/content_addressable/sha256/$sha256/file ]; then if [ ! -f $repo_cache_dir/content_addressable/sha256/$zip_sha256/file ]; then if [ ! -f $repo_cache_dir/content_addressable/sha256/$zip_sha256/file ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/help_test.sh
lines,38
function,1
function test_info_keys() {
function test_info_keys() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_tools_test.sh
lines,217
function,25
function set_up() { function expect_path_in_java_tools() { function expect_path_in_java_tools_prebuilt() { function test_java_tools_has_ijar() { function test_java_tools_has_ijar_binary() { function test_java_tools_has_zlib() { function test_java_tools_has_native_windows() { function test_java_tools_has_cpp_util() { function test_java_tools_has_desugar_deps() { function test_java_tools_has_singlejar() { function test_java_tools_has_singlejar_local() { function test_java_tools_has_VanillaJavaBuilder() { function test_java_tools_has_JavaBuilder() { function test_java_tools_has_turbine_direct() { function test_java_tools_has_Runner() { function test_java_tools_has_Jacoco() { function test_java_tools_has_GenClass() { function test_java_tools_has_BUILD() { function test_java_tools_has_jacocoagent() { function test_java_tools_has_proguard() { function test_java_tools_toolchain_builds() { function test_java_tools_singlejar_builds() { function test_java_tools_singlejar_builds_with_layering_check() { function test_java_tools_ijar_builds() { function test_java_tools_ijar_builds_with_layering_check() {
function set_up() { function expect_path_in_java_tools() { function expect_path_in_java_tools_prebuilt() { function test_java_tools_has_ijar() { function test_java_tools_has_ijar_binary() { function test_java_tools_has_zlib() { function test_java_tools_has_native_windows() { function test_java_tools_has_cpp_util() { function test_java_tools_has_desugar_deps() { function test_java_tools_has_singlejar() { function test_java_tools_has_singlejar_local() { function test_java_tools_has_VanillaJavaBuilder() { function test_java_tools_has_JavaBuilder() { function test_java_tools_has_turbine_direct() { function test_java_tools_has_Runner() { function test_java_tools_has_Jacoco() { function test_java_tools_has_GenClass() { function test_java_tools_has_BUILD() { function test_java_tools_has_jacocoagent() { function test_java_tools_has_proguard() { function test_java_tools_toolchain_builds() { function test_java_tools_singlejar_builds() { function test_java_tools_singlejar_builds_with_layering_check() { function test_java_tools_ijar_builds() { function test_java_tools_ijar_builds_with_layering_check() {
for,0

if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then if "$is_windows"; then if [[ ! $(type -P clang) ]]; then if [[ ! $(type -P clang) ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/starlark_prefetching_test.sh
lines,281
function,13
function test_files_tracked_with_non_existing_files() {
test_label_arg() { "build_file" : attr.label(), test_unused_invalid_label_arg() { "unused" : attr.label(), test_label_list_arg() { "data" : attr.label_list(), test_unused_invalid_label_list_arg() { "unused_list" : attr.label_list(), test_label_keyed_string_dict_arg() { "data": attr.label_keyed_string_dict(), test_unused_invalid_label_keyed_string_dict_arg() { "unused_dict" : attr.label_keyed_string_dict(), function test_files_tracked_with_non_existing_files() {
for,2
for f in ctx.attr.data: for f in ctx.attr.data:
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_patching_test.sh
lines,823
function,14
function get_extrepourl() {
set_up() { function get_extrepourl() { test_patch_file() { test_patch_failed() { test_remote_patch_on_top_of_local_patch() { test_remote_patch_integrity_incorrect() { test_remote_patches_with_same_base_name() { test_patch_git() { test_override_buildfile() { test_override_buildfile_content() { test_override_buildfile_git() { test_override_buildfilecontents_git() { test_build_file_build_bazel() { test_git_format_patch() {
for,0

if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then if $is_windows; then if $is_windows; then if $is_windows; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/workspace_test.sh
lines,1222
function,40
function setup_repo() { function test_workspace_changes() { function test_path_with_spaces() { function test_middleman_conflict() { function test_error_in_workspace_file() { function test_no_select() { function test_macro_select() { function test_clean() { function test_starlark_flags_affect_workspace() { function test_workspace_name() { function test_workspace_override() { function test_workspace_override_starlark(){ function test_workspace_addition_change() { function test_package_loading_with_remapping_changes() { function test_repository_mapping_in_build_file_load() { function test_remapping_from_bzl_file_load() { function test_repository_reassignment_label_in_build() { function test_repository_reassignment_location() { function test_repo_mapping_starlark_rules() { function test_remapping_with_label_relative() { function test_remapping_label_constructor() { function test_workspace_addition_change_aspect() { function test_mainrepo_name_is_not_different_repo() { function test_mainrepo_name_remapped_properly() { function test_external_subpacakge() { function test_external_rule() { function test_remap_execution_platform() { function test_remap_toolchain_deps() { function test_rename_visibility() { function test_renaming_visibility_main() { function test_renaming_visibility_via_default() { function test_cannot_define_repo_named_builtins() {
function setup_repo() { function test_workspace_changes() { function test_path_with_spaces() { function test_middleman_conflict() { function test_error_in_workspace_file() { function test_no_select() { function test_macro_select() { foo_repo() def foo_repo(): function test_clean() { function test_starlark_flags_affect_workspace() { macro() def macro(): function test_workspace_name() { function test_workspace_override() { function test_workspace_override_starlark(){ function test_workspace_addition_change() { function test_package_loading_with_remapping_changes() { function test_repository_mapping_in_build_file_load() { function test_remapping_from_bzl_file_load() { function test_repository_reassignment_label_in_build() { function test_repository_reassignment_location() { function test_repo_mapping_starlark_rules() { function test_remapping_with_label_relative() { function test_remapping_label_constructor() { function test_workspace_addition_change_aspect() { for f in src.files.to_list(): function test_mainrepo_name_is_not_different_repo() { function test_mainrepo_name_remapped_properly() { function test_external_subpacakge() { function test_external_rule() { function test_remap_execution_platform() { function test_remap_toolchain_deps() { return [platform_common.ToolchainInfo()] test_remap_toolchains_from_qualified_load() { return [platform_common.ToolchainInfo()] function test_rename_visibility() { function test_renaming_visibility_main() { function test_renaming_visibility_via_default() { function test_cannot_define_repo_named_builtins() {
for,4
expect_log "got value of type 'select' for attribute 'build_file' of new_local_repository rule 'foo'; select may not be used in repository rules" expect_log "got value of type 'select' for attribute 'build_file' of new_local_repository rule 'foo'" for src in ctx.rule.attr.srcs: for f in src.files.to_list():
if,2
if hasattr(ctx.rule.attr, 'srcs'): if hasattr(ctx.rule.attr, 'srcs'):
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/allowlist_test.sh
lines,211
function,4
function test_allowlist_includes_external_deps() { function test_allowlist_bad_value() { function test_allowlist_own_rep() {
function test_allowlist_includes_external_deps() { "dep": attr.label() function test_allowlist_bad_value() { function test_allowlist_own_rep() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_layering_check_test.sh
lines,170
function,19
function write_files { function test_bazel_layering_check() {
int hello(); int helloPrivate(); int base(); int base() { int implementation(); int implementation() { int helloPrivate() { implementation(); return base(); int hello() { return helloPrivate(); int main() { return helloPrivate() - 42; int main() { return base() - 42; int main() { return hello() - 42; function test_bazel_layering_check() {
for,0

if,4
if is_darwin; then if [[ ! -x ${clang_tool:-/usr/bin/clang_tool} ]]; then if [[ ! -e bazel-bin/hello/hello.cppmap ]]; then if [[ ! -e bazel-bin/hello/hello_lib.cppmap ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/cc_flags_supplier_test.sh
lines,239
function,11
function set_up() { function write_test_target() { function write_crosstool() { function test_legacy_make_variable() { function test_sysroot() { function test_feature_config() { function test_all_sources() {
function set_up() { function write_test_target() { function write_crosstool() { def _get_make_variables(): def _get_action_configs(): action_configs = _get_action_configs(), make_variables = _get_make_variables(), function test_legacy_make_variable() { function test_sysroot() { function test_feature_config() { function test_all_sources() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/stardoc_deps_test.sh
lines,43
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java17_test.sh
lines,232
function,5
function set_up() { function test_java17_text_block() { function test_incompatible_system_classpath() { function test_incompatible_tool_system_classpath() {
function set_up() { function test_java17_text_block() { function test_incompatible_system_classpath() { function test_incompatible_tool_system_classpath() {
for,2
"recent enough to compile for the Java 21 runtime in external/remotejdk21_[a-z0-9]*\. Either " \ "recent enough to compile for the Java 21 runtime in external/remotejdk21_[a-z0-9]*\. Either " \
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_symlink_test.sh
lines,905
function,44
function expect_symlink() { function set_up() { function test_smoke() { function test_no_unresolved_symlinks() { function test_inmemory_cache_symlinks() { function test_on_disk_cache_symlinks() { function test_no_inmemory_cache_symlinks() { function test_no_on_disk_cache_symlinks() { function test_replace_symlink_with_file() { function test_replace_file_with_symlink() { function test_file_instead_of_symlink() { function test_symlink_instead_of_file() { function test_symlink_created_from_spawn() { function test_dangling_symlink_created_from_symlink_action() { function test_symlink_file_to_file_created_from_symlink_action() { function test_symlink_directory_to_directory_created_from_symlink_action() { function test_symlink_file_to_directory_created_from_symlink_action() { function test_symlink_directory_to_file_created_from_symlink_action() { function test_executable_dangling_symlink() { function test_executable_symlink() { function test_executable_symlink_to_nonexecutable_file() { function test_executable_symlink_to_directory() { function test_symlink_cycle() { function test_unresolved_symlink_in_exec_cfg() { function setup_unresolved_symlink_as_input() { function test_unresolved_symlink_as_input_local() { function test_unresolved_symlink_as_input_sandbox() { function setup_unresolved_symlink_as_runfile() { function test_unresolved_symlink_as_runfile_local() { function test_unresolved_symlink_as_runfile_symlink() {
function expect_symlink() { function set_up() { attrs = {"link_target": attr.string()}, write = rule(implementation = _write_impl, attrs = {"contents": attr.string()}) function test_smoke() { function test_no_unresolved_symlinks() { expect_log 'declare_symlink() is not allowed; use the --allow_unresolved_symlinks' function test_inmemory_cache_symlinks() { function test_on_disk_cache_symlinks() { function test_no_inmemory_cache_symlinks() { function test_no_on_disk_cache_symlinks() { function test_replace_symlink_with_file() { function test_replace_file_with_symlink() { function test_file_instead_of_symlink() { bad_symlink = rule(implementation = _bad_symlink_impl, attrs = {"link_target": attr.string()}) bad_write = rule(implementation = _bad_write_impl, attrs = {"contents": attr.string()}) expect_log "symlink() with \"target_path\" param requires that \"output\" be declared as a symlink, not a file or directory" function test_symlink_instead_of_file() { expect_log "symlink() with \"target_file\" param requires that \"output\" be declared as a file or directory, not a symlink" function test_symlink_created_from_spawn() { "link_target": attr.string(), function test_dangling_symlink_created_from_symlink_action() { a = rule(implementation = _a_impl, attrs = {"link_target": attr.string()}) function test_symlink_file_to_file_created_from_symlink_action() { function test_symlink_directory_to_directory_created_from_symlink_action() { function test_symlink_file_to_directory_created_from_symlink_action() { expect_log "symlink() with \"target_file\" directory param requires that \"output\" be declared as a directory" function test_symlink_directory_to_file_created_from_symlink_action() { expect_log "symlink() with \"target_file\" file param requires that \"output\" be declared as a file" function test_executable_dangling_symlink() { function test_executable_symlink() { function test_executable_symlink_to_nonexecutable_file() { function test_executable_symlink_to_directory() { expect_log "symlink() with \"output\" directory param cannot be executable" function test_symlink_cycle() { function test_unresolved_symlink_in_exec_cfg() { function setup_unresolved_symlink_as_input() { "stage_target": attr.bool(), function test_unresolved_symlink_as_input_local() { function test_unresolved_symlink_as_input_sandbox() { function setup_unresolved_symlink_as_runfile() { "stage_runfile": attr.bool(), function test_unresolved_symlink_as_runfile_local() { function test_unresolved_symlink_as_runfile_symlink() {
for,2
doesn't test for executability, it tests whether the current program is permitted \ run_suite "Tests for symlink artifacts"
if,16
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if [[ ! -L "$file" ]]; then if "$is_windows"; then if "$is_windows"; then inputs = [symlink] + ([ctx.file.file] if ctx.attr.stage_target else []), if "$is_windows"; then if "$is_windows"; then files = [symlink] + ([ctx.file.file] if ctx.attr.stage_runfile else []), if "$is_windows"; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_random_characters_test.sh
lines,89
function,2
function basic_glob_scenario_test_template() { function test_space_dollar_and_parentheses() {
function basic_glob_scenario_test_template() { function test_space_dollar_and_parentheses() {
for,2
for i in $(seq 1 10); do run_suite "Integration tests for handling of special characters"
if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/runfiles_test.sh
lines,264
function,8
function test_runfiles_without_bzlmod() { function test_runfiles_bzlmod() { function test_legacy_runfiles_change() { function test_enable_runfiles_change() { function test_nobuild_runfile_links() { function test_nobuild_runfile_links_with_run_under() { function test_switch_runfiles_from_enabled_to_disabled {
function test_runfiles_without_bzlmod() { function test_runfiles_bzlmod() { function test_legacy_runfiles_change() { int main() { return 0; } function test_enable_runfiles_change() { function test_nobuild_runfile_links() { function test_nobuild_runfile_links_with_run_under() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_execlog_test.sh
lines,204
function,7
function test_dir_depends() { function test_dir_relative() { function test_empty_file_in_runfiles() { function test_negating_flags() { function test_no_output() { function test_no_remote_cache() {
function test_dir_depends() { function test_dir_relative() { function test_empty_file_in_runfiles() { function test_negating_flags() { function test_no_output() { return DefaultInfo() function test_no_remote_cache() {
for,0

if,6
if [ "$rule1Num" -lt "$dir1Num" ] if [ "$dir2Num" -lt "$rule1Num" ] if [ "$rule2Num" -lt "$dir2Num" ] if [[ -e output ]]; then if [[ -e output ]]; then if [[ -e output ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/execroot_test.sh
lines,238
function,9
function test_execroot_structure_without_bzlmod() { function test_execroot_structure_with_bzlmod() { function test_sibling_repository_layout() { function test_sibling_repository_layout_indirect_dependency() { function test_subdirectory_repository_layout_indirect_dependency() { function test_no_sibling_repository_layout() { function test_external_directory_globs() { function test_cc_smoke_with_new_layouts() { function test_java_smoke_with_new_layouts() {
function test_execroot_structure_without_bzlmod() { function test_execroot_structure_with_bzlmod() { function test_sibling_repository_layout() { function test_sibling_repository_layout_indirect_dependency() { function test_subdirectory_repository_layout_indirect_dependency() { function test_no_sibling_repository_layout() { function test_external_directory_globs() { function test_cc_smoke_with_new_layouts() { function test_java_smoke_with_new_layouts() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_test_no_windows.sh
lines,135
function,6
function write_java_timeout_test() { function test_java_test_timeout() { function test_java_test_timeout_split_xml() { function test_wrapper_resolves_runfiles_to_subsuming_tree() {
function write_java_timeout_test() { public void testPasses() throws InterruptedException { } public void testTimesOut() throws InterruptedException { function test_java_test_timeout() { function test_java_test_timeout_split_xml() { function test_wrapper_resolves_runfiles_to_subsuming_tree() {
for,0

if,1
if [ $subrunfiles != $TEST_SRCDIR ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_test_test.sh
lines,1039
function,39
function set_up_jobcount() { function test_3_cpus() { function test_3_local_jobs() { function DISABLED_test_tmpdir() { function test_env_vars() { function test_runfiles_java_runfiles_merges_env_vars() { function test_runfiles_python_runfiles_merges_env_vars() { function runfiles_merges_runfiles_env_vars() { function test_run_under_external_label_with_options() { function test_run_under_label_with_options() { function test_run_under_path() { function test_run_under_external_file_with_options() { function test_test_timeout() { function test_runs_per_test_detects_flakes() { function test_xml_is_present() { function write_test_xml_timeout_files() { function test_xml_is_present_when_timingout() { function test_xml_is_present_when_timingout_split_xml() { function test_subprocess_non_timeout() { function test_xml_fallback_for_sharded_test() { function test_testonly_is_enforced() { function test_always_xml_output() { function test_detailed_test_summary_for_failed_test() { function test_detailed_test_summary_for_passed_test() { function test_flaky_test() { function setup_undeclared_outputs_test() { function test_undeclared_outputs_are_zipped() { function test_undeclared_outputs_are_not_zipped() { function test_undeclared_outputs_zipped_then_unzipped() { function test_undeclared_outputs_unzipped_then_zipped() { function test_undeclared_outputs_manifest_is_created() { function test_undeclared_outputs_annotations_are_added() { function test_no_zip_annotation_manifest_when_no_undeclared_outputs() { function test_test_with_nobuild_runfile_manifests() { function test_run_from_external_repo_sibling_repository_layout() { function test_xml_output_format() { function test_shard_status_file_checked() {
function set_up_jobcount() { function test_3_cpus() { function test_3_local_jobs() { function DISABLED_test_tmpdir() { function test_env_vars() { function test_runfiles_java_runfiles_merges_env_vars() { function test_runfiles_python_runfiles_merges_env_vars() { function runfiles_merges_runfiles_env_vars() { function test_run_under_external_label_with_options() { function test_run_under_label_with_options() { function test_run_under_path() { function test_run_under_external_file_with_options() { function test_test_timeout() { function test_runs_per_test_detects_flakes() { function test_xml_is_present() { function write_test_xml_timeout_files() { function test_xml_is_present_when_timingout() { function test_xml_is_present_when_timingout_split_xml() { function test_subprocess_non_timeout() { function test_xml_fallback_for_sharded_test() { function test_testonly_is_enforced() { function test_always_xml_output() { function test_detailed_test_summary_for_failed_test() { function test_detailed_test_summary_for_passed_test() { function test_flaky_test() { function setup_undeclared_outputs_test() { function test_undeclared_outputs_are_zipped() { function test_undeclared_outputs_are_not_zipped() { function test_undeclared_outputs_zipped_then_unzipped() { function test_undeclared_outputs_unzipped_then_zipped() { function test_undeclared_outputs_manifest_is_created() { function test_undeclared_outputs_annotations_are_added() { function test_no_zip_annotation_manifest_when_no_undeclared_outputs() { function test_test_with_nobuild_runfile_manifests() { function test_run_from_external_repo_sibling_repository_layout() { function test_xml_output_format() { function test_shard_status_file_checked() {
for,5
for (( i = 1 ; i <= 5 ; i++ )); do || fail "No xml file for //dir:success" || fail "No xml file for //dir:fail" || fail "Got test attempts while expected non for non-flaky tests" expect_log "Sharding requested, but the test runner did not advertise support for it by touching TEST_SHARD_STATUS_FILE."
if,3
if [ "\$nlink" -gt 4 ] ; then if bazel test --nocache_test_results --test_output=all \ if ! [ -f "${FLAKE_FILE}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_starlark_load_test.sh
lines,262
function,11
function run_external_starlark_load_test() { function test_load_starlark_from_external_repo_with_pkg_relative_label_load() { function test_load_starlark_from_external_repo_with_pkg_relative_label_load() { function test_load_starlark_from_external_repo_with_pkg_relative_path_load() { function test_load_starlark_from_external_repo_with_repo_relative_label_load() { function test_starlark_repository_relative_label() { function test_starlark_repository_nested_relative_label() { function test_aspects_and_starlark_repositories() {
function run_external_starlark_load_test() { function test_load_starlark_from_external_repo_with_pkg_relative_label_load() { function test_load_starlark_from_external_repo_with_pkg_relative_label_load() { function test_load_starlark_from_external_repo_with_pkg_relative_path_load() { function test_load_starlark_from_external_repo_with_repo_relative_label_load() { function test_starlark_repository_relative_label() { function test_starlark_repository_nested_relative_label() { function test_aspects_and_starlark_repositories() { def repo(): return struct() return struct()
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_test_defaults.sh
lines,466
function,15
function test_default_java_toolchain_target_version() { function test_java_language_version_output_classes() { function test_tools_jdk_toolchain_nojacocorunner() { function test_default_java_toolchain_manualConfiguration() { function test_default_java_toolchain_javabuilderToolchain() { function test_default_java_toolchain_vanillaToolchain() { function test_default_java_toolchain_nonprebuiltToolchain() { function test_executable_java_binary_compiles_for_platform_without_cc_toolchain() { function test_java_library_compiles_for_any_platform_with_local_jdk() { function test_java_library_compiles_for_any_platform_with_remote_jdk() { function test_non_executable_java_binary_compiles_for_any_platform_with_local_jdk() { function test_non_executable_java_binary_compiles_for_any_platform_with_remote_jdk() { function test_executable_java_binary_fails_without_runtime_with_local_jdk() { function test_executable_java_binary_fails_without_runtime_with_remote_jdk() {
function test_default_java_toolchain_target_version() { function test_java_language_version_output_classes() { System.out.println(myString.stripLeading().stripTrailing()); function test_tools_jdk_toolchain_nojacocorunner() { function test_default_java_toolchain_manualConfiguration() { function test_default_java_toolchain_javabuilderToolchain() { function test_default_java_toolchain_vanillaToolchain() { function test_default_java_toolchain_nonprebuiltToolchain() { function test_executable_java_binary_compiles_for_platform_without_cc_toolchain() { function test_java_library_compiles_for_any_platform_with_local_jdk() { function test_java_library_compiles_for_any_platform_with_remote_jdk() { function test_non_executable_java_binary_compiles_for_any_platform_with_local_jdk() { function test_non_executable_java_binary_compiles_for_any_platform_with_remote_jdk() { function test_executable_java_binary_fails_without_runtime_with_local_jdk() { function test_executable_java_binary_fails_without_runtime_with_remote_jdk() {
for,4
expect_log "While resolving toolchains for target //pkg:foo ([0-9a-f]*): No matching toolchains found for types @bazel_tools//tools/jdk:runtime_toolchain_type" expect_log "While resolving toolchains for target //pkg:foo_deployjars_internal_rule ([0-9a-f]*): No matching toolchains found for types @bazel_tools//tools/jdk:runtime_toolchain_type" expect_log "While resolving toolchains for target //pkg:foo ([0-9a-f]*): No matching toolchains found for types @bazel_tools//tools/jdk:runtime_toolchain_type" expect_log "While resolving toolchains for target //pkg:foo_deployjars_internal_rule ([0-9a-f]*): No matching toolchains found for types @bazel_tools//tools/jdk:runtime_toolchain_type"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/disk_cache_test.sh
lines,94
function,2
function test_local_action_cache() { function test_input_directories_in_external_repo_with_sibling_repository_layout() {
function test_local_action_cache() { function test_input_directories_in_external_repo_with_sibling_repository_layout() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/cpp_darwin_integration_test.sh
lines,180
function,20
function test_osx_cc_wrapper_rpaths_handling() { function test_osx_binary_strip() { function test_osx_test_strip() { function test_osx_sandboxed_cc_library_build() { function test_cc_test_with_explicit_install_name() {
function test_osx_cc_wrapper_rpaths_handling() { int foo() { return 2; } int bar() { return 12; } int baz() { return 42; } int foo(); int bar(); int baz(); int main() { int result = foo() + bar() + baz(); function test_osx_binary_strip() { int main() { return 0; } function test_osx_test_strip() { int main() { return 0; } function test_osx_sandboxed_cc_library_build() { void a() { } function test_cc_test_with_explicit_install_name() { int foo(); int foo() { return 0; } int main() { return foo();
for,1
run_suite "Tests for Bazel's C++ rules on Darwin"
if,2
if ! is_darwin; then if (result == 56) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/embedded_tools_deps_test.sh
lines,57
function,0


for,0

if,1
if [ "${PLATFORM-}" != "darwin" ] && [ "${PLATFORM-}" != "linux" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_docgen_test.sh
lines,42
function,0


for,1
for out in $EXPECTED_ZIPS; do
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/tags_propagation_starlark_test.sh
lines,177
function,4
function test_tags_propagated_to_run_shell() { function test_tags_propagated_to_run() { function test_tags_propagated_to_run_with_exec_info_in_rule() { function test_tags_not_propagated_to_run_when_incompatible_flag_off() {
function test_tags_propagated_to_run_shell() { function test_tags_propagated_to_run() { function test_tags_propagated_to_run_with_exec_info_in_rule() { function test_tags_not_propagated_to_run_when_incompatible_flag_off() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_spawnstats_test.sh
lines,85
function,7
function set_up() { function test_order() { function statistics_single() { function test_local() { function test_local_sandbox() { function test_repeat() { function test_localcache() {
function set_up() { function test_order() { function statistics_single() { function test_local() { function test_local_sandbox() { function test_repeat() { function test_localcache() {
for,1
echo "Starting single run for $flags $expect" &> $TEST_log
if,2
if ! [[ $output =~ ${expect} ]]; then if [[ "$PLATFORM" == "linux" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/location_test.sh
lines,98
function,3
function test_external_location() { function test_external_location_tool() { function test_location_trim() {
function test_external_location() { function test_external_location_tool() { function test_location_trim() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/cross_repository_test.sh
lines,263
function,9
function write_rule { function test_basic_cross_repo_targets { function test_top_level_local_repository { function test_workspace_loads_rules { function test_workspace_loads_rules_failure { function test_top_level_local_repository { function test_incremental_add_repository { function test_incremental_remove_repository { function test_workspace_directory {

for,1
for src in "$@"; do
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/check_external_files_test.sh
lines,268
function,14
function get_extrepourl() {
function get_extrepourl() { setup_remote() { setup_local() { test_check_external_files() { test_check_all_flags_fast() { run_local_repository_isnt_affected() { test_local_repository_isnt_affected() { test_local_repository_isnt_affected_with_skips() { run_override_repository_isnt_affected() { test_override_repository_isnt_affected() { test_override_repository_isnt_affected_with_skips() { test_no_fetch_then_fetch() { test_no_build_doesnt_break_the_cache() { test_symlink_outside_still_checked() {
for,1
msg="About to scan skyframe graph checking for filesystem nodes"
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then if $is_windows; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_workspaces_test.sh
lines,693
function,41
function set_workspace_command() { function build_and_process_log() { function ensure_contains_exactly() { function ensure_contains_atleast() { function ensure_output_contains_exactly_once() { function test_execute() { function test_reexecute() { function test_execute2() { function test_execute_quiet2() { function test_download() { function test_download_multiple() { function test_download_integrity_sha256() { function test_download_integrity_sha512() { function test_download_integrity_malformed() { function test_download_then_extract() { function test_download_then_extract_tar() { function test_download_and_extract() { function test_extract_rename_files() { function test_extract_pax_tar_non_ascii_utf8_file_names() { function test_extract_ustar_tar_non_ascii_utf8_file_names() { function test_extract_ustar_tar_non_ascii_non_utf8_file_names() { function test_extract_default_zip_non_ascii_utf8_file_names() { function test_file() { function test_file_nonascii() { function test_read() { function test_read_roundtrip_legacy_utf8() { function test_read_roundtrip_nolegacy_utf8() { function test_os() { function test_symlink() { function test_template() { function test_which() { function tear_down() {
function set_workspace_command() { function build_and_process_log() { function ensure_contains_exactly() { function ensure_contains_atleast() { function ensure_output_contains_exactly_once() { function test_execute() { function test_reexecute() { function test_execute2() { function test_execute_quiet2() { function test_download() { function test_download_multiple() { function test_download_integrity_sha256() { sha256_py='import base64, hashlib, sys; print(base64.b64encode(hashlib.sha256(sys.stdin.buffer.read()).digest()).decode("ascii"))' function test_download_integrity_sha512() { sha512_py='import base64, hashlib, sys; print(base64.b64encode(hashlib.sha512(sys.stdin.buffer.read()).digest()).decode("ascii"))' function test_download_integrity_malformed() { function test_download_then_extract() { function test_download_then_extract_tar() { function test_download_and_extract() { function test_extract_rename_files() { function test_extract_pax_tar_non_ascii_utf8_file_names() { function test_extract_ustar_tar_non_ascii_utf8_file_names() { function test_extract_ustar_tar_non_ascii_non_utf8_file_names() { function test_extract_default_zip_non_ascii_utf8_file_names() { function test_file() { function test_file_nonascii() { function test_read() { fail("read(): expected %r, got %r" % (content, read_result))' function test_read_roundtrip_legacy_utf8() { fail("read(): expected %r, got %r" % (corrupted_content, read_result))' function test_read_roundtrip_nolegacy_utf8() { fail("read(): expected %r, got %r" % (content, read_result))' function test_os() { function test_symlink() { function test_template() { function test_which() { function tear_down() {
for,1
echo "Skipping test on macOS due to lack of support for non-UTF-8 filenames"
if,8
if (( num != $2 )); then if (( num < $2 )); then if (( num != 1 )); then if is_darwin; then if read_result != content: if read_result != corrupted_content: if read_result != content: if [ -d "${TEST_TMPDIR}/server_dir" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/coverage_helpers.sh
lines,110
function,5
function get_gcov_version() { function is_gcov_missing_or_wrong_version() { function assert_coverage_result() { function assert_cc_coverage_result() { function get_coverage_file_path_from_test_log() {
function get_gcov_version() { function is_gcov_missing_or_wrong_version() { function assert_coverage_result() { function assert_cc_coverage_result() { function get_coverage_file_path_from_test_log() {
for,0

if,4
if [[ ! -x ${gcov_location:-/usr/bin/gcov} ]]; then if [ "$version" -lt 7 ]; then if get_gcov_version; then if [[ "$gcov_version" -le 7 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/generate_xml_test.sh
lines,83
function,7
function encode { function test_simple_ascii() { function test_low_control_chars() { function test_high_control_chars() { function test_valid_two_byte_seq() { function test_valid_three_byte_seq() { function test_invalid_two_byte_seq() {
function test_simple_ascii() { function test_low_control_chars() { function test_high_control_chars() { function test_valid_two_byte_seq() { function test_valid_three_byte_seq() { function test_invalid_two_byte_seq() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/jdeps_test.sh
lines,89
function,1
function test_jdeps() {
function test_jdeps() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if is_darwin; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_wrapper_test.sh
lines,326
function,19

mock_bazel() { setup_mock() { test_use_bazel_version_envvar() { test_bazelversion_file() { test_workspace_with_extension() { test_empty_bazelversion_file() { test_explicit_latest_bazel() { test_uses_bazelreal() { test_uses_latest_version() { test_error_message_for_no_available_bazel_version() { test_error_message_for_required_bazel_not_found() { test_recommends_curl() { test_recommends_wget() { test_recommends_manual_download() { test_delegates_to_wrapper_if_present() { test_bazel_wrapper_envvar() { test_gracefully_handles_bogus_bazelversion() { test_wrapper_detects_version_of_bazel_real() { test_bazelversion_without_newline() {
for,4
for bin in uname readlink dirname tr; do for bin in uname readlink dirname tr; do for bin in uname readlink dirname tr; do run_suite "Integration tests for scripts/packages/bazel.sh."
if,12
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ ${1:-""} == "--version" ]]; then if ../bin/bazel &> "$TEST_log"; then if USE_BAZEL_VERSION="foobar" ../bin/bazel &> "$TEST_log"; then if PATH="$(pwd)/mockpath" USE_BAZEL_VERSION="foobar" ../bin/bazel &> "$TEST_log"; then if PATH="$(pwd)/mockpath" USE_BAZEL_VERSION="foobar" ../bin/bazel &> "$TEST_log"; then if PATH="$(pwd)/mockpath" USE_BAZEL_VERSION="foobar" ../bin/bazel &> "$TEST_log"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/workspace_resolved_test.sh
lines,1214
function,40

test_result_recorded() { attrs = { "build_file" : attr.label() }, test_git_return_value() { def repo(): repo() test_git_follow_branch() { def repo(): repo() test_sync_follows_git_branch() { test_http_return_value() { test_sync_calls_all() { attrs = { "comment" : attr.string() }, test_sync_call_invalidates() { test_sync_load_errors_reported() { test_sync_reporting() { test_indirect_call() { test_resolved_file_reading() { test_label_resolved_value() { test_resolved_file_not_remembered() { create_sample_repository() { attrs = { "build_file" : attr.label() }, test_hash_included_and_reproducible() { test_chain_resolved() { test_usage_order_respected() { test_order_reproducible() { attrs = {"sleep": attr.int()}, test_non_starlarkrepo() { test_hidden_symbols() { attrs = { "data" : attr.string() }, test_toolchain_recorded() { def ext_toolchains(): ext_toolchains() test_local_config_platform_recorded() { test_definition_location_recorded() { def foo(): bar() def bar(): foo() test_canonical_warning() { "myattr": attr.string()
for,13
) for entry in resolved if entry["original_rule_class"] == "//:rule.bzl%trivial_rule" ) for entry in resolved if entry["original_rule_class"] == "//:rule.bzl%trivial_rule" for entry in resolved: for entry in resolved: for entry in resolved ) for name in names for entry in resolved ) for name in names ruleclass = "".join([entry["original_rule_class"] for entry in resolved if entry["original_attributes"]["name"]=="foo"]) for entry in resolved if entry["original_attributes"]["name"]=="foo"] ) for hash in hashes] ([entry["original_attributes"]["name"] for entry in resolved],)), for repo in resolved:
if,9
) for entry in resolved if entry["original_rule_class"] == "//:rule.bzl%trivial_rule" ) for entry in resolved if entry["original_rule_class"] == "//:rule.bzl%trivial_rule" if entry["original_attributes"]["name"] == "ext": if entry["original_attributes"]["name"] == "ext": if "native" not in entry] if "native" not in entry] ruleclass = "".join([entry["original_rule_class"] for entry in resolved if entry["original_attributes"]["name"]=="foo"]) for entry in resolved if entry["original_attributes"]["name"]=="foo"] if repo["original_attributes"]["name"] == name:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/starlark_git_repository_test.sh
lines,726
function,23
function set_up() { function get_pluto_repo() { function do_git_repository_test() { function test_git_repository() { function test_git_repository_strip_prefix() { function test_git_repository_shallow_since() { function test_new_git_repository_with_build_file() { function test_new_git_repository_with_build_file_strip_prefix() { function test_new_git_repository_with_build_file_content() { function test_new_git_repository_with_build_file_content_strip_prefix() { function do_new_git_repository_test() { function test_new_git_repository_submodules() { function test_new_git_repository_submodules_with_recursive_init_modules() { function test_git_repository_not_refetched_on_server_restart() { function test_git_repository_not_refetched_on_server_restart_strip_prefix() { function test_git_repository_refetched_when_commit_changes() { function test_git_repository_and_nofetch() { function setup_error_test() { function test_git_repository_both_commit_tag_error() { function test_git_repository_no_commit_tag_error() { function test_invalid_strip_prefix_error() { function test_git_repository_shallow_since_with_tag_error() { function test_git_repository_with_strip_prefix_for_load_statement() {
function set_up() { function get_pluto_repo() { function do_git_repository_test() { function test_git_repository() { function test_git_repository_strip_prefix() { function test_git_repository_shallow_since() { function test_new_git_repository_with_build_file() { function test_new_git_repository_with_build_file_strip_prefix() { function test_new_git_repository_with_build_file_content() { function test_new_git_repository_with_build_file_content_strip_prefix() { function do_new_git_repository_test() { function test_new_git_repository_submodules() { function test_new_git_repository_submodules_with_recursive_init_modules() { function test_git_repository_not_refetched_on_server_restart() { function test_git_repository_not_refetched_on_server_restart_strip_prefix() { function test_git_repository_refetched_when_commit_changes() { function test_git_repository_and_nofetch() { function setup_error_test() { function test_git_repository_both_commit_tag_error() { function test_git_repository_no_commit_tag_error() { function test_invalid_strip_prefix_error() { function test_git_repository_shallow_since_with_tag_error() { function test_git_repository_with_strip_prefix_for_load_statement() {
for,1
expect_log "shallow_since not allowed if a tag is specified; --depth=1 will be used for tags"
if,11
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if $is_windows; then if [ -e "$repos_dir" ]; then if [ "$2" == "build_file" ] ; then if [ "$1" == "0-initial" ]; then expect_log "shallow_since not allowed if a tag is specified; --depth=1 will be used for tags"
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/tags_propagation_native_test.sh
lines,338
function,18
function test_cc_library_tags_propagated() { function test_cc_binary_tags_propagated() { function test_java_library_tags_propagated() { function test_java_binary_tags_propagated() { function write_hello_library_files() { function test_java_header_tags_propagated() { function test_genrule_tags_propagated() { function test_test_rules_tags_propagated() { function test_cc_library_tags_not_propagated_when_incompatible_flag_off() { function test_cc_binary_tags_not_propagated_when_incompatible_flag_off() { function test_java_tags_not_propagated_when_incompatible_flag_off() {
function test_cc_library_tags_propagated() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_cc_binary_tags_propagated() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_java_library_tags_propagated() { function test_java_binary_tags_propagated() { function write_hello_library_files() { HelloLibrary.funcHelloLibrary(); public static void funcHelloLibrary() { function test_java_header_tags_propagated() { function test_genrule_tags_propagated() { function test_test_rules_tags_propagated() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_cc_library_tags_not_propagated_when_incompatible_flag_off() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_cc_binary_tags_not_propagated_when_incompatible_flag_off() { int main() { std::cout << "Hello test!" << std::endl; return 0; } function test_java_tags_not_propagated_when_incompatible_flag_off() {
for,0

if,1
if [ "${PLATFORM}" != "darwin" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazelignore_test.sh
lines,209
function,7

test_ignores_comment_lines() { test_does_not_glob_into_ignored_directory() { test_broken_BUILD_files_ignored() { test_broken_BUILD_files_ignored_subdir() { test_symlink_cycle_ignored() { test_build_specific_target() { test_aquery_specific_target() {
for,1
run_suite "Integration tests for .bazelignore"
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_docker_sandboxing_test.sh
lines,73
function,2
function test_platform_container() { function test_flag_container() {
function test_platform_container() { function test_flag_container() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/external_correctness_test.sh
lines,340
function,14
function set_up() { function test_build_file_changes_are_noticed() { function test_external_file_changes_are_noticed() { function test_symlink_changes_are_noticed() { function test_parent_symlink_change() { function test_genrule_d_correctness() { function test_package_group_in_external_repos() { function test_refs_btwn_repos() { function test_visibility_attributes_in_external_repos() { function test_select_in_external_repo() { function top_level_dir_changes_helper() { function test_top_level_dir_changes_batch() { function test_top_level_dir_changes_nobatch() { function test_non_extsietnt_repo_in_pattern() {
function set_up() { function test_build_file_changes_are_noticed() { function test_external_file_changes_are_noticed() { function test_symlink_changes_are_noticed() { function test_parent_symlink_change() { function test_genrule_d_correctness() { function test_package_group_in_external_repos() { function test_refs_btwn_repos() { function test_visibility_attributes_in_external_repos() { function test_select_in_external_repo() { function top_level_dir_changes_helper() { function test_top_level_dir_changes_batch() { function test_top_level_dir_changes_nobatch() { function test_non_extsietnt_repo_in_pattern() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_java_test_defaults_prebuilt.sh
lines,79
function,1
function test_default_java_toolchain_prebuiltToolchain() {
function test_default_java_toolchain_prebuiltToolchain() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_starlark_test.sh
lines,237
function,7
function get_coverage_file_path_from_test_log() { function set_up() { function test_starlark_rule_without_lcov_merger() { function test_starlark_rule_without_lcov_merger_failing_test() { function test_starlark_rule_with_custom_lcov_merger() { function test_starlark_rule_with_configuration_field_lcov_merger_coverage_enabled() { function test_starlark_rule_with_configuration_field_lcov_merger_coverage_disabled() {
function get_coverage_file_path_from_test_log() { function set_up() { function test_starlark_rule_without_lcov_merger() { function test_starlark_rule_without_lcov_merger_failing_test() { function test_starlark_rule_with_custom_lcov_merger() { function test_starlark_rule_with_configuration_field_lcov_merger_coverage_enabled() { function test_starlark_rule_with_configuration_field_lcov_merger_coverage_disabled() {
for,2
for var in "\$@" for var in "\$@"
if,7
if [[ ! -r extra ]]; then if [[ -z \$COVERAGE ]]; then if bazel coverage //:foo_test > $TEST_log; then if [[ "\$var" == "--output_file="* ]]; then if [[ "\$var" == "--output_file="* ]]; then if ctx.attr._lcov_merger: fail("Expected _lcov_merger to be None if coverage is not collected")
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/cc_integration_test.sh
lines,1966
function,117
function test_extra_action_for_compile() { function test_cc_library_include_prefix_external_repository() { function test_include_validation_sandbox_disabled() { function test_tree_artifact_headers_are_invalidated() { function test_save_feature_state() { function setup_cc_starlark_api_test() { function test_cc_starlark_api_default_values() { function test_cc_starlark_api_link_static_false() { function test_cc_starlark_api_additional_inputs() { function test_incompatible_validate_top_level_header_inclusions() { function test_aspect_accessing_args_link_action_with_tree_artifact() { function test_argv_in_compile_action() { function test_directory_arg_compile_action() { function test_reconstructing_cpp_actions() { function test_disable_cc_toolchain_detection() { function setup_workspace_layout_with_external_directory() { function test_execroot_subdir_layout_fails_for_external_subpackages() { function test_execroot_sibling_layout_null_build_for_external_subpackages() { function test_execroot_sibling_layout_header_scanning_in_external_subpackage() { function test_sibling_repository_layout_include_external_repo_output() { function test_using_compile_action_args_params_file() { function test_include_external_genrule_header() { function test_reconstructing_cpp_actions_using_shadowed_action() { function test_include_scanning_smoketest() { function test_env_inherit_cc_test() { function test_env_attr_cc_binary() { function external_cc_test_setup() { function test_external_cc_test_sandboxed() { function test_external_cc_test_sandboxed_sibling_repository_layout() { function test_external_cc_test_local() { function test_external_cc_test_local_sibling_repository_layout() { function test_bazel_current_repository_define() { function test_compiler_flag_gcc() { function test_compiler_flag_clang() { function test_bazel_cxxopts() { function test_bazel_conlyopts() { function test_cc_test_no_target_coverage_dep() { function test_cc_test_no_coverage_tools_dep_without_coverage() { function __is_installed() { function test_cc_toolchain_asan_feature() { function test_cc_toolchain_tsan_feature() { function test_cc_toolchain_ubsan_feature() { function setup_find_optional_cpp_toolchain() { function test_find_optional_cpp_toolchain_present_without_toolchain_resolution() { function test_find_optional_cpp_toolchain_present_with_toolchain_resolution() { function test_find_optional_cpp_toolchain_not_present_with_toolchain_resolution() { function test_no_cpp_stdlib_linked_to_c_library() {
function test_extra_action_for_compile() { echo 'void cc() {}' > ea/cc.cc function test_cc_library_include_prefix_external_repository() { int main() { int main() { function test_include_validation_sandbox_disabled() { function test_tree_artifact_headers_are_invalidated() { return MYFC(); args = ctx.actions.args() function test_save_feature_state() { echo 'void cc() {}' > ea/cc.cc echo 'void cc1() {}' > ea/cc1.cc function setup_cc_starlark_api_test() { string alongernamethanusual() { return "a1" + a2() + b() + d(); } string a2() { return "a2"; } string alongernamethanusual(); string a2(); string b() { return "b" + c(); } string b(); string c() { return "c"; } string c(); string d() { return "d"; } string d(); int main() { typedef string (*f_t)(); cout << alongernamethanusual() + f() << endl; extern "C" string f() { string str = alongernamethanusual(); reverse(str.begin(), str.end()); function test_cc_starlark_api_default_values() { function test_cc_starlark_api_link_static_false() { function test_cc_starlark_api_additional_inputs() { function test_incompatible_validate_top_level_header_inclusions() { int foo() { return bar(); inline int bar() { return 42; } function test_aspect_accessing_args_link_action_with_tree_artifact() { echo "int a() { return 0; }" > \$my_dir/a.cc echo "int b() { return 0; }" > \$my_dir/b.cc echo "int c() { return 0; }" > \$my_dir/c.cc function test_argv_in_compile_action() { function test_directory_arg_compile_action() { function test_reconstructing_cpp_actions() { compile_action_outputs = compile_action.outputs.to_list() for i in archive_action.inputs.to_list(): archive_action.outputs.to_list()[0].path, link_action.outputs.to_list()[0].path, echo "inline int x() { return 42; }" > "${package}/x.h" int a() { return x(); } function test_disable_cc_toolchain_detection() { int main() { function setup_workspace_layout_with_external_directory() { function test_execroot_subdir_layout_fails_for_external_subpackages() { function test_execroot_sibling_layout_null_build_for_external_subpackages() { function test_execroot_sibling_layout_header_scanning_in_external_subpackage() { function test_sibling_repository_layout_include_external_repo_output() { function test_using_compile_action_args_params_file() { int main() { function test_include_external_genrule_header() { int main() { sayhello(); void sayhello() { function test_reconstructing_cpp_actions_using_shadowed_action() { compile_action_outputs = compile_action.outputs.to_list() archive_action.outputs.to_list()[0].path, echo "inline int x() { return 42; }" > "${package}/x.h" int a() { return x(); } function test_include_scanning_smoketest() { int main() { return 0; } function test_env_inherit_cc_test() { int main() { function test_env_attr_cc_binary() { int main() { function external_cc_test_setup() { void print_greeting(); void print_greeting() { int main() { print_greeting(); function test_external_cc_test_sandboxed() { function test_external_cc_test_sandboxed_sibling_repository_layout() { function test_external_cc_test_local() { function test_external_cc_test_local_sibling_repository_layout() { function test_bazel_current_repository_define() { void print_repo_name() { void print_repo_name(); int main() { print_repo_name(); int main() { print_repo_name(); int main() { print_repo_name(); int main() { print_repo_name(); function test_compiler_flag_gcc() { int main() {} function test_compiler_flag_clang() { int main() {} function test_bazel_cxxopts() { int main() { int main() { function test_bazel_conlyopts() { int main() { int main() { function test_cc_test_no_target_coverage_dep() { function test_cc_test_no_coverage_tools_dep_without_coverage() { function __is_installed() { function test_cc_toolchain_asan_feature() { int main() { function test_cc_toolchain_tsan_feature() { void increment() { int main() { t1.join(); t2.join(); function test_cc_toolchain_ubsan_feature() { int main() { function setup_find_optional_cpp_toolchain() { function test_find_optional_cpp_toolchain_present_without_toolchain_resolution() { function test_find_optional_cpp_toolchain_present_with_toolchain_resolution() { function test_find_optional_cpp_toolchain_not_present_with_toolchain_resolution() { function test_no_cpp_stdlib_linked_to_c_library() { int main() {}
for,7
expect_log "this rule is missing dependency declarations for the "\ action = [a for a in target.actions if a.mnemonic == "CppCompile"][0] for action in target.actions: for i in archive_action.inputs.to_list(): for action in target.actions: command = "for v in \$@; do echo \$v; done > " + aspect_out.path, for action in target.actions:
if,22
cmd = "if ! [[ -r ea/cc.cc ]]; then echo 'source file not in inputs'; exit 1; fi", if action.mnemonic != "CppArchive": action = [a for a in target.actions if a.mnemonic == "CppCompile"][0] if action.mnemonic != "CppCompile": if is_darwin; then if action.mnemonic == "CppCompile": if action.mnemonic == "CppArchive": if action.mnemonic == "CppLink": if not compile_action or not archive_action or not link_action: if i.path.endswith("params"): if (argc > 1) { if action.mnemonic == "CppCompile": if action.mnemonic == "CppCompile": if action.mnemonic == "CppArchive": if not compile_action or not archive_action: if (foo == nullptr) { if (foo == nullptr) { if [[ -n "$out" ]]; then if [[ -n "$out" ]]; then if [[ "$(uname -s | tr 'A-Z' 'a-z')" == "linux" ]]; then if toolchain: if is_darwin; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/new_local_repo_test.sh
lines,151
function,2
function test_glob_in_synthesized_build_file() { function test_recursive_glob_in_new_local_repository() {
function test_glob_in_synthesized_build_file() { function test_recursive_glob_in_new_local_repository() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_hermetic_sandboxing_test.sh
lines,384
function,11
function set_up { function test_absolute_path() { function test_symbolic_link() { function test_missing_python_deps() { function test_writing_input_file() { function test_overwrite_via_resolved_symlink() { function test_overwrite_via_unresolved_symlink() { function test_overwrite_file_from_declared_directory() { function test_subdirectories_in_declared_directory() { function test_other_artifacts() {
"resolve_symlink" : attr.bool(), function test_absolute_path() { function test_symbolic_link() { function test_missing_python_deps() { function test_writing_input_file() { function test_overwrite_via_resolved_symlink() { function test_overwrite_via_unresolved_symlink() { function test_overwrite_file_from_declared_directory() { function test_subdirectories_in_declared_directory() { function test_other_artifacts() {
for,2
for folder in /bin/ /boot/ /dev/ /etc/ /home/ /lib/ /lib32/ /lib64/ /libx32/ /lost+found/ /media/ /mnt/ /opt/ /proc/ /root/ /run/ /sbin/ /snap/ /srv/ /sys/ /tmp/ /usr/ /var/ /wslgfCdII/ input_paths_string = " ".join([a.path for a in all_artifacts])
if,4
if [ -d "$folder" ] && [ "$folder" != "/$project_folder/" ] if [[ -L $folder ]] if ctx.attr.resolve_symlink: if ctx.attr.resolve_symlink:
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/bazel/bazel_coverage_cc_test_llvm.sh
lines,456
function,10
function setup_llvm_coverage_tools_for_lcov() { function setup_a_cc_lib_and_t_cc_test() { function test_cc_test_llvm_coverage_doesnt_fail() { function test_cc_test_llvm_coverage_produces_lcov_report() { function test_cc_test_llvm_coverage_produces_lcov_report_with_split_postprocessing() { function test_cc_test_with_runtime_objects_not_in_runfiles() { function setup_external_cc_target() { function test_external_cc_target_can_collect_coverage() { function test_external_cc_target_coverage_not_collected_by_default() { function test_coverage_with_tmp_in_path() {
function setup_llvm_coverage_tools_for_lcov() { function setup_a_cc_lib_and_t_cc_test() { function test_cc_test_llvm_coverage_doesnt_fail() { function test_cc_test_llvm_coverage_produces_lcov_report() { function test_cc_test_llvm_coverage_produces_lcov_report_with_split_postprocessing() { function test_cc_test_with_runtime_objects_not_in_runfiles() { function setup_external_cc_target() { function test_external_cc_target_can_collect_coverage() { function test_external_cc_target_coverage_not_collected_by_default() { function test_coverage_with_tmp_in_path() {
for,6
|| fail "Coverage for //:t failed" bazel coverage --test_output=all //:t &>$TEST_log || fail "Coverage for //:t failed" --test_env=VERBOSE_COVERAGE=1 --test_output=all //:t &>$TEST_log || fail "Coverage for //:t failed" //:main &>$TEST_log || fail "Coverage for //:main failed" @other_repo//:t --instrumentation_filter=// &>$TEST_log || fail "Coverage for @other_repo//:t failed" @other_repo//:t &>$TEST_log || fail "Coverage for @other_repo//:t failed"
if,12
if [[ "${COVERAGE_GENERATOR_DIR}" != "released" ]]; then if [[ ! -x "${clang}" ]]; then if [ "$clang_version" -lt 9 ]; then if [[ ! -x "${llvm_profdata}" ]]; then if [[ ! -x "${llvm_cov}" ]]; then if (what) { if [[ ! -x ${llvmprofdata:-/usr/bin/llvm-profdata} ]]; then if [[ ! -x ${clang_tool:-/usr/bin/clang_tool} ]]; then if (argc < 5) { if (what) { if (what) { if (what) {
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/unittest_utils.sh
lines,181
function,14

cat_jvm_log () { die () { error () { check_eq () { check_ne () { check_le () { check_lt () { check_ge () { check_gt () { check_match () atexit () { capture_test_stdout () { capture_test_stderr () { testlogs_dir() {
for,0

if,12
if [[ "$log_content" =~ \ if [[ "$CAPTURED_STD_ERR" -ne 0 || "$CAPTURED_STD_OUT" -ne 0 ]]; then if [[ "$CAPTURED_STD_OUT" -ne 0 ]]; then if [[ "$CAPTURED_STD_ERR" -ne 0 ]]; then if [[ -n "${1-}" ]] ; then if [[ -n "${BASH-}" ]]; then if [[ -n "${status_code}" && "${status_code}" -ne 0 ]]; then if [[ -n "$1" ]] ; then if [[ -z "$ATEXIT" ]]; then if [[ -z "${TEST_TMPDIR:-}" ]]; then if [[ ! -e "${TEST_TMPDIR}" ]]; then if [[ -z "${XML_OUTPUT_FILE:-}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/shell/shell_utils_test.sh
lines,126
function,5
function assert_fails_to() { function test_resolve_non_links() { function test_normalize_path() { function test_md5_sum() {
function assert_fails_to() { function test_resolve_non_links() { function test_normalize_path() { function test_md5_sum() {
for,3
"$method" "$arg" && fail "'$method' should have failed for '$arg'" "$method" && fail "'$method' should have failed for empty argument" run_suite "Tests for Bash utilities"
if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -n "$arg" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/py/bazel/testdata/runfiles_test/foo/foo.sh
lines,69
function,2
function child_binary_name() { function main() {
function child_binary_name() { function main() {
for,1
for lang in py java sh cc; do
if,4
if ! type rlocation >&/dev/null; then if "$is_windows"; then if "$is_windows"; then if ! "$child_bin"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/py/bazel/testdata/runfiles_test/bar/bar.sh
lines,28
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/tools/bzlmod/update_default_lock_file.sh
lines,46
function,2
function cleanup() { function generate_lock_file() {
function cleanup() { function generate_lock_file() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/tools/bzlmod/verify_default_lock_file.sh
lines,40
function,1
function test_verify_lock_file() {
function test_verify_lock_file() {
for,1
bazel mod deps --lockfile_mode=error >& "$TEST_log" || fail "Default lockfile for empty workspace is no longer in sync with MODULE.tools. Please run \"bazel run //src/test/tools/bzlmod:update_default_lock_file\""
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/test/tools/daemonize_test.sh
lines,84
function,5

set_up() { tear_down() { test_pid_file_open_permission_error_fails() { test_pid_file_write_disk_full_fails() { _concat() {
for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/main/starlark/tests/builtins_bzl/cc/cc_shared_library/test_cc_shared_library/testenv.sh
lines,17
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/main/starlark/tests/builtins_bzl/cc/cc_shared_library/test_cc_shared_library/cc_shared_library_integration_test.sh
lines,88
function,8
function check_symbol_present() { function check_symbol_absent() { function test_shared_library_symbols() { function test_shared_library_user_link_flags() { function do_test_binary() { function test_binary() { function test_cc_test() { function test_number_of_linked_libs() {
function check_symbol_present() { function check_symbol_absent() { function test_shared_library_symbols() { function test_shared_library_user_link_flags() { function do_test_binary() { function test_binary() { function test_cc_test() { function test_number_of_linked_libs() {
for,0

if,2
if [[ "$1" = "non_linux" ]]; then if [ "$(echo $1 | grep -c $2)" -gt 0 ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/main/starlark/tests/builtins_bzl/builtin_test_setup.sh
lines,48
function,3
function setup_tests() { function get_runfiles_dir() {
function setup_tests() { echo "copy_tests() - $src does not exist" 1>&2; exit 1 function get_runfiles_dir() {
for,1
for file in $(find $dest/* -name *.builtin_test); do
if,4
if [ ! -e "$src" ]; then if [ ! -e "$dest" ]; then if [ -e "$src" ]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/main/starlark/tests/builtins_bzl/cc_builtin_tests.sh
lines,75
function,1
function test_starlark_cc() {
function test_starlark_cc() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$is_windows"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/main/native/windows/build_windows_jni.sh
lines,128
function,1
function fail() {
function fail() { WINDOWS_SOURCES=()
for,1
for i in $*; do
if,11
if ! which which >&/dev/null ; then if [ -n "${BAZEL_VC+set}" ]; then if [ ! -f "${VSVARS}" ]; then if [ -z "${BAZEL_VS+set}" ]; then if [ ! -f "${VSVARS}" ]; then if [ -d "${VSVARS}Enterprise" ]; then elif [ -d "${VSVARS}Professional" ]; then elif [ -d "${VSVARS}Community" ]; then if [ ! -f "${VSVARS}" ]; then if [ -n "${JAVA_HOME+set}" ]; then if [[ "$i" =~ ^.*\.cc$ ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/tools/singlejar/zip64_test.sh
lines,88
function,2
function test_65Kentries() {
function test_65Kentries() {
for,1
for dir in {1..256}; do
if,8
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$IS_WINDOWS"; then if [[ $javabase = external/* ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/tools/singlejar/output_jar_shell_test.sh
lines,79
function,2
function test_new_entries() { function test_empty_resource_file() {
function test_new_entries() { function test_empty_resource_file() {
for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if "$IS_WINDOWS"; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/zip_files.sh
lines,50
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/src/merge_zip_files.sh
lines,76
function,0


for,2
for curr_zip in "$@" for curr_zip in "$@"
if,1
if [[ "$directory_prefix" == "-" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/release/release.sh
lines,308
function,11
function __merge_release_notes() { function __create_release_commit() { function __apply_cherry_picks() { function __create_release() { function __push_if_exists() { function __push_ref() { function __push_release_candidate() { function __cleanup_branches() { function __do_release() { function __abandon_release() { function __usage() {
function __merge_release_notes() { function __create_release_commit() { function __apply_cherry_picks() { function __create_release() { function __push_if_exists() { function __push_ref() { function __push_release_candidate() { function __cleanup_branches() { function __do_release() { function __abandon_release() { function __usage() {
for,8
for commit in "$@"; do echo "Creating new release branch ${branch_name} for release ${release_name}" echo "Destroying the release branches for release ${tag_name}" for branch in $(git branch | grep -Po "release-${tag_name}rc([0-9])*") creates a new release branch for release named RELEASE_NAME, The typical workflow for the release manager is: 1. Create the release branch using the decided name for the release 2. Push to the repository and wait for the continuous integration
if,8
if [ "${last_relnotes}" == "${last_savedrelnotes}" ]; then if [ "$(git rev-parse HEAD)" == "${previous_head}" ]; then if [[ "$1" =~ ^--force_rc=([0-9]*)$ ]]; then if git show-ref -q "${2}"; then if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then 4. Either abandon or release the branch depending on if too much problems are reported or if the release is considered viable. The
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/release/common.sh
lines,121
function,13
function __git_commit_hash() { function __git_commit_subject() { function git_get_branch() { function git_get_tag() { function git_commit_msg() { function get_release_candidate() { function get_release_name() { function is_rolling_release() { function get_lts_name() { function git_log_hash() { function get_full_release_name() { function get_release_branch() { function wrap_text() {
function __git_commit_hash() { function __git_commit_subject() { function git_get_branch() { function git_get_tag() { function git_commit_msg() { function get_release_candidate() { function get_release_name() { function is_rolling_release() { function get_lts_name() { function git_log_hash() { function get_full_release_name() { function get_release_branch() { function wrap_text() {
for,0

if,3
if [[ "$(get_release_name)" =~ [0-9]+\.[0-9]+\.[0-9]+-pre\.[0-9]{8}\.[0-9]+(\.[0-9]+)?$ ]]; then if [ -n "${rc}" ]; then if [ -z "$(get_release_name)" ] || [ -z "$(get_release_candidate)" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/release/relnotes.sh
lines,320
function,15
function __get_last_release() { function __get_release_notes_commits() { function __extract_release_note() { function __generate_release_notes() { function __format_release_notes() { function __release_notes() { function create_release_notes() { function __trim_empty_lines() { function __release_note_processor() { function __create_revision_information() { function get_release_baseline() { function get_cherrypicks() { function get_release_title() { function generate_release_message() { function get_full_release_notes() {
function __get_last_release() { function __get_release_notes_commits() { function __extract_release_note() { function __generate_release_notes() { eval "RELNOTES_${i}=()" function __format_release_notes() { function __release_notes() { function create_release_notes() { function __trim_empty_lines() { function __release_note_processor() { function __create_revision_information() { function get_release_baseline() { function get_cherrypicks() { function get_release_title() { function generate_release_message() { function get_full_release_notes() {
for,5
for i in "${RELNOTES_TYPES[@]}"; do for commit in $@; do for (( i=1; $i <= $ for (( i=0; $i < $length; i=$i+1 )); do for i in ${changes}; do
if,12
{ if (in_relnote) { print } }" if [[ "$relnote" =~ $regex ]]; then if [[ ! "$(echo $relnote_text | awk '{print tolower($0)}')" =~ ^((none|n/a|no)(\.( .*)?)?|\.)$ ]]; then if (( "${nb_relnotes}" > 0 )); then if [ -z "${relnotes}" ]; then if [[ "$first" -eq 1 ]]; then if [ -z "${hash}" ]; then if [[ "$(is_rolling_release)" -eq 0 ]]; then if [ -n "${delimiter}" ]; then if [ -n "${delimiter}" ]; then if [ -n "${delimiter}" ]; then if [ -n "${delimiter}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/kokoro/release/build_macos.sh
lines,48
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/kokoro/release/build_linux.sh
lines,62
function,0


for,0

if,2
if [ $ARCHITECTURE = "aarch64" ]; then if [ $ARCHITECTURE = "x86_64" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/packages/bazel.sh
lines,223
function,4
function color() { function get_realpath() { function get_workspace_root() { function get_bazel_version() {
function color() { function get_realpath() { function get_workspace_root() { function get_bazel_version() {
for,2
echo "If this doesn't work, check Bazel's installation instructions for help:" echo "Bazel binaries for all official releases can be downloaded from here:"
if,20
if [ "$(uname -s)" == "Darwin" ]; then if [[ "${queue}" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]] ; then if [[ "${queue}" != bazel/AUTHORS bazel/BUILD bazel/CHANGELOG.md bazel/CODEOWNERS bazel/CODE_OF_CONDUCT.md bazel/CONTRIBUTING.md bazel/CONTRIBUTORS bazel/LICENSE bazel/MODULE.bazel bazel/MODULE.bazel.lock bazel/README.md bazel/SECURITY.md bazel/WORKSPACE bazel/WORKSPACE.bzlmod bazel/bazel_downloader.cfg bazel/combine_distfiles.py bazel/combine_distfiles_to_tar.sh bazel/compile.sh bazel/distdir.bzl bazel/distdir_deps.bzl bazel/examples bazel/extensions.bzl bazel/maven_install.json bazel/rbe_extension.bzl bazel/repositories.bzl bazel/requirements.txt bazel/scripts bazel/site bazel/src bazel/third_party bazel/tools ]] ; then if [ -h "${link}" ] ; then if [[ "${link}" == /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]] ; then if [[ -e "${workspace_dir}/WORKSPACE" || -e "${workspace_dir}/WORKSPACE.bazel" ]]; then if [[ -n ${USE_BAZEL_VERSION:-} ]]; then elif [[ -e "${workspace_dir}/.bazelversion" ]]; then if [[ -z $bazel_version || $bazel_version == "latest" ]]; then if [[ -x "${wrapper_dir}/bazel-real" ]]; then if [[ -z $bazel_version ]]; then if [[ ! -x ${BAZEL_REAL} ]]; then if [[ ! -x ${BAZEL_REAL} && -x ${bazel_real_path} ]]; then if [[ $bazel_real_version == $bazel_version ]]; then if [[ -x "$wrapper" && -f "$wrapper" ]]; then if [[ -z $bazel_version ]]; then if [[ ! -x $BAZEL_REAL ]]; then if [[ -x $(command -v apt-get) && $wrapper_dir == "/usr/bin" ]]; then if [[ -x $(command -v curl) && -w $wrapper_dir ]]; then elif [[ -x $(command -v wget) && -w $wrapper_dir ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/packages/package_info_generator.sh
lines,78
function,0


for,1
for i in "${@}"; do
if,4
if [ -z "${release_name}" ]; then if [ -n "${built_by-}" ]; then if [ -n "${build_log}" ]; then elif [ -n "${build_log-}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/packages/template_bin.sh
lines,192
function,2

usage() { test_write() {
for,4
echo " --user configure for user install, expands to:" >&2 for opt in "${@}"; do echo "See http://bazel.build/docs/install.html for more information on" >&2 echo "See http://bazel.build/docs/install.html for more information on" >&2
if,5
if ! which unzip >/dev/null; then if [ -z "${JAVA_HOME-}" ]; then if [ ! -x "${JAVA_HOME}/bin/javac" ]; then if [ -d "${base}" -a -x "${base}/bin/bazel" ]; then if [ "${should_uncompress}" = true ] && [ "${UID}" -ne 0 ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/packages/dmg/create_bazel_dmg.sh
lines,95
function,0


for,1
for i in "$@"
if,5
if [ -z "${BAZEL_BINARY}" ]; then if [ -z "${OUTPUT}" ]; then if [ -n "${BAZEL_ICON}" ]; then if [ -n "${DS_STORE}" ]; then if [ -n "${BACKGROUND}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bootstrap/compile.sh
lines,463
function,7
function get_minor_java_version() { function check_unzip_wont_create_long_paths() { function java_compilation() { function create_deploy_jar() { function build_jni() { function get_cwd() { function run_bazel_jar() {
function get_minor_java_version() { function check_unzip_wont_create_long_paths() { function java_compilation() { function create_deploy_jar() { function build_jni() { function get_cwd() { function run_bazel_jar() { local client_env=()
for,14
for d in $EXCLUDE_DIRS ; do for f in $(find $d -type f) ; do for f in $jars ; do for e in $entries; do (for i in $excludes; do log "Extracting helper classes for $name..." for f in ${library_jars} ; do for i in $output/classes/*; do log "Compiling Java stubs for protocol buffers..." for f in $PROTO_FILES ; do for i in $(find src/main/java -type f -a \! -name '*.java' -a \! -name 'BUILD' | sed 's|src/main/java/||'); do [ -n "$srcs" ] || fail "Could not find sources for Windows JNI library" local env_vars="$(awk 'END { for (name in ENVIRON) { if(name != "_" && name ~ /^[A-Za-z0-9_]*$/) print name; } }' </dev/null)" for varname in $env_vars; do
if,16
if [ -d derived/jars ]; then if [[ "${PLATFORM}" == "windows" ]]; then log "Checking if helper classes can be extracted..." if [[ ${ if [ ! -z "$BAZEL_DEBUG_JAVA_COMPILATION" ]; then if [[ "$package" != "META-INF" ]]; then NOTE: This failure is likely occurring if you are trying to bootstrap bazel from if [ -z "${BAZEL_SKIP_JAVA_COMPILATION}" ]; then if [ -d derived/src/java ] || fail "Must specify PROTOC if not bootstrapping from the distribution artifact${HOW_TO_BOOTSTRAP}" || fail "Must specify GRPC_JAVA_PLUGIN if not bootstrapping from the distribution artifact${HOW_TO_BOOTSTRAP}" if [ "${PLATFORM}" = "windows" ]; then if [ "${PLATFORM}" = "windows" ]; then if [[ $PLATFORM == "darwin" ]]; then if [ "${PLATFORM}" = "windows" ] && echo "$varname" | grep -q -i "^\(path\|tmp\|temp\|tempdir\|systemroot\|systemdrive\)$" ; then if [ "${value}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bootstrap/bootstrap.sh
lines,81
function,2
function bazel_build() { function get_bazel_bin_path() {
EMBED_LABEL_ARG=() function _run_bootstrapping_bazel() { function _run_bootstrapping_bazel() { function bazel_build() { function get_bazel_bin_path() {
for,0

if,2
if [ -n "${EMBED_LABEL}" ]; then if [ -z "${BAZEL-}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bootstrap/buildenv.sh
lines,377
function,20
function fail() { function atexit() { function run_atexit_handlers() { function tempdir() { function cleanup_phasefile() { function run() { function display() { function log() { function clear_log() { function new_step() { function git_sha1() { function git_date() { function get_last_version() { function get_java_version() { function get_bind_target() { function link_dir() { function link_file() { function link_children() {
function fail() { function atexit() { function run_atexit_handlers() { function tempdir() { eval "cleanup_tempdir_${DIRBASE}() { rm -rf '${DIR}' >&/dev/null || true ; }" function cleanup_phasefile() { function run() { function display() { function log() { function clear_log() { function new_step() { function git_sha1() { function git_date() { function get_last_version() { function md5_file() { function md5_file() { function get_java_version() { function get_bind_target() { function link_dir() { function link_file() { function link_children() {
for,4
for tool in basename cat chmod comm cp dirname find grep ln ls mkdir mktemp \ for handler in ${ATEXIT_HANDLERS}; do for e in $(find "${source_dir}/${source_subdir}" -mindepth 1 -maxdepth 1 -type d); do for e in $(find "${source_dir}/${source_subdir}" -mindepth 1 -maxdepth 1 -type f); do
if,26
if ! hash "$tool" >/dev/null; then if ! hash python.exe >/dev/null; then if [ -n "${BAZEL_WRKDIR}" ] ; then if [[ "$exitCode" = "0" ]]; then if [[ -z "$JAVA_HOME" ]]; then if [ "${PLATFORM}" == "windows" ]; then if [ ${exit_code} -ne 0 ]; then if [ "${failed}" = yes ]; then if [ -f "${phasefile}" ]; then if [ "${VERBOSE}" = yes ]; then if ! "${@}" >>"${errfile}" 2>&1; then if [[ -z "${QUIETMODE}" ]]; then if [ -n "${first_step}" ]; then if [ -t 2 ]; then if [ -x "$(which git 2>/dev/null)" ] && [ -d .git ]; then if [ -x "$(which git 2>/dev/null)" ] && [ -d .git ]; then if [ -f "CHANGELOG.md" ]; then if [ -z "${version-}" ]; then if [ -n "${date-}" ]; then if [[ ${PLATFORM} == "darwin" ]]; then if [[ "$JAVAC_VERSION" =~ javac\ ((1\.)?([789]|[1-9][0-9])).*$ ]]; then if [[ "${PLATFORM}" == "windows" ]]; then if [[ "${PLATFORM}" == "windows" ]]; then if ! powershell -command "New-Item -ItemType SymbolicLink -Path '$d' -Value '$s'"; then if [[ ! -d "$dest_path" ]]; then if [[ ! -f "$dest_path" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bash_completion_test.sh
lines,797
function,27
function array_join {
expand() { assert_expansion() { assert_expansion_error_not_contains() { make_empty_packages() { make_packages() { assert_expansion_function() { test_expand_rules_in_package() { test_expand_package_name() { test_expand_target_pattern() { test_complete_pattern() { test_basic_subcommand_expansion() { test_common_startup_options() { test_build_options() { test_query_options() { test_run_options() { test_tristate_option() { make_dirs() { test_directory_expansion() { test_directory_expansion_in_subdir() { test_target_expansion() { test_target_expansion_in_subdir() { test_target_expansion_in_package() { test_filename_expansion_after_double_dash() { test_help() { test_info() { test_workspace_boundary() {
for,4
for i in "$@"; do for i in "${COMMAND_ALIASES[@]}"; do for i in "${COMMAND_ALIASES[@]}"; do for i in "${COMMAND_ALIASES[@]}"; do
if,2
if [[ -z $PACKAGE_PATH_PREFIX ]]; then if [[ ! " ${COMMAND_ALIASES[*]} " =~ " bazel " ]]; then return; fi
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/docs/get_workspace_status.sh
lines,23
function,0


for,0

if,1
if [[ -z "$RELEASE_NAME" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/testenv.sh
lines,42
function,2

set_up() { tear_down() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bazel-bisect.sh
lines,101
function,1
function usage() {
function usage() {
for,0

if,3
if [ "$ if [ ! -d "$BAZEL_DIR" ]; then if [[ "${BAZEL_BISECT_WITH_CLEAN}" = "y" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/url-for-sheriff.sh
lines,34
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/ci/build.sh
lines,437
function,14
function generate_from_template() { function generate_email() { function get_release_page() { function release_to_github() { function create_index_md() { function create_index_html() { function release_to_gcs() { function ensure_gpg_secret_key_imported() { function print_new_release_content() { function merge_previous_dists() { function add_versioned_deb_pkg() { function create_apt_repository() { function release_to_apt() { function deploy_release() {
function generate_from_template() { function generate_email() { function get_release_page() { function release_to_github() { function create_index_md() { function create_index_html() { function release_to_gcs() { function ensure_gpg_secret_key_imported() { function print_new_release_content() { function merge_previous_dists() { function add_versioned_deb_pkg() { function create_apt_repository() { function release_to_apt() { function deploy_release() {
for,7
echo "See https://cloud.google.com/sdk/downloads for instructions." echo "No emails for rolling releases" for f in $1/*.sha256; do for file in ${metadata_files[*]}; do for file in ${metadata_files[*]}; do for file in ${metadata_files[*]}; do for file in "${artifact_dir}"/*; do
if,21
if ! command -v gsutil &>/dev/null; then if ! command -v github-release &>/dev/null; then if ! command -v debsign &>/dev/null; then if ! command -v reprepro &>/dev/null; then if ! command -v gpg &>/dev/null; then if ! command -v pandoc &>/dev/null; then if [ "$(is_rolling_release)" -eq 1 ]; then if [ -n "${rc}" ]; then elif [ -n "${release_name}" ]; then if [ -n "${release_name}" ] && [ -z "${rc}" ]; then if [ "$(is_rolling_release)" -eq 1 ]; then if [ -n "${release_name}" ]; then if [ "$(is_rolling_release)" -eq 1 ]; then elif [ -n "${rc}" ]; then if ! gpg --list-secret-keys | grep "${APT_GPG_KEY_ID}" > /dev/null; then if ! grep "digest-algo sha256" ~/.gnupg/gpg.conf > /dev/null; then if [ -n "${release_name}" ]; then if [ -n "${rc}" ]; then if [[ ! -d $1 ]]; then if [[ -z $release_name ]]; then if [ "$(is_rolling_release)" -eq 0 ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/ci/build_status_command.sh
lines,39
function,0


for,0

if,3
if [ -n "${BUILT_BY-}" ]; then if [ -n "${BUILD_LOG-}" ]; then if [ -n "${release_name}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/ci/ci.sh
lines,80
function,0

files=()
for,1
for file in $(git diff --name-only "${COMMIT_RANGE}" ); do
if,2
if [[ ! -z $buildables ]]; then if [[ ! -z $tests ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/bazel-dev.sh
lines,70
function,1
function usage() {
function usage() {
for,0

if,5
Rebuilds a development version of Bazel, if necessary, and then runs the if [ ! -x "$BAZEL_DEV" ]; then if [ "$(pwd)" != "$BAZEL_DIR" ]; then if [ "$REBUILD" == 1 ]; then if [[ $result != 0 ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/scripts/generate_bash_completion.sh
lines,77
function,2

die() { get_optarg() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/examples/shell/bin.sh
lines,41
function,0


for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/examples/shell/test.sh
lines,51
function,1
function test_output {

for,0

if,7
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [ "${OUTPUT}" != "${EXPECTED_OUTPUT}" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/examples/shell/lib.sh
lines,41
function,1
function showfile {

for,0

if,6
if [[ ! -d "${RUNFILES_DIR:-/dev/null}" && ! -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then if [[ -f "$0.runfiles_manifest" ]]; then elif [[ -f "$0.runfiles/MANIFEST" ]]; then elif [[ -f "$0.runfiles/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then if [[ -f "${RUNFILES_DIR:-/dev/null}/bazel_tools/tools/bash/runfiles/runfiles.bash" ]]; then elif [[ -f "${RUNFILES_MANIFEST_FILE:-/dev/null}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/combine_distfiles_to_tar.sh
lines,54
function,0


for,1
for i in $*
if,1
if [ "$(uname -s)" = "Darwin" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/compile.sh
lines,80
function,0


for,0

if,3
if [ ! -x "${BAZEL}" ]; then if [ "${EMBED_LABEL-x}" = "x" ]; then if [[ $PLATFORM == "darwin" ]] && \
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/coverage/collect-coverage.sh
lines,18
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/upload_bazel_mirror.sh
lines,67
function,2
function validate_input { function cleanup {

for,0

if,2
if [[ ! "${input}" =~ ^[a-zA-Z0-9_\\-\\.]{3,40}$ ]]; then if [ "$
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/genrule/genrule-setup.sh
lines,24
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/cpp/link_dynamic_library.sh
lines,113
function,0


for,0

if,8
if [[ "$ if [[ "$1" != @* ]]; then if [[ ! -e "$LINKER_COMMAND" ]]; then if [[ "no" == "$GENERATE_INTERFACE_LIBRARY" ]]; then if [[ ! -e "$INTERFACE_LIBRARY_BUILDER" ]]; then if [[ ! -e "$LINKER_COMMAND" ]]; then if [[ "no" == "$GENERATE_INTERFACE_LIBRARY" ]]; then if [[ ! -e "$INTERFACE_LIBRARY_BUILDER" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/cpp/grep-includes.sh
lines,19
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/cpp/generate_system_module_map.sh
lines,26
function,0


for,1
for dir in $@; do
if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/build_defs/hash/sha256_test.sh
lines,55
function,0


for,1
for i in {1..22}; do
if,2
if [[ "$(uname -s | tr [:upper:] [:lower:])" =~ msys* ]]; then if [ "$(cat output.txt)" != "$expected" ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/build_defs/pkg/testenv.sh
lines,26
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/build_defs/pkg/build_test.sh
lines,79
function,7
function get_tar_listing() { function get_tar_verbose_listing() { function get_tar_owner() { function get_numeric_tar_owner() { function get_tar_permission() { function assert_content() { function test_tar() {
function get_tar_listing() { function get_tar_verbose_listing() { function get_tar_owner() { function get_numeric_tar_owner() { function get_tar_permission() { function assert_content() { function test_tar() {
for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/desugar.sh
lines,114
function,0


for,1
for o in "${DESUGAR_JAVA8_LIBS_CONFIG[@]}"; do
if,3
if [[ ! -d $RUNFILES ]]; then if [[ $CHECK_FOR_EXE -eq 0 ]]; then if [[ "$
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/fail.sh
lines,15
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/build_java8_legacy_dex.sh
lines,96
function,0

function rlocation() {
for,0

if,3
if "$IS_WINDOWS" && ! type rlocation &> /dev/null; then if "$IS_WINDOWS"; then if [[ -n "${binary_jar}" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/d8_desugar.sh
lines,73
function,0


for,2
for o in "${DESUGAR_CHM_ONLY_CONFIG[@]}"; do for arg in "$@"; do
if,4
if [[ ! -d $RUNFILES ]]; then if [[ "$ if [[ "$arg" == "--desugared_lib_config" ]]; then if [[ "$has_desugared_lib_config" == "true" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/strip_resources_test.sh
lines,45
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/build_incremental_dexmanifest_test.sh
lines,36
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/dex_list_obfuscator.sh
lines,42
function,0


for,0

if,1
echo "if the original name was in the main_dex_list."
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/android/emulator/googletest.sh
lines,15
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/osx/xcode_locator_stub.sh
lines,19
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/generate-xml.sh
lines,131
function,2
function encode_stream { function encode_as_xml {

for,0

if,5
if [ -f "$1" ]; then if [ "$TEST_LOG" == "-" ]; then if (( $EXIT_CODE != 0 )); then if [[ -n "${TEST_TOTAL_SHARDS+x}" ]] && ((TEST_TOTAL_SHARDS != 0)); then Generated test.log (if the file is not UTF-8, then this may be unreadable):
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/test-setup.sh
lines,439
function,7
function is_absolute { function rlocation() { function encode_stream { function encode_output_file { function write_xml_output_file { function kill_group { function signal_children {
function rlocation() {
for,3
for signal in $signals; do for signal in $signals; do for signal in $signals; do
if,35
if [[ -n "$TEST_UNDECLARED_OUTPUTS_ZIP" ]]; then if [[ -z "$USER" ]]; then if [[ -n "$TEST_SHARD_STATUS_FILE" ]]; then if [[ -n "${TEST_TOTAL_SHARDS+x}" ]] && ((TEST_TOTAL_SHARDS != 0)); then if is_absolute "$1" ; then elif [[ -e "$TEST_SRCDIR/$1" ]]; then elif [[ -e "$RUNFILES_MANIFEST_FILE" ]]; then if [[ "${RUNFILES_MANIFEST_ONLY:-}" == "1" && -e "${RUNFILES_MANIFEST_FILE:-}" ]]; then if [ ! -z "$TEST_WORKSPACE" ]; then if [ -z "$COVERAGE_DIR" ]; then if [ -f "$1" ]; then if [ -n "${XML_OUTPUT_FILE-}" -a ! -f "${XML_OUTPUT_FILE-}" ]; then if [ -n "${signal}" ]; then if [ "${signal}" = "SIGTERM" ]; then elif (( $exitCode != 0 )); then if [[ -n "${TEST_TOTAL_SHARDS+x}" ]] && ((TEST_TOTAL_SHARDS != 0)); then <system-out>Generated test.log (if the file is not UTF-8, then this may be unreadable): if [ -z "$COVERAGE_DIR" ]; then if is_absolute "$EXE"; then if [ ! -z "$TEST_SHORT_EXEC_PATH" ]; then if [ "${signal}" = "SIGTERM" ]; then if [ ! -z "$childPid" ]; then if [[ "${EXPERIMENTAL_SPLIT_XML_GENERATION}" == "1" ]]; then if [[ "${EXPERIMENTAL_SPLIT_XML_GENERATION}" == "1" ]]; then if [ -z "$COVERAGE_DIR" ]; then if [ -z "$COVERAGE_DIR" ]; then ( if ! (ps -p $$ &> /dev/null || [ "`pgrep -a -g $$ 2> /dev/null`" != "" ] ); then if [[ "${EXPERIMENTAL_SPLIT_XML_GENERATION}" != "1" ]]; then if [[ -n "$TEST_UNDECLARED_OUTPUTS_DIR" && -n "$TEST_UNDECLARED_OUTPUTS_MANIFEST" ]]; then if [[ ! -z "$undeclared_outputs" ]]; then if [[ ! -s "$TEST_UNDECLARED_OUTPUTS_MANIFEST" ]]; then if [[ -n "$TEST_UNDECLARED_OUTPUTS_ANNOTATIONS" && \ if [[ -n "$TEST_UNDECLARED_OUTPUTS_ZIP" ]] && cd "$TEST_UNDECLARED_OUTPUTS_DIR"; then if [[ "$(echo *)" != "*" ]]; then if [ $exitCode -gt 128 ]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/dummy.sh
lines,17
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator/build_and_upload.sh
lines,21
function,0


for,0

if,0

git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/collect_coverage.sh
lines,254
function,1
function resolve_links() {
function resolve_links() {
for,2
echo Coverage runner: Not collecting coverage for failed test. for name in "$LCOV_MERGER"; do
if,21
if [[ -n "$VERBOSE_COVERAGE" ]]; then if [ -e "$name" ]; then if [ "$(echo "$target" | head -c1)" = "/" ]; then if [[ -z "$COVERAGE_MANIFEST" ]]; then if [[ "$COVERAGE_MANIFEST" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if ! [[ $COVERAGE_DIR == $ROOT* ]]; then if ! [[ $COVERAGE_OUTPUT_FILE == $ROOT* ]]; then if [[ -z "$GCOV_PREFIX_STRIP" ]]; then if [[ -n "$LLVM_PROFILE_CONTINUOUS_MODE" ]]; then if [[ ! -z "${JAVA_RUNTIME_CLASSPATH_FOR_COVERAGE}" ]]; then if [[ "$IS_COVERAGE_SPAWN" == "0" ]]; then if [[ "$SPLIT_COVERAGE_POST_PROCESSING" == "0" ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ "$SPLIT_COVERAGE_POST_PROCESSING" == "1" && "$IS_COVERAGE_SPAWN" == "0" ]]; then if [[ "$SPLIT_COVERAGE_POST_PROCESSING" == "1" && "$IS_COVERAGE_SPAWN" == "1" ]]; then if [[ "$CC_CODE_COVERAGE_SCRIPT" ]]; then if [[ -z "$LCOV_MERGER" ]]; then if [[ ! -e $name ]]; then if [[ "$IS_COVERAGE_SPAWN" == "1" ]]; then if [[ $COVERAGE_REPORTED_TO_ACTUAL_SOURCES_FILE ]]; then if [[ $DISPLAY_LCOV_CMD ]] ; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/test/collect_cc_coverage.sh
lines,220
function,7
function uses_llvm() { function uses_gcov() { function init_gcov() { function llvm_coverage_lcov() { function llvm_coverage_profdata() { function gcov_coverage() { function main() {
function uses_llvm() { function uses_gcov() { function init_gcov() { function llvm_coverage_lcov() { function llvm_coverage_profdata() { function gcov_coverage() { function main() {
for,0

if,11
if [[ -n "$VERBOSE_COVERAGE" ]]; then if stat "${COVERAGE_DIR}"/*.profraw >/dev/null 2>&1; then if [ ! -f "${COVERAGE_GCOV_PATH}" ]; then if [[ ${line: -24} == "runtime_objects_list.txt" ]]; then if [[ ${line: -4} == "gcno" ]]; then if [[ -f "$gcda" ]]; then if [ ! -f "${COVERAGE_DIR}/${gcno_path}" ]; then if [[ $gcov_major_version -le 7 ]]; then if stat --printf='' *.gcov.json.gz > /dev/null 2>&1; then if uses_llvm; then if [[ "${GENERATE_LLVM_LCOV}" == "1" ]]; then
git@github.com:bazelbuild/bazel.git,f79ca0275e14d7c8fb478bd910ad7fb127440fd8,bazel,21423,./bazel/tools/objc/xcrunwrapper.sh
lines,44
function,0

UPDATEDARGS=()
for,1
for ARG in "$@" ; do
if,1
if [[ -z "${WRAPPER_DEVDIR}" ]] ; then
git@github.com:google/ExoPlayer.git,5df25aefd9234f91716960430a4540baa8971315,ExoPlayer,21056,./ExoPlayer/extensions/ffmpeg/src/main/jni/build_ffmpeg.sh
lines,103
function,0


for,2
echo "Using $JOBS jobs for make" for decoder in "${ENABLED_DECODERS[@]}"
if,0

git@github.com:google/ExoPlayer.git,5df25aefd9234f91716960430a4540baa8971315,ExoPlayer,21056,./ExoPlayer/extensions/opus/src/main/jni/convert_android_asm.sh
lines,47
function,0


for,0

if,2
if [[ ! -x "${ASM_CONVERTER}" ]]; then if [[ ! "${file}" =~ .*_gnu\.s$ ]]; then
git@github.com:google/ExoPlayer.git,5df25aefd9234f91716960430a4540baa8971315,ExoPlayer,21056,./ExoPlayer/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh
lines,114
function,2

remove_trailing_whitespace() { convert_asm() {
for,3
for i in $(seq 0 ${limit}); do for i in $(seq 0 ${limit}); do for f in ${allowed_files}; do
if,3
if [ $ if [[ ! -e "${file}" ]]; then if [[ "${extglob_status}" == "off" ]]; then
git@github.com:google/ExoPlayer.git,5df25aefd9234f91716960430a4540baa8971315,ExoPlayer,21056,./ExoPlayer/media3-migration.sh
lines,387
function,7
function usage() { function print_pairs { function print_class_mappings { function add_validation_error { function validate_exoplayer_version() { function validate_string_not_contained { function validate_string_patterns {
function usage() { function validate_exoplayer_version() {
for,3
echo " -l: list files that will be considered for rewrite and then exit" for clazz in $classes; for clazz in $classes;
if,14
if [[ ! -z $version ]] && [[ ! "$version" =~ $LEGACY_PEER_VERSION ]]; if grep -q -e "$pattern" "$file"; if [[ "$OSTYPE" == "darwin"* ]]; then if [[ -z $PRINT_DEPENDENCY_MAPPINGS ]]; elif [[ -z $PRINT_PACKAGE_MAPPINGS ]]; elif [[ -z $PRINT_CLASS_MAPPINGS ]]; elif [[ -z $PRINT_VERSION ]]; elif [[ -z $1 ]]; if [[ ! -f $1/gradlew ]]; if [[ ! -z $EXCLUDED_PATHS ]]; if [[ ! -z $FORCE && ! -z "$VALIDATION_ERRORS" ]]; if [[ -z $LIST_FILES_ONLY ]]; if [[ ! -z "$MIGRATE_FILES" ]]; if [[ ! -z $NO_CLEAN ]];
git@github.com:google/ExoPlayer.git,5df25aefd9234f91716960430a4540baa8971315,ExoPlayer,21056,./ExoPlayer/docs/run_locally.sh
lines,4
function,0


for,0

if,0

git@github.com:elunez/eladmin.git,2a879115bc5fa364f0ae8042c76edc4be84fa7e7,eladmin,20208,
git@github.com:YunaiV/ruoyi-vue-pro.git,82545ddaacac1d7c7c01a5da9df005e9b8c3b759,ruoyi-vue-pro,19985,./ruoyi-vue-pro/bin/deploy.sh
lines,160
function,6
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
for,2
for ((i = 0; i < 120; i++)) for ((i = 0; i < 120; i++))
if,8
if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$HEALTH_CHECK_URL" ]; then if [ "$result" == "200" ]; then if [ ! "$result" == "200" ]; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/shutdown.sh
lines,77
function,0


for,0

if,4
if [ -z "$pid" ] ; then if [ -z "$pid" ] ; then if [ -z "$pid" ] ; then if [ -z "$pid" ] ; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/producer.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/runclass.sh
lines,72
function,1

choose_gc_log_directory()
for,1
echo "Create RAMDisk /Volumes/RAMDisk for gc logging on Darwin OS."
if,4
if [ $ if [ ! -d "/Volumes/RAMDisk" ]; then if [ -d "/dev/shm" ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/consumer.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/tproducer.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/benchmark/batchproducer.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/setcache.sh
lines,40
function,1
function changeFreeCache()
function changeFreeCache()
for,0

if,1
if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/dledger/fast-try.sh
lines,102
function,7

startNameserver() { startBroker() { stopNameserver() { stopBroker() { stopAll() { startAll() { checkConf() {
for,0

if,4
if [ ! -z "$PIDS" ]; then if [ ! -z "$PIDS" ]; then if [ ! -f ./conf/dledger/broker-n0.conf -o ! -f ./conf/dledger/broker-n1.conf -o ! -f ./conf/dledger/broker-n2.conf ]; then if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/export.sh
lines,89
function,0


for,0

if,7
if [ -z "$ROCKETMQ_HOME" ]; then if expr "$link" : '/.*' >/dev/null; then if [ -z "${filePath}" ]; then if [[ -e ${filePath} ]]; then if [ -z "$configs" ]; then if [ -z "$metadata" ]; then if [ -z "$metrics" ]; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/cleancache.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/controller/fast-try-namesrv-plugin.sh
lines,76
function,5

startNameserver() { stopNameserver() { stopAll() { startAll() { checkConf() {
for,0

if,3
if [ ! -z "$PIDS" ]; then if [ ! -f ./conf/controller/cluster-3n-namesrv-plugin/namesrv-n0.conf -o ! -f ./conf/controller/cluster-3n-namesrv-plugin/namesrv-n1.conf -o ! -f ./conf/controller/cluster-3n-namesrv-plugin/namesrv-n2.conf ]; then if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/controller/fast-try.sh
lines,101
function,7

startNameserver() { startBroker() { stopNameserver() { stopBroker() { stopAll() { startAll() { checkConf() {
for,0

if,4
if [ ! -z "$PIDS" ]; then if [ ! -z "$PIDS" ]; then if [ ! -f ./conf/controller/quick-start/broker-n0.conf -o ! -f ./conf/controller/quick-start/broker-n1.conf -o ! -f ./conf/controller/quick-start/namesrv.conf ]; then if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/controller/fast-try-independent-deployment.sh
lines,76
function,5

startController() { stopController() { stopAll() { startAll() { checkConf() {
for,0

if,3
if [ ! -z "$PIDS" ]; then if [ ! -f ./conf/controller/cluster-3n-independent/controller-n0.conf -o ! -f ./conf/controller/cluster-3n-independent/controller-n1.conf -o ! -f ./conf/controller/cluster-3n-independent/controller-n2.conf ]; then if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/cleancache.v1.sh
lines,40
function,1
function changeFreeCache()
function changeFreeCache()
for,0

if,1
if [ $
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/tools.sh
lines,60
function,2

error_exit () find_java_home()
for,0

if,1
if [ -n "$JAVA_HOME" ]; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/cachedog.sh
lines,42
function,0


for,0

if,1
if [ ${nr_free_pages} -le ${high} ]; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/os.sh
lines,64
function,0


for,0

if,1
if [ -d ${HOME}/tmpfs ] ; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/play.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/runserver.sh
lines,108
function,4

error_exit () find_java_home() choose_gc_log_directory() choose_gc_options()
for,1
echo "Create RAMDisk /Volumes/RAMDisk for gc logging on Darwin OS."
if,4
if [ -n "$JAVA_HOME" ]; then if [ ! -d "/Volumes/RAMDisk" ]; then if [ -d "/dev/shm" ]; then if [ -z "$JAVA_MAJOR_VERSION" ] || [ "$JAVA_MAJOR_VERSION" -lt "9" ] ; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/runbroker.sh
lines,123
function,4

error_exit () find_java_home() choose_gc_log_directory() choose_gc_options()
for,1
echo "Create RAMDisk /Volumes/RAMDisk for gc logging on Darwin OS."
if,7
if [ -n "$JAVA_HOME" ]; then if [ ! -d "/Volumes/RAMDisk" ]; then if [ -d "/dev/shm" ]; then if [ -z "$JAVA_MAJOR_VERSION" ] || [ "$JAVA_MAJOR_VERSION" -lt "8" ] ; then if [ -z "$JAVA_MAJOR_VERSION" ] || [ "$JAVA_MAJOR_VERSION" -lt "9" ] ; then if [ $? -eq 0 ] if [ -z "$RMQ_NUMA_NODE" ] ; then
git@github.com:apache/rocketmq.git,dbc633d92b6c8c35922234611d698d3cb0a1a234,rocketmq,19848,./rocketmq/distribution/bin/startfsrv.sh
lines,45
function,0


for,0

if,2
if [ -z "$ROCKETMQ_HOME" ] ; then if expr "$link" : '/.*' > /dev/null; then
git@github.com:ReactiveX/RxAndroid.git,242029495758cd20a47bfe7bd700edcac68093c2,RxAndroid,19803,
git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-autotest/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-util/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/upload_didi.sh
lines,44
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-okhttp-api/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-okhttp-v4/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-test/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/upload_maven.sh
lines,44
function,1

echo -e "${GREEN_COLOR} 打包上传到MavenCenter()仓库完成！！！ ${RES}"
for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-plugin/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-okhttp-v3/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-leakcanary/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-weex/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-mc/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-no-op/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/dokit-ft/upload.sh
lines,5
function,0


for,0

if,0

git@github.com:didi/DoKit.git,43d0981c2fa326556c57ec7a397962b2757379d0,DoKit,19675,./DoKit/Android/upload_local.sh
lines,44
function,0


for,0

if,0

git@github.com:EnterpriseQualityCoding/FizzBuzzEnterpriseEdition.git,4922c077c07a3744ae67ee8a932786f15bf57411,FizzBuzzEnterpriseEdition,19604,
git@github.com:Anuken/Mindustry.git,69462eb3f0c32dbf8700f347057b27e2afb34a6a,Mindustry,19165,./Mindustry/server/server_template/run_server.sh
lines,2
function,0


for,0

if,0

git@github.com:Anuken/Mindustry.git,69462eb3f0c32dbf8700f347057b27e2afb34a6a,Mindustry,19165,./Mindustry/ios/convert_audio.sh
lines,15
function,0


for,2
for i in *.ogg; do for file in OUT_*; do mv "$file" "${file
if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/sdk/mx.sdk/vm/launcher_template.sh
lines,116
function,2

absolute_cp=() process_vm_arg() { process_arg() {
for,6
for e in "${relative_cp[@]}"; do for e in "${classpath_array[@]}"; do for var in <option_vars>; do for opt in "${opts[@]}"; do for o in "$@"; do for e in "${add_exports[@]}"; do
if,8
if [[ "$source" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if [[ "$vm_arg" == "cp" || "$vm_arg" == "classpath" ]]; then elif [[ "$vm_arg" == "cp="* || "$vm_arg" == "classpath="* ]]; then if [[ "$1" == --vm.* ]]; then elif [[ "$1" == --native ]]; then if [[ $(basename "$source") == polyglot ]]; then if [[ "${module_launcher}" == "True" ]]; then if [[ "${VERBOSE_GRAALVM_LAUNCHERS}" == "true" ]]; then
git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/sulong/tests/com.oracle.truffle.llvm.tests.llirtestgen.generated/gep-vector-footer.sh
lines,37
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/sulong/tests/com.oracle.truffle.llvm.tests.llirtestgen.generated/gep-vector-test.sh
lines,56
function,0

define dso_local void @testVectorGEP_${VECLEN}x${VECTYPE}() local_unnamed_addr
for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/sulong/tests/com.oracle.truffle.llvm.tests.llirtestgen.generated/gep-vector-header.sh
lines,39
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/sulong/tests/com.oracle.truffle.llvm.tests.llirtestgen.generated/gep-vector.sh
lines,53
function,0

echo " call void @testVectorGEP_${VECLEN}x${VECTYPE}()"
for,4
for VECLEN in $(seq 1 16) for VECTYPE in i1 i8 i16 i32 i40 i64 float double for VECLEN in $(seq 1 16) for VECTYPE in i1 i8 i16 i32 i40 i64 float double
if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simpletool/runJsWithCoverage.sh
lines,43
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simplelanguage/generate_parser.sh
lines,44
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simplelanguage/component/clean_component.sh
lines,43
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simplelanguage/component/make_component.sh
lines,91
function,0


for,0

if,3
if [[ -f ../native/slnative ]]; then if [[ $INCLUDE_SLNATIVE = "TRUE" ]]; then if [[ $INCLUDE_SLNATIVE = "TRUE" ]]; then
git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simplelanguage/native/make_native.sh
lines,52
function,0


for,0

if,1
if [[ $SL_BUILD_NATIVE == "false" ]]; then
git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/truffle/external_repos/simplelanguage/native/clean_native.sh
lines,43
function,0


for,0

if,0

git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/substratevm/mx.substratevm/rebuild-images.sh
lines,147
function,7
function usage_and_exit() { function common() { function polyglot_common() { function libpolyglot() { function launcher() { function library() {
function usage_and_exit() { to_build=() custom_args=() function common() { function polyglot_common() { function libpolyglot() { function launcher() { function library() { cmd_line=() echo "shouldNotReachHere()"
for,2
for opt in "${@:1}"; do for binary in "${to_build[@]}"; do
if,5
if [[ "$source" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if [[ "${ if [[ -f "${graalvm_home}/lib/svm/builder/svm-enterprise.jar" ]]; then if [[ "$launcher" == "polyglot" ]]; then if [[ ! -z "${VERBOSE}" ]]; then
git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/regex/src/com.oracle.truffle.regex/tools/run_scripts.sh
lines,86
function,0


for,0

if,1
if [[ $(pwd) != graal/regex/src/com.oracle.truffle.regex/tools ]]
git@github.com:oracle/graal.git,81aafab919601dfac922a20219ed6ce66bbdbce2,graal,19075,./graal/regex/src/com.oracle.truffle.regex/tools/unicode-script.sh
lines,108
function,0


for,0

if,0

git@github.com:CarGuo/GSYVideoPlayer.git,4d7f32ef239a2c88c05fd8d79816eff67388461b,GSYVideoPlayer,19014,./GSYVideoPlayer/module-lite.sh
lines,261
function,0


for,0

if,0

git@github.com:CarGuo/GSYVideoPlayer.git,4d7f32ef239a2c88c05fd8d79816eff67388461b,GSYVideoPlayer,19014,./GSYVideoPlayer/module-lite-more.sh
lines,275
function,0


for,0

if,0

git@github.com:mybatis/mybatis-3.git,0f456918efd0d779239a3a6c145d287a44c02ab7,mybatis-3,18952,
git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/docs/build.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/.github/workflows/resources/scripts/nightly-build-example/init-mysql-container.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/test/e2e/agent/jdbc-project/src/main/resources/bin/start.sh
lines,56
function,2
function set_agent_name() { function set_agent_parameter() {
function set_agent_name() { function set_agent_parameter() {
for,1
for arg in $*
if,5
if [ ! -d "${LOGS_DIR}" ]; then if [ -d "${DEPLOY_DIR}/agent" ]; then if [ -n "${AGENT_NAME}" ]; then if [ -f "$AGENT_FILE" ]; then if [ "$arg" == "--agent" ] ; then
git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/test/e2e/fixture/src/test/assembly/bin/start.sh
lines,126
function,1

print_usage() {
for,0

if,11
if [ ! -d ${LOGS_DIR} ]; then if [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then if [ $ if [[ $1 == -a ]] || [[ $1 == -p ]] || [[ $1 == -c ]] || [[ $1 == -f ]] || [[ $1 == -s ]]; then elif [ $ if [ $ if [ -z "$CONF_PATH" ]; then if [ -z "$PORT" ]; then if [ -z "$ADDRESSES" ]; then if [ -z "$FORCE" ]; then if [ "$SOCKET_FILE" ]; then
git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/test/e2e/fixture/src/test/assembly/bin/stop.sh
lines,51
function,0


for,2
for PID in ${PIDS} ; do for PID in ${PIDS} ; do
if,2
if [ -z "$PIDS" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/distribution/proxy/src/main/resources/bin/start.sh
lines,267
function,4
function set_agent_name() { function set_agent_parameter() {
print_usage() { print_version() { function set_agent_name() { function set_agent_parameter() {
for,2
echo "-s The socket file to use for connection." for arg in $*
if,30
if [ ! -d "${LOGS_DIR}" ]; then if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then elif type -p java; then if [ "$int_version" = '1' ] ; then if [ "$int_version" = '8' ] ; then elif [ "$int_version" = '11' ] ; then if $is_openjdk; then elif [ "$int_version" = '17' ] ; then if [ "$int_version" = '8' ] ; then if [ -n "${IS_DOCKER}" ]; then echo "-g Enable agent if shardingsphere-agent deployed in 'agent' directory" if [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then if [ "$1" == "-v" ] || [ "$1" == "--version" ] ; then if [ -d "${DEPLOY_DIR}/agent" ]; then if [ -n "${AGENT_NAME}" ]; then if [ -f "$AGENT_FILE" ]; then if [ "$arg" == "-g" ] || [ "$arg" == "--agent" ] ; then if [ $ if [[ $1 == -a ]] || [[ $1 == -p ]] || [[ $1 == -c ]] || [[ $1 == -f ]] || [[ $1 == -s ]]; then elif [ $ elif [ $ if [ -z "$CONF_PATH" ]; then if [ -z "$PORT" ]; then if [ -z "$ADDRESSES" ]; then if [ -z "$FORCE" ]; then if [ "$SOCKET_FILE" ]; then if [ -n "${IS_DOCKER}" ]; then if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if ps -p "${pid}" > /dev/null 2>&1; then
git@github.com:apache/shardingsphere.git,6b44cfcda38abe77ca134268b2f0beb0d714b522,shardingsphere,18823,./shardingsphere/distribution/proxy/src/main/resources/bin/stop.sh
lines,51
function,0


for,2
for PID in ${PIDS} ; do for PID in ${PIDS} ; do
if,2
if [ -z "$PIDS" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:brettwooldridge/HikariCP.git,8c1a7c29341348b3ea71ccfe35d4858b378160e2,HikariCP,18718,./HikariCP/install-jdk.sh
lines,320
function,14
function initialize() { function usage() { function script_exit() { function say() { function verbose() { function parse_options() { function determine_latest_jdk() { function perform_sanity_checks() { function determine_url() { function prepare_variables() { function print_variables() { function download_and_extract_and_set_target() { function main() {
function initialize() { function usage() { function script_exit() { script_exit 'Invalid arguments passed to script_exit()!' 2 function say() { function verbose() { function parse_options() { function determine_latest_jdk() { function perform_sanity_checks() { function determine_url() { function prepare_variables() { function print_variables() { function download_and_extract_and_set_target() { function main() {
for,1
script_exit "Couldn't determine a download url for ${feature}-${license} on ${os}" 1
if,24
if [[ $ if [[ $ if [[ ${silent} != true ]]; then if [[ ${verbose} == true ]]; then if [[ ${curl_result} -ge 400 ]]; then if [[ ${feature} == '?' ]] || [[ ${feature} == 'ea' ]]; then if [[ ${feature} -lt 9 ]] || [[ ${feature} -gt ${latest_jdk} ]]; then if [[ -d "$target" ]]; then if [[ -z ${url} ]]; then if [[ ${os} == '?' ]]; then if [[ "$OSTYPE" == "darwin"* ]]; then if [[ ${url} == '?' ]]; then local quiet='--quiet'; if [[ ${verbose} == true ]]; then quiet=''; fi if [[ ${os} == 'windows-x64' ]]; then if [[ ${target} == '?' ]]; then if [[ "$OSTYPE" != "darwin"* ]]; then if [[ "$OSTYPE" != "darwin"* ]]; then if [[ ${verbose} == true ]]; then if [[ ${cacerts} == true ]]; then if [[ -f "${directory}" ]]; then if [[ ${silent} == false ]]; then print_variables; fi if [[ ${dry} == true ]]; then exit 0; fi if [[ ${silent} == false ]]; then java -Xmx100m -version; fi if [[ ${emit_java_home} == true ]]; then echo "${JAVA_HOME}"; fi
git@github.com:Baseflow/PhotoView.git,565505d5cb84f5977771b5d2ccb7726338e77224,PhotoView,18615,
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/docker/util/lazy.sh
lines,51
function,0


for,0

if,2
if test -z "$REMOTE" if test -z "$ID_RSA"
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/docker/util/package.sh
lines,30
function,0


for,0

if,0

git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/docker/bin/deploy.sh
lines,7
function,0


for,0

if,0

git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/docker/bin/reset.sh
lines,36
function,0


for,0

if,1
if test -z "$PASSWORD"
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/deploy/util/lazy.sh
lines,51
function,0


for,0

if,2
if test -z "$REMOTE" if test -z "$ID_RSA"
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/deploy/util/package.sh
lines,30
function,0


for,0

if,0

git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/deploy/bin/stop.sh
lines,7
function,0


for,0

if,1
if [ ! -z "$PID" ]
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/deploy/bin/deploy.sh
lines,11
function,0


for,0

if,1
if [ ! -z "$PID" ]
git@github.com:linlinjava/litemall.git,47ea5c7420f126081e7ef17a7182890def32457d,litemall,18385,./litemall/deploy/bin/reset.sh
lines,31
function,0


for,0

if,1
if test -z "$PASSWORD"
git@github.com:dianping/cat.git,4684ba7bbbeffe071092e99333f28410d08f18ef,cat,18098,./cat/docker/datasources.sh
lines,5
function,0


for,0

if,0

git@github.com:dianping/cat.git,4684ba7bbbeffe071092e99333f28410d08f18ef,cat,18098,./cat/integration/cat-alert/cat-alert.sh
lines,53
function,2
function start() function stop()
function start() function stop()
for,0

if,8
if [ $? -eq 0 ]; then if [ ! $pid ] ; then if [ $? -eq 0 ]; then if [ $ if [ $ if [ $1 == 'start' ] ; then elif [ $1 == 'stop' ] ; then elif [ $1 == 'restart' ] ; then
git@github.com:dianping/cat.git,4684ba7bbbeffe071092e99333f28410d08f18ef,cat,18098,./cat/integration/playframework/cat-support.sh
lines,15
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/docker-entrypoint.sh
lines,42
function,0


for,1
for i in $(echo $commands | sed "s/,/ /g")
if,4
if [ $ if [[ -f "${codegen}" && -n "$(java ${JAVA_OPTS} -jar "${codegen}" completion | grep "^$1\$" )" ]]; then elif [[ -n "$(echo $commands | tr ',' '\n' | grep "^$1\$" )" ]]; then if [[ ! -f "${codegen}" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/run-in-docker.sh
lines,24
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/cpp-pistache/install_pistache.sh
lines,13
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/cpp-pistache/build_petstore.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0-NewtonsoftFalse/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/fsharp-giraffe/OpenAPI/build.sh
lines,4
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/python-flask/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/python-flask/test_python3.sh
lines,31
function,0


for,0

if,1
if [ -z "$VIRTUAL_ENV" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/python-aiohttp-srclayout/test_python3.sh
lines,31
function,0


for,0

if,2
if [ -z "$VIRTUAL_ENV" ]; then if [ $DEACTIVE == true ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/ruby-on-rails/docker-entrypoint.sh
lines,9
function,0


for,0

if,1
if [ "$1" = 'bin/rails' ] && [ "$2" = 's' ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-3.1/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-5.0/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/cpp-restbed/generated/3_0/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/cpp-restbed/build_and_test.sh
lines,20
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/cpp-restbed-deprecated/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-3.0/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0-project4Models/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0-nullableReferenceTypes/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/php-symfony/SymfonyBundle-php/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0-pocoModels/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/fsharp-functions/OpenAPI/build.sh
lines,4
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore-6.0-useSwashBuckle/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/server/petstore/aspnetcore/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/server/petstore/python-flask/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/server/petstore/php-symfony/SymfonyBundle-php/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/extensions/x-auth-id-alias/go-experimental/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/extensions/x-auth-id-alias/java/jersey2-java8/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/extensions/x-auth-id-alias/ruby-client/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/features/generate-alias-as-model/ruby-client/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/features/dynamic-servers/ruby/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/go/go-petstore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-pydantic-v1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-pydantic-v1/test_python3.sh
lines,31
function,0


for,0

if,1
if [ -z "$VIRTUAL_ENV" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/java/jersey2-java8-special-characters/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/java/jersey2-java8-swagger2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/java/jersey2-java8/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/java/jersey2-java8-swagger1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-pydantic-v1-aiohttp/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-pydantic-v1-aiohttp/test_python3.sh
lines,31
function,0


for,0

if,1
if [ -z "$VIRTUAL_ENV" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/dart2/petstore_client_lib/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/dart2/petstore_client_lib_fake/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/jquery/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/inversify/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/composed-schemas/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/object_params/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/deno/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/default/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/typescript/builds/browser/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python/test_python3.sh
lines,31
function,0


for,0

if,1
if [ -z "$VIRTUAL_ENV" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-aiohttp/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/openapi3/client/petstore/python-aiohttp/test_python3.sh
lines,31
function,0


for,0

if,1
if [ -z "$VIRTUAL_ENV" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/ruby-httpx/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/go/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/csharp-restsharp/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/python-pydantic-v1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/java/okhttp-gson/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/java/apache-httpclient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/java/native/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/java/feign-gson/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/python-disallowAdditionalPropertiesIfNotPresent-true/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/php-nextgen/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/echo_api/python/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/typescript-axios/with-separate-models-and-api-inheritance/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/rust/reqwest-regression-16119/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/csharp-complex-files/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/java/okhttp-gson-streaming/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/java/resttemplate-useAbstractionForFiles/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/java/okhttp-gson-oneOf/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/java/webclient-useAbstractionForFiles/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/typescript-angular/builds/composed-schemas-tagged-unions/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/typescript-angular/builds/composed-schemas/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/others/typescript/builds/with-unique-items/git_push.sh
lines,51
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/readonlyProperties/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/readonlyProperties/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/nonPublicApi/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/nonPublicApi/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/alamofireLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/alamofireLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/alamofireLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/combineLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/combineLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/combineLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/frozenEnums/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/frozenEnums/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/promisekitLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/promisekitLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/promisekitLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/urlsessionLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/urlsessionLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/urlsessionLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/validation/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/swift5_test_all.sh
lines,33
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/objcCompatible/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/objcCompatible/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/asyncAwaitLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/asyncAwaitLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/asyncAwaitLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/default/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/default/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/deprecated/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/deprecated/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/anycodableLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/anycodableLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/oneOf/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/oneOf/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/vaporLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/x-swift-hashable/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/x-swift-hashable/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/resultLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/resultLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/rxswiftLibrary/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/rxswiftLibrary/run_spmbuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift5/rxswiftLibrary/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-aurelia/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/ruby/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/ruby-faraday/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-node-imports/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-interfaces/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-npm-version-and-separate-models-and-api/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-complex-headers/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/composed-schemas/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/es6-target/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-string-enums/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/test-petstore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-npm-version/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-fake-endpoints-models-for-testing-with-http-signature/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-axios/builds/with-single-request-parameters/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v13-oneOf/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/javascript-apollo/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v12-provided-in-any/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/ruby-httpx/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/swift-combine/swift-combine_test_all.sh
lines,7
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v15-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/bash/tests/petstore_test.sh
lines,130
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/bash/_client.sh
lines,594
function,3

get_mime_type_completions() { result=() _curl_crypto_engine() { _curl_post_data() {
for,44
for k in "${(@k)mime_type_abbreviations}"; do {-f,--fail}'[enable failfast behavior for server errors]' \ {-J,--remote-header-name}'[use Content-Disposition for output file name]' \ '--disable-eprt[disable use of EPRT and LPRT for active FTP transfers]' \ '--disable-epsv[disable use of EPSV for passive FTP transfers]' \ '--ftp-pasv[use passive mode for the data connection (FTP)]' \ '--ftp-skip-pasv-ip[do not use the ip the server suggests for PASV]' \ '--ftp-ssl-control[require SSL/TLS for FTP login, clear for transfer]' \ '--mail-rcpt[specify email recipient for SMTP, may be given multiple times]:address' \ {-U,--proxy-user}'[specify the user name and password to use for proxy authentication]:user:password' \ '--proxy-anyauth[use any authentication method for proxy, default to most secure]' \ '--proxy-basic[use HTTP Basic authentication for proxy]' \ '--proxy-digest[use http digest authentication for proxy]' \ '--proxy-negotiate[enable GSS-Negotiate authentication for proxy]' \ '--proxy-ntlm[enable ntlm authentication for proxy]' \ '--socks5-gssapi-service[change service name for socks server]:servicename' \ '--ciphers[specifies which cipher to use for the ssl connection]:list of ciphers' \ '--capath[specify a search path for certificate files]:CA certificate directory:_directories' \ '--random-file[set source of random data for ssl]:random source:_files' \ '--pass:phrase[passphrase for ssl/ssh private key]' \ '--ssl[try to use ssl/tls for connection, if available]' \ '--ssl-reqd[try to use ssl/tls for connection, fail if unavailable]' \ '--tlsuser[set username for TLS authentication]:user' \ '--tlspassword[set password for TLS authentication]:password' \ '--connect-timeout[timeout for connection phase]:seconds' \ '--resolve[provide a custom address for a specific host and port pair]:host\:port\:address' \ '--retry[specify maximum number of retries for transient errors]:num' \ {-Y,--speed-limit}'[specify minimum speed for --speed-time]:speed' \ {-n,--netrc}'[scan ~/.netrc for login data]' \ {-u,--user}'[specify user name and password for server authentication]:user\:password' \ '--max-filesize[maximum filesize to download, fail for bigger files]:bytes' \ '--proto[specify allowed protocols for transfer]:protocols' \ '--proto-redir[specify allowed protocols for transfer after a redirect]:protocols' \ {-R,--remote-time}'[use timestamp of remote file for local file]' \ {-T,--upload-file}'[transfer file to remote url (using PUT for HTTP)]:file to upload:_files' \ {-R,--remote-time}'[use timestamp of remote file for local file]' \ {-X,--request}'[specifies request method for HTTP server]:method:(GET POST PUT DELETE HEAD OPTIONS TRACE CONNECT PATCH LINK UNLINK)' \ '--libcurl[output libcurl code for the operation to file]:output file:_files' \ "testEndpointParameters[Fake endpoint for testing various parameters "placeOrder[Place an order for a pet]" "createUser[Create user]" \ "status=:[QUERY] Status values that need to be considered for filter" "username=:[PATH] The name that needs to be fetched. Use user1 for testing." "username=:[QUERY] The user name for login" "password=:[QUERY] The password for login in clear text"
if,5
'--ftp-create-dirs[create paths remotely if it does not exist]' \ '--ssl[try to use ssl/tls for connection, if available]' \ '--ssl-reqd[try to use ssl/tls for connection, fail if unavailable]' \ {-6,--ipv6}'[prefer ipv6, if available]' \ {-y,--speed-time}'[specify time to abort after if download is slower than speed-limit]:time' \
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/bash/client.sh
lines,4003
function,83
function finish {
url_escape() { lookup_mime_type() { header_arguments_to_curl() { body_parameters_to_json() { build_request_path() { print_help() { print_about() { print_version() { print_123Test@$%SpecialTags_help() { print_fooGet_help() { print_fakeHealthGet_help() { print_fakeOuterBooleanSerialize_help() { print_fakeOuterCompositeSerialize_help() { print_fakeOuterNumberSerialize_help() { print_fakeOuterStringSerialize_help() { print_testBodyWithFileSchema_help() { print_testBodyWithQueryParams_help() { print_testClientModel_help() { print_testEndpointParameters_help() { print_testEnumParameters_help() { print_testGroupParameters_help() { print_testInlineAdditionalProperties_help() { print_testJsonFormData_help() { print_testClassname_help() { print_addPet_help() { print_deletePet_help() { print_findPetsByStatus_help() { print_findPetsByTags_help() { print_getPetById_help() { print_updatePet_help() { print_updatePetWithForm_help() { print_uploadFile_help() { print_uploadFileWithRequiredFile_help() { print_deleteOrder_help() { print_getInventory_help() { print_getOrderById_help() { print_placeOrder_help() { print_createUser_help() { print_createUsersWithArrayInput_help() { print_createUsersWithListInput_help() { print_deleteUser_help() { print_getUserByName_help() { print_loginUser_help() { print_logoutUser_help() { print_updateUser_help() { call_123Test@$%SpecialTags() { local path_parameter_names=() local query_parameter_names=() call_fooGet() { local path_parameter_names=() local query_parameter_names=() call_fakeHealthGet() { local path_parameter_names=() local query_parameter_names=() call_fakeOuterBooleanSerialize() { local path_parameter_names=() local query_parameter_names=() call_fakeOuterCompositeSerialize() { local path_parameter_names=() local query_parameter_names=() call_fakeOuterNumberSerialize() { local path_parameter_names=() local query_parameter_names=() call_fakeOuterStringSerialize() { local path_parameter_names=() local query_parameter_names=() call_testBodyWithFileSchema() { local path_parameter_names=() local query_parameter_names=() call_testBodyWithQueryParams() { local path_parameter_names=() call_testClientModel() { local path_parameter_names=() local query_parameter_names=() call_testEndpointParameters() { local path_parameter_names=() call_testEnumParameters() { local path_parameter_names=() call_testGroupParameters() { local path_parameter_names=() call_testInlineAdditionalProperties() { local path_parameter_names=() local query_parameter_names=() call_testJsonFormData() { local path_parameter_names=() local query_parameter_names=() call_testClassname() { local path_parameter_names=() call_addPet() { local path_parameter_names=() call_deletePet() { call_findPetsByStatus() { local path_parameter_names=() call_findPetsByTags() { local path_parameter_names=() call_getPetById() { call_updatePet() { local path_parameter_names=() call_updatePetWithForm() { call_uploadFile() { call_uploadFileWithRequiredFile() { call_deleteOrder() { local query_parameter_names=() call_getInventory() { local path_parameter_names=() call_getOrderById() { local query_parameter_names=() call_placeOrder() { local path_parameter_names=() local query_parameter_names=() call_createUser() { local path_parameter_names=() local query_parameter_names=() call_createUsersWithArrayInput() { local path_parameter_names=() local query_parameter_names=() call_createUsersWithListInput() { local path_parameter_names=() local query_parameter_names=() call_deleteUser() { local query_parameter_names=() call_getUserByName() { local query_parameter_names=() call_loginUser() { local path_parameter_names=() call_logoutUser() { local path_parameter_names=() local query_parameter_names=() call_updateUser() { local query_parameter_names=()
for,26
for key in "${!header_arguments[@]}"; do for key in "${!body_parameters[@]}"; do for qparam in "${query_params[@]}" "${path_params[@]}"; do echo "ERROR: Too few values provided for '${qparam}' parameter." echo "ERROR: Too many values provided for '${qparam}' parameter" for pparam in "${path_params[@]}"; do for qparam in "${query_params[@]}"; do for qvalue in "${parameter_values[@]}"; do for qvalue in "${parameter_values[@]}"; do for qvalue in "${parameter_values[@]}"; do for qvalue in "${parameter_values[@]}"; do for qvalue in "${parameter_values[@]}"; do ${CYAN}testEndpointParameters${OFF};Fake endpoint for testing various parameters ${CYAN}placeOrder${OFF};Place an order for a pet This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\ echo -e "For this test, the body for this request much reference a schema named 'File'." | paste -sd' ' | fold -sw 80 echo -e "${BOLD}${WHITE}testEndpointParameters - Fake endpoint for testing various parameters echo -e "Fake endpoint for testing various parameters echo -e " find_bash.sh openapi-generator output.txt outputbashcleaned.txt process_bash.py ${GREEN}status${OFF} ${BLUE}[array[string]]${OFF} ${RED}(required)${OFF} ${CYAN}(default: null)${OFF} - Status values that need to be considered for filter${YELLOW} Specify as: status="value1,value2,..."${OFF}" \ echo -e "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing." | paste -sd' ' | fold -sw 80 echo -e "${BOLD}${WHITE}placeOrder - Place an order for a pet${OFF}" | paste -sd' ' | fold -sw 80 | sed '2,$s/^/ /' echo -e " find_bash.sh openapi-generator output.txt outputbashcleaned.txt process_bash.py ${GREEN}body${OFF} ${BLUE}[application/json]${OFF} ${RED}(required)${OFF}${OFF} - order placed for purchasing the pet" | paste -sd' ' | fold -sw 80 | sed '2,$s/^/ /' echo -e " find_bash.sh openapi-generator output.txt outputbashcleaned.txt process_bash.py ${GREEN}username${OFF} ${BLUE}[string]${OFF} ${RED}(required)${OFF} ${CYAN}(default: null)${OFF} - The name that needs to be fetched. Use user1 for testing. ${YELLOW}Specify as: username=value${OFF}" | paste -sd' ' | fold -sw 80 | sed '2,$s/^/ /' echo -e " find_bash.sh openapi-generator output.txt outputbashcleaned.txt process_bash.py ${GREEN}username${OFF} ${BLUE}[string]${OFF} ${RED}(required)${OFF} ${CYAN}(default: null)${OFF} - The user name for login${YELLOW} Specify as: username=value${OFF}" \ echo -e " find_bash.sh openapi-generator output.txt outputbashcleaned.txt process_bash.py ${GREEN}password${OFF} ${BLUE}[string]${OFF} ${RED}(required)${OFF} ${CYAN}(default: null)${OFF} - The password for login in clear text${YELLOW} Specify as: password=value${OFF}" \ for key in "$@"; do
if,258
if ! ( (("${BASH_VERSION:0:1}" == "4")) && (("${BASH_VERSION:2:1}" >= "3")) ) \ if [ -t 1 ]; then if [[ ${mime_type_abbreviations[$mime_type]} ]]; then if [[ "${key}XX" == "${api_key_header}XX" ]]; then if [[ -z $api_key_header_in_cli && -n $apikey_auth_credential ]]; then if [[ $((count++)) -gt 0 ]]; then if [[ "${ if [[ -n "$ERROR_MSG" ]]; then if [[ "$force" = false ]]; then if [[ ${ if [[ ${operation_parameters_maximum_occurrences["${operation}:::${qparam}"]} -gt 0 \ if [[ -n "$was_error" ]]; then if [[ $path_template =~ $path_regex ]]; then if [[ "${operation_parameters[$qparam]}" == "" ]]; then if [[ ${qparam} == "api_key_query" ]]; then if [[ -n "${parameter_values[*]}" ]]; then if [[ "${collection_type}" == "" ]]; then if [[ $((vcount++)) -gt 0 ]]; then elif [[ "${collection_type}" == "multi" ]]; then if [[ $((vcount++)) -gt 0 ]]; then elif [[ "${collection_type}" == "csv" ]]; then if [[ $((vcount++)) -gt 0 ]]; then elif [[ "${collection_type}" == "ssv" ]]; then if [[ $((vcount++)) -gt 0 ]]; then elif [[ "${collection_type}" == "tsv" ]]; then if [[ $((vcount++)) -gt 0 ]]; then if [[ -n "${parameter_value}" ]]; then if [[ -n "${query_request_part}" ]]; then if [[ -n "${query_request_part}" ]]; then if ! path=$(build_request_path "/v2/another-fake/dummy" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/foo" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/health" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/outer/boolean" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/outer/composite" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/outer/number" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/outer/string" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/body-with-file-schema" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/body-with-query-params" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/inline-additionalProperties" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/jsonFormData" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake_classname_test" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/{petId}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/findByStatus" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/findByTags" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/{petId}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/{petId}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/pet/{petId}/uploadImage" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/fake/{petId}/uploadImageWithRequiredFile" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/store/order/{order_id}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/store/inventory" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/store/order/{order_id}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/store/order" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/createWithArray" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/createWithList" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/{username}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/{username}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/login" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/logout" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ "$print_curl" = true ]]; then if ! path=$(build_request_path "/v2/user/{username}" path_parameter_names query_parameter_names); then if [[ -n $header_accept ]]; then if [[ -n $basic_auth_credential ]]; then if [[ -z $header_content_type ]]; then if [[ -z $header_content_type && "$force" = false ]]; then if [[ -n $body_content_temp_file ]]; then if [[ "$print_curl" = true ]]; then if [[ "$print_curl" = true ]]; then if [[ "$take_user" = true ]]; then if [[ "$take_host" = true ]]; then if [[ "$take_accept_header" = true ]]; then if [[ "$take_contenttype_header" = true ]]; then if [[ "x$operation" == "x" ]]; then if [[ "$operation" ]]; then if [[ "$operation" ]]; then if [[ "$operation" ]]; then if [[ $header_name == "api_key" ]]; then if [[ "$operation" ]]; then if [[ -z "${operation_parameters[$parameter_name]+foo}" ]]; then if [[ "x$operation" == "x" ]]; then if [[ $key =~ $space_regexp ]]; then if [[ -z "$host" ]]; then if [[ -z "$operation" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/go/go-petstore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/reqwest/petstore-async/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/reqwest/petstore-async-middleware/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/reqwest/name-mapping/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/reqwest/petstore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/reqwest/petstore-awsv4signature/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/rust/hyper/petstore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v14-query-param-object-format/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v12-oneOf/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v13-provided-in-any/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-node/npm/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-node/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-nestjs-v6-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/android/httpclient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/android/volley/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v14-provided-in-root/builds/with-npm/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v14-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/cpp-restsdk/client/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/php/OpenAPIClient-php/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/php/psr-18/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-swagger2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/webclient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resttemplate/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/native-async/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resteasy/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/vertx/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/feign/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/retrofit2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/jersey2-java8-localdatetime/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/jersey3/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resttemplate-withXml/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-3.1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/webclient-nullable-arrays/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/retrofit2-play26/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/jersey2-java8/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/retrofit2rx3/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resttemplate-jakarta/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/vertx-no-nullable/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-dynamicOperations/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/retrofit2rx2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/apache-httpclient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-swagger1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-parcelableModel/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/rest-assured/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/google-api-client/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/native-jakarta/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/webclient-jakarta/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resttemplate-swagger1/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/native/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/rest-assured-jackson/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-group-parameter/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/resttemplate-swagger2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/feign-no-nullable/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-nullable-required/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/webclient-swagger2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/java/okhttp-gson-awsv4signature/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp-functions/git_push.sh
lines,58
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp-functions/build.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-jquery/npm/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-jquery/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/clojure/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/javascript-es6/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/cpp-tizen/doc/generateDocumentation.sh
lines,4
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/ruby-autoload/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/R/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v13-provided-in-root/builds/with-npm/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v13-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/R-httr2-wrapper/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/haskell-http-client/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp-restsharp-name-parameter-mappings/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/eiffel/gitpush.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/php-nextgen/OpenAPIClient-php/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/R-httr2/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/crystal/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/perl/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/objc/core-data/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/objc/core-data/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/objc/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/objc/default/SwaggerClientTests/run_xcodebuild.sh
lines,3
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/javascript-promise-es6/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v12-provided-in-root/builds/with-npm/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v12-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-angular-v16-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/lua/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-unityWebRequest/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-net6.0-nrt-useSourceGeneration/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-ConditionalSerialization/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-net6.0/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClientCore/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClientCore/build.sh
lines,21
function,0


for,1
for cmd in {dotnet}; do
if,2
if ! command -v ${cmd} > /dev/null; then if [ $? -ne 0 ]
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClientCore/mono_nunit_test.sh
lines,22
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-net47/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-netcore-latest-allOf/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClientCoreAndNet47/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-net6.0-nrt/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-netcore-latest-anyOf/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-net48/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-netstandard2.0/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-generichost-netcore-latest-oneOf/docs/scripts/git_push.sh
lines,49
function,0


for,0

if,4
if [ "$release_note" = "" ] || [ "$release_note" = "Minor update" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-net5.0/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/csharp/OpenAPIClient-httpclient/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/samples/client/petstore/typescript-nestjs-v8-provided-in-root/builds/default/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/meta-codegen-kotlin.sh
lines,39
function,0


for,0

if,3
if ! command -v gradle > /dev/null; then if [ ! -f "$executable" ] if [ ! -f "${root}"samples/meta-codegen-kotlin/gradle/wrapper/gradle-wrapper.jar ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/tests/test-debug-supporting-files.sh
lines,38
function,0


for,0

if,4
if expr "$link" : '/.*' > /dev/null; then if [ ! -d "${APP_DIR}" ]; then if [ ! -f "$executable" ] if [[ $(java $JAVA_OPTS -jar $executable $ags 2>&1 | grep "StackOverflowError") ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/generate-samples.sh
lines,65
function,0

files=() args=()
for,0

if,6
if [ ! -f "$executable" ]; then if [ "--" == "$key" ]; then if [[ "$end_option" = true ]]; then You may generate a single config with additional options if you use -- to if [[ ${ if [ ${
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/release/bump.sh
lines,223
function,6

declare -a from_parts=() declare -a to_parts=() err() { d() { usage() version() sed_cross() { update_file() {
for,2
Update build version only (useful for docs) for filename in "${file[@]}"; do
if,13
if [[ true = "${debug}" ]]; then if [[ "$ if [[ "${v}" =~ $version_regex ]]; then if [[ "SNAPSHOT" = "${BASH_REMATCH[4]}" ]]; then if [[ ! "${inc[@]}" =~ ${increase} ]];then if [[ ${ if [[ -z "${from}" ]]; then if [[ -z "${to}" ]]; then if [[ -z "${increase}" ]]; then if [[ true = ${from_parts[3]} ]]; then if [[ ${from_parts[3]} = true && ${to_parts[3]} = true ]]; then if ! sed_cross ${filename}; then if [[ "${original_hash}" = "${final_hash}" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/release/release_version_update.sh
lines,99
function,1

p XPath.first(Document.new($stdin), "/project/version/text()")' < ${cwd}/../../../pom.xml | tr -d '"')
for,0

if,1
if [[ -n "$1" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/release/release_version_update_docs.sh
lines,118
function,1

p XPath.first(Document.new($stdin), "/project/version/text()")' < ${cwd}/../../../pom.xml | tr -d '"')
for,0

if,2
if [[ -z "$1" ]]; then if [[ -n "${next_version}" ]];then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/detect_tab_in_templates.sh
lines,28
function,0


for,1
for i in "${samples[@]}"
if,1
if [ "$RESULT" != "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/detect_carriage_return.sh
lines,18
function,0


for,0

if,2
if [ $? -ne 1 ]; then if [ $? -ne 1 ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/export_docs_generators.sh
lines,20
function,0


for,1
for GENERATOR in $(java -jar ${executable} list --short --include all | sed -e 's/,/\'$'\n''/g')
if,1
if [[ "true" == "${SKIP_EXPORT_DOCS}" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/detect_merge_conflict.sh
lines,17
function,0


for,0

if,2
if [ $? -ne 1 ]; then if [ $? -ne 1 ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/copy-to-website.sh
lines,33
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/test-fake-petstore-for-all.sh
lines,34
function,0


for,1
for GENERATOR in $(java -jar ${executable} list --short | sed -e 's/,/\'$'\n''/g')
if,1
if eval java -jar ${executable} generate -i modules/openapi-generator/src/test/resources/3_0/petstore-with-fake-endpoints-models-for-testing.yaml -g ${GENERATOR} -o /tmp/openapi-generator-test-fake-petstore/3.0/${GENERATOR} > ${logfile} 2>&1; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/dart-keywords/save_dart_keywords.sh
lines,2
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/openapi-generator-cli.sh
lines,70
function,1
function latest.tag {

for,1
for cmd in {mvn,jq,curl}; do
if,5
if ! command -v ${cmd} > /dev/null; then if [[ $ver == v* ]]; then if [ ! -d "${DIR}" ]; then if [ ! -f ${DIR}/${jar} ]; then if [[ ${ver} =~ ^.*-SNAPSHOT$ ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/export_generators_readme.sh
lines,20
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/detect_tab_in_java_class.sh
lines,12
function,0


for,0

if,1
if [ "$RESULT" != "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/utils/export_generator.sh
lines,17
function,0


for,0

if,1
if [[ "$1" != "" ]]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/bin/meta-codegen.sh
lines,27
function,0


for,0

if,1
if [ ! -f "$executable" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/scala/client/required-attributes.sh
lines,15
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/array-and-object-expected/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/custom-path-params-expected/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/objectsWithEnums-expected/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/node-es5-expected/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/additional-properties-expected/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/typescript/petstore-expected/git_push.sh
lines,57
function,0


for,0

if,6
if [ "$git_host" = "" ]; then if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/test/resources/integrationtests/csharp/general/enum-support.sh
lines,14
function,0


for,0

if,0

git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/modules/openapi-generator/src/main/resources/ruby-on-rails-server/docker-entrypoint.sh
lines,9
function,0


for,0

if,1
if [ "$1" = 'bin/rails' ] && [ "$2" = 's' ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/CI/circle_parallel.sh
lines,85
function,0


for,0

if,4
if [ "$NODE_INDEX" = "1" ]; then elif [ "$NODE_INDEX" = "2" ]; then elif [ "$NODE_INDEX" = "3" ]; then elif [ "$NODE_INDEX" = "4" ]; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/CI/deno_install.sh
lines,52
function,0


for,0

if,5
if ! command -v unzip >/dev/null; then if [ "$OS" = "Windows_NT" ]; then if [ $ if [ ! -d "$bin_dir" ]; then if command -v deno >/dev/null; then
git@github.com:OpenAPITools/openapi-generator.git,77687a8ea59f97519731f345308d3615e2f6e500,openapi-generator,17743,./openapi-generator/new.sh
lines,346
function,25

usage() { checkPreviousGenType() { titleCase() { kebabCase() { kebabCasePath() { kebabCasePathWin() { kebabCasePkg() { upperCase() { public CodegenType getTag() { public String getName() { public String getHelp() { public ${lang_classname}() { super(); ${lang_classname} codegen = new ${lang_classname}(); public void shouldSucceed() throws Exception { public void simpleModelTest() { final Model model = new ModelImpl() .property("id", new LongProperty()) .property("name", new StringProperty()) final DefaultCodegen codegen = new ${lang_classname}(); public ${lang_classname}OptionsTest() { super(new ${lang_classname}OptionsProvider()); protected CodegenConfig getCodegenConfig() { protected void verifyOptions() { public String getLanguage() { public Map<String, String> createOptions() { ImmutableMap.Builder<String, String> builder = new ImmutableMap.Builder<String, String>(); .build(); public boolean isServer() {
for,2
Stubs out files for new generators Create a server generator for ktor:
if,4
if [ "a" != "a$gen_type" ]; then if [ -z "$gen_type" ]; then if [ "$os" == "darwin" ]; then if [ "1" -eq "${tests}" ]; then
git@github.com:yudaocode/SpringBoot-Labs.git,6c12efaed06d12907a0f40dd2ad1f7020aec8798,SpringBoot-Labs,17564,./SpringBoot-Labs/labx-16/deploy.sh
lines,166
function,6
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
for,2
for ((i = 0; i < 60; i++)) for ((i = 0; i < 60; i++))
if,8
if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$HEALTH_CHECK_URL" ]; then if [ "$result" == "200" ]; then if [ ! "$result" == "200" ]; then
git@github.com:yudaocode/SpringBoot-Labs.git,6c12efaed06d12907a0f40dd2ad1f7020aec8798,SpringBoot-Labs,17564,./SpringBoot-Labs/lab-41/deploy.sh
lines,160
function,6
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
function backup() { function transfer() { function stop() { function start() { function healthCheck() { function deploy() {
for,2
for ((i = 0; i < 60; i++)) for ((i = 0; i < 60; i++))
if,8
if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$HEALTH_CHECK_URL" ]; then if [ "$result" == "200" ]; then if [ ! "$result" == "200" ]; then
git@github.com:yudaocode/SpringBoot-Labs.git,6c12efaed06d12907a0f40dd2ad1f7020aec8798,SpringBoot-Labs,17564,./SpringBoot-Labs/lab-24/lab-24-apidoc-showdoc/showdoc_db.sh
lines,33
function,0


for,0

if,0

git@github.com:yudaocode/SpringBoot-Labs.git,6c12efaed06d12907a0f40dd2ad1f7020aec8798,SpringBoot-Labs,17564,./SpringBoot-Labs/lab-24/lab-24-apidoc-showdoc/showdoc_api.sh
lines,64
function,1

searchfile() {
for,1
for chkfile in $1/*
if,6
if [[ -z "$1" ]] || [[ ! -d "$1" ]] ; then if [[ -f "$chkfile" ]] && [ $filesize -le $maxsize ] && [[ -n $(file $chkfile | grep text) ]] ; then if [ ! -z "$result" ] ; then if [[ $txt =~ "@url" ]] && [[ $txt =~ "@title" ]]; then if [[ -d $chkfile ]] ; then if [[ $sys =~ "MS" ]] || [[ $sys =~ "MINGW" ]] || [[ $sys =~ "win" ]] ; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/model/test-all-profiles.sh
lines,34
function,0


for,2
for I in `perl -ne 'print "$1\n" if (m,<id>([^.<]+)</id>,)' pom.xml`; do for I in `perl -ne 'print "$1\n" if (m,<id>([^<]+)</id>,)' pom.xml`; do
if,3
for I in `perl -ne 'print "$1\n" if (m,<id>([^.<]+)</id>,)' pom.xml`; do perl -ne "print '::error::| $I | Timed out.' . \"\n\" if (/There was a timeout in the fork/)" /tmp/surefire.out for I in `perl -ne 'print "$1\n" if (m,<id>([^<]+)</id>,)' pom.xml`; do
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/servers/app-server/jboss/common/install-patch.sh
lines,23
function,0


for,1
for patch in $patches
if,3
if [ ! -d "$JBOSS_HOME/bin" ] ; then if [[ $patch == http* ]]; if [ $? -ne 0 ]; then exit 1; fi
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/servers/app-server/jboss/eap6/src/main/resources/config/fuse/install-fuse.sh
lines,13
function,0


for,0

if,1
if [ ! -f "$JBOSS_HOME/$FUSE_INSTALLER_NAME" ] ; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/servers/app-server/jboss/eap6/src/main/resources/config/install-adapters-online-ha.sh
lines,50
function,0


for,0

if,2
if [ ! -d "$JBOSS_HOME/bin" ] ; then if ./jboss-cli.sh -c --command=":read-attribute(name=server-state)" | grep -q "running" ; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/servers/app-server/jboss/eap6/src/main/resources/config/add-secured-deployments.sh
lines,41
function,0


for,0

if,2
if [ ! -d "$JBOSS_HOME/bin" ] ; then if ./jboss-cli.sh -c --command=":read-attribute(name=server-state)" | grep -q "running" ; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/servers/app-server/jboss/eap6/src/main/resources/config/install-adapters-online.sh
lines,49
function,0


for,0

if,3
if [ ! -d "$JBOSS_HOME/bin" ] ; then if ./jboss-cli.sh -c --command=":read-attribute(name=server-state)" | grep -q "running" ; then if [ "$SAML_SUPPORTED" = true ] && [ ${RESULT} -eq 0 ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/tests/base/testsuites/suite.sh
lines,34
function,0


for,1
for i in `cat "$SUITE_FILE" | grep -v '^[[:space:]]*$' | grep -v '^[[:space:]]*
if,4
if [ "$GROUP" == "" ]; then if [ ! -f "$SUITE_FILE" ]; then if [[ "$i" != *'.'* ]]; then if [ "$SEARCH" == "" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/testsuite/integration-arquillian/tests/base/testsuites/base-suite.sh
lines,42
function,0


for,2
for i in `ls -d $TEST_DIR/*/ | sed "s|$TEST_DIR||g" | sed "s|/||g"`; do for i in `echo $PACKAGES`; do
if,4
if [ "$GROUP" == "" ]; then if ( ! cat $TESTSUITE_FILE | grep "^$i," >/dev/null ); then if [ ! -d "$TEST_DIR/$PACKAGE" ]; then if [ "$GROUP" == "$PACKAGE_GROUP" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/create-olm-bundle.sh
lines,76
function,0


for,1
echo "Creating OLM bundle for version $VERSION replacing version $REPLACES_VERSION"
if,1
if [[ $REPLACES_VERSION = "NONE" ]]
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/install-keycloak-operator.sh
lines,24
function,0


for,1
echo "waiting for the test-catalog to be ready"
if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/check-crds-installed.sh
lines,19
function,0


for,2
echo "waiting for Keycloak CRD" echo "waiting for Keycloak Realm Import CRD"
if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/olm-testing.sh
lines,37
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/create-olm-test-catalog.sh
lines,34
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/create-olm-test-resources.sh
lines,60
function,0


for,1
for element in "${array[@]}"
if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/prepare-olm-test.sh
lines,36
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/install-olm.sh
lines,7
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/build-testing-docker-images.sh
lines,15
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/operator/scripts/check-examples-installed.sh
lines,21
function,0


for,2
echo "waiting for Keycloak example-kc status" echo "waiting for Keycloak Realm Import example-count0-kc status"
if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/examples/providers/domain-extension/invoke-authenticated.sh
lines,19
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/integration/client-cli/admin-cli/src/main/bin/kcadm.sh
lines,31
function,0


for,0

if,2
if [ -z "$JAVA" ]; then if [ -n "$JAVA_HOME" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/integration/client-cli/client-registration-cli/src/main/bin/kcreg.sh
lines,30
function,0


for,0

if,2
if [ -z "$JAVA" ]; then if [ -n "$JAVA_HOME" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/quarkus/dist/src/main/content/bin/federation-sssd-setup.sh
lines,44
function,0


for,0

if,6
if [ -f "$SSSD_FILE" ]; if ! grep -q ^ldap_user_extra_attrs $SSSD_FILE; then if ! grep -q ^services.*ifp.* $SSSD_FILE; then if ! grep -q ^allowed_uids $SSSD_FILE; then if ! grep -q ^user_attributes $SSSD_FILE; then if [ ! -f "$PAM_FILE" ];
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/quarkus/dist/src/main/content/bin/kc.sh
lines,148
function,3

abs_path () { esceval() { esceval_args() {
for,0

if,12
if [ -z $IS_CYGWIN ] ; then if [ -n "$2" ] && expr "$2" : '[0-9]\+$' >/dev/null; then build) if [ -z "$CONFIG_ARGS" ]; then PRE_BUILD=false; fi;; if [ -z "$JAVA" ]; then if [ -n "$JAVA_HOME" ]; then if [ -z "$JAVA_OPTS" ]; then if [ -z "$JAVA_ADD_OPENS" ]; then if [ -n "$JAVA_OPTS_APPEND" ]; then if [ "$DEBUG_MODE" = "true" ]; then if [ -z "$DEBUG_OPT" ]; then if [ "$PRINT_ENV" = "true" ]; then if [ "$PRE_BUILD" = "true" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/quarkus/container/ubi-null.sh
lines,96
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/quarkus/set-quarkus-version.sh
lines,71
function,1
function revertChanges() {
function revertChanges() {
for,2
for dependency in $DEPENDENCIES_LIST; do echo "Failed to resolve version for dependency '$dependency'"
if,5
if [ "$1" == "-h" ]; then if [ "$1" == "--revert" ]; then if [ "$QUARKUS_BRANCH" == "$DEFAULT_QUARKUS_VERSION" ]; then if ! $(curl --output /dev/null --silent --head --fail "$QUARKUS_BOM_URL"); then if [ "$VERSION" == "" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/docs/documentation/build-auto.sh
lines,9
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/docs/documentation/get-version.sh
lines,3
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/.github/scripts/run-ipa.sh
lines,44
function,0


for,1
echo "Doing a backup of the ipa-data directory for caching"
if,4
if [ -f "$HOME/ipa-data.tar" ]; then if [ $? -ne 0 ]; then if [[ $line == "FreeIPA server configured." ]]; then if [ $result -eq 0 ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/.github/scripts/run-fips-it.sh
lines,20
function,0


for,0

if,2
if [ $? -ne 0 ]; then if [ "$1" = "strict" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/.github/scripts/run-ipa-tests.sh
lines,50
function,0


for,1
echo "Adding users and groups for the test"
if,1
if [[ "true" == "$1" ]]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/.github/scripts/run-fips-ut.sh
lines,19
function,0


for,0

if,2
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/.github/actions/conditional/conditional.sh
lines,99
function,0


for,3
for C in "${CONDITIONS[@]}"; do for ((i = 1; i < ${ for JOB in "${!JOB_CONDITIONS[@]}"
if,9
if [[ "$REF" =~ refs/pull/([0-9]+)/merge ]]; then if [ "$IS_PR" == true ]; then if [ "$IS_PR" == true ]; then if [ "$IS_PR" == true ]; then if [[ "$PATTERN" =~ testsuite::* ]]; then if ( echo "$REGEX" | grep -v -E '/' &>/dev/null ); then if ( echo "$CHANGED_FILES" | grep -q -E "^$REGEX$"); then if [ "${JOB_CONDITIONS[$JOB]}" != true ]; then if [ "$GITHUB_OUTPUT" != "" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/get-version.sh
lines,3
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/distribution/licenses-common/check-licenses.sh
lines,24
function,0


for,1
for i in `find $MODULES -name '*.jar'`; do
if,2
if ( unzip -l $i | grep pom.properties &>/dev/null ); then if [ ! -f $LICENSES/$groupId\,$artifactId\,$version,* ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/distribution/licenses-common/download-license-files.sh
lines,83
function,8

die() { <xsl:template match="/ | @* | node()"> <xsl:apply-templates select="@* | node()" /> <xsl:template match="licenseSummary/dependencies/dependency/licenses/license/name/text()"> <xsl:template match="licenseSummary/others/other/description/text()"> <xsl:template match="licenseSummary/others/other/licenses/license/name/text()"> xmlstarlet sel -T -t -m "/licenseSummary/dependencies/dependency/licenses/license" -v "../../groupId/text()" -o $'\t' -v "../../artifactId/text()" -o $'\t' -v "../../version/text()" -o $'\t' -v "name/text()" -o $'\t' -v "url/text()" --nl "$xml" | \ xmlstarlet sel -T -t -m "/licenseSummary/others/other/licenses/license" -v "../../description/text()" -o $'\t' -v "name/text()" -o $'\t' -v "url/text()" --nl "$xml" | \
for,2
echo "==> Checking license data for errors" >&2 echo "==> Downloading license files for $xml into $output_dir" >&2
if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/distribution/licenses-common/update-licenses.sh
lines,6
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/set-version.sh
lines,35
function,0


for,0

if,1
if [[ $NEW_VERSION =~ [0-9]+.[0-9]+.[0-9]+.[a-z] ]]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/misc/.travis/after.sh
lines,3
function,0


for,0

if,0

git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/misc/scripts/check-java-version.sh
lines,55
function,0


for,2
for i in `find -name '*.jar'`; do for j in `find t/ -name '*.class'`; do
if,5
if [ "$ZIP" == "" ]; then if [ "$JAVAV" == "" ]; then if [ "$V" -gt $JAVAV ]; then if [ "$INVALID" == "1" ]; then if [ "$INVALID_ZIP" == "1" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/misc/scripts/dependency-report.sh
lines,23
function,0


for,1
echo "Dependency tree for $DEP"
if,1
if [ "$DEP" == "" ]; then
git@github.com:keycloak/keycloak.git,04777299b08e9410ea8367764fa6f48c61b3e40d,keycloak,17539,./keycloak/misc/log/trimmer.sh
lines,9
function,0


for,0

if,1
if [ ! -f "LogTrimmer.class" ]; then
git@github.com:forezp/SpringCloudLearning.git,740106e00636df1b005fe13f66f1f9ecbafd8b1b,SpringCloudLearning,17514,
git@github.com:iBotPeaches/Apktool.git,247735c434fdd53cdd3da68876e0b2627b8190a8,Apktool,17352,
git@github.com:facebook/fresco.git,0300fb7304e952bdecaec8f63dad5d572b5f041e,fresco,16998,
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.incubator.vector/share/classes/jdk/incubator/vector/gen-src.sh
lines,214
function,2

list_mech_gen() { vectorindextype="vix.getClass()"
for,2
for type in byte short int long float double for bits in 64 128 256 512 Max
if,11
if [ VAR_OS_ENV==windows.cygwin ]; then if [[ "${numLanes}" == "1" ]]; then elif [[ "${numLanes}" == "2" ]]; then elif [[ "${numLanes}" == "4" ]]; then elif [[ "${numLanes}" == "8" ]]; then elif [[ "${numLanes}" == "16" ]]; then elif [[ "${numLanes}" == "32" ]]; then elif [[ "${numLanes}" == "64" ]]; then if [[ "${bits}" == "Max" ]]; then if [[ "${vectortype}" == "IntMaxVector" ]]; then if [ VAR_OS_ENV==windows.cygwin ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.jpackage/linux/classes/jdk/jpackage/internal/resources/services_utils.sh
lines,38
function,3

register_services () unregister_services () file_belongs_to_single_package ()
for,2
for unit in "$@"; do for unit in "$@"; do
if,5
if file_belongs_to_single_package "$unit"; then if systemctl list-units --full -all | grep -q "$unit_name"; then if [ ! -e "$1" ]; then elif [ "$package_type" = rpm ]; then elif [ "$package_type" = deb ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.jpackage/linux/classes/jdk/jpackage/internal/resources/desktop_utils.sh
lines,104
function,4

_filter_out_default_mime_handler () _uninstall_default_mime_handler () uninstall_default_mime_handler () trace ()
for,5
for (idx in desktop_files) { for (idx in desktop_files) { for mime in "$@"; do trace Remove $desktop_file default handler for $mime mime type from $defaults_list file for f in /usr/share/applications/defaults.list /usr/local/share/applications/defaults.list; do
if,6
if (desktop_files[idx] != desktop_file) { if (counter) { if (desktop_files[idx] != desktop_file) { if (--counter) { if ! diff -q "$tmpfile1" "$tmpfile2" > /dev/null; then if [ -n "$update" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/resources/services_utils.sh
lines,30
function,2

register_services () unregister_services ()
for,2
for daemonPlistFilePath in "$@"; do for daemonPlistFilePath in "$@"; do
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.hotspot.agent/test/libproc/libproctest64.sh
lines,65
function,1

usage() {
for,0

if,2
if [ "$1" == "-help" ]; then if [ "x$SA_JAVA" = "x" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/jdk.hotspot.agent/test/libproc/libproctest.sh
lines,66
function,1

usage() {
for,0

if,2
if [ "$1" == "-help" ]; then if [ "x$SA_JAVA" = "x" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/src/utils/IdealGraphVisualizer/igv.sh
lines,23
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/autoconf/build-aux/install.sh
lines,28
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/shell-profiler.sh
lines,69
function,0


for,0

if,2
if [ "$TIME_CMD_TYPE" = "gnutime" ]; then elif [ "$TIME_CMD_TYPE" = "flock" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/hotspot.sh
lines,234
function,1

init_gdb() {
for,1
echo Warning: Defaulting to 16Mb heap to make Valgrind run faster, use -Xmx for larger heap
if,9
if [ ! "$GDB" ] if [ ! "$DBX" ] if [ ! "$VALGRIND" ] if [ "${ALT_JAVA_HOME}" != "" ]; then if [ "${JDK}" != "" ]; then if [ "${OS}" = "Darwin" ] if [ -z "$DYLD_LIBRARY_PATH" ] if [ -z "$LD_LIBRARY_PATH" ] if [ ! -x $LAUNCHER ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/hide_important_warnings_from_javac.sh
lines,36
function,0


for,2
EXP="${EXP}|Note: Recompile with -Xlint:deprecation for details." EXP="${EXP}|Note: Recompile with -Xlint:unchecked for details."
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/lic_check.sh
lines,224
function,0


for,1
echo "SUCCESS: The license header for "`pwd`"/"$1" has been verified."
if,16
if [ ! -d ${template_dir} ] ; then if [ -d $1 ] ; then if [ ${error_status} -ne 1 ] ; then if [ ! -f $1 ] ; then if [ "${check_copyright}" != "" ] ; then if [ ${length} -ne 5 ] ; then if [ "${check_year1}" = "" ] ; then if [ "${year2}" != "Oracle" ] ; then if [ ${length} -ne 5 ] ; then if [ "${check_year2}" = "" ] ; then if [ ${counter} -ne 0 ] ; then if [ "${trimmed_line}" = "${trimmed_prefix}" ] ; then if [ ${counter} -eq ${lines} ] ; then if [ -s ${tmpfile} ] ; then if [ "$?" = "0" ] ; then if [ ${error_status} -ne 0 ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/logger.sh
lines,59
function,0


for,1
for opt; do
if,1
if [[ "$is_prefix" = true && "$opt" =~ ^.*=.*$ ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/addNotices.sh
lines,45
function,0


for,0

if,1
if [ "x$COPYRIGHT_YEARS" != x ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/genExceptions.sh
lines,114
function,3

gen() { public $ARG_TYPE get$ARG_PROP() { public $ID() { }
for,0

if,2
public `if [ ${ABSTRACT:-0} = 1 ]; if [ $ARG_ID ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/update_copyright_year.sh
lines,250
function,3

saneFileToCheck() updateFile() updateChangesetFiles()
for,1
for i in `cat ${files}` ; do
if,23
if [ "$3" != "" ] ; then if [ "$2" != "" ] ; then if [ -z "$vcs" ] ; then if [ "$git_found" == "true" ] && [ "$hg_found" == "false" ] ; then elif [ "$hg_found" == "true" ] && [ "$git_found" == "false" ] ; then if [ "$1" != "" -a -f $1 ] ; then if [ "${isText}" != "" \ if [ `saneFileToCheck "$1"` = "true" ] ; then if ! diff -b -w $1.OLD $1 > /dev/null ; then \ if [ -f "${files}" -a -s "${files}" ] ; then if [ `updateFile "${i}"` = "true" ] ; then if [ ${count} -gt 0 ] ; then if [ ${previous} -ne 0 ] ; then if [ -s ${all_changesets} ] ; then if [ "${year}" = "2010" ] ; then if cat ${desc} | fgrep -i "Added tag" > /dev/null ; then elif cat ${desc} | fgrep -i rebrand > /dev/null ; then elif cat ${desc} | fgrep -i copyright > /dev/null ; then if cat ${desc} | fgrep -i "Added tag" > /dev/null ; then elif cat ${desc} | fgrep -i "copyright year" > /dev/null ; then if [ ${total} -gt 0 ] ; then if [ ${previous} -eq 0 ] ; then if [ ${previous} -ne 0 ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/compare.sh
lines,1630
function,15

diff_text() { compare_dirs() { compare_files() { compare_permissions() { compare_file_types() { compare_general_files() { compare_zip_file() { compare_jmod_file() { compare_all_zip_files() { compare_all_jmod_files() { compare_all_jar_files() { compare_bin_file() { print_binary_diff_header() { compare_all_libs() { compare_all_execs() {
for,15
for f in `cd $OTHER_DIR && $FIND . -type f` for f in $(cd $OTHER_DIR && $FIND . ! -type d -a ! -name "*.jmod") for f in $GENERAL_FILES for file in $DIFFING_FILES; do for file in $DIFFING_TEXT_FILES; do for i in $(cat $WORK_DIR/$ZIP_FILE.difflist) ; do for file in $DIFFING_EXEC_FILES; do for f in $ZIPS; do for f in $JMODS; do for f in $ZIPS; do for l in $LIBS; do for e in $EXECS; do echo "[FILTER] List filenames in the image to compare, works for jars, zips, libs and execs" echo "Selecting normal images for JDK compare" echo "Selecting licensee images for compare"
if,216
if [ -z "$TOPDIR" ]; then if [ "$OPENJDK_TARGET_OS" = "macosx" ]; then elif [ "$OPENJDK_TARGET_OS" = "windows" ]; then elif [ "$OPENJDK_TARGET_OS" = "aix" ]; then if [ ! -e "$COMPARE_EXCEPTIONS_INCLUDE" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$OPENJDK_TARGET_CPU" = "x86" ]; then elif [ "$OPENJDK_TARGET_CPU" = "x86_64" ]; then elif [ "$OPENJDK_TARGET_OS" = "macosx" ]; then if test "x$SUFFIX" = "xclass"; then if [ "$NAME" = "SystemModules\$all.class" ] \ elif [ "$NAME" = "module-info.class" ]; then if test -n "$TMP"; then if [ -s $WORK_DIR/dirs_diff ]; then if [ "$ONLY_OTHER" ]; then if [ "$ONLY_THIS" ]; then if [ -s $WORK_DIR/files_diff ]; then if [ "$ONLY_OTHER" ]; then if [ "$ONLY_THIS" ]; then if [ ! -f ${OTHER_DIR}/$f ]; then continue; fi if [ ! -f ${THIS_DIR}/$f ]; then continue; fi if [ "$OP" != "$TP" ] if [ -z "$found" ]; then echo ; found="yes"; fi if [ -z "$found" ]; then if [ ! -f ${OTHER_DIR}/$f ]; then continue; fi if [ ! -f ${THIS_DIR}/$f ]; then continue; fi if [ "$OF" != "$TF" ] if [ "`echo $OF | $GREP -c 'Zip archive data'`" -gt 0 ] \ elif [ "`echo $OF | $GREP -c 'MSVC program database ver 7.00'`" -gt 0 ] \ if [ -z "$found" ]; then echo ; found="yes"; fi if [ -z "$found" ]; then if [[ "$f" == */native/* ]]; then if [ -e $OTHER_DIR/$f ]; then if [ "$(basename $f)" = "release" ]; then elif [ "$SUFFIX" = "svg" ]; then elif [ "$SUFFIX" = "jar_contents" ]; then if [ -n "$DIFF_OUT" ]; then if [ "$SHOW_DIFFS" = "true" ]; then if [ -n "$OTHER_ZIP_FILE" ]; then if [ "$THIS_SUFFIX" != "$OTHER_SUFFIX" ]; then if $CMP $OTHER_ZIP $THIS_ZIP > /dev/null if [ "$TYPE" = "jar" -o "$TYPE" = "war" -o "$TYPE" = "zip" ] elif [ "$TYPE" = "gz" ] elif [ "$TYPE" = "jmod" ] if [ -n "$ONLY_OTHER" ]; then if [ -n "$ONLY_THIS" ]; then if [ "$CMP_ZIPS_CONTENTS" = "true" ]; then if [ "$SUFFIX" = "exe" -o "$SUFFIX" = "dll" -o "$SUFFIX" = "so" \ if [[ "$ACCEPTED_JARZIP_CONTENTS $EXCEPTIONS" != *"$file"* ]]; then if [ -s "$WORK_DIR/$ZIP_FILE.diffs" ]; then if [ -n "$SHOW_DIFFS" ]; then if [ -f "${OTHER_UNZIPDIR}/$i.javap" ]; then elif [ -f "${OTHER_UNZIPDIR}/$i.cleaned" ]; then if [ "$?" != "0" ]; then if $CMP $OTHER_JMOD $THIS_JMOD > /dev/null; then if [ -n "$ONLY_OTHER" ]; then if [ -n "$ONLY_THIS" ]; then if [ -n "$ZIPS" ]; then if [ -f "$OTHER_DIR/$f" ]; then if [ "$?" != "0" ]; then if [ -n "$JMODS" ]; then if [ -f "$OTHER_DIR/$f" ]; then if [ "$?" != "0" ]; then if [ -n "$ZIPS" ]; then if [ -f "$OTHER_DIR/$f" ]; then if [ "$?" != "0" ]; then if [ -n "$OTHER_BIN_FILE" ]; then if [ "$STRIP_ALL" = "true" ] || [[ "$STRIP_BEFORE_COMPARE" = *"$BIN_FILE"* ]] \ if [ "$STRIP_ALL" = "true" ] || [[ "$STRIP_BEFORE_COMPARE" = *"$BIN_FILE"* ]]; then if [ "$OPENJDK_TARGET_OS" = "macosx" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$(uname -o)" = "Cygwin" ]; then if cmp $OTHER_FILE $THIS_FILE > /dev/null; then if [ -n "$VERBOSE" ]; then if [ -z "$SKIP_BIN_DIFF" ]; then if [[ "$ACCEPTED_BIN_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_BIN_DIFF" != *"$BIN_FILE"* ]]; then if [ -n "$STAT" ]; then if [ $THIS_SIZE -ne $OTHER_SIZE ]; then if [[ "$ACCEPTED_SMALL_SIZE_DIFF" = *"$BIN_FILE"* || "$ACCEPTED_SMALL_SIZE_DIFF" = "true" ]] \ elif [ "$OPENJDK_TARGET_OS" = "windows" ] \ elif [ "$OPENJDK_TARGET_OS" = "windows" ] \ if [[ "$ACCEPTED_SIZE_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SIZE_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SIZE_DIFF $ACCEPTED_SIZE_DIFF" = *"$BIN_FILE"* ]]; then if [ "$SORT_ALL_SYMBOLS" = "true" ] || [[ "$SORT_SYMBOLS" = *"$BIN_FILE"* ]]; then if [ -n "$SYMBOLS_DIFF_FILTER" ] && [ -z "$NEED_SYMBOLS_DIFF_FILTER" ] \ if [ "$OPENJDK_TARGET_OS" = "windows" ]; then elif [ "$OPENJDK_TARGET_OS" = "aix" ]; then elif [ "$OPENJDK_TARGET_OS" = "macosx" ]; then if [ -s $WORK_FILE_BASE.symbols.diff ]; then if [[ "$ACCEPTED_SYM_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SYM_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SYM_DIFF $ACCEPTED_SYM_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$LDD_CMD" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ -s $WORK_FILE_BASE.deps.diff ]; then if [ -s $WORK_FILE_BASE.deps.diff.uniq ]; then if [[ "$ACCEPTED_DEP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF $ACCEPTED_DEP_DIFF" = *"$BIN_FILE"* ]]; then if [ "$OPENJDK_TARGET_OS" = "linux" ]; then if [ -n "$FULLDUMP_CMD" ] && [ -z "$SKIP_FULLDUMP_DIFF" ]; then if [ -z "$FULLDUMP_DIFF_FILTER" ]; then if [ -s $WORK_FILE_BASE.fulldump.diff ]; then if [[ "$ACCEPTED_FULLDUMP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_FULLDUMP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_FULLDUMP_DIFF $ACCEPTED_FULLDUMP_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$DIS_CMD" ] && [ -z "$SKIP_DIS_DIFF" ]; then if [ -n "$DIS_DIFF_FILTER" ]; then if [ -z "$NEED_DIS_DIFF_FILTER" ] \ if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ -s $WORK_FILE_BASE.dis.diff ]; then if [[ "$ACCEPTED_DIS_DIFF" != *"$BIN_FILE"* ]]; then if [ "$MAX_KNOWN_DIS_DIFF_SIZE" = "" ]; then if [[ "$KNOWN_DIS_DIFF" = *"$BIN_FILE"* ]] \ if [[ "$KNOWN_DEP_DIFF $ACCEPTED_DEP_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$DIFF_BIN$DIFF_SIZE$DIFF_SYM$DIFF_DEP$DIFF_FULLDUMP$DIFF_DIS" ] || [ -n "$VERBOSE" ]; then if [ -n "$BIN_MSG" ]; then echo -n "$BIN_MSG:"; fi if [ -n "$SIZE_MSG" ]; then echo -n "$SIZE_MSG:"; fi if [ -n "$SYM_MSG" ]; then echo -n "$SYM_MSG:"; fi if [ -n "$DEP_MSG" ]; then echo -n "$DEP_MSG:"; fi if [ -n "$FULLDUMP_MSG" ]; then echo -n "$FULLDUMP_MSG:"; fi if [ -n "$DIS_MSG" ]; then echo -n "$DIS_MSG:"; fi if [ "$SHOW_DIFFS" = "true" ]; then if [ -s "$WORK_FILE_BASE.symbols.diff" ]; then if [ -s "$WORK_FILE_BASE.deps.diff" ]; then if [ -s "$WORK_FILE_BASE.fulldump.diff" ]; then if [ -s "$WORK_FILE_BASE.dis.diff" ]; then if [ -z "$SKIP_BIN_DIFF" ]; then echo -n " Binary :"; fi if [ -z "$SKIP_SIZE_DIFF" ]; then echo -n " Size :"; fi if [ -z "$SKIP_SYM_DIFF" ]; then echo -n " Symbols :"; fi if [ -z "$SKIP_DEP_DIFF" ]; then echo -n " Deps :"; fi if [ -z "$SKIP_FULLDUMP_DIFF" ]; then echo -n " Fulldump :"; fi if [ -z "$SKIP_DIS_DIFF" ]; then echo -n " Disass :"; fi if [ "$OPENJDK_TARGET_OS" = "macosx" ]; then if [ -n "$LIBS" ]; then if [ -f "$OTHER_DIR/$l" ]; then if [ "$?" != "0" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ -n "$EXECS" ]; then if [ -f "$OTHER_DIR/$e" ]; then if [ "$?" != "0" ]; then if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "-?" ] || [ "$1" = "/h" ] || [ "$1" = "/?" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]; then echo "-2dirs <dir1> <dir2> Compare two directories as if they were images" if [ "$OPENJDK_TARGET_OS" != "windows" ]; then if [ -z "$FILTER" ]; then if [ "$STRIP_ALL" = "true" ] && [ -z "$STRIP" ]; then if [ "$CLEAN_OUTPUT" = "true" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$(uname -o)" = "Cygwin" ]; then if [ "$CMP_2_ZIPS" = "true" ]; then if [ "$CMP_2_BINS" = "true" ]; then if [ "$CMP_NAMES" = "false" ] \ if [ -z "$FILTER" ]; then if [ "$SKIP_DEFAULT" != "true" ]; then if [ -z "$OTHER" ]; then if [ ! -d "$OTHER" ]; then if [ -d "$THIS/images/jdk" ] && [ -d "$OTHER/images/jdk" ]; then elif [ -d "$(ls -d $THIS/licensee-src/build/*/images/jdk 2> /dev/null)" ] \ if [ -d "$THIS/images/jdk-bundle" -o -d "$THIS/deploy/images/jdk-bundle" ] \ if [ -d "$THIS/deploy/images/jdk-bundle" ]; then if [ -d "$OTHER/deploy/images/jdk-bundle" ]; then if [ -f "$THIS_SEC_DIR/sec-bin.zip" ] && [ -f "$OTHER_SEC_DIR/sec-bin.zip" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$OPENJDK_TARGET_CPU" = "x86_64" ]; then if [ -d "$THIS/images/docs" ] && [ -d "$OTHER/images/docs" ]; then if [ -d "$THIS/images/test" ] && [ -d "$OTHER/images/test" ]; then if [ "$CMP_NAMES" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_JDK_BUNDLE" ] && [ -n "$OTHER_JDK_BUNDLE" ]; then if [ -n "$THIS_DOCS" ] && [ -n "$OTHER_DOCS" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_LIBS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ "$STRIP_TESTS_BEFORE_COMPARE" = "true" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_EXECS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ "$STRIP_TESTS_BEFORE_COMPARE" = "true" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_GENERAL" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_JDK_BUNDLE" ] && [ -n "$OTHER_JDK_BUNDLE" ]; then if [ -n "$THIS_DOCS" ] && [ -n "$OTHER_DOCS" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_ZIPS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ -n "$THIS_SEC_BIN" ] && [ -n "$OTHER_SEC_BIN" ]; then if [ -n "$(echo $THIS_SEC_BIN | $FILTER)" ]; then if [ -n "$THIS_SEC_WINDOWS_BIN" ] && [ -n "$OTHER_SEC_WINDOWS_BIN" ]; then if [ -n "$(echo $THIS_SEC_WINDOWS_BIN | $FILTER)" ]; then if [ -n "$THIS_JGSS_WINDOWS_BIN" ] && [ -n "$OTHER_JGSS_WINDOWS_BIN" ]; then if [ -n "$(echo $THIS_JGSS_WINDOWS_BIN | $FILTER)" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_JARS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_JMODS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_PERMS" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ "$CMP_TYPES" = "true" ]; then if [ -n "$THIS_JDK" ] && [ -n "$OTHER_JDK" ]; then if [ -n "$THIS_JDK_BUNDLE" ] && [ -n "$OTHER_JDK_BUNDLE" ]; then if [ -n "$THIS_TEST" ] && [ -n "$OTHER_TEST" ]; then if [ -n "$THIS_BASE_DIR" ] && [ -n "$OTHER_BASE_DIR" ]; then if [ -n "$REGRESSIONS" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/generate-symbol-data.sh
lines,77
function,0


for,0

if,3
if [ "$1x" = "x" ] ; then if [ ! -f symbols ] ; then if [ "`git status --porcelain=v1 .`x" != "x" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/scripts/fixpath.sh
lines,533
function,12
function setup() { function cleanup() { function import_path() { function import_command_line() { function convert_pathlist() { function convert_path() { function convert_file() { function convert_at_file() { function print_command_line() { function verify_current_dir() { function exec_command_line() { function verify_command_line() {
function setup() { function cleanup() { function import_path() { function import_command_line() { function convert_pathlist() { function convert_path() { function convert_file() { function convert_at_file() { function print_command_line() { function verify_current_dir() { function exec_command_line() { collected_args=() function verify_command_line() {
for,5
shortpath="$($CMD /q /c for %I in \( "$winpath" \) do echo %~sI 2>/dev/null | tr -d \\n\\r)" for arg in $1; do for arg in "${arg_array[@]}"; do for arg in "$@" ; do for arg in "$@" ; do
if,73
if [[ -z ${PATHTOOL+x} ]]; then if [[ $PATHTOOL == "" ]]; then if [[ $PATHTOOL == "" ]]; then if [[ $QUIET != true ]]; then if [[ -z ${DRIVEPREFIX+x} ]]; then if [[ $DRIVEPREFIX == "NONE" ]]; then if [[ -z ${ENVROOT+x} ]]; then elif [[ "$ENVROOT" == "[unavailable]" ]]; then if [[ -z ${CMD+x} ]]; then if [[ -z ${WINTEMP+x} ]]; then if [[ "$TEMPDIRS" != "" ]]; then if [[ $path =~ ^.:[/\\].*$ ]] || [[ "$path" =~ ^"$ENVROOT"\\.*$ ]] ; then if [[ $? -ne 0 ]]; then if [[ $QUIET != true ]]; then if [[ $IGNOREFAILURES != true ]]; then if [[ $dirpart == / ]]; then if [[ $basepart == / ]]; then if [[ "$path" != "" ]]; then if [[ ! -e "$unixpath" ]]; then if [[ $? -eq 0 && -e "$unixpath" ]]; then if [[ ! "$winpath" =~ ^"$ENVROOT"\\.*$ ]] ; then if [[ ! $winpath =~ ^[-_.:\\a-zA-Z0-9]*$ ]] ; then if [[ ! -e $path ]]; then if [[ -e $path.exe ]]; then if [[ $QUIET != true ]]; then if [[ "$path" =~ " " ]]; then if [[ $QUIET != true ]]; then if [[ $IGNOREFAILURES != true ]]; then if ! [[ $arg =~ ^" "+$ ]]; then if [[ "$result" != "" && "$imported" = "" ]]; then if [[ $arg =~ ^($DRIVEPREFIX/)([a-z])(/[^/]+.*$) ]] ; then if [[ $MIXEDMODE != true ]]; then elif [[ $arg =~ ^(/[-_.*a-zA-Z0-9]+(/[-_.*a-zA-Z0-9]+)+.*$) ]] ; then if [[ $ENVROOT == "" ]]; then if [[ $QUIET != true ]]; then if [[ $MIXEDMODE != true ]]; then if [[ "$converted_list" = "" ]]; then if [[ $1 =~ : ]]; then if [[ $? -eq 0 ]]; then if [[ $arg =~ ^([^/]*|-[^:=]*[:=]|.*file://|/[a-zA-Z:]{1,3}:?)($DRIVEPREFIX/)([a-z])(/[^/]+.*$) ]] ; then if [[ ${ if [[ -e "$possiblepath" || -e "$(dirname $possiblepath)" || -e "$(echo $possiblepath | cut -d / -f 1-5)" ]] ; then if [[ $MIXEDMODE != true ]]; then elif [[ $arg =~ ^([^/]*|-[^:=]*[:=]|(.*file://))(/([-_.+a-zA-Z0-9]+)(/[-_.+a-zA-Z0-9]+)+)(.*)?$ ]] ; then if [[ -d "/$firstdir" && ! -d "${prefix if [[ $ENVROOT == "" ]]; then if [[ $QUIET != true ]]; then if [[ $MIXEDMODE != true ]]; then if [[ $winpath != "" ]]; then if [[ -e $outfile ]] ; then if [[ -e $infile ]] ; then if [[ $arg =~ ^@(.*$) ]] ; then if [[ $arg =~ ^($DRIVEPREFIX/)([a-z])(/[^/]+.*$) ]] ; then elif [[ $arg =~ ^(/[^/]+.*$) ]] ; then if [[ $ENVROOT == "" || $ENVROOT =~ ^\\\\.* ]]; then if [[ $? -ne 0 ]]; then if [[ $QUIET != true ]]; then if [[ $command == "" ]]; then if [[ $arg =~ ^(.*)=(.*)$ ]]; then if [[ $arg =~ ^@(.*$) ]] ; then if [[ -v DEBUG_FIXPATH ]]; then if [[ ! -e "$command" ]]; then if [[ -e "$command.exe" ]]; then if [[ $ENVROOT != "" || ! -x /bin/grep ]]; then if [[ $arg =~ ^($DRIVEPREFIX/)([a-z])(/[^/]+.*$) ]] ; then elif [[ $arg =~ ^(/[^/]+/[^/]+.*$) ]] ; then if [[ $ENVROOT != "" ]]; then if [[ "$ACTION" == "import" ]] ; then elif [[ "$ACTION" == "print" ]] ; then elif [[ "$ACTION" == "convert" ]] ; then elif [[ "$ACTION" == "exec" ]] ; then elif [[ "$ACTION" == "verify" ]] ; then if [[ $QUIET != true ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/bootstrap/javac.sh
lines,42
function,0


for,0

if,1
if [ "`cat HelloWorld.tmp`" = "Hello World!" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/bootstrap/javadoc.sh
lines,43
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javadoc.gold.txt javadoc.tmp ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/lib/javac.sh
lines,44
function,0


for,0

if,1
if [ "`cat HelloWorld.tmp`" = "Hello World!" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/lib/javadoc.sh
lines,47
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javadoc.gold.txt javadoc.tmp ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/lib/javap.sh
lines,46
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javap.gold.txt javap.tmp ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/lib/src.sh
lines,50
function,0


for,0

if,1
if diff ${TESTSRC}/src.gold.txt expect.lst ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/lib/classes.sh
lines,50
function,0


for,0

if,1
if diff ${TESTSRC}/classes.gold.txt expect.lst ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/langtools/test/contents.sh
lines,42
function,0


for,0

if,1
if diff ${TESTSRC}/contents.gold.txt contents.tmp ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createGraphvizBundle.sh
lines,63
function,0


for,1
for rpm in ../*.rpm; do
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createLibffiBundle.sh
lines,170
function,0


for,0

if,8
if [ "$1" = "" ]; then if [ ! -f $SOURCE_TAR ]; then if [ ! -d $LIBFFI_DIRNAME ]; then if [ ! -e $LIBFFI_DIR/configure ]; then if [ ! -e $IMAGE_DIR/lib/libffi.so ]; then if [ ! -e $IMAGE_DIR/include/ ]; then if [ ! -e $IMAGE_DIR/$SCRIPT_FILE ]; then if [ ! -e $OUTPUT_DIR/$BUNDLE_NAME ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createWindowsDevkit.sh
lines,269
function,2

usage_and_exit() { echo-info() {
for,1
for f in $POTENTIAL_INI_FILES; do
if,9
if [ ! $ if test "x$IS_CYGWIN" != "x"; then elif test "x$IS_WSL" != "x"; then if test "x$BUILD_ENV" = "xcygwin"; then elif test "x$BUILD_ENV" = "xwsl"; then if [ -d "$VSNNNCOMNTOOLS" ]; then if [ -f "$VS_INSTALL_DIR/$f" ]; then if [ -z "$VS_VERSION_SP" ]; then if [ -d "$SDK_INSTALL_DIR/Debuggers" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createAutoconfBundle.sh
lines,116
function,0


for,0

if,4
if test "x$TARGET_PLATFORM" = xcygwin_x64; then elif test "x$TARGET_PLATFORM" = xcygwin_x86; then elif test "x$TARGET_PLATFORM" = xlinux_x64; then elif test "x$TARGET_PLATFORM" = xlinux_x86; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createJMHBundle.sh
lines,62
function,1

fetchJar() {
for,0

if,2
if command -v curl > /dev/null; then elif command -v wget > /dev/null; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createMacosxDevkit.sh
lines,140
function,1

echo-info() {
for,1
for ex in $EXCLUDE_DIRS; do
if,2
if [ "$1" = "" ]; then if [ -z "$GZIP" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/make/devkit/createPandocBundle.sh
lines,79
function,0


for,0

if,6
if [ $ if [[ $TARGET_PLATFORM == linux_x64 ]] ; then elif [[ $TARGET_PLATFORM == linux_aarch64 ]] ; then elif [[ $TARGET_PLATFORM == macosx_x64 ]] ; then elif [[ $TARGET_PLATFORM == windows_x64 ]] ; then if [[ $PANDOC_SUFFIX == zip ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/.github/scripts/gen-test-results.sh
lines,92
function,0


for,2
for test in $failures $errors; do for hs_err in $hs_err_files; do
if,4
if [[ "$failures" = "" && "$errors" = "" ]]; then if [[ -f "$report_file" ]]; then if [[ "$hs_err_files" != "" ]]; then if [[ $summary_size -gt 1000000 ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/.github/scripts/gen-test-summary.sh
lines,70
function,0


for,4
echo 'error-message=Unspecified test suite failure. Please see log for job for details.' >> $GITHUB_OUTPUT echo "error-message=Test run reported $failure_count test failure(s) and $error_count error(s). See summary for details." >> $GITHUB_OUTPUT for test in $failures; do for test in $errors; do
if,4
if [[ ! -f build/run-test-prebuilt/make-support/exit-with-error ]]; then if [[ "$failures" = "" && "$errors" = "" ]]; then if [[ "$failures" != "" ]]; then if [[ "$errors" != "" ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/.github/scripts/gen-build-failure-report.sh
lines,51
function,0


for,0

if,1
if [[ -f "$BUILD_DIR/make-support/failure-summary.log" ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/jdk/incubator/vector/gen-tests.sh
lines,251
function,0


for,3
for type in byte short int long float double for bits in 64 128 256 512 Max for bits in 64 128 256 512 Max
if,11
if [ -d "$PERF_DEST" ]; then if [[ "${vectortype}" == "ByteMaxVector" ]]; then if [ $bits == 'Max' ]; then if [ VAR_OS_ENV==windows.cygwin ]; then if [ $generate_perf_tests == true ]; then if [ VAR_OS_ENV==windows.cygwin ]; then if [ $generate_perf_tests == true ]; then if [ VAR_OS_ENV==windows.cygwin ]; then if [[ "${vectortype}" == "ByteMaxVector" ]]; then if [ $bits == 'Max' ]; then if [ VAR_OS_ENV==windows.cygwin ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/jdk/incubator/vector/config.sh
lines,68
function,2
function Log () { function LogRun () {
function Log () { function LogRun () {
for,0

if,4
if [ $1 == true ]; then if [ $1 == true ]; then if [ "x${VAR_OS_ENV}" == "xwindows.cygwin" ]; then if [ "$uname_s" == "Linux" ] || [ "$uname_s" == "Darwin" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/jdk/incubator/vector/gen-template.sh
lines,590
function,27
function replace_variables { function gen_op_tmpl { function gen_binary_alu_op { function gen_binary_alu_bcst_op { function gen_binary_alu_bcst_long_op { function gen_shift_op { function gen_shift_cst_op { function gen_unary_alu_op { function gen_ternary_alu_op { function gen_ternary_alu_bcst_op { function gen_ternary_alu_double_bcst_op { function gen_binary_op { function gen_binary_op_no_masked { function gen_binary_bcst_op_no_masked { function gen_compare_op { function gen_compare_bcst_op { function gen_reduction_op { function gen_reduction_op_func { function gen_bool_reduction_op { function gen_with_op { function gen_get_op { function gen_unit_header { function gen_unit_footer { function gen_perf_header { function gen_perf_footer { function gen_perf_scalar_header { function gen_perf_scalar_footer {

for,0

if,27
if [ "x${kernel}" != "x" ]; then if [ "${tests[2]}" == "withMask" ]; then elif [ "${tests[1]}" == "withMask" ]; then elif [ "${tests[1]}" != "" ]; then if [ "$guard" != "" ]; then if [ "$test" != "" ]; then if [[ "$filename" == *"Unit"* ]] && [ "$test_func" != "" ]; then if [ "$masked" == "" ] || [ "$withMask" != "" ]; then if [ ! -z "$kernel_smoke" ]; then if [ "$guard" != "" ]; then if [ $ if [ $ if [[ $template == *"Masked"* ]]; then if [[ $template == *"Shift"* ]]; then elif [[ $template == *"Get"* ]]; then if [ ! -f $unit_filename ]; then if [ -f $kernel_filename ]; then if [ -f $kernel_smoke_filename ]; then if [[ $template == *"-Broadcast-"* ]] || [[ $template == "Miscellaneous" ]] || if [ $gen_perf_tests == true ]; then if [ -f $perf_vector_filename ]; then elif [ -f $kernel_filename ]; then elif [[ $template != *"-Scalar-"* ]] && [[ $template != "Get-op" ]] && [[ $template != "With-Op" ]]; then if [ -f $perf_scalar_filename ]; then elif [[ $template != *"-Scalar-"* ]] && [[ $template != "Get-op" ]] && [[ $template != "With-Op" ]]; then if [ $generate_perf_tests == true ]; then if [ $generate_perf_tests == true ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/jdk/incubator/vector/clean.sh
lines,25
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/net/httpclient/ssltest/gen-certs.sh
lines,53
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/invoke/VarHandles/generate-vh-tests.sh
lines,175
function,0


for,2
for type in boolean byte short char int long float double String for type in short char int long float double
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineSetUp.sh
lines,70
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/ManifestTest.sh
lines,503
function,16

make_a_JAR() { expect_redef_line="isRedefineClassesSupported()=false" expect_retrans_line="isRetransformClassesSupported()=false" expect_set_nmp_line="isNativeMethodPrefixSupported()=false" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true"
for,0

if,16
if [ -n "$boot_cp_line" ]; then if [ -n "$can_redef_line" ]; then if [ -n "$can_retrans_line" ]; then if [ -n "$can_set_nmp_line" ]; then if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ -n "$to_be_deleted" ]; then if [ -f $FAIL_MARKER ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineBigClass.sh
lines,99
function,0


for,0

if,7
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$?" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineClassWithNativeMethod.sh
lines,87
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineMethodInBacktrace.sh
lines,94
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $RUN_RESULT != 0 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineMethodDelInvoke.sh
lines,99
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/AppendToClassPathSetUp.sh
lines,66
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/BootClassPath/BootClassPathTest.sh
lines,95
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/MakeJAR.sh
lines,58
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/MakeJAR2.sh
lines,104
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineMethodWithAnnotations.sh
lines,86
function,0


for,0

if,5
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/appendToClassLoaderSearch/ClassUnloadTest.sh
lines,84
function,2

public static boolean doSomething() { Bar b = new Bar();
for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/appendToClassLoaderSearch/CommonSetup.sh
lines,94
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/appendToClassLoaderSearch/run_tests.sh
lines,102
function,1

go() {
for,2
echo "Creating jar files for simple tests..." echo "Setup for functional tests..."
if,5
if [ "${TESTSRC}" = "" ] if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/appendToClassLoaderSearch/CircularityErrorTest.sh
lines,80
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ "${COMPILEJAVA}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/MakeJAR4.sh
lines,46
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/AppendToBootstrapClassPathSetUp.sh
lines,63
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/BootstrapClassPathSetUp.sh
lines,68
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/MakeJAR3.sh
lines,69
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/StressGetObjectSizeTest.sh
lines,70
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineSubclassWithTwoInterfaces.sh
lines,158
function,0


for,0

if,10
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$status" != 0 ]; then if [ "$status" != 0 ]; then if [ "$status" = 0 ]; then if [ $cnt = 2 ]; then if [ $cnt = 2 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RedefineMethodAddInvoke.sh
lines,89
function,0


for,0

if,5
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/modules/AppendToClassPathModuleTest.sh
lines,67
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/instrument/RetransformBigClass.sh
lines,99
function,0


for,0

if,7
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$?" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/lang/String/concat/update-tests.sh
lines,26
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/util/zip/3GBZipFiles.sh
lines,138
function,5

die () { echo "$1" >&2; exit 1; } sys () { "$@" || die "Command $@ failed: rc=$?"; } cleanup () { cd "$currentDir" && rm -rf "$tmpDir"; } buildFile () testJarFile ()
for,2
for file in $filelist; do for file in $filelist; do
if,2
if test -z "${TESTJAVA-}"; then if test "$2" = "STORED"; then jarOpt="0"; else jarOpt=""; fi
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/util/Currency/PropertiesTest.sh
lines,144
function,1

run() {
for,0

if,12
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ ! -f dump1 ]; then echo "file dump1 not created. Test cannot execute. Failed."; exit 1; fi if [ ! -f dump2 ]; then echo "file dump2 not created. Test cannot execute. Failed."; exit 1; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ ! -f dump3 ]; then echo "file dump3 not created. Test cannot execute. Failed."; exit 1; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/util/Locale/data/deflocale.sh
lines,51
function,0


for,0

if,1
if [ "$lcctype" = "
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/util/Formatter/genBasic.sh
lines,60
function,1

gen() {
for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/nio/Buffer/genOrder.sh
lines,40
function,1

gen() {
for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/nio/Buffer/genCopyDirectMemory.sh
lines,42
function,1

gen() {
for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/nio/Buffer/genBasic.sh
lines,40
function,1

gen() {
for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/cert/CertPathValidator/nameConstraints/generate.sh
lines,110
function,0


for,0

if,10
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/cert/CertPathValidator/indirectCRL/generate.sh
lines,219
function,0


for,0

if,20
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f root/top_crlissuer_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f dumca/dumca_cert.pem ]; then if [ ! -d sumca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob_cert.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then if [ ! -f root/top_crl.pem ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/subca_crl.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/cert/CertificateFactory/slowstream.sh
lines,54
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/cert/CertPathBuilder/selfIssued/generate.sh
lines,219
function,0


for,0

if,20
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f root/top_crlissuer_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f dumca/dumca_cert.pem ]; then if [ ! -d sumca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob_cert.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then if [ ! -f root/top_crl.pem ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/subca_crl.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/Security/ClassLoaderDeadlock/Deadlock.sh
lines,66
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/security/Security/ClassLoaderDeadlock/ClassLoaderDeadlock.sh
lines,106
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ ! -d provider ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/FontClass/CreateFont/DeleteFont.sh
lines,67
function,0


for,0

if,5
if [ -z "${TESTSRC}" ]; then if [ -z "${TESTCLASSES}" ]; then if [ -z "${TESTJAVA}" ]; then if [ $? -ne 0 ] if [ $numfiles0 -ne $numfiles1 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/FontClass/CreateFont/fileaccess/TestFontFile.sh
lines,80
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/GraphicsEnvironment/TestDetectHeadless/TestDetectHeadless.sh
lines,57
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/font/JNICheck/LoadFontsJNICheck.sh
lines,57
function,0


for,0

if,3
if [ -z "${TESTCLASSES}" ]; then if [ -z "${TESTJAVA}" ] ; then if [ -s "${CP}"/log.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/font/JNICheck/JNICheck.sh
lines,61
function,0


for,0

if,4
if [ -z "${TESTCLASSES}" ]; then if [ $OS != Linux ] if [ -z "${TESTJAVA}" ] ; then if [ -s "${CP}"/log.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/image/GetImageJNICheck/GetImageJNICheck.sh
lines,64
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ -z "${TESTCLASSES}" ]; then if [ -s "${CP}"/log.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/JAWT/JAWT.sh
lines,149
function,0


for,1
echo "Test passed. This test is not for MacOS."
if,7
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ $? -eq '0' ] if [ "$?" -eq '0' ] if [ "$?" -eq '0' ] if [ "$?" -ne '0' ] if [ "$?" -ne '0' ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/Toolkit/DesktopProperties/rfe4758438.sh
lines,94
function,0


for,0

if,4
if [ -z "${TESTJAVA}" ]; then if [ -z "$XDG_GNOME" ] \ if [ $SCHEMAS -eq 0 ]; if [ $? -ne 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/Toolkit/Headless/WrappedToolkitTest/WrappedToolkitTest.sh
lines,221
function,2

fail() pass()
for,0

if,12
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -z "${STANDALONE}" ] ; if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/Toolkit/AutoShutdown/ShowExitTest/ShowExitTest.sh
lines,187
function,2

fail() pass()
for,5
VAR="A different value for Linux" VAR="A different value for MacOSX" VAR="A different value for Win32" VAR="A different value for Cygwin" VAR="A different value for AIX"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ; if [ $status -eq "0" ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/Toolkit/AutoShutdown/EventQueuePush/EventQueuePushAutoshutdown.sh
lines,158
function,2

fail() pass()
for,0

if,5
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ;
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/Toolkit/BadDisplayTest/BadDisplayTest.sh
lines,35
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/java/awt/PrintJob/Text/stringwidth.sh
lines,64
function,1

checkstatus()
for,0

if,4
if [ $status -ne "0" ]; then if [ -z "${TESTCLASSES}" ]; then if [ $OS = Linux ] if [ -z "${TESTJAVA}" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/script/ProviderTest.sh
lines,60
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ $ret -ne 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/script/JDK_8196959/BadFactoryTest.sh
lines,60
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ $ret -ne 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/script/CommonSetup.sh
lines,86
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/script/ScriptEngineOrder.sh
lines,52
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ $ret -ne 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/swing/LookAndFeel/8145547/DemandGTK3.sh
lines,83
function,0


for,1
echo "java execution failed for unknown reason, see logs"
if,4
if [ $? -ne 0 ] if [ "${HAVE_3}" = "0" ] if [ ${EXECRES} -ne 0 ] if [ -s logg ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/swing/LookAndFeel/8145547/DemandGTK2.sh
lines,91
function,0


for,1
echo "java execution failed for unknown reason, see logs"
if,5
if [ $? -ne 0 ] if [ "${HAVE_2}" = "0" ] if [ "${HAVE_3}" = "0" ] if [ ${EXECRES} -ne 0 ] if [ -s logg ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/accessibility/AccessibilityProvider/basic.sh
lines,122
function,1

go() {
for,0

if,4
if [ -z "$TESTJAVA" ]; then if [ $ if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/print/PrintSE/PrintSE.sh
lines,57
function,1

createJavaPolicyFile()
for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/stream/StreamCloserLeak/run_test.sh
lines,224
function,2

fail() pass()
for,5
VAR="A different value for Linux" VAR="A different value for AIX" VAR="A different value for MacOSX" VAR="A different value for Win32" VAR="A different value for Cygwin"
if,11
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -f TestApp.jar ] ; then if [ $? -ne "0" ] ; then if [ -f Test.jar ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ "x${cache_files}" != "x" ] ; then if [ $status -eq "0" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/stream/DeleteOnExitTest.sh
lines,69
function,0


for,0

if,5
if [ -z "${TESTSRC}" ]; then if [ -z "${TESTCLASSES}" ]; then if [ -z "${TESTJAVA}" ]; then if [ $? -ne 0 ] if [ $numfiles0 -ne $numfiles1 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/plugins/external_plugin_tests/TestClassPathPlugin.sh
lines,107
function,0


for,0

if,8
if [ -z "$TESTJAVA" ]; then if [ $ if [ $ if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $exception -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/metadata/IIOMetadataFormat/runMetadataFormatTest.sh
lines,222
function,2

fail() pass()
for,3
VAR="A different value for Linux" VAR="A different value for Win32" VAR="A different value for CYGWIN"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -d ./test_classes ] ; then if [ $status -eq "0" ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/metadata/IIOMetadataFormat/runMetadataFormatThreadTest.sh
lines,223
function,2

fail() pass()
for,3
VAR="A different value for Linux" VAR="A different value for Win32" VAR="A different value for CYGWIN"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -d ./test_classes ] ; then if [ $status -eq "0" ];
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/javax/imageio/spi/AppletContextTest/BadPluginConfigurationTest.sh
lines,296
function,3

fail() pass() clean()
for,0

if,13
if [ -n "${PLUGINDST_DIR}" -a -d "${PLUGINDST_DIR}" ] ; then if ! [ $? -ne 0 ] ; then if ! [ -e ${MKTEMP} ] ; then if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ; if [ -d META-INF ] ; then if [ ! -d META_INF ] ; then if [ -f ${PLUGINDST_DIR}/${TEST_PLUGIN} ] ; then if [ -f ${PLUGINDST_DIR}/${TEST_PLUGIN} ] ; then if [ $status -eq "0" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/start-Xvfb.sh
lines,82
function,1

usage() {
for,0

if,2
if [ ! -x "/usr/bin/X11/Xvfb" ]; then if [ -x "${WM}" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/tools/jpackage/run_tests.sh
lines,345
function,13

find_packaging_tests () find_all_packaging_tests () help_usage () error () fatal () fatal_with_help_usage () to_native_path () to_native_path () exec_command () set_mode () installJtreg () preRun () run ()
for,7
echo " -o <outputdir> - path to folder where to copy artifacts for testing." echo ' -r <runtimedir> - value for `jpackage.test.runtime-image` property.' echo " Optional, for jtreg tests debug purposes only." echo ' -l <logfile> - value for `jpackage.test.logfile` property.' echo " Optional, for jtreg tests debug purposes only." exec_command for t in ${tests[@]}";" do echo '$t;' done for f in $(find $output_dir -maxdepth 1 -type f -name '*.exe' -or -name '*.msi' -or -name '*.rpm' -or -name '*.deb'); do
if,22
if command -v cygpath &> /dev/null; then if [ -n "$dry_run" ]; then if [ -z "$open_jdk_with_jpackage_jtreg_tests" ]; then if [ "$mode" = "print-default-tests" ]; then if [ -z "$test_jdk" ]; then if [ -z "$JAVA_HOME" ]; then if [ ! -e "$JAVA_HOME/bin/java" ]; then if [ "$mode" = "create-small-runtime" ]; then if [ -z "$JT_HOME" ]; then if [ -z "$JT_BUNDLE_URL" ]; then if [ -n "$runtime_dir" ]; then if [ ! -d "$runtime_dir" ]; then if [ -n "$logfile" ]; then if [ ! -d "$(dirname "$logfile")" ]; then if [ -z "$run_all_tests" ]; then if [ -n "$APPDATA" ]; then if [ -z "$JT_HOME" ]; then if [ ! -f "$jtreg_jar" ]; then if [[ ${jtreg_bundle: -7} == ".tar.gz" ]]; then if [[ ${jtreg_bundle: -4} == ".zip" ]]; then if [ ! -d "$output_dir" ]; then if [ "$mode" == "create" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/tools/launcher/MultipleJRE.sh
lines,434
function,11

IsWindows() { TestSyntax() { CreateMockVM() { CreateJar() { CreateZippyJar() { CreateUglyJar() { CreateFullJar() { CreateAlignedJar() { CommentZipFile() { LaunchVM() { TestLongMainClass() {
for,7
echo "Unexpected error message for invalid syntax $1" for i in 0 1 2 3 4 5 6 7 8 9 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do for i in 0 1 2 3 4 5 6 7 8 9 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do for i in 0 1 2 3 4 5 6 7 8 9 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do
if,23
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? -eq 0 ]; then if [ "$prefix" != "Error: Syntax error" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ "$prefix" != "Unable to locate" ]; then if [ $? != 0 ]; then if [ "$JVER" = "mklink" ]; then if [ $? -ne 0 ]; then if [ `IsWindows` = "true" ]; then if [ ${PATH_LENGTH} -lt ${MAXIMUM_PATH} ]; then if [ -x /usr/bin/zip ]; then if [ -x /usr/bin/zipnote ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/tools/launcher/ClassPathWildCard.sh
lines,166
function,7

EmitJavaFile() { printf " ps.flush(); ps.close();\n" printf " System.out.println(e.getMessage());\n" CreateClassFiles() { CreateJarFiles() { CheckFail() { ExecJava() {
for,0

if,5
if [ "${TESTJAVA}" = "" ]; then if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]; then if [ "${TESTCLASSES}" = "" ]; then if [ ! -f ${1}${OUTEXT} ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/com/sun/jdi/JdbReadTwiceTest.sh
lines,246
function,4

mkFiles() doit() failIfNot() clean()
for,0

if,9
if [ ! -z "$TESTJAVA" ] ; then if [ -z "$TESTCLASSES" ] ; then if [ -r c:/ ] ; then if [ $xx != $count ] ; then echo "Verify files are not read twice if cwd is ~" if [ ! -r c:/ ] ; then if [ ! -r c:/ ] ; then if [ "$canMakeUnreadable" = "Yes" ] if [ "$failed" = 1 ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/java2d/X11SurfaceData/SharedMemoryPixmapsTest/SharedMemoryPixmapsTest.sh
lines,51
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/validator/samedn.sh
lines,85
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/validator/certreplace.sh
lines,88
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/pkcs11/Provider/MultipleLogins.sh
lines,140
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTCLASSPATH}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/krb5/runNameEquals.sh
lines,127
function,0


for,0

if,12
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ $? != 0 ]; then if [ $? != 0 ]; then if [ "${NATIVE}" = "true" ] ; then if [ $? != 0 ] ; then if [ "$OS" = "Linux" -a `arch` = "x86_64" ]; then if [ "$?" = "0" ]; then echo "Please manually check if this is the case. Treated as PASSED now." if [ $? != 0 ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/util/Pem/encoding.sh
lines,35
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/ssl/SSLSocketImpl/NotifyHandshakeTest.sh
lines,99
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/provider/PolicyFile/getinstance/getinstance.sh
lines,136
function,0


for,0

if,10
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ ! -d ${TESTCLASSES}${FS}boot ]; then if [ ! -d ${TESTCLASSES}${FS}app ]; then if [ $status1 -ne 0 ]; then if [ $status2 -ne 0 ]; then if [ $status1 -ne 0 ]; then if [ $status2 -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/provider/PolicyFile/GrantAllPermToExtWhenNoPolicy.sh
lines,98
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/provider/PolicyParser/PrincipalExpansionError.sh
lines,25
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/security/provider/certpath/DisabledAlgorithms/generate.sh
lines,253
function,0


for,0

if,12
if [ ! -f root/finished ]; then if [ ! -d root ]; then if [ ! -f subca/finished ]; then if [ ! -d subca ]; then if [ ! -f subca/alice/finished ]; then if [ ! -d subca/alice ]; then if [ ! -f root/revoked ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/revoked ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcNewCapacityOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcCapacityOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatHelp.sh
lines,75
function,0


for,0

if,4
if [ $? != 0 ] if [ $? != 0 ] if [ $? != 0 ] if [ $? != 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatLineCounts3.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatOptions1.sh
lines,40
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatPrintCompilationOutput1.sh
lines,38
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatTimeStamp1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcOldCapacityOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatLineCounts1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatLineCounts2.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatSnap2.sh
lines,36
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatClassloadOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatLineCounts4.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatCompilerOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcOldOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatSnap1.sh
lines,36
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcNewOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcMetaCapacityOutput1.sh
lines,37
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatFileURITest1.sh
lines,53
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatGcCauseOutput1.sh
lines,41
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jstat/jstatClassOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/common.sh
lines,66
function,1

setup() {
for,0

if,3
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-fTest.sh
lines,58
function,0


for,0

if,2
if [ $? -eq 2 ]; then if [ $? != 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscriptTest.sh
lines,62
function,2

v *= 5; v.doubleValue(); new java.lang.Runnable() { run: function() { println('I am runnable'); }}.run();
for,0

if,3
if [ $? -eq 2 ]; then if (v != 0) { println('yes v != 0'); } if [ $? != 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-DTest.sh
lines,55
function,0


for,0

if,3
if [ $? -eq 2 ]; then if (sysProps["jrunscript.foo"] == "bar") { println("Passed"); exit(0); } if [ $? -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-cpTest.sh
lines,73
function,2

try { v = new Packages.Hello(); } catch (e) { println(e); exit(1) } try { v = new Packages.Hello(); } catch (e) { println(e); exit(1) }
for,0

if,5
if [ $? -eq 2 ]; then if (v.string != 'hello') { println("Unexpected property value"); exit(1); } if [ $? -ne 0 ]; then if (v.string != 'hello') { println("unexpected property value"); exit(1); } if [ $? -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-eTest.sh
lines,57
function,0


for,0

if,2
if [ $? -eq 2 ]; then if [ $? != 0 ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-argsTest.sh
lines,60
function,0


for,0

if,6
if [ $? -eq 2 ]; then if (typeof(arguments) == 'undefined') { println("arguments expected"); exit(1); } if (arguments.length != 2) { println("2 arguments are expected here"); exit(1); } if (arguments[0] != 'hello') { println("First arg should be 'hello'"); exit(1); } if (arguments[1] != 'world') { println("Second arg should be 'world'"); exit(1); } if [ $? -ne 0 ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/tools/jrunscript/jrunscript-helpTest.sh
lines,58
function,0


for,0

if,2
if [ ! -s jrunscript-helpTest.out ] if [ ! -s jrunscript-helpTest.out ]
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jdk/sun/jvmstat/testlibrary/utils.sh
lines,230
function,9

setup() { verify_os() { kill_proc() { echo "kill_proc(): null pid: ignored" echo "kill_proc(): invalid pid: ${kill_pid}: ignored" mks_children() { kill_proc_common() { checkPort() freePort()
for,1
for child in ${children} ; do
if,13
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then if [ "${TMPDRIVE}" = "" ] ; then if [ "${kill_pid}" = "" ] if [ ${kill_pid} -le 0 ] if [ $? -ne 0 ] if [ $? -eq 0 ] if [ $? -eq 0 ] if [ $? -ne 0 ] if [ "${inuse}" = "" ] ; then if [ "`checkPort ${port1}`" = "inuse" \ if [ "`checkPort ${port1}`" = "inuse" \
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/hotspot/jtreg/runtime/cds/appcds/methodHandles/CDSMHTest_generate.sh
lines,139
function,7

public void test() throws Exception { testImpl(); static void testImpl() throws Exception { Platform.isDebugBuild() ? "-XX:-VerifyDependencies" : "-showversion"; String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString(); CDSOptions opts = (new CDSOptions()) CDSOptions runOpts = (new CDSOptions())
for,2
for i in "${testnames[@]}" find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py version 2 for more details (a copy is included in the LICENSE file that
if,2
find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py 2 along with this work; if not, write to the Free Software Foundation, find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py or visit www.oracle.com if you need additional information or have any
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/methodHandles/CDSMHTest_generate.sh
lines,128
function,5

public void test() throws Exception { static void testImpl() throws Exception { String topArchiveName = getNewArchiveName(); Platform.isDebugBuild() ? "-XX:-VerifyDependencies" : "-showversion"; String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();
for,2
for i in "${testnames[@]}" find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py version 2 for more details (a copy is included in the LICENSE file that
if,2
find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py 2 along with this work; if not, write to the Free Software Foundation, find_bash.sh jdk output.txt outputbashcleaned.txt process_bash.py or visit www.oracle.com if you need additional information or have any
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/hotspot/jtreg/runtime/CommandLine/OptionsValidation/TestOptionsWithRanges_generate.sh
lines,43
function,0


for,1
for i in {1..10}; do
if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/hotspot/jtreg/compiler/unsafe/generate-unsafe-access-tests.sh
lines,142
function,1
function generate {

for,1
for type in boolean byte short char int long float double Object
if,2
if [ "$Type" == "Object" -a "$package" == "jdk.internal.misc" ]; then if [ "$package" == "jdk.internal.misc" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/langtools/tools/doclint/tidy/util/tidy.sh
lines,53
function,0


for,0

if,0

git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/make/autoconf/test-configure.sh
lines,78
function,0


for,0

if,2
if test ! -s $generated_script; then if test $conf_result_code -ne 0; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/micro/org/openjdk/bench/java/nio/genBuffers.sh
lines,84
function,2

genBin() { gen() {
for,3
for MS in "Heap" "Direct" for SWAP in "Swap" "" for RO in "RO" ""
if,2
if [ "$RO" == "RO" ] ; then if [ "$1" == "byte" ] ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/test/jaxp/javax/xml/jaxp/isolatedjdk/IsolatedJDK.sh
lines,69
function,2

checkVariable() { checkVariables() {
for,1
for variable in $*
if,5
if [ "${variable}" = "" ]; then if [ $ if [ $ if [ "$2" = "remove" ]; then if [ "$removeIsolatedJdk" = "1" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/bin/unshuffle_patch.sh
lines,237
function,3

usage() { verbose() { unshuffle() {
for,8
echo " -to9 create patches appropriate for a JDK 9 source tree" echo " -to10 create patches appropriate for a JDK 10 source tree" echo " -r <repo> specify repo for source patch, set to 'top' for top repo" for r in $repos ; do echo "ERROR: Must specify src repo for JDK 9 patch" for r in $repos; do for r in $repos; do echo "WARNING: no match found for $path"
if,26
if [ ! -f "$UNSHUFFLE_LIST" ] ; then if [ ! $ if [ -n "$repo" ]; then if [ $repo = "$r" ] ; then if [ $found = "false" ] ; then if [ "$shuffle_to" != "9" -a "$shuffle_to" != "10" ]; then if [ "$shuffle_to" = "10" -a -z "$repo" ]; then if [ "x$input" = "x-" ] ; then if [ ! -f $input -a "x$input" != "x/dev/stdin" ] ; then if [ "x$output" = "x-" ] ; then if [ "$shuffle_to" = "10" ]; then if [ -f $output -a "x$output" != "x/dev/stdout" ] ; then if [ -f "$output.$r" ]; then if [ ${vflag} = "true" ] ; then if echo "$line" | egrep '^diff' > /dev/null ; then if ! echo "$line" | egrep '\-\-git' > /dev/null ; then elif echo "$line" | egrep '^\-\-\-' > /dev/null ; then elif echo "$line" | egrep '^\+\+\+' > /dev/null ; then if [ -n "$repo" -a "$repo" != "top" ]; then if [ "$shuffle_to" = "10" ] ; then if ! [ "x${matches}" = "x" ] ; then if ! echo "$matchpath" | egrep '.*/.*' > /dev/null ; then if ! [ "x${matches}" = "x" ] ; then if [ "$unshuffled" != "${unshuffled if [ "$shuffle_to" = "10" ] ; then if echo "$line" | egrep '^diff|^\-\-\-|^\+\+\+' > /dev/null ; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/bin/idea.sh
lines,267
function,4

usage() { replace_template_file() { replace_template_dir() { add_replacement() {
for,4
for file in `ls -p "$TEMPLATES_OVERRIDE" | grep -v /`; do for i in $(seq 1 $NUM_REPLACEMENTS); do for f in `find $1 -type f` ; do for root in $MODULE_ROOTS; do
if,26
if [ -e $IDEA_OUTPUT ] ; then if [ "x$TOPLEVEL_DIR" = "x" ] ; then if [ -d "$TEMPLATES_OVERRIDE" ] ; then if [ "$VERBOSE" = "true" ] ; then if [ "x$MODULE_ROOTS" = "x" ] ; then if [ "x$MODULE_NAMES" = "x" ] ; then if [ "x$BOOT_JDK" = "x" ] ; then if [ "x$SPEC" = "x" ] ; then if [ -d "$TOPLEVEL_DIR/.hg" ] ; then if [ -d "$TOPLEVEL_DIR/.git" ] ; then if [ "x$CYGPATH" != "x" ]; then if [ "x$JT_HOME" = "x" ]; then elif [ "x$WSL_DISTRO_NAME" != "x" ]; then if [ "x$JT_HOME" = "x" ]; then if [ "x$CYGPATH" != "x" ]; then elif [ "x$WSL_DISTRO_NAME" != "x" ]; then if [ "x$ANT_HOME" = "x" ] ; then if [ -f "/usr/share/ant/lib/ant.jar" ] ; then if [ "x$try_ant" != "x" ] ; then if [ "x$try_ant" != "x" ] ; then if [ ! -f "$ANT_HOME/lib/ant.jar" ] ; then if [ "x$ANT_HOME" = "x" ] ; then if [ -e "$BOOT_JDK/bin/java.exe" ] ; then if [ "x$WSL_DISTRO_NAME" != "x" ]; then elif [ "x$CYGPATH" != "x" ] ; then if [ "x$WSL_DISTRO_NAME" != "x" ]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/bin/blessed-modifier-order.sh
lines,60
function,1

usage() {
for,2
for dir in "${dirs[@]}"; do [[ -d "$dir" ]] || usage; done for ((i = 3; i < "${
if,2
echo "and even if the list of modifiers spans 2 lines." if [[ -n "$x" && -n "$y" ]]; then
git@github.com:openjdk/jdk.git,8f5f44070a7c6dbbbd1005f9d0af5ab7c35179df,jdk,16989,./jdk/bin/jib.sh
lines,197
function,3

setup_url() { install_jib() { shell_quote() { conf_quoted_arguments=()
for,2
for mirror in ${jib_server_mirrors}; do for conf_option; do
if,25
if [ -f ~/.config/jib/jib.conf ]; then if [ -f "${closed_script}" ]; then if [ -n "${JIB_SERVER}" ]; then if [ -n "${JIB_SERVER_MIRRORS}" ]; then if [ -n "${JIB_REPOSITORY}" ]; then if [ -n "${JIB_ORGANIZATION}" ]; then if [ -n "${JIB_MODULE}" ]; then if [ -n "${JIB_REVISION}" ]; then if [ -n "${JIB_EXTENSION}" ]; then if [ -n "${JIB_URL}" ]; then if [ -z "${jib_server}" -a -z "${JIB_URL}" ]; then if command -v curl > /dev/null; then elif command -v wget > /dev/null; then if ! command -v gunzip > /dev/null; then if [ ! -s "${installed_jib_script}.gz" ]; then if [ -n "${jib_path}" -a -n "${jib_server_mirrors}" ]; then if [ -s "${installed_jib_script}.gz" ]; then if [ ! -s "${installed_jib_script}.gz" ]; then if [ $? -ne 0 ]; then if [[ -n "$1" ]]; then if echo "$1" | grep '^[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\.:,%/+=_-]\{1,\}$' > /dev/null \ if echo "$1" | grep "[\'!]" > /dev/null; then if [ ! -x "${installed_jib_script}" ]; then elif [ ! -e "${install_data}" ] || [ "${data_string}" != "$(cat "${install_data}")" ]; then if [ -z "${JIB_SRC_DIR}" ]; then
git@github.com:Tencent/tinker.git,836ca8bba1053307a3152ccb5bf60bff7ce170f9,tinker,16883,./tinker/tinker-build/tinker-patch-cli/tool_maple/build_patch_dexdiff.sh
lines,88
function,6

helpme() parse_cmdline() initParameter() dexdiff() dexcmp() zipPatch()
for,3
for count in `seq 2 ${OLD_DEX_COUNT}` for count in `seq 2 ${NEW_DEX_COUNT}` for count in `seq 2 ${NEW_DEX_COUNT}`
if,2
if [[ "$1" != *=* ]];then *) if [[ `echo "$1" | sed -n "/.*=/p"` ]];then
git@github.com:Tencent/tinker.git,836ca8bba1053307a3152ccb5bf60bff7ce170f9,tinker,16883,./tinker/tinker-sample-android/updateTinkerLib.sh
lines,4
function,0


for,0

if,0

git@github.com:nostra13/Android-Universal-Image-Loader.git,458df4da2e23ba9ad76c79241a948cdfcccf72ae,Android-Universal-Image-Loader,16807,
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-upms/zheng-upms-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-upms/zheng-upms-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-upms/zheng-upms-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-upms/zheng-upms-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-upms/zheng-upms-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/project-tools/ngrok.sh
lines,0
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-ucenter/zheng-ucenter-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-ucenter/zheng-ucenter-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-ucenter/zheng-ucenter-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-ucenter/zheng-ucenter-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-ucenter/zheng-ucenter-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-cms/zheng-cms-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-cms/zheng-cms-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-cms/zheng-cms-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-cms/zheng-cms-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-cms/zheng-cms-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-api/zheng-api-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-api/zheng-api-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-api/zheng-api-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-api/zheng-api-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-api/zheng-api-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-demo/zheng-demo-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-demo/zheng-demo-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-demo/zheng-demo-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-demo/zheng-demo-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-demo/zheng-demo-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-pay/zheng-pay-rpc-service/src/main/assembly/bin/server.sh
lines,24
function,0


for,0

if,5
if [ "$1" = "start" ]; then if [ "$1" = "stop" ]; then if [ "$1" = "debug" ]; then if [ "$1" = "restart" ]; then if [ "$1" = "dump" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-pay/zheng-pay-rpc-service/src/main/assembly/bin/start.sh
lines,89
function,0


for,0

if,11
if [ -z "$SERVER_NAME" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ "$1" = "debug" ]; then if [ "$1" = "jmx" ]; then if [ -n "$SERVER_PORT" ]; then if [ "$SERVER_PROTOCOL" == "dubbo" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-pay/zheng-pay-rpc-service/src/main/assembly/bin/restart.sh
lines,4
function,0


for,0

if,0

git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-pay/zheng-pay-rpc-service/src/main/assembly/bin/stop.sh
lines,44
function,0


for,2
for PID in $PIDS ; do for PID in $PIDS ; do
if,4
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ "$1" != "skip" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:shuzheng/zheng.git,7005c0a775e6d014d1dc8a8a809f7b1c13bf785a,zheng,16555,./zheng/zheng-pay/zheng-pay-rpc-service/src/main/assembly/bin/dump.sh
lines,94
function,0


for,1
for PID in $PIDS ; do
if,14
if [ -z "$SERVER_NAME" ]; then if [ -z "$PIDS" ]; then if [ -n "$LOGS_FILE" ]; then if [ ! -d $LOGS_DIR ]; then if [ ! -d $DUMP_DIR ]; then if [ ! -d $DATE_DIR ]; then if [ -r /usr/sbin/lsof ]; then if [ -r /bin/netstat ]; then if [ -r /usr/bin/iostat ]; then if [ -r /usr/bin/mpstat ]; then if [ -r /usr/bin/vmstat ]; then if [ -r /usr/bin/free ]; then if [ -r /usr/bin/sar ]; then if [ -r /usr/bin/uptime ]; then
git@github.com:winterbe/java8-tutorial.git,9b79999be76274f0c11a5b1d4a4fff4e785dc774,java8-tutorial,16460,
git@github.com:openzipkin/zipkin.git,fe78c4d9c2f8a7c63adf68b8ac287ac3a1c176b6,zipkin,16435,./zipkin/docker/examples/prometheus/create-datasource-and-dashboard.sh
lines,33
function,0


for,0

if,1
if ! curl --retry 5 --retry-connrefused --retry-delay 0 -sf http://grafana:3000/api/datasources/name/prom; then
git@github.com:openzipkin/zipkin.git,fe78c4d9c2f8a7c63adf68b8ac287ac3a1c176b6,zipkin,16435,./zipkin/docker/test-images/zipkin-cassandra/install.sh
lines,255
function,2
function is_cassandra_alive() { function cql() {
function is_cassandra_alive() { function cql() {
for,1
echo "Will wait up to ${timeout} seconds for Cassandra to come up before installing Schema"
if,1
if ! kill -0 ${temp_cassandra_pid}; then
git@github.com:openzipkin/zipkin.git,fe78c4d9c2f8a7c63adf68b8ac287ac3a1c176b6,zipkin,16435,./zipkin/docker/test-images/zipkin-mysql/install.sh
lines,78
function,0


for,1
echo "Will wait up to ${timeout} seconds for MySQL to come up before installing Schema"
if,0

git@github.com:openzipkin/zipkin.git,fe78c4d9c2f8a7c63adf68b8ac287ac3a1c176b6,zipkin,16435,./zipkin/docker/test-images/zipkin-kafka/install.sh
lines,113
function,0


for,0

if,0

git@github.com:openzipkin/zipkin.git,fe78c4d9c2f8a7c63adf68b8ac287ac3a1c176b6,zipkin,16435,./zipkin/benchmarks/src/test/resources/create-datasource-and-dashboard.sh
lines,33
function,0


for,0

if,1
if ! curl --retry 5 --retry-connrefused --retry-delay 0 -sf http://grafana:3000/api/datasources/name/prom; then
git@github.com:LMAX-Exchange/disruptor.git,95c705f60c1833b07f1fed6e08a08d7bee7f0971,disruptor,16397,
git@github.com:Tencent/APIJSON.git,99ec292767c8f377a39a5af40e75cf491d63192e,APIJSON,15915,
git@github.com:JeffLi1993/springboot-learning-example.git,055583c7682a8dadca5e02a9cc58ac39ca39b31c,springboot-learning-example,15688,
git@github.com:medcl/elasticsearch-analysis-ik.git,9338c1910468f19cae99532f6a3aa5fe02399a06,elasticsearch-analysis-ik,15527,
git@github.com:williamfiset/Algorithms.git,da50861a53fc2f6642cfc7d82c285166f41d03e2,Algorithms,15450,
git@github.com:material-components/material-components-android.git,4b669c12890856aaf8e8cc92a465282c513f3e10,material-components-android,15418,
git@github.com:android10/Android-CleanArchitecture.git,8ed4222c537e40db05e9e685bbc253fafb6b8e1f,Android-CleanArchitecture,15387,
git@github.com:dyc87112/SpringBoot-Learning.git,4212d163da816c6fa5b28d59130318dac2379a73,SpringBoot-Learning,15358,
git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/scripts/traceatn.sh
lines,17
function,0


for,0

if,0

git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/CSharp/tests/issue-3079/test.sh
lines,14
function,0


for,0

if,1
if [[ "$?" != "0" ]]
git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/CSharp/tests/issue-2693/test.sh
lines,11
function,0


for,0

if,1
if [[ "$?" != "0" ]]
git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/Cpp/demo/generate.sh
lines,28
function,0


for,0

if,0

git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/Cpp/demo/Mac/build.sh
lines,43
function,0


for,0

if,0

git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/Cpp/deploy-source.sh
lines,15
function,0


for,0

if,0

git@github.com:antlr/antlr4.git,487cb28bd359587e67794b25b144b7df83ddf1a2,antlr4,15312,./antlr4/runtime/Cpp/deploy-macos.sh
lines,28
function,0


for,0

if,0

git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/ja.sh
lines,32
function,1

help(){
for,0

if,0

git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/bin/repVersion.sh
lines,33
function,0


for,0

if,2
if [ -n "$1" ];then if [ ! -n "$old_version" ]; then
git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/bin/updVersion.sh
lines,19
function,0


for,0

if,1
if [ ! -n "$1" ]; then
git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/bin/push.sh
lines,1
function,0


for,0

if,0

git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/bin/push-dev.sh
lines,1
function,0


for,0

if,0

git@github.com:justauth/JustAuth.git,c0ac81df08b72a6666d980df3755419cb723d80d,JustAuth,15182,./JustAuth/bin/pull-dev.sh
lines,1
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/docker/entrypoint.sh
lines,6
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/src/release/release-notes.sh
lines,10
function,0


for,0

if,1
if [[ "$
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-kerberos-hdfs-impersonation-cross-realm/compose.sh
lines,11
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-kafka/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-hdfs-impersonation/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-postgresql/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-mysql/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/multinode/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-kerberos-hdfs-impersonation-with-wire-encryption/compose.sh
lines,9
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-kerberos-hdfs-impersonation/compose.sh
lines,11
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-sqlserver/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/multinode-tls/compose.sh
lines,12
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/common/compose-commons.sh
lines,63
function,1
function export_canonical_path() {
function export_canonical_path() {
for,0

if,7
if [[ ${PATH} != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]] ; then if [[ -d $PATH ]]; then elif [[ -f $PATH ]]; then if [[ -z "${PRESTO_SERVER_DIR:-}" ]]; then if [[ -z "${PRESTO_CLI_JAR:-}" ]]; then if [[ -z "${PRODUCT_TESTS_JAR:-}" ]]; then if [[ -z "${PRESTO_JDBC_DRIVER_JAR:-}" ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/multinode-tls-kerberos/compose.sh
lines,11
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-cassandra/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/files/presto-launcher-wrapper.sh
lines,22
function,0


for,0

if,1
if [[ ! -f "${CONFIG_PROPERTIES_LOCATION}" ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/files/run-tempto.sh
lines,25
function,0


for,0

if,2
if ! test -z ${TEMPTO_PROFILE_CONFIG_FILE:-}; then if ! test -z ${TEMPTO_EXTRA_CONFIG_FILE:-}; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/files/presto-cli.sh
lines,5
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-ldap/compose.sh
lines,10
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/conf/docker/singlenode-kerberos-hdfs-no-impersonation/compose.sh
lines,11
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/locations.sh
lines,4
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/stop_all_containers.sh
lines,7
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/lib.sh
lines,56
function,5
function stop_all_containers() { function stop_docker_compose_containers() { function stop_application_runner_containers() { function environment_compose() { function getAvailableEnvironments() {
function stop_all_containers() { function stop_docker_compose_containers() { function stop_application_runner_containers() { function environment_compose() { function getAvailableEnvironments() {
for,4
for ENVIRONMENT in $(getAvailableEnvironments) for CONTAINER_NAME in ${APPLICATION_RUNNER_CONTAINERS} for CONTAINER in $(docker ps -aq --no-trunc --filter status=dead --filter status=exited --filter name=common_application-runner); for i in $(ls -d $DOCKER_CONF_LOCATION/*/); do echo ${i%%/}; done \
if,1
if [[ ! -z ${RUNNING_CONTAINERS} ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/run_on_docker.sh
lines,196
function,11
function retry() { function hadoop_master_container(){ function check_hadoop() { function run_in_application_runner_container() { function check_presto() { function run_product_tests() { function prefetch_images_silently() { function docker_images_used() { function cleanup() { function terminate() { function usage() {
function retry() { function hadoop_master_container(){ function check_hadoop() { function run_in_application_runner_container() { function check_presto() { function run_product_tests() { function prefetch_images_silently() { function docker_images_used() { function cleanup() { function terminate() { function usage() {
for,1
for IMAGE in $(docker_images_used); do
if,16
if [[ ${EXIT_CODE} == 0 ]]; then if [[ "${LEAVE_CONTAINERS_ALIVE_ON_EXIT:-false}" != "true" ]]; then if test ! -z ${HADOOP_LOGS_PID:-}; then if test ! -z ${PRESTO_LOGS_PID:-}; then if [[ $ if [[ ! -f "$DOCKER_CONF_LOCATION/$ENVIRONMENT/compose.sh" ]]; then if [[ "$ENVIRONMENT" == "multinode" ]]; then elif [[ "$ENVIRONMENT" == "multinode-tls" ]]; then elif [[ "$ENVIRONMENT" == "multinode-tls-kerberos" ]]; then if [[ ${CONTINUOUS_INTEGRATION:-false} = true ]]; then if [[ "$ENVIRONMENT" == "singlenode-sqlserver" ]]; then elif [[ "$ENVIRONMENT" == "singlenode-ldap" ]]; then elif [[ "$ENVIRONMENT" == "singlenode-mysql" ]]; then elif [[ "$ENVIRONMENT" == "singlenode-postgresql" ]]; then elif [[ "$ENVIRONMENT" == "singlenode-cassandra" ]]; then elif [[ "$ENVIRONMENT" == "singlenode-kafka" ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/hosts.sh
lines,35
function,1
function environment_compose() {
function environment_compose() {
for,1
for SERVICE in $SERVICES; do
if,4
if ! which jq > /dev/null; then if [[ ! -f "$DOCKER_CONF_LOCATION/$ENVIRONMENT/compose.sh" ]]; then if $(environment_compose ps | grep -q $SERVICE); then if ! test -z $IP; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-product-tests/bin/run.sh
lines,25
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-kudu/bin/run_kudu_tests.sh
lines,71
function,2
function start_docker_container() { function cleanup_docker_container() {
function start_docker_container() { function cleanup_docker_container() {
for,0

if,4
if [ $ elif [ $1 -eq 1 ] elif [ $1 -eq 3 ] if [ $
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/build-centos.sh
lines,131
function,0


for,2
for flag in 'bmi|bmi1' 'bmi2' 'f16c' 'avx' 'avx2' 'sse' prompt "Prestissimo is ready for deployment"
if,5
if [ "$(uname)" == "Darwin" ]; then prompt "[1/2] Checking if local hash is available on remote repository" && if [ "$(uname)" == "Darwin" ]; then if [ "$DOCKER_BUILDKIT" == "1" ]; then if [ "$DOCKER_BUILDKIT" == "0" ]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/setup-macos.sh
lines,81
function,8
function install_six { function install_folly { function install_fizz { function install_wangle { function install_fbthrift { function install_proxygen { function install_antlr { function install_presto_deps {

for,1
for cmd in "$@"; do
if,1
if [[ $
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/release-centos-dockerfile/opt/common.sh
lines,195
function,17
function message() { function prompt() { function error() { function warning() { function txt_green() { echo "\e[38;05;2m$@\e[m"; } function txt_yellow() { echo "\e[38;05;11m$@\e[m"; } function txt_red() { echo "\e[38;05;9m$@\e[m"; } function get_filename() { function get_dirname() { function get_extension() { function get_basename() { function get_path_with_id() { function eval_date_path() { function get_debug_dump_info() { function failure() { function render_node_configuration_files() function memory_gb_preflight_check()
function message() { function prompt() { function error() { function warning() { function txt_green() { echo "\e[38;05;2m$@\e[m"; } function txt_yellow() { echo "\e[38;05;11m$@\e[m"; } function txt_red() { echo "\e[38;05;9m$@\e[m"; } function get_filename() { function get_dirname() { function get_extension() { function get_basename() { function get_path_with_id() { function eval_date_path() { function get_debug_dump_info() { function failure() { local -a _output_array=() function render_node_configuration_files() function memory_gb_preflight_check()
for,2
for cmd in ${cmds[@]}; do for _item in "${BASH_SOURCE[@]}"; do
if,11
if [[ "${ if [[ "${_last_command_height}" -gt '1' ]]; then if [ -f "${PRESTO_HOME}/config.properties.template" ] if [ -f "${PRESTO_HOME}/node.properties.template" ] if [ ! -z "${memory_requsted_gb}" ]; then if [ "${memory_requsted_gb}" -lt "${minimum_request_gb}" ]; then elif [ "$((memory_requsted_gb*convert_to_kilo))" -gt "${memory_available_kb}" ]; then if [ "$((memory_default_gb*convert_to_kilo))" -lt "${memory_available_kb}" ]; then elif [ "$((memory_default_gb/2*convert_to_kilo))" -lt "${memory_available_kb}" ]; then elif [ "$((memory_default_gb/4*convert_to_kilo))" -lt "${memory_available_kb}" ]; then elif [ "$((minimum_request_gb*convert_to_kilo))" -lt "${memory_available_kb}" ]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/release-centos-dockerfile/opt/entrypoint.sh
lines,84
function,2
function node_command_line_config() function node_configuration()
function node_command_line_config() function node_configuration()
for,0

if,3
if [[ "${DEBUG}" == "0" || "${DEBUG}" == "false" || "${DEBUG}" == "False" ]]; then DEBUG=""; fi if [[ -z "$(grep -E '^ *node\.id=' "${PRESTO_HOME}/node.properties" | cut -d'=' -f2)" ]]; then if [[ -z "$(grep -E '^ *node\.memory_gb=' "${PRESTO_HOME}/node.properties")" ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/setup-adapters.sh
lines,60
function,1
function install_jwt_cpp {

for,1
echo "All deps for Presto adapters installed!"
if,4
if [ -f "${SCRIPT_DIR}/setup-helper-functions.sh" ] if [ "$ if [ $install_jwt -eq 1 ]; then if [ $_ret -eq 0 ] ; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/setup-ubuntu.sh
lines,76
function,7
function install_six { function install_fizz { function install_wangle { function install_fbthrift { function install_proxygen { function install_antlr4 { function install_presto_deps {

for,1
for cmd in "$@"; do
if,2
if [ -d "antlr4-cpp-runtime-4.9.3-source" ]; then if [[ $
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-native-execution/scripts/setup-centos.sh
lines,117
function,0


for,0

if,1
if [ -f "${SCRIPT_DIR}/setup-helper-functions.sh" ]
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-main/bin/check_webui.sh
lines,46
function,0


for,2
echo "Refer to the root README.md for instructions" echo "Refer to the root README.md for instructions on generating Web UI"
if,3
if ! diff -u ${WEBUI_ROOT}/src/yarn.lock yarn.lock; then if ! diff -u ${WEBUI_ROOT}/dist dist; then if ! yarn --cwd ${WEBUI_ROOT}/src/ run flow; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-atop/src/test/resources/com/facebook/presto/atop/hanging_atop.sh
lines,0
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-hive-hadoop2/bin/run_hive_tests.sh
lines,41
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-hive-hadoop2/bin/common.sh
lines,120
function,10
function retry() { function hadoop_master_container(){ function hadoop_master_ip() { function check_hadoop() { function exec_in_hadoop_master_container() { function stop_unnecessary_hadoop_services() { function cleanup_docker_containers() { function termination_handler(){ function start_docker_containers() { function get_hive_major_version() {
function retry() { function hadoop_master_container(){ function hadoop_master_ip() { function check_hadoop() { function exec_in_hadoop_master_container() { function stop_unnecessary_hadoop_services() { function cleanup_docker_containers() { function termination_handler(){ function start_docker_containers() { function get_hive_major_version() {
for,0

if,5
if [[ ${EXIT_CODE} == 0 ]]; then if [[ ${TESTS_HIVE_VERSION_MAJOR} -lt 3 ]]; then if [ -n "${DOCKER_MACHINE_NAME:-}" ] if [[ "${CONTINUOUS_INTEGRATION:-false}" == 'true' ]]; then if [[ "${version}" == "" ]]; then
git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-hive-hadoop2/bin/run_hive_s3_tests.sh
lines,86
function,0


for,0

if,0

git@github.com:prestodb/presto.git,70ecc392450b9e4dc2cb08652c630733bea54adb,presto,15104,./presto/presto-hive-hadoop2/bin/run_s3_select_json_tests.sh
lines,96
function,0


for,0

if,0

git@github.com:baomidou/mybatis-plus.git,8b7cd6cc6ce650efcaf1863e0511e4d6fb73f0db,mybatis-plus,15096,
git@github.com:android-hacker/VirtualXposed.git,122beb371519cb2d221ce06756361aaa30e2674f,VirtualXposed,14655,
git@github.com:heibaiying/BigData-Notes.git,3898939aca387c25b3eb4e51ef49dfccca8543ed,BigData-Notes,14476,
git@github.com:hdodenhof/CircleImageView.git,59ee0a11d7199cdeb2d454ebeaaa8396238c418f,CircleImageView,14463,
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-check-log-folders.sh
lines,21
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/compose-utils.sh
lines,242
function,8
function additionalComposeArgs() { function additionalComposeQueueArgs() { function additionalComposeMonitoringArgs() { function additionalComposeCacheArgs() { function additionalStartupServices() { function permissionList() { function checkFolders() { function composeVersion() {
function additionalComposeArgs() { function additionalComposeQueueArgs() { function additionalComposeMonitoringArgs() { function additionalComposeCacheArgs() { function additionalStartupServices() { function permissionList() { function checkFolders() { function composeVersion() {
for,0

if,11
if [ "$MONITORING_ENABLED" = true ] if [ "$DATABASE" = "hybrid" ]; then if [ -z "$DIR" ]; then if [[ -d "$DIR" ]] && if [ "$1" = "--create" ]; then if [[ $SHELLOPTS =~ errexit ]]; then if [ $? -eq 0 ]; then status_v1=true; else status_v1=false; fi if [ $? -eq 0 ]; then status_v2=true; else status_v2=false; fi if $status_v2 ; then elif $status_v1 ; then if $FLAG_SET ; then set -e; fi
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-start-services.sh
lines,48
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-create-log-folders.sh
lines,20
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-remove-services.sh
lines,46
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-stop-services.sh
lines,46
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-update-service.sh
lines,50
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-upgrade-tb.sh
lines,83
function,0


for,1
for i in "$@"
if,1
if [[ -z "${FROM_VERSION// }" ]]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/docker/docker-install-tb.sh
lines,92
function,0


for,0

if,2
if [ "$LOAD_DEMO" == "true" ]; then if [ ! -z "${ADDITIONAL_STARTUP_SERVICES// }" ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/build_proto.sh
lines,25
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/transport/http/docker/start-tb-http-transport.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/transport/snmp/docker/start-tb-snmp-transport.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/transport/mqtt/docker/start-tb-mqtt-transport.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/transport/coap/docker/start-tb-coap-transport.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/transport/lwm2m/docker/start-tb-lwm2m-transport.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/monitoring/docker/start-tb-monitoring.sh
lines,31
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb-node/docker/start-tb-node.sh
lines,73
function,0


for,0

if,4
if [ "$INSTALL_TB" == "true" ]; then if [ "$LOAD_DEMO" == "true" ]; then elif [ "$UPGRADE_TB" == "true" ]; then if [[ -z "${FROM_VERSION// }" ]]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker/start-tb.sh
lines,41
function,0


for,0

if,2
if [ ! -f ${firstlaunch} ]; then if [ -f ${firstlaunch} ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker/install-tb.sh
lines,58
function,0


for,0

if,1
if [ "$LOAD_DEMO" == "true" ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker/upgrade-tb.sh
lines,46
function,0


for,0

if,1
if [[ -z "${FROM_VERSION// }" ]]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker-cassandra/start-db.sh
lines,60
function,0


for,1
echo "Wait for cassandra db to start..."
if,4
if [ ! -d ${PGDATA} ]; then if [ ! -f ${firstlaunch} ]; then if [ ! -L ${cassandra_data_link} ]; then if [ ! -d ${cassandra_data_dir} ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker-cassandra/stop-db.sh
lines,32
function,0


for,1
echo "Waiting for cassandra to stop."
if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker-postgres/start-db.sh
lines,41
function,0


for,0

if,2
if [ ! -d ${PGDATA} ]; then if [ ! -f ${firstlaunch} ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/tb/docker-postgres/stop-db.sh
lines,20
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/js-executor/docker/start-js-executor.sh
lines,30
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/web-ui/docker/start-web-ui.sh
lines,30
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/msa/vc-executor-docker/docker/start-tb-vc-executor.sh
lines,33
function,0


for,0

if,0

git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/packaging/java/scripts/install/upgrade.sh
lines,62
function,0


for,1
for i in "$@"
if,2
if [[ -z "${FROM_VERSION// }" ]]; then if [ $? -ne 0 ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/packaging/java/scripts/install/upgrade_dev_db.sh
lines,68
function,0


for,1
for i in "$@"
if,2
if [[ -z "${FROM_VERSION// }" ]]; then if [ $? -ne 0 ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/packaging/java/scripts/install/install_dev_db.sh
lines,47
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/packaging/java/scripts/install/install.sh
lines,63
function,0


for,0

if,2
if [ "$LOAD_DEMO" == "true" ]; then if [ $? -ne 0 ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/tools/src/main/shell/client.keygen.sh
lines,147
function,1

usage() {
for,1
echo "INFO: your CN (domain suffix) for key is $DOMAIN_SUFFIX"
if,2
if [ -f $CLIENT_FILE_PREFIX.jks ] || [ -f $CLIENT_FILE_PREFIX.pub.pem ] || [ -f $CLIENT_FILE_PREFIX.nopass.pem ] || \ if [ -z "$OPENSSL_CMD" ]; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/tools/src/main/shell/lwm2m/lwm2m_cfssl_chain_all_for_test.sh
lines,114
function,1

ResultInfo()
for,5
echo -e "Usage 1: \"Information is not displayed\" : \"Keys for the server are generated\" : \"Keys for the clients and trusts are generated\"\n./`basename $0`" echo -e "Usage 2: \"Information is displayed\" : \"Keys for the server are generated\" : \"Keys for the clients and trusts are generated\"\n./`basename $0` true \n./`basename $0` true true true " echo -e "Usage 3: \"Information is displayed\" : \"Keys for the server are not generated\" : \"Keys for the clients and trusts are generated\"\n./`basename $0` true false \n./`basename $0` true false true" echo -e "Usage 4: \"Information is displayed\" : \"Keys for the server are not generated\" : \"Keys for the clients and trusts are not generated\"\n./`basename $0` true false false" echo -e "Usage 5: \"Information is displayed\" : \"Keys for the server are generated\" : \"Keys for the clients and trusts are not generated\"\n./`basename $0` true true false"
if,17
if [ "$IS_IHFO" = false ] ; then if [ "$IS_SERVER_CREATED_KEY" = true ] ; then if [ "$IS_TRUST_CLIENT_CREATED_KEY" = true ] ; then if [ "$IS_SERVER_CREATED_KEY" = true ] ; then if [ "$IS_TRUST_CLIENT_CREATED_KEY" = true ] ; then if [ "$1" == "-h" ] ||[ "$1" == "-?" ] || [ "$1" == "-help" ] ; then if [ -n "$1" ]; then if [ -n "$2" ]; then if [ -n "$3" ]; then if [ "$IS_SERVER_CREATED_KEY" = false ] && [ "$IS_TRUST_CLIENT_CREATED_KEY" = false ] ; then if [ "$IS_IHFO" = false ] ; then if [ "$IS_SERVER_CREATED_KEY" = true ] ; then if [ "$IS_TRUST_CLIENT_CREATED_KEY" = true ] ; then if [ "$IS_SERVER_CREATED_KEY" = true ] ; then if [ "$IS_TRUST_CLIENT_CREATED_KEY" = true ] ; then if [ "$IS_SERVER_CREATED_KEY" = true ] ; then if [ "$IS_TRUST_CLIENT_CREATED_KEY" = true ] ; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/tools/src/main/shell/lwm2m/lwM2M_cfssl_chain_clients_for_test.sh
lines,423
function,4

intermediate_common_name() { set_list_sert_for_cat() { client_common_name() { client_alias_name() {
for,1
for COMMAND in ${CF_COMMANDS}; do
if,5
if [ ! -z "$1" ]; then if [ ! -z "$2" ]; then if [ ! -z "$3" ]; then if [ ! -z "$4" ]; then if ! command -v ${COMMAND} &> /dev/null; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/tools/src/main/shell/lwm2m/lwm2m_cfssl_chain_server_for_test.sh
lines,314
function,2

intermediate_common_name() { set_list_sert_for_cat() {
for,2
for COMMAND in ${CF_COMMANDS}; do "CN": "ROOT CA for servers",
if,1
if ! command -v ${COMMAND} &> /dev/null; then
git@github.com:thingsboard/thingsboard.git,54ef5364ec159980106ce05491cabdd6a79565c4,thingsboard,14423,./thingsboard/tools/src/main/shell/server.keygen.sh
lines,197
function,1

usage() {
for,1
echo "INFO: your CN (domain suffix) for key is $DOMAIN_SUFFIX"
if,11
echo " -c | --copy flag Specifies if the keystore should be copied to the server directory. Defaults to true" if [[ "$COPY" != true ]] && [[ "$COPY" != false ]]; then if [ -f $SERVER_FILE_PREFIX.jks ] || [ -f $SERVER_FILE_PREFIX.cer ] || [ -f $SERVER_FILE_PREFIX.pub.pem ] || \ if [[ ! -z "$SUBJECT_ALTERNATIVE_NAMES" ]]; then if [[ $status != 0 ]]; then if [[ $status != 0 ]]; then if [[ $COPY = true ]]; then if [[ -z "$COPY_DIR" ]]; then if [[ ! -z $dir ]]; then if [[ -n $DESTINATION ]]; then if [ $? -ne 0 ]; then
git@github.com:Grasscutters/Grasscutter.git,837e30e04b238151ae2b6ab02876d69901d4b985,Grasscutter,14335,./Grasscutter/scripts/install/install_without_dependencies.sh
lines,220
function,2

is_command() { valid_ip() {
for,4
echo "This script will take for granted that you have all dependencies installed (mongodb, openjdk-17-jre/jre17-openjdk, wget, openssl, unzip, git, curl, base-devel), in fact, this script is recommended to update your current server installation, and it should run from the same folder as grasscutter.jar" echo "Search for METADATA here: https://discord.gg/grasscutter." echo -e "Using $branch branch for installing server \n" echo "The GM Handbook of all supported languages will be generated automatically when you start the server for the first time."
if,6
if [ $EUID != 0 ]; then if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then echo "If you are using version > 2.8 of the client, make sure to use the patched metadata if you don't use Cultivation." if [ -d "./resources" ] if valid_ip $SERVER_IP; then if [ $SUDO_USER ]; then
git@github.com:Grasscutters/Grasscutter.git,837e30e04b238151ae2b6ab02876d69901d4b985,Grasscutter,14335,./Grasscutter/scripts/install/install.sh
lines,295
function,2

is_command() { valid_ip() {
for,0

if,9
if [ $EUID != 0 ]; then if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then if is_command apt-get ; then elif is_command pacman ; then if [ $SYSTEM = "arch" ]; then echo -e "!!NOTE!!: Only select \"Skip\" if mongodb is already installed on this system" if [ $INST_ARCH_MONGO = "yes" ]; then if valid_ip $SERVER_IP; then echo -e "You can now uninstall the following packages if you wish:\n$INSTALLER_DEPS"
git@github.com:alibaba/ARouter.git,60e6b63c6d30beaaf46a6c1b031d49e0b952babc,ARouter,14281,
git@github.com:ben-manes/caffeine.git,8c6fd7744a49b1dedd7eba88251993f9b38ef561,caffeine,14277,./caffeine/.github/scripts/analyze.sh
lines,7
function,0


for,0

if,0

git@github.com:mockito/mockito.git,f5449f958cd38a64ca41df319f3426196e7b9206,mockito,14221,./mockito/check_reproducibility.sh
lines,26
function,1
function calculate_checksums() {
function calculate_checksums() {
for,0

if,0

git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/tdenginewriter/src/test/resources/incremental_sync/clean_env.sh
lines,8
function,0


for,0

if,2
curl -H 'Authorization: Basic cm9vdDp0YW9zZGF0YQ==' -d 'drop table if exists db2.stb2;' 192.168.1.93:6041/rest/sql curl -H 'Authorization: Basic cm9vdDp0YW9zZGF0YQ==' -d 'create table if not exists db2.stb2 (`ts` TIMESTAMP,`f2` SMALLINT,`f4` BIGINT,`f5` FLOAT,`f6` DOUBLE,`f7` DOUBLE,`f8` BOOL,`f9` NCHAR(100),`f10` NCHAR(200)) TAGS (`f1` TINYINT,`f3` INT);' 192.168.1.93:6041/rest/sql
git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/tdenginewriter/src/test/resources/incremental_sync/upload.sh
lines,12
function,0


for,0

if,0

git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/tdenginewriter/src/test/resources/incremental_sync/dm2t_sync.sh
lines,56
function,0


for,0

if,3
if [[ -e ${datax_home_dir}/job/${table_name}.csv ]]; then if [ "$MAX_TIME" != "null" ]; then if [[ $? -ne 0 ]]; then
git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/rpm/t_dp_dw_datax_3_core_all-build.sh
lines,12
function,0


for,0

if,0

git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/rpm/t_dp_dw_datax_3_hook_dqc-build.sh
lines,10
function,0


for,0

if,0

git@github.com:alibaba/DataX.git,86b7935bb4c0570895e6ab97d4e2fe50435f50cb,DataX,14202,./DataX/elasticsearchwriter/build.sh
lines,18
function,0


for,0

if,1
if [ -d "eswriter" ]; then
git@github.com:Tencent/QMUI_Android.git,026e7d486677d6593a96689cd590ec3561176717,QMUI_Android,14191,./QMUI_Android/deploy.sh
lines,48
function,0


for,0

if,6
if [[ "qmui" == "$1" ]] elif [[ "arch" == "$1" ]] elif [[ "type" == "$1" ]] elif [[ "compose-core" == "$1" ]] elif [[ "compose" == "$1" ]] elif [[ "photo" == "$1" ]]
git@github.com:YunaiV/yudao-cloud.git,144cece04dd73b4e59b1f0e08bb5fe844fb3ceee,yudao-cloud,14052,
git@github.com:Konloch/bytecode-viewer.git,eda6416609c2f2833b17608f6d58f3cd7c574cd9,bytecode-viewer,13963,
git@github.com:dromara/Sa-Token.git,e076c716484935939d4a833673d60b82fed33228,Sa-Token,13938,
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-pkg-resolver.sh
lines,39
function,0


for,0

if,2
if [ $ if [ "$1" == "debian:10" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-protobuf.sh
lines,57
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "3.7.1" ]; then if [ "$version_to_install" == "3.7.1" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-hadolint.sh
lines,35
function,0


for,0

if,2
if [ $ if [ $? -eq 1 ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/set-vault-as-baseurl-centos.sh
lines,33
function,0


for,1
echo "ERROR: Setting the archived baseurl is only supported for centos 7 and 8 environments"
if,2
if [ $ if [ "$1" == "centos:7" ] || [ "$1" == "centos:8" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-intel-isa-l.sh
lines,58
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "2.29.0" ]; then if [ "$version_to_install" == "2.29.0" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-common-pkgs.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-zstandard.sh
lines,53
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "1.4.9" ]; then if [ "$version_to_install" == "1.4.9" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-spotbugs.sh
lines,50
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "4.2.2" ]; then if [ "$version_to_install" == "4.2.2" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-yasm.sh
lines,49
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "1.2.0-4" ]; then if [ "$version_to_install" == "1.2.0-4" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-nodejs.sh
lines,54
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "14.16.1" ]; then if [ "$version_to_install" == "14.16.1" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-epel.sh
lines,49
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "8" ]; then if [ "$version_to_install" == "8" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-maven.sh
lines,49
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "3.6.3" ]; then if [ "$version_to_install" == "3.6.3" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-cmake.sh
lines,53
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "3.19.0" ]; then if [ "$version_to_install" == "3.19.0" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-git.sh
lines,55
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "2.9.5" ]; then if [ "$version_to_install" == "2.9.5" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/pkg-resolver/install-boost.sh
lines,56
function,0


for,0

if,5
if [ $ if [ $? -eq 1 ]; then if [ -n "$2" ]; then if [ "$version_to_install" != "1.72.0" ]; then if [ "$version_to_install" == "1.72.0" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/docker/hadoop_env_checks.sh
lines,117
function,4
function showWelcome { function showAbort { function failIfUserIsRoot { function warnIfLowMemory {

for,0

if,2
if [ "$(id -u)" -eq "0" ]; if [[ $((INSTALLED_MEMORY)) -lt $((MINIMAL_MEMORY)) ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/jenkins.sh
lines,259
function,7
function check_ci_run() { function run_ci() { function cleanup_ci_proc() { function github_status_recovery() {
is_c_cpp_extension() { is_platform_change() { is_c_cpp_change() { function check_ci_run() { function run_ci() { function cleanup_ci_proc() { function github_status_recovery() {
for,7
for element in "${c_cpp_extension[@]}"; do for path in "${DOCKERFILE}" "${SOURCEDIR}"/dev-support/docker/pkg-resolver/*.json; do for path in $(git --git-dir "${SOURCEDIR}/.git" diff --name-only "${firstCommitOfThisPr}" HEAD); do echo "Must specify an argument for jenkins.sh" echo "cleanup_ci_proc - Cleans up the processes spawned for running the CI" echo "github_status_recovery - Sends Github status (refer to YETUS precommit for more details)" echo "No C/C++ file or C/C++ build or platform changes found, will not run CI for this platform"
if,19
if [[ $element == "$seeking" ]]; then if [ "${in_path}" == "${path}" ]; then if is_c_cpp_extension "${extension}"; then if [[ $filename =~ CMakeLists\.txt ]]; then if is_c_cpp_change "${path}"; then if is_platform_change "${path}"; then if [ "$IS_OPTIONAL" -eq 0 ]; then if [[ "$IS_WINDOWS" && "$IS_WINDOWS" == 1 ]]; then if [[ "$IS_NIGHTLY_BUILD" && "$IS_NIGHTLY_BUILD" == 1 ]]; then if [[ -d "${PATCHDIR}" ]]; then if [[ -n "${JIRA_ISSUE_KEY}" ]]; then elif [[ -z "${CHANGE_URL}" ]]; then if [ -f "${PATCHDIR}/pidfile.txt" ]; then if [ -f "${PATCHDIR}/cidfile.txt" ]; then if [ -z "$1" ]; then if [ "$1" == "run_ci" ]; then if check_ci_run; then elif [ "$1" == "cleanup_ci_proc" ]; then elif [ "$1" == "github_status_recovery" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/findHangingTest.sh
lines,40
function,0


for,0

if,4
if [[ "$line" =~ "Running org.apache.hadoop" ]]; then if [[ "$expecting" =~ "Running" ]]; then if [[ "$line" =~ "Tests run" ]]; then if [[ "$line" =~ "Forking command line" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/bin/hadoop.sh
lines,615
function,13
function personality_globals function personality_parse_args function hadoop_order function load_hadoop_version function hadoop_test_parallel function hadoop_unittest_prereqs function yarn_ui2_flag function hadoop_native_flags function personality_modules function personality_file_tests function hadoop_console_success function shadedclient_initialize function shadedclient_rebuild
declare -a modules=()
for,6
for i in "$@"; do for module in ${mods}; do for i in hadoop-project \ for i in "${CHANGED_FILES[@]}"; do for module in $(hadoop_order ${ordering}); do for module in hadoop-client-modules/hadoop-client-check-invariants \
if,51
if [[ -z "${HADOOP_HOMEBREW_DIR}" ]]; then if [[ ${ordering} = normal ]]; then elif [[ ${ordering} = union ]]; then elif [[ ${ordering} = mvnsrc ]]; then elif [[ ${ordering} = mvnsrctest ]]; then if [[ -f "${BASEDIR}/pom.xml" ]]; then if load_hadoop_version; then if [[ ${hmajor} -lt 3 && ${hminor} -lt 8 ]]; then if [[ ${module} = hadoop-hdfs-project* ]]; then elif [[ ${module} = hadoop-common-project/hadoop-common elif [[ ${module} = . ]]; then if [[ ${need_common} -eq 1 if [[ ${BUILD_NATIVE} != true ]]; then if [[ ${BUILD_NATIVE} != true ]]; then if [[ -d "${ISAL_HOME}/include" ]]; then if [[ -d "${OPENSSL_HOME}/include" ]]; then elif [[ -d "${HADOOP_HOMEBREW_DIR}/opt/openssl/" ]]; then if [[ -d "${SNAPPY_HOME}/include" ]]; then elif [[ -d "${HADOOP_HOMEBREW_DIR}/include/snappy.h" ]]; then if [[ "${CHANGED_MODULES[*]}" =~ hadoop-common ]]; then if [[ "${CHANGED_MODULES[*]}" =~ \. ]]; then if [[ "${repostatus}" = patch && "${BUILDMODE}" = patch ]]; then if [[ "${CHANGED_MODULES[*]}" =~ \. ]]; then if [[ "${repostatus}" = branch || "${BUILDMODE}" = full ]]; then if [[ "${CHANGED_MODULES[*]}" =~ \. ]]; then if [[ "${BUILDMODE}" = full ]]; then elif [[ "${CHANGED_MODULES[*]}" =~ \. ]]; then if [[ ${TEST_PARALLEL} = "true" ]] ; then if hadoop_test_parallel; then if [[ -n ${TEST_THREADS:-} ]]; then if ! verify_needed_test javac; then if ! verify_needed_test native; then if [[ "${i}" =~ \.bats ]]; then if ! verify_needed_test shellcheck && [[ ${foundbats} = false ]]; then if [[ ${needflags} = true ]]; then if [[ "$IS_WINDOWS" && "$IS_WINDOWS" == 1 ]]; then if [[ ${filename} =~ src/main/webapp ]]; then elif [[ ${filename} =~ \.sh elif [[ ${filename} =~ \.md$ elif [[ ${filename} =~ \.c$ elif [[ ${filename} =~ build.xml$ if [[ ${filename} =~ hadoop-client-modules ]]; then if [[ ${filename} =~ src/test ]]; then if [[ ${filename} =~ \.java$ ]]; then if [[ ${OSTYPE} = Windows_NT || yetus_debug "hadoop personality: seeing if we need the test of client artifacts." if [ -d "${module}" ]; then if [ ${ if [[ "$IS_WINDOWS" && "$IS_WINDOWS" == 1 ]]; then if load_hadoop_version; then if [[ ${count} -gt 0 ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/verify-xml.sh
lines,150
function,7
function find_test_output_file() { function print_test_banner() { function run_all_xml_test() { function run_common_xml_test() { function run_hdfs_xml_test() { function run_mapreduce_xml_test() { function run_yarn_xml_test() {
function find_test_output_file() { function print_test_banner() { function run_all_xml_test() { function run_common_xml_test() { function run_hdfs_xml_test() { function run_mapreduce_xml_test() { function run_yarn_xml_test() {
for,1
echo "Examine the file for specific information xml/Configuration mismatches."
if,9
if [ -n "$1" ] && [ -e "$1" ] ; then if [ -n "$2" ] && [ -e "$2" ] ; then if [ -n "$3" ] && [ -e "$3" ] ; then if [ -n "$4" ] && [ -e "$4" ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/dev-support/hadoop-vote.sh
lines,204
function,11
function download_and_import_keys() { function download_release_candidate () { function verify_signatures() { function verify_checksums() { function unzip_from_source() { function rat_test() { function build_from_source() { function build_tar_from_source() { function execute() { function print_when_exit() {
usage() { MVN_PROPERTIES=() MVN_PROFILES=() function download_and_import_keys() { function download_release_candidate () { function verify_signatures() { function verify_checksums() { function unzip_from_source() { function rat_test() { function build_from_source() { function build_tar_from_source() { function execute() { function print_when_exit() {
for,5
hadoop-vote. A script for standard vote which verifies the following items -D | list of maven properties to set for the mvn invocations, e.g. <-D hbase.profile=2.0 -D skipTests> Defaults to unset -P | list of maven profiles to set for the build from source, e.g. <-P native -P yarn-ui> for file in *.tar.gz; do for file in *.tar.gz; do
if,5
if [ -z "${SOURCE_URL}" ]; then 5. Other concerns if any if [ ! -d "${OUTPUT_DIR}" ]; then if [ -n "${SIGNING_KEY}" ]; then if ((CHECKSUM_PASSED)) && ((SIGNATURE_PASSED)) && ((RAT_CHECK_PASSED)) && ((BUILD_FROM_SOURCE_PASSED)) && ((BUILD_TAR_FROM_SOURCE_PASSED)) ; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/parse-metrics.sh
lines,84
function,0


for,2
echo "attempts to download one from HDFS for applicationID. Filters values" echo "for the specified metric, during the range"
if,4
if [ $ if [ ! -f "$localFile" ]; then if ! hdfs dfs -copyToLocal "$remoteFile" "$localFile"; then if (is_counter == "true") {
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/upload-fsimage.sh
lines,84
function,0


for,3
echo " If name-dir is specified, looks for fsimage files under" echo "Unable to find MD5 file for fsimage; looked at $image_file_md5" for file in ${image_file} ${image_file_xml} ${image_file_md5} ${version_file}; do
if,10
if [ $ echo " (into \$TMPDIR if specified, else /tmp)." echo " These files will be uploaded to remote_dir (created if it does" if [[ $ if [[ "$image_file_count" != 1 ]]; then if ! [[ -f "$image_file_md5" ]]; then if ! [[ -f "$version_file" ]]; then if ! tmp_dir="$(mktemp -d)"; then if ! hdfs dfs -mkdir -p "$remote_dir"; then if ! hdfs dfs -copyFromLocal -f "$file" "${remote_dir}"; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/create-slim-hadoop-tar.sh
lines,52
function,0


for,1
echo " and removes portions of it that are unnecessary for dynamometer"
if,1
if [[ "$
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/start-dynamometer-cluster.sh
lines,41
function,0


for,1
for f in ${script_pwd}/lib/*.jar; do
if,4
if type hadoop &> /dev/null; then elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then if [[ "$f" != *"dynamometer-infra-"* ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/resources/start-component.sh
lines,348
function,3
function hdfs_original { function cleanup {
find_available_port() { listingFiles=()
for,8
echo "Not enough arguments for NameNode" echo "Not enough arguments for DataNode" for dataDir in "${dataDirsOrig[@]}"; do echo "Going to sleep for $launchDelaySec sec..." for _ in $(seq 1 "${launchDelaySec}"); do for listingFile in "${blockDir}"/*; do echo "Using the following ports for the namenode:" echo "Waiting for parent process (PID: $PPID) OR $component process to exit"
if,18
if [[ "$component" != "datanode" && "$component" != "namenode" ]]; then if [[ "$component" = "namenode" ]]; then if [[ $ if [[ $ if [[ -z "$junitClassPath" ]]; then if [[ "$component" = "datanode" ]]; then if ! dataDirsOrig="$(hdfs getconf "${configOverrides[@]}" -confKey dfs.datanode.data.dir)"; then if ! kill -0 $PPID 2>/dev/null; then if [[ ${launchSuccess} -ne 0 ]]; then elif [[ "$component" = "namenode" ]]; then if [[ "$NN_FILE_METRIC_PERIOD" -gt 0 ]]; then if [[ -f "$confDir/hadoop-metrics2-namenode.properties" ]]; then elif [[ -f "$confDir/hadoop-metrics2.properties" ]]; then if ! "${HADOOP_HOME}/sbin/hadoop-daemon.sh" start namenode "${namenodeConfigs[@]}" $NN_ADDITIONAL_ARGS; then if [[ "$NN_FILE_METRIC_PERIOD" -gt 0 ]]; then if [[ "$metricsTailPID" = "" ]]; then if [[ "$metricsTailPID" != "" ]]; then if kill -0 $PPID 2>/dev/null; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/bash/generate-block-lists.sh
lines,38
function,0


for,1
for f in ${script_pwd}/lib/*.jar; do
if,4
if type hadoop &> /dev/null; then elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then if [[ "$f" != *"dynamometer-blockgen-"* ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/parse-start-timestamp.sh
lines,52
function,0


for,2
echo " If edits-dir is specified, looks for edit files under" echo "Start timestamp for $image_txid is: (this may take a moment)"
if,4
if [ $ if [[ $(command -v gawk) == "" ]]; then if [[ $ if [[ "$edits_file_count" != 1 ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/start-workload.sh
lines,42
function,0


for,1
for f in ${script_pwd}/lib/*.jar; do
if,4
if type hadoop &> /dev/null; then elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then if [[ "$f" != *"dynamometer-workload-"* ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh
lines,107
function,4
function hadoop_usage() function parse_args() function calculate_classpath() function run_sls_generator()
function hadoop_usage() function parse_args() function calculate_classpath() function run_sls_generator()
for,1
for i in "$@"; do
if,6
if [[ -z "${rumenfile}" ]] ; then if [[ -z "${outputdir}" ]] ; then if [[ -z "${outputprefix}" ]] ; then if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then if [ $
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh
lines,146
function,4
function hadoop_usage() function parse_args() function calculate_classpath function run_simulation() {
function hadoop_usage() function parse_args() function run_simulation() {
for,1
for i in "$@"; do
if,12
if [[ -z "${inputrumen}" && -z "${inputsls}" && -z "${tracetype}" ]] ; then if [[ -n "${inputrumen}" && -n "${inputsls}" && -n "${tracetype}" ]] ; then if [[ -z "${outputdir}" ]] ; then if [[ "${inputsls}" != "" ]] ; then if [[ "${inputrumen}" != "" ]] ; then if [[ "${tracetype}" != "" ]] ; then if [[ -n "${nodes}" ]] ; then if [[ -n "${trackjobs}" ]] ; then if [[ "${printsimulation}" == "true" ]] ; then if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then if [[ $
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-streaming/src/main/shellprofile.d/hadoop-streaming.sh
lines,51
function,1
function mapred_subcommand_streaming

for,1
for jarname in ${CLASSPATH}; do
if,3
if ! declare -f mapred_subcommand_streaming >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = mapred ]]; then if [[ "${jarname}" =~ hadoop-streaming-[0-9] ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-archive-logs/src/main/shellprofile.d/hadoop-archive-logs.sh
lines,37
function,1
function mapred_subcommand_archive-logs

for,0

if,2
if ! declare -f mapred_subcommand_archive-logs >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = mapred ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-federation-balance/src/main/shellprofile.d/hadoop-federation-balance.sh
lines,37
function,1
function hadoop_subcommand_fedbalance

for,0

if,2
if ! declare -f hadoop_subcommand_fedbalance >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-rumen/src/main/shellprofile.d/hadoop-rumen.sh
lines,54
function,2
function hadoop_subcommand_rumenfolder function hadoop_subcommand_rumentrace

for,0

if,4
if ! declare -f hadoop_subcommand_rumenfolder >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then if ! declare -f hadoop_subcommand_rumentrace >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-gridmix/src/main/shellprofile.d/hadoop-gridmix.sh
lines,36
function,1
function hadoop_subcommand_gridmix

for,0

if,2
if ! declare -f hadoop_subcommand_gridmix >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-azure/dev-support/testrun-scripts/runtests.sh
lines,175
function,4

runHNSOAuthTest() runHNSSharedKeyTest() runNonHNSSharedKeyTest() runAppendBlobHNSOAuthTest()
for,3
echo ' Follow instructions in the template to populate settings correctly for the account' echo '[Note - SET_ACTIVE_TEST_CONFIG will help activate the config for IDE/single test class runs]' logOutput "ERROR: Invalid selection for SET_ACTIVE_TEST_CONFIG. This is applicable only for RUN_TEST."
if,3
if [[ ! -f "$accountSettingsFile" ]]; if [ $runTest == false ] if [ $runTest == true ]
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-azure/dev-support/testrun-scripts/testsupport.sh
lines,172
function,8

triggerRun() summary() { checkdependencies() { formatxml() { changeconf() { init() { printAggregate() { logOutput() {
for,5
logOutput "Exiting. Number of properties and values differ for $combination" for ((i = 0; i < propertiessize; i++)); do echo "Activated [$combtestfile] - for account: $accountName for combination $combination" echo "Running test for combination $combination on account $accountName [ProcessCount=$processcount]" echo "Find test result for the combination ($combination) in: $testlogfilename"
if,9
if [ -z "$accountName" ]; then if [ "$propertiessize" -ne "$valuessize" ]; then if [ "$runTest" == true ] if [ "$cleanUpTestContainers" == true ] if grep -q "There are test failures" "$testlogfilename"; if ! [ "$(command -v pcregrep)" ]; then if ! [ "$(command -v xmlstarlet)" ]; then if ! xmlstarlet ed -P -L -s "/configuration/property[name='$1']" -t elem -n value -v "$2" "$combtestfile" if ! mvn clean install -DskipTests
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-archives/src/main/shellprofile.d/hadoop-archives.sh
lines,58
function,2
function hadoop_subcommand_archive function mapred_subcommand_archive

for,0

if,4
if ! declare -f hadoop_subcommand_archive >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then if ! declare -f mapred_subcommand_archive >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = mapred ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-resourceestimator/src/main/bin/start-estimator.sh
lines,42
function,0


for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-resourceestimator/src/main/bin/stop-estimator.sh
lines,42
function,0


for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-resourceestimator/src/main/bin/estimator.sh
lines,71
function,3
function hadoop_usage() function calculate_classpath function resourceestimatorcmd_case
function hadoop_usage()
for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-extras/src/main/shellprofile.d/hadoop-extras.sh
lines,37
function,1
function hadoop_subcommand_distch

for,0

if,2
if ! declare -f hadoop_subcommand_distch >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-distcp/src/main/shellprofile.d/hadoop-distcp.sh
lines,58
function,2
function hadoop_subcommand_distcp function mapred_subcommand_distcp

for,0

if,4
if ! declare -f hadoop_subcommand_distcp >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then if ! declare -f mapred_subcommand_distcp >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = mapred ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-tools/hadoop-aws/src/main/shellprofile.d/hadoop-s3guard.sh
lines,37
function,1
function hadoop_subcommand_s3guard

for,0

if,2
if ! declare -f hadoop_subcommand_s3guard >/dev/null 2>/dev/null; then if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-client-modules/hadoop-client-check-invariants/src/test/resources/ensure-jars-have-correct-contents.sh
lines,109
function,1

jar_list_failed ()
for,3
echo "[ERROR] Listing jar contents for file '${artifact}' failed." for artifact in "${artifact_list[@]}"; do for bad_line in "${bad_contents[@]}"; do
if,4
if [[ -z "${BASH_VERSINFO[0]}" ]] \ if [ "${ if [ ${ if [ "${bad_artifacts}" -gt 0 ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-client-modules/hadoop-client-check-test-invariants/src/test/resources/ensure-jars-have-correct-contents.sh
lines,98
function,1

jar_list_failed ()
for,3
echo "[ERROR] Listing jar contents for file '${artifact}' failed." for artifact in "${artifact_list[@]}"; do for bad_line in "${bad_contents[@]}"; do
if,4
if [[ -z "${BASH_VERSINFO[0]}" ]] \ if [ "${ if [ ${ if [ "${bad_artifacts}" -gt 0 ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-kms/src/main/libexec/shellprofile.d/hadoop-kms.sh
lines,59
function,1
function hadoop_subcommand_kms

for,0

if,3
if [[ "${HADOOP_SHELL_EXECNAME}" = hadoop ]]; then if [[ -f "${HADOOP_CONF_DIR}/kms-env.sh" ]]; then if [[ "${HADOOP_DAEMON_MODE}" == "default" ]] ||
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
lines,54
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
lines,63
function,1
function print_usage

for,0

if,2
if [[ $ if [[ -n "${HADOOP_HOME}" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/contrib/bash-tab-completion/hadoop.sh
lines,119
function,1

_hadoop() { COMPREPLY=()
for,0

if,2
if [ -f "$script" -a -x "$script" ]; then if [ ${
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/test/scripts/process_with_sigterm_trap.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/test/scripts/run-bats.sh
lines,43
function,0


for,1
for j in *.bats; do
if,2
if [[ -z ${batsexe} ]]; then if [[ ${exitcode} -gt 0 ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/conf/shellprofile.d/example.sh
lines,106
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/conf/hadoop-env.sh
lines,434
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/hadoop-daemon.sh
lines,59
function,1
function hadoop_usage

for,0

if,4
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then if [[ $ if [[ -z "${HADOOP_HDFS_HOME}" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/hadoop-functions.sh
lines,2751
function,84
function hadoop_error function hadoop_debug function hadoop_abs function hadoop_delete_entry function hadoop_add_entry function hadoop_verify_entry function hadoop_array_contains function hadoop_add_array_param function hadoop_sort_array function hadoop_privilege_check function hadoop_sudo function hadoop_uservar_su function hadoop_add_subcommand function hadoop_add_option function hadoop_reset_usage function hadoop_generic_columnprinter function hadoop_generate_usage function hadoop_deprecate_envvar function hadoop_using_envvar function hadoop_mkdir function hadoop_bootstrap function hadoop_find_confdir function hadoop_verify_confdir function hadoop_exec_hadoopenv function hadoop_exec_userfuncs function hadoop_exec_user_hadoopenv function hadoop_exec_hadooprc function hadoop_import_shellprofiles function hadoop_shellprofiles_init function hadoop_shellprofiles_classpath function hadoop_shellprofiles_nativelib function hadoop_shellprofiles_finalize function hadoop_basic_init function hadoop_populate_workers_file function hadoop_rotate_log function hadoop_actual_ssh function hadoop_connect_to_hosts function hadoop_connect_to_hosts_without_pdsh function hadoop_common_worker_mode_execute function hadoop_validate_classname function hadoop_add_param function hadoop_add_profile function hadoop_add_classpath function hadoop_add_colonpath function hadoop_add_javalibpath function hadoop_add_ldlibpath function hadoop_add_common_to_classpath function hadoop_add_to_classpath_tools function hadoop_add_to_classpath_userpath function hadoop_os_tricks function hadoop_java_setup function hadoop_finalize_libpaths function hadoop_finalize_hadoop_heap function hadoop_translate_cygwin_path function hadoop_add_client_opts function hadoop_finalize_hadoop_opts function hadoop_finalize_classpath function hadoop_finalize function hadoop_exit_with_usage function hadoop_verify_secure_prereq function hadoop_setup_secure_service function hadoop_verify_piddir function hadoop_verify_logdir function hadoop_status_daemon function hadoop_java_exec function hadoop_start_daemon function hadoop_start_daemon_wrapper function hadoop_start_secure_daemon function hadoop_start_secure_daemon_wrapper function wait_process_to_die_or_timeout function hadoop_stop_daemon function hadoop_stop_secure_daemon function hadoop_daemon_handler function hadoop_secure_daemon_handler function hadoop_detect_priv_subcmd function hadoop_build_custom_subcmd_var function hadoop_verify_user_resolves function hadoop_verify_user_perm function hadoop_need_reexec function hadoop_subcommand_opts function hadoop_subcommand_secure_opts function hadoop_do_classpath_subcommand function hadoop_parse_args function hadoop_generic_java_subcmd_handler
HADOOP_SUBCMD_USAGE=() HADOOP_OPTION_USAGE=() HADOOP_SUBCMD_USAGE_TYPES=()
for,21
for val in "${@}"; do done < <(for text in "${input[@]}"; do for subtype in "${HADOOP_SUBCMD_USAGE_TYPES[@]}"; do for i in ${HADOOP_OPTIONAL_TOOLS//,/ }; do for i in "${files1[@]}" "${files2[@]}" for i in ${HADOOP_SHELL_PROFILES} for i in ${HADOOP_SHELL_PROFILES} for i in ${HADOOP_SHELL_PROFILES} for i in ${HADOOP_SHELL_PROFILES} for (( i = 0; i < ${ for (( i = 0; i < argsSize; i++ )) for idx in $(echo "${HADOOP_CLASSPATH}" | tr : '\n'); do for ((i=0; i<=j; i++)); do for ((i=j; i>=0; i--)); do "Adding option '-cwd .'. See HADOOP-16276 for details." "No need to add option '-cwd .'. See HADOOP-16276 for details." for (( i=0; i < "${timeout}"; i++ )) hadoop_error "WARNING: pid has changed for ${cmd}, skip deleting pid file" hadoop_error "WARNING: daemon pid has changed for ${command}, skip deleting daemon pid file" hadoop_error "WARNING: priv pid has changed for ${command}, skip deleting priv pid file" hadoop_error "ERROR: No parameter provided for --config "
if,179
if [[ -n "${HADOOP_SHELL_SCRIPT_DEBUG}" ]]; then if [[ ! -e ${obj} ]]; then elif [[ -d ${obj} ]]; then if [[ ${dirret} = 0 ]]; then if [[ ${!1} =~ \ ${2}\ ]] ; then if [[ ! ${!1} =~ \ ${2}\ ]] ; then if [[ "$ if [[ "${val}" == "${element}" ]]; then if ! hadoop_array_contains "${add}" "${array[@]}"; then if [[ "${globstatus}" = off ]]; then if hadoop_privilege_check; then if hadoop_verify_user_resolves user; then if hadoop_privilege_check; then if [[ -n "${!uvar}" ]]; then elif [[ -n "${!svar}" ]]; then if [[ -n "${COLUMNS}" ]]; then if [[ -z "${numcols}" if [[ ${ if [[ -n "${reqtype}" ]]; then if [[ "${cmdtype}" != "${reqtype}" ]]; then if [[ -z "${giventext}" ]]; then if [[ -n "${HADOOP_OPTION_USAGE_COUNTER}" if [[ -n "${HADOOP_SUBCMD_USAGE_COUNTER}" if [[ ${takesclass} = true ]]; then if [[ "${haveoptions}" = true ]]; then if [[ "${havesubs}" = true ]]; then if [[ "${ if [[ -n "${oldval}" ]]; then if [[ -n "${val}" ]]; then if [[ ! -w "${dir}" ]] && [[ ! -d "${dir}" ]]; then if ! mkdir -p "${dir}"; then if [[ -n "${DEFAULT_LIBEXEC_DIR}" ]]; then if [[ -z "${HADOOP_LIBEXEC_DIR}" ]]; then if [[ -e "${HADOOP_HOME}/conf/hadoop-env.sh" ]]; then if [[ ! -f "${HADOOP_CONF_DIR}/log4j.properties" ]]; then if [[ -z "${HADOOP_ENV_PROCESSED}" ]]; then if [[ -f "${HADOOP_CONF_DIR}/hadoop-env.sh" ]]; then if [[ -e "${HADOOP_CONF_DIR}/hadoop-user-functions.sh" ]]; then if [[ -f "${HOME}/.hadoop-env" ]]; then if [[ -f "${HOME}/.hadooprc" ]]; then if [[ -d "${HADOOP_LIBEXEC_DIR}/shellprofile.d" ]]; then if [[ -d "${HADOOP_CONF_DIR}/shellprofile.d" ]]; then if [[ -n "${i}" if declare -F _${i}_hadoop_init >/dev/null ; then if declare -F _${i}_hadoop_classpath >/dev/null ; then if declare -F _${i}_hadoop_nativelib >/dev/null ; then if declare -F _${i}_hadoop_finalize >/dev/null ; then if [[ -z "${HADOOP_COMMON_HOME}" ]] && if [[ -z "${HADOOP_HDFS_HOME}" ]] && if [[ -z "${HADOOP_YARN_HOME}" ]] && if [[ -z "${HADOOP_MAPRED_HOME}" ]] && if [[ ! -d "${HADOOP_COMMON_HOME}" ]]; then if [[ ! -d "${HADOOP_HDFS_HOME}" ]]; then if [[ ! -d "${HADOOP_YARN_HOME}" ]]; then if [[ ! -d "${HADOOP_MAPRED_HOME}" ]]; then if [[ -f "${workersfile}" ]]; then elif [[ -f "${HADOOP_CONF_DIR}/${workersfile}" ]]; then if [[ -f "${log}" ]]; then if [[ -f "${log}.${prev}" ]]; then if [[ -n "${HADOOP_WORKERS}" && -n "${HADOOP_WORKER_NAMES}" ]] ; then elif [[ -z "${HADOOP_WORKER_NAMES}" ]]; then if [[ -n "${HADOOP_WORKERS}" ]]; then elif [[ -f "${HADOOP_CONF_DIR}/workers" ]]; then elif [[ -f "${HADOOP_CONF_DIR}/slaves" ]]; then if [[ -e '/usr/bin/pdsh' ]]; then if [[ -z "${HADOOP_WORKER_NAMES}" ]] ; then if [[ -z "${HADOOP_WORKER_NAMES}" ]]; then if (( i != 0 && i % HADOOP_SSH_PARALLEL == 0 )); then if [[ "${argv[$i]}" =~ ^--workers$ ]]; then elif [[ "${argv[$i]}" =~ ^--hostnames$ ]] || if [[ ${QATESTMODE} = true ]]; then if [[ ! ${class} =~ \. ]]; then if [[ ! ${!1} =~ $2 ]] ; then if [[ ${!1:0:1} = ' ' ]]; then if [[ $1 =~ ^.*\*$ ]]; then if [[ ! -d "${mp}" ]]; then elif [[ ! $1 =~ ^.*\*.*$ ]] && [[ ! -e "$1" ]]; then if [[ -z "${CLASSPATH}" ]]; then elif [[ ":${CLASSPATH}:" != *":$1:"* ]]; then if [[ "$2" = "before" ]]; then if [[ -d "${2}" ]] && [[ ":${!1}:" != *":$2:"* ]]; then if [[ -z "${!1}" ]]; then elif [[ "$3" = "before" ]]; then if [[ -z "${HADOOP_COMMON_HOME}" if [[ -n "${HADOOP_ENABLE_BUILD_PATHS}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/tools/${module}.sh" ]]; then if declare -f hadoop_classpath_tools_${module} >/dev/null 2>&1; then if [[ -n "${HADOOP_CLASSPATH}" ]]; then if [[ -z "${HADOOP_USE_CLIENT_CLASSLOADER}" ]]; then if [[ -z "${HADOOP_USER_CLASSPATH_FIRST}" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ -x /usr/libexec/java_home ]]; then if [[ "${QATESTMODE}" = true ]]; then if [[ -n "${bindv6only}" ]] && if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -d "${JAVA_HOME}" ]]; then if [[ ! -x "$JAVA" ]]; then if [[ -n "${JAVA_LIBRARY_PATH}" ]]; then if [[ -n "${HADOOP_HEAPSIZE_MAX}" ]]; then if [[ "${HADOOP_HEAPSIZE_MAX}" =~ ^[0-9]+$ ]]; then if [[ -n "${HADOOP_HEAPSIZE}" ]]; then if [[ "${HADOOP_HEAPSIZE}" =~ ^[0-9]+$ ]]; then if [[ -n "${HADOOP_HEAPSIZE_MIN}" ]]; then if [[ "${HADOOP_HEAPSIZE_MIN}" =~ ^[0-9]+$ ]]; then if [[ "${HADOOP_IS_CYGWIN}" = "true" ]]; then if [[ "$2" = "true" ]]; then if [[ "${HADOOP_SUBCMD_SUPPORTDAEMONIZATION}" = false if [[ -z $exitcode ]]; then if declare -F hadoop_usage >/dev/null ; then elif [[ -x /usr/bin/cowsay ]]; then if ! hadoop_privilege_check && [[ -z "${HADOOP_SECURE_COMMAND}" ]]; then if [[ -z "${HADOOP_PID_DIR}" ]]; then if [[ $? -gt 0 ]]; then if [[ -z "${HADOOP_LOG_DIR}" ]]; then if [[ $? -gt 0 ]]; then if [[ -f "${pidfile}" ]]; then if pspid=$(ps -o args= -p"${pid}" 2>/dev/null); then if [[ ${pspid} =~ -Dproc_${daemonname} ]]; then if [[ $? -gt 0 ]]; then if [[ $? -gt 0 ]]; then if [[ $? -gt 0 ]]; then if [[ $? -gt 0 ]]; then if ! ps -p $! >/dev/null 2>&1; then if [[ ! -f "${jsvc}" ]]; then if [[ -z "${HADOOP_DAEMON_JSVC_EXTRA_OPTS}" ]]; then if ${jsvc} -help | grep -q "\-cwd"; then if [[ $? -gt 0 ]]; then if ! echo $! > "${jsvcpidfile}"; then if [[ $? -gt 0 ]]; then if [[ -f "${daemonpidfile}" ]]; then if [[ $? -gt 0 ]]; then if [[ $? -gt 0 ]]; then if ! ps -p $! >/dev/null 2>&1; then if [[ ${timeout} -lt 1 ]]; then if kill -0 "${pid}" > /dev/null 2>&1; then if [[ -f "${pidfile}" ]]; then if kill -0 "${pid}" > /dev/null 2>&1; then if ps -p "${pid}" > /dev/null 2>&1; then if [[ "${pid}" = "${cur_pid}" ]]; then if [[ "${daemon_pid}" = "${cur_daemon_pid}" ]]; then if [[ "${priv_pid}" = "${cur_priv_pid}" ]]; then if [[ $? == 0 ]]; then elif [[ $? == 1 ]]; then if [[ $? == 0 ]]; then if [[ "$daemonmode" = "default" ]]; then if [[ $? == 0 ]]; then if [[ "${daemonmode}" = "default" ]]; then if [[ -z "${HADOOP_SECURE_CLASSNAME}" ]]; then if [[ -z "${!uvar}" ]]; then if [[ -z "${BASH_VERSINFO[0]}" ]] \ if [[ -z ${userstr} || -z ${!userstr} ]] ; then if [[ ${command} =~ \. ]]; then if [[ -n ${!uvar} ]]; then if [[ ${!uvar} != "${USER}" ]]; then if [[ "${HADOOP_REEXECED_CMD}" = true ]]; then if [[ ${command} =~ \. ]]; then if hadoop_privilege_check; then if [[ -n ${!uvar} ]]; then if [[ ${!uvar} != "${USER}" ]]; then if [[ -z "${program}" || -z "${command}" ]]; then if [[ ${command} =~ \. ]]; then if [[ -z "${BASH_VERSINFO[0]}" ]] \ if [[ "${depvar}" != "${uvar}" ]]; then if [[ -n "${!depvar}" ]]; then if [[ -n ${!uvar} ]]; then if [[ -z "${program}" || -z "${command}" ]]; then if [[ -n ${!uvar} ]]; then if [[ "$ if [[ -d "${confdir}" ]]; then elif [[ -z "${confdir}" ]]; then if [[ -z "${HADOOP_DAEMON_MODE}" || \ if [[ "${HADOOP_REEXECED_CMD}" = true ]]; then if hadoop_detect_priv_subcmd "${HADOOP_SHELL_EXECNAME}" "${HADOOP_SUBCMD}"; then if ! hadoop_verify_user_resolves "${secureuser}"; then if [[ "${HADOOP_SUBCMD_SECURESERVICE}" = true ]]; then if [[ "${HADOOP_DAEMON_MODE}" != "default" ]]; then if [[ "${HADOOP_SUBCMD_SECURESERVICE}" = true ]]; then if [[ "${HADOOP_SUBCMD_SUPPORTDAEMONIZATION}" = true ]]; then if [[ "${HADOOP_SUBCMD_SECURESERVICE}" = true ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/hadoop-daemons.sh
lines,77
function,1
function hadoop_usage

for,1
for (( i = 0; i < ${
if,5
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then if [[ $ if [[ -z "${HADOOP_HDFS_HOME}" ]]; then if [[ "${HADOOP_USER_PARAMS[$i]}" =~ ^start$ ]] ||
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/hadoop-config.sh
lines,165
function,0


for,0

if,8
if [[ -z "${BASH_VERSINFO[0]}" ]] \ if [[ -z "${HADOOP_LIBEXEC_DIR}" ]]; then if [[ -n "${HADOOP_COMMON_HOME}" ]] && elif [[ -e "${HADOOP_LIBEXEC_DIR}/hadoop-functions.sh" ]]; then if [[ -n "${HADOOP_COMMON_HOME}" ]] && elif [[ -e "${HADOOP_LIBEXEC_DIR}/hadoop-layout.sh" ]]; then if declare -F hadoop_subproject_init >/dev/null ; then if [[ -z "${HADOOP_NEW_CONFIG}" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/start-all.sh
lines,65
function,1
function hadoop_abort_startall()
function hadoop_abort_startall()
for,0

if,5
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then if ! hadoop_privilege_check; then if [[ -f "${HADOOP_HDFS_HOME}/sbin/start-dfs.sh" ]]; then if [[ -f "${HADOOP_YARN_HOME}/sbin/start-yarn.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/workers.sh
lines,60
function,1
function hadoop_usage

for,0

if,3
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then if [[ $
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-common-project/hadoop-common/src/main/bin/stop-all.sh
lines,65
function,1
function hadoop_abort_stopall()
function hadoop_abort_stopall()
for,0

if,5
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then if ! hadoop_privilege_check; then if [[ -f "${HADOOP_HDFS_HOME}/sbin/stop-dfs.sh" ]]; then if [[ -f "${HADOOP_HDFS_HOME}/sbin/stop-yarn.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/libexec/shellprofile.d/hadoop-httpfs.sh
lines,54
function,1
function hdfs_subcommand_httpfs

for,0

if,2
if [[ "${HADOOP_SHELL_EXECNAME}" = hdfs ]]; then if [[ -f "${HADOOP_CONF_DIR}/httpfs-env.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/conf/httpfs-env.sh
lines,58
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/sbin/httpfs.sh
lines,64
function,1
function print_usage

for,0

if,2
if [[ $ if [[ -n "${HADOOP_HOME}" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs-native-client/src/main/native/fuse-dfs/fuse_dfs_wrapper.sh
lines,52
function,0


for,0

if,4
if [ "$HADOOP_HOME" = "" ]; then if [ "$OS_ARCH" = "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ "$LD_LIBRARY_PATH" = "" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs-native-client/src/main/native/libhdfs-examples/test-libhdfs.sh
lines,152
function,1

findlibjvm () {
for,4
for d in $JAR_DIRS; do for j in $d/*.jar; do for i in {1..15}; do echo "Waiting for DFS cluster, attempt $i of 15"
if,7
if [ "x$HADOOP_HOME" == "x" ]; then if [ "x$LIBHDFS_BUILD_DIR" == "x" ]; then if [ "x$HDFS_TEST_CONF_DIR" == "x" ]; then if [ "x$HDFS_TEST_JAR" == "x" ]; then if test -z "$lib_jvm_dir"; then if test -z "$lib_jvm_dir"; then if [ ! -f $HDFS_TEST_CONF_DIR/core-site.xml ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/test/scripts/run-bats.sh
lines,43
function,0


for,1
for j in *.bats; do
if,2
if [[ -z ${batsexe} ]]; then if [[ ${exitcode} -gt 0 ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/topology-broken-script.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/topology-script.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/shellprofile.d/hadoop-hdfs.sh
lines,36
function,1
function _hdfs_hadoop_classpath

for,0

if,2
if [[ -n "${HADOOP_ENABLE_BUILD_PATHS}" ]]; then if [[ -d "${HADOOP_HDFS_HOME}/${HDFS_DIR}/webapps" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/start-dfs.sh
lines,178
function,1
function hadoop_usage

for,0

if,9
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then if [[ $ if [[ -z "${NAMENODES}" ]]; then if [[ -n "${SECONDARY_NAMENODES}" ]]; then if [[ "${NAMENODES}" =~ , ]]; then if [[ "${SECONDARY_NAMENODES}" == "0.0.0.0" ]]; then if [[ "${ if [[ "${AUTOHA_ENABLED}" = "true" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/start-balancer.sh
lines,51
function,1
function hadoop_usage

for,2
hadoop_add_option "--loglevel level" "set the log4j level for this command" hadoop_add_option "-threshold <threshold>" "set the threshold for balancing"
if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/stop-balancer.sh
lines,50
function,1
function hadoop_usage

for,1
hadoop_add_option "--loglevel level" "set the log4j level for this command"
if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/hdfs-config.sh
lines,93
function,1
function hadoop_subproject_init

for,0

if,6
if [[ -z "${HADOOP_HDFS_ENV_PROCESSED}" ]]; then if [[ -e "${HADOOP_CONF_DIR}/hdfs-env.sh" ]]; then if [[ -z "${HADOOP_LIBEXEC_DIR}" ]]; then if [[ -n "${HADOOP_COMMON_HOME}" ]] && elif [[ -e "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then elif [ -e "${HADOOP_HOME}/libexec/hadoop-config.sh" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/distribute-exclude.sh
lines,81
function,0


for,1
for namenode in $namenodes ; do
if,5
if [ "$1" = '' ] ; then if [ ! -f "$excludeFilenameLocal" ] ; then if [ "$excludeFilenameRemote" = '' ] ; then if [ "$?" != '0' ] ; then errorFlag='1' ; fi if [ "$errorFlag" = '1' ] ; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/refresh-namenodes.sh
lines,64
function,0


for,1
for namenode in ${namenodes} ; do
if,5
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then if [[ "$?" != '0' ]] ; then if [[ "$?" != '0' ]]; then if [[ "${errorFlag}" = '1' ]] ; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/start-secure-dns.sh
lines,54
function,1
function hadoop_usage()
function hadoop_usage()
for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/stop-dfs.sh
lines,130
function,1
function hadoop_usage

for,0

if,7
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then if [[ -z "${NAMENODES}" ]]; then if [[ "${SECONDARY_NAMENODES}" == "0.0.0.0" ]]; then if [[ -n "${SECONDARY_NAMENODES}" ]]; then if [[ "${ if [[ "${AUTOHA_ENABLED}" = "true" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-hdfs-project/hadoop-hdfs/src/main/bin/stop-secure-dns.sh
lines,53
function,1
function hadoop_usage()
function hadoop_usage()
for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/hdfs-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/start-build-env.sh
lines,96
function,0


for,1
for d in "${PWD}" "${HOME}/.m2"; do
if,6
if [[ "$CPU_ARCH" = "aarch64" || "$CPU_ARCH" = "arm64" ]]; then if [ "$(uname -s)" = "Darwin" ]; then if [ "$(uname -s)" = "Linux" ]; then if command -v selinuxenabled >/dev/null && selinuxenabled; then if [ "${DCKR_MAJ}" -eq 1 ] && [ "${DCKR_MIN}" -ge 7 ] || if [ "$ctx" != svirt_sandbox_file_t ] && [ "$ctx" != container_file_t ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-docker/src/main/scripts/setup-image.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-docker/src/main/scripts/entrypoint.sh
lines,80
function,1

template_generator() { SOLR_OPTS=()
for,0

if,8
if [ -e "$2" ]; then if [ "${SOLR_STORAGE_TYPE}" == "hdfs" ]; then if [ -e "$HADOOP_CONF_DIR" ]; then if [ "${SOLR_DATA_DIR}" != "" ]; then if [ -e "$KEYTAB" ]; then if [ -d /etc/hadoop/conf ]; then if [ -e "$SPNEGO_KEYTAB" ]; then if [ -z "$SPNEGO_PRINCIPAL" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/conf/yarn-env.sh
lines,198
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/shellprofile.d/hadoop-yarn.sh
lines,62
function,2
function _yarn_hadoop_classpath function _yarn_hadoop_finalize

for,1
for i in yarn-api yarn-common yarn-mapreduce yarn-master-worker \
if,2
if [[ -n "${HADOOP_ENABLE_BUILD_PATHS}" ]]; then if [[ -d "${HADOOP_YARN_HOME}/${YARN_DIR}/webapps" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/bin/yarn-daemon.sh
lines,49
function,1
function hadoop_usage

for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/yarn-config.sh" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/bin/start-yarn.sh
lines,99
function,1
function hadoop_usage

for,1
for id in ${logicals}
if,4
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/yarn-config.sh" ]]; then if [[ ${HARM} = "false" ]]; then if [[ -n ${PROXYSERVER} ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/bin/stop-yarn.sh
lines,92
function,1
function hadoop_usage

for,1
for id in ${logicals}
if,4
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/yarn-config.sh" ]]; then if [[ ${HARM} = "false" ]]; then if [[ -n ${PROXYSERVER} ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/bin/yarn-config.sh
lines,83
function,1
function hadoop_subproject_init

for,0

if,7
if [[ -z "${HADOOP_YARN_ENV_PROCESSED}" ]]; then if [[ -e "${YARN_CONF_DIR}/yarn-env.sh" ]]; then elif [[ -e "${HADOOP_CONF_DIR}/yarn-env.sh" ]]; then if [[ -z "${HADOOP_LIBEXEC_DIR}" ]]; then if [[ -n "${HADOOP_COMMON_HOME}" ]] && elif [[ -e "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then elif [ -e "${HADOOP_HOME}/libexec/hadoop-config.sh" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-yarn-project/hadoop-yarn/bin/yarn-daemons.sh
lines,68
function,1
function hadoop_usage

for,1
for (( i = 0; i < ${
if,3
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/yarn-config.sh" ]]; then if [[ "${HADOOP_USER_PARAMS[$i]}" =~ ^start$ ]] ||
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test.sh
lines,36
function,0


for,0

if,3
if [ "$1" = "all" ]; then if [ "$1" = "perf" ]; then if [ "${SYSTEM_MAC}" = "TRUE" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-mapreduce-project/conf/mapred-env.sh
lines,45
function,0


for,0

if,0

git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-mapreduce-project/shellprofile.d/hadoop-mapreduce.sh
lines,41
function,1
function _mapred_hadoop_classpath

for,0

if,2
if [[ -n "${HADOOP_ENABLE_BUILD_PATHS}" ]]; then if [[ -d "${HADOOP_MAPRED_HOME}/${MAPRED_DIR}/webapps" ]]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-mapreduce-project/bin/mapred-config.sh
lines,74
function,1
function hadoop_subproject_init

for,0

if,6
if [[ -z "${HADOOP_MAPRED_ENV_PROCESSED}" ]]; then if [[ -e "${HADOOP_CONF_DIR}/mapred-env.sh" ]]; then if [[ -z "${HADOOP_LIBEXEC_DIR}" ]]; then if [[ -n "${HADOOP_COMMON_HOME}" ]] && elif [[ -e "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then elif [ -e "${HADOOP_HOME}/libexec/hadoop-config.sh" ]; then
git@github.com:apache/hadoop.git,8bf72346a59c2eb785fb2a8e55c0246a4f158646,hadoop,13874,./hadoop/hadoop-mapreduce-project/bin/mr-jobhistory-daemon.sh
lines,49
function,1
function hadoop_usage

for,0

if,2
if [[ -n "${HADOOP_HOME}" ]]; then if [[ -f "${HADOOP_LIBEXEC_DIR}/yarn-config.sh" ]]; then
git@github.com:zhisheng17/flink-learning.git,a941b297e85417914a5b7088eaa58dd860fe7d36,flink-learning,13831,./flink-learning/flink-learning-k8s/dockerfile/build_flink_docker_images.sh
lines,9
function,0


for,0

if,0

git@github.com:zhisheng17/flink-learning.git,a941b297e85417914a5b7088eaa58dd860fe7d36,flink-learning,13831,./flink-learning/flink-learning-k8s/dockerfile/build_ingress.sh
lines,12
function,0


for,0

if,0

git@github.com:zhisheng17/flink-learning.git,a941b297e85417914a5b7088eaa58dd860fe7d36,flink-learning,13831,./flink-learning/flink-learning-k8s/dockerfile/docker-entrypoint.sh
lines,153
function,5

drop_privs_cmd() { copy_plugins_if_required() { set_config_option() { prepare_configuration() { maybe_enable_jemalloc() {
for,1
for target_plugin in $(echo "$ENABLE_BUILT_IN_PLUGINS" | tr ';' ' '); do
if,13
if [ $(id -u) != 0 ]; then elif [ -x /sbin/su-exec ]; then if [ -z "$ENABLE_BUILT_IN_PLUGINS" ]; then if [ ! -e "${FLINK_HOME}/opt/${target_plugin}" ]; then if grep -E "^${escaped_option}:.*" "${CONF_FILE}" > /dev/null; then if [ -n "${FLINK_PROPERTIES}" ]; then if [ "${DISABLE_JEMALLOC:-false}" == "false" ]; then if [ "$1" = "help" ]; then elif [ "$1" = "jobmanager" ]; then elif [ "$1" = ${COMMAND_STANDALONE} ]; then elif [ "$1" = ${COMMAND_HISTORY_SERVER} ]; then elif [ "$1" = "taskmanager" ]; then elif [ "$1" = "$COMMAND_NATIVE_KUBERNETES" ]; then
git@github.com:eclipse-vertx/vert.x.git,63eca80cb95d4b8090620a752f3aa92241ea4a9d,vert.x,13778,
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/arduino-core/src/processing/app/i18n/update.sh
lines,61
function,2

catalog() update()
for,1
for target in $targets; do
if,3
if [ $0 != "./update.sh" ]; then if [ $1 = '-a' ]; then if [ "$targets" = "" ]; then
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/arduino-core/src/processing/app/i18n/pull.sh
lines,50
function,0


for,2
for f in Resources_*.po; do for lang in $langs; do
if,5
if [ $0 != "./pull.sh" ]; then if [ $1 = '-a' ]; then if [ "$langs" = "" ]; then if [ "$ALL" = "y" ]; then if [ -f "Resources_$lang.po" ]; then
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/arduino-core/src/processing/app/i18n/push.sh
lines,25
function,0


for,1
for f in Resources_*.po; do
if,3
if [ $0 != "./push.sh" ]; then if [ $1 = '-a' ]; then if [ "$langs" = "" ]; then
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/linux/dist/arduino-linux-setup.sh
lines,249
function,8

refreshudev () { groupsfunc () { acmrules () { openocdrules () { avrisprules () { dfustm32rules () { dfuarduino101rules (){ removemm () {
for,0

if,7
if [ -d /lib/systemd/ ] if [ -f /etc/SuSE-release ] elif [ -f /etc/fedora-release ] || [ -f /etc/redhat-release ] elif [ -f /etc/arch-release ] elif [ -f /etc/slackware-version ] elif [ -f /etc/lsb-release ] || [ -f /etc/debian_version ] || [ -f /etc/linuxmint/info ] if [ "$1" = "" ]
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/linux/dist/uninstall.sh
lines,6
function,0


for,0

if,0

git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/linux/dist/install.sh
lines,290
function,7

xdg_install_f() { simple_install_f() { xdg_uninstall_f() { simple_uninstall_f() { updatedbs_f() { xdg_exists_f() { display_help_f() {
for,5
printf "icons and file associations for the current user.\n" printf "Removing desktop shortcut and menu item for Arduino IDE..." printf "Adding desktop shortcut, menu item and file associations for Arduino IDE..." printf "Removing desktop shortcut and menu item for Arduino IDE..." printf "Adding desktop shortcut and menu item for Arduino IDE..."
if,26
if [ -f "${XDG_CONFIG_HOME:-${HOME}/.config}/user-dirs.dirs" ]; then if [ x${SUDO_USER} != x ]; then if ! ln -s ${SCRIPT_PATH}/arduino /usr/local/bin/arduino; then if [ -d "${XDG_DESKTOP_DIR}" ]; then if [ x${SUDO_USER} != x ]; then if ! ln -s ${SCRIPT_PATH}/arduino /usr/local/bin/arduino; then if [ -f /usr/local/bin/arduino ]; then if [ -f "${HOME}/.local/share/applications/arduino.desktop" ]; then if [ -f "${HOME}/.local/share/applications/arduino-arduinoide.desktop" ]; then if [ -f "${HOME}/.local/share/applications/${RESOURCE_NAME}.desktop" ]; then if [ -f "${HOME}/.local/share/metainfo/${RESOURCE_NAME}.appdata.xml" ]; then if [ -f "${XDG_DESKTOP_DIR}/arduino.desktop" ]; then if [ -f "${XDG_DESKTOP_DIR}/${RESOURCE_NAME}.desktop" ]; then if [ -f /usr/local/bin/arduino ]; then if [ -d "${HOME}/.local/share/applications" ]; then if command -v update-desktop-database > /dev/null; then if [ -d "${HOME}/.local/share/mime" ]; then if command -v update-mime-database > /dev/null; then if ! command -v xdg-icon-resource > /dev/null; then return 1; fi if ! command -v xdg-desktop-menu > /dev/null; then return 1; fi if ! command -v xdg-desktop-icon > /dev/null; then return 1; fi if ! command -v xdg-mime > /dev/null; then return 1; fi if ! xdg_exists_f; then if xdg_exists_f; then if [ ${UNINSTALL} = true ]; then if [ ${UNINSTALL} = true ]; then
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/shared/tools/Mangler/make.sh
lines,11
function,0


for,0

if,0

git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/macosx/dist/drivers/SiliconLabs-CP2105/uninstaller.sh
lines,17
function,0


for,0

if,4
if [ -d /System/Library/Extensions/SiLabsUSBDriver.kext ]; then if [ -d /System/Library/Extensions/SiLabsUSBDriver64.kext ]; then if [ -d /Library/Extensions/SiLabsUSBDriverYos.kext ]; then if [ -d /Library/Extensions/SiLabsUSBDriver.kext ]; then
git@github.com:arduino/Arduino.git,89539b1131f8cde9f7a83225f21c811071af53a8,Arduino,13747,./Arduino/build/fetch.sh
lines,21
function,1

die () { echo ERROR: $*; exit 1; }
for,0

if,0

git@github.com:orhanobut/logger.git,c64a72c2ce3d0fcdebe829b091e3a530c94ca6bd,logger,13663,
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/logstash-core/src/test/resources/org/logstash/util/x509_certificates/generate.sh
lines,51
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/x-pack/ci/unit_tests.sh
lines,18
function,0


for,0

if,1
if [ -n "$BUILD_JAVA_HOME" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/x-pack/ci/integration_tests.sh
lines,19
function,0


for,0

if,1
if [ -n "$BUILD_JAVA_HOME" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/x-pack/ci/docker_unit_tests.sh
lines,6
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/x-pack/ci/docker_integration_tests.sh
lines,9
function,0


for,0

if,1
if [ -n "${ELASTICSEARCH_SNAPSHOT_URL}" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/pull-requests/sonar-env.sh
lines,9
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/snyk/resolve_stack_version.sh
lines,18
function,0

SNAPSHOT_VERSIONS=()
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/snyk/report.sh
lines,142
function,9

install_java() { resolve_latest_branches() { clone_logstash_repo() { build_logstash() { download_auth_snyk() { report() { report_docker_image() { report_docker_images() { resolve_version_and_report_docker_images() {
for,4
for SNAPSHOT_VERSION in "${SNAPSHOT_VERSIONS[@]}" for TARGET_BRANCH in "${TARGET_BRANCHES[@]}" for TARGET_BRANCH in "${TARGET_BRANCHES[@]}" echo "Using $TARGET_BRANCH branch for docker images."
if,2
if [ "$REMOTE_REPO_URL" != "main" ]; then if [[ $platform != null ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/common/container-agent.sh
lines,17
function,0


for,0

if,1
if [[ $(whoami) == "logstash" ]]
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/build_docker.sh
lines,90
function,0


for,6
info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Saving tar.gz for docker images" for file in build/logstash-*; do shasum $file;done for image in ${images}; do for image in logstash logstash-oss logstash-ubi8 logstash-ironbank; do
if,8
if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/common.sh
lines,46
function,3
function info { function error { function save_docker_tarballs {

for,2
for image in ${images}; do error "Unable to save tar file ${tar_file} for ${image} image."
if,2
if [ "${arch}" != "aarch64" ]; then if [[ ! -z $DRA_DRY_RUN && $BUILDKITE_STEP_KEY == "logstash_publish_dra" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/docker-env-teardown.sh
lines,15
function,0


for,1
for var in $(printenv | sed 's;=.*;;' | sort); do
if,2
if [[ $var != "VAULT_ADDR" && ("$var" == *_SECRET || "$var" == *_TOKEN || "$var" == *VAULT* ) ]]; then if command -v docker &>/dev/null; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/publish.sh
lines,100
function,0


for,2
info "Uploading artifacts for ${WORKFLOW_TYPE} workflow on branch: ${RELEASE_BRANCH}" for file in build/logstash-*; do shasum $file;done
if,3
if [ -n "$(git ls-remote --heads origin $RELEASE_VER)" ] ; then if [ -n "$VERSION_QUALIFIER_OPT" ]; then if [ "$RELEASE_VER" != "7.17" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/docker-env-setup.sh
lines,23
function,2
function docker_login { function release_manager_login {

for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/dra/build_packages.sh
lines,58
function,0


for,4
info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Building artifacts for the $WORKFLOW_TYPE workflow..." for file in build/logstash-*; do shasum $file;done info "Creating dependencies report for ${STACK_VERSION}"
if,2
if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ -z "$VERSION_QUALIFIER_OPT" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/.buildkite/scripts/setup_java.sh
lines,10
function,1

install_java() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/bin/ingest-convert.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/bin/benchmark.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/bin/logstash.lib.sh
lines,198
function,6

setup_bundled_jdk_part() { setup_classpath() { setup_java() { setup_vendored_jruby() { setup() { ruby_exec() {
for,2
for i in "$@"; do for J in $(cd "${jar_directory}"; ls *.jar); do
if,25
if [ -L "$0" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ $found -eq 1 ]; then if [ -r "${i}/jvm.options" ]; then if [ "$i" = "--path.settings" ]; then if [ $OS_NAME = "Darwin" ]; then if [ -z "$JAVACMD" ]; then if [ -n "$LS_JAVA_HOME" ]; then if [ -x "$LS_JAVA_HOME/bin/java" ]; then if [ -d "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}" -a -x "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}/bin/java" ]; then if [ ! -e "${LOGSTASH_HOME}/JDK_VERSION" ]; then elif [ -d "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}" -a -x "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}/bin/java" ]; then elif [ -n "$JAVACMD_TEST" ]; then if [ ! -x "$JAVACMD" ]; then if [ ! -z "$JAVA_TOOL_OPTIONS" ]; then if [ ! -z "$JAVA_OPTS" ]; then if [ -z "$LS_GC_LOG_FILE" ] ; then if [ $EXIT_CODE -ne 0 ]; then if [ ! -f "${JRUBY_BIN}" ] ; then if [ -z "$LS_GEM_HOME" ] ; then if [ "$DEBUG" ] ; then if [ -z "$LS_GEM_PATH" ] ; then if [ "$DEBUG" ] ; then if [ "$DEBUG" ] ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_license_check.sh
lines,5
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_prune.sh
lines,6
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/dra_common.sh
lines,49
function,4
function info { function error { function save_docker_tarballs { function upload_to_bucket {

for,2
for image in ${images}; do error "Unable to save tar file ${tar_file} for ${image} image."
if,2
if [ "${arch}" != "aarch64" ]; then if [ -z "$ARCH" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/unit_tests.sh
lines,37
function,0


for,0

if,3
if [ -n "$BUILD_JAVA_HOME" ]; then if [[ $SELECTED_TEST_SUITE == $"java" ]]; then elif [[ $SELECTED_TEST_SUITE == $"ruby" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/test_supported_plugins.sh
lines,6
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_run.sh
lines,48
function,1

cleanup() {
for,1
echo "Running Docker CI build for '$IMAGE_NAME' "
if,4
if [ -z "$branch_specifier" ]; then if [ "$OSS" == "true" ]; then if [ -e docker_cid ]; then if [ -n "$JDK" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_update_base_image.sh
lines,12
function,0


for,0

if,1
if docker rmi --force logstash-base ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/dra_upload.sh
lines,139
function,0


for,3
info "Uploading artifacts for ${WORKFLOW_TYPE} workflow on branch: ${RELEASE_BRANCH}" info "Download all the artifacts for version ${STACK_VERSION}" for file in build/logstash-*; do shasum $file;done
if,3
if [ -n "$(git ls-remote --heads origin $RELEASE_VER)" ] ; then if [ -n "$VERSION_QUALIFIER_OPT" ]; then if [ "$RELEASE_VER" != "7.17" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/ci_docs.sh
lines,15
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/bootstrap_dependencies.sh
lines,3
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/metricbeat_monitoring_tests.sh
lines,73
function,8

get_cpu_arch() { start_metricbeat() { stop_metricbeat() { get_monitor_count() { compare_monitor_count() { check_monitor_output() { check_plugin() { metricbeat_clean_up() {
for,0

if,2
if [ "$arch" == "arm64" ]; then if [[ ! -d "$MB_FILENAME" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/cpm_tests.sh
lines,48
function,6

index_pipeline() { index_cpm_pipelines() { check_es_output() { check_plugin() { delete_pipeline() { cpm_clean_up_and_get_result() {
for,1
echo "failed to update pipeline for Central Pipeline Management. Got $RESP_CODE from Elasticsearch"
if,1
if [[ $RESP_CODE -ge '400' ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/elastic_integration_filter_tests.sh
lines,54
function,6

deploy_ingest_pipeline() { check_integration_filter() { get_doc_msg_length() { validate_ds_doc() { check_doc_no_duplication() { check_plugin() {
for,0

if,2
if [[ $PIPELINE_RESP_CODE -ge '400' ]]; then if [[ $TEMPLATE_RESP_CODE -ge '400' ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/common.sh
lines,156
function,17

export ERR_MSGS=() export CHECKS=() setup_vault() { build_logstash() { index_test_data() { run_cpm_logstash() { run_logstash() { count_down_check() { check_logstash_readiness() { curl_logstash() { check_readiness() { check_logstash_api() { curl_node_stats() { add_check() { check_err_log() { print_result() { exit_with_code() { clean_up_and_get_result() { setup() {
for,2
for i in "${!CHECKS[@]}"; do for c in "${CHECKS[@]}"; do
if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/kibana_api_tests.sh
lines,68
function,4

create_pipeline() { get_pipeline() { list_pipeline() { delete_pipeline() {
for,0

if,4
if [[ RESP_CODE -ge '400' ]]; then if [[ ("$RESP_PIPELINE_NAME" -ne "$PIPELINE_NAME") || ("$RESP_PIPELINE" != "$SOURCE_PIPELINE") || ("$RESP_SETTING" != "$SOURCE_SETTING") ]]; then if [[ -z "$RESP_BODY" ]]; then if [[ RESP_CODE -ge '400' ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/dlq_rspec_tests.sh
lines,18
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/es_output_tests.sh
lines,29
function,5

check_named_index() { get_data_stream_count() { compare_data_stream_count() { check_data_stream_output() { check_plugin() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/es_filter_tests.sh
lines,16
function,2

check_es_filter() { check_plugin() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/monitoring_tests.sh
lines,26
function,4

get_monitor_count() { compare_monitor_count() { check_monitor() { check() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/serverless/es_input_tests.sh
lines,16
function,2

check_es_input() { check_plugin() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/dra_x86_64.sh
lines,63
function,0


for,5
info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Building artifacts for the $WORKFLOW_TYPE workflow..." for file in build/logstash-*; do shasum $file;done info "Creating dependencies report for ${STACK_VERSION}" for file in build/logstash-*; do
if,2
if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ -z "$VERSION_QUALIFIER_OPT" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/acceptance_tests.sh
lines,90
function,1

cleanup() {
for,0

if,4
if [ -n "$BUILD_JAVA_HOME" ]; then if [[ $SELECTED_TEST_SUITE == $"redhat" ]]; then elif [[ $SELECTED_TEST_SUITE == $"debian" ]]; then elif [[ $SELECTED_TEST_SUITE == $"all" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/integration_tests.sh
lines,48
function,0


for,0

if,6
if [ -n "$BUILD_JAVA_HOME" ]; then if [[ $1 = "setup" ]]; then elif [[ $1 == "split" ]]; then if [[ $2 == 0 ]]; then elif [[ $2 == 1 ]]; then elif [[ ! -z $@ ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/dra_docker.sh
lines,90
function,0


for,6
info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Building artifacts for the $WORKFLOW_TYPE workflow..." info "Saving tar.gz for docker images" for file in build/logstash-*; do shasum $file;done for image in ${images}; do for image in logstash logstash-oss logstash-ubi8 logstash-ironbank; do
if,8
if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ -z "$VERSION_QUALIFIER_OPT" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then if [ "$ARCH" != "aarch64" ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_unit_tests.sh
lines,10
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_integration_tests.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/license_check.sh
lines,12
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/ci/docker_acceptance_tests.sh
lines,79
function,0


for,0

if,4
if [ -n "$BUILD_JAVA_HOME" ]; then if [[ $SELECTED_TEST_SUITE == "oss" ]]; then elif [[ $SELECTED_TEST_SUITE == "full" ]]; then elif [[ $SELECTED_TEST_SUITE == "ubi8" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/centos/after-install.sh
lines,29
function,0


for,0

if,1
if [ -n $systemd_version ] && [ $systemd_version -lt 229 ]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/centos/before-remove.sh
lines,37
function,0


for,0

if,10
if [ $1 -eq 0 ]; then if [ -r "/etc/init/logstash.conf" ]; then if [ -f "/sbin/stop" ]; then if [ -f "/etc/init/logstash.conf" ]; then elif [ -r "/etc/init.d/logstash" ]; then if [ -f "/etc/init.d/logstash" ]; then if [ -f "/etc/systemd/system/logstash-prestart.sh" ]; then if [ -f "/etc/systemd/system/logstash.service" ]; then if getent passwd logstash >/dev/null ; then if getent group logstash > /dev/null ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/centos/before-install.sh
lines,18
function,0


for,0

if,3
if ! getent group logstash >/dev/null; then if ! getent passwd logstash >/dev/null; then if [ -f /etc/systemd/system/logstash.service ] && \
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/debian/after-install.sh
lines,29
function,0


for,0

if,1
if [ -n $systemd_version ] && dpkg --compare-versions "$systemd_version" lt 229 ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/debian/before-remove.sh
lines,38
function,0


for,0

if,10
if [ $1 = "remove" ]; then if [ -r "/etc/init/logstash.conf" ]; then if [ -f "/sbin/stop" ]; then if [ -f "/etc/init/logstash.conf" ]; then elif [ -r "/etc/init.d/logstash" ]; then if [ -f "/etc/init.d/logstash" ]; then if [ -f "/etc/systemd/system/logstash-prestart.sh" ]; then if [ -f "/etc/systemd/system/logstash.service" ]; then if getent passwd logstash >/dev/null ; then if getent group logstash > /dev/null ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/debian/before-install.sh
lines,20
function,0


for,0

if,3
if ! getent group logstash >/dev/null; then if ! getent passwd logstash >/dev/null; then if [ -f /etc/systemd/system/logstash.service ] && \
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/ubuntu/after-install.sh
lines,28
function,0


for,0

if,1
if [ -n $systemd_version ] && dpkg --compare-versions "$systemd_version" lt 229 ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/ubuntu/before-remove.sh
lines,38
function,0


for,0

if,10
if [ $1 = "remove" ]; then if [ -r "/etc/init/logstash.conf" ]; then if [ -f "/sbin/stop" ]; then if [ -f "/etc/init/logstash.conf" ]; then elif [ -r "/etc/init.d/logstash" ]; then if [ -f "/etc/init.d/logstash" ]; then if [ -f "/etc/systemd/system/logstash-prestart.sh" ]; then if [ -f "/etc/systemd/system/logstash.service" ]; then if getent passwd logstash >/dev/null ; then if getent group logstash > /dev/null ; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/pkg/ubuntu/before-install.sh
lines,20
function,0


for,0

if,3
if ! getent group logstash >/dev/null; then if ! getent passwd logstash >/dev/null; then if [ -f /etc/systemd/system/logstash.service ] && \
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/elasticsearch_teardown.sh
lines,27
function,1

stop_es() {
for,1
echo "waiting for elasticsearch to stop"
if,1
if [ "x$pid" != "x" ] && [ "$pid" -gt 0 ]
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/filebeat_setup.sh
lines,13
function,1

generate_certificate() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/http_proxy_teardown.sh
lines,5
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/kafka_teardown.sh
lines,25
function,1

stop_kafka() {
for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/helpers.sh
lines,33
function,4

setup_install_dir() { wait_for_port() { test_port(){ clean_install_dir() {
for,0

if,2
if [[ ! -d "$INSTALL_DIR" ]]; then if [[ -d "$INSTALL_DIR" ]]; then
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/kafka_setup.sh
lines,75
function,3

setup_kafka() { start_kafka() { wait_for_messages() {
for,0

if,3
if [ -n "${KAFKA_VERSION+1}" ]; then if [ ! -d $KAFKA_HOME ]; then echo "Checking if Kafka topic has been populated with data"
git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/http_proxy_setup.sh
lines,25
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/services/elasticsearch_setup.sh
lines,24
function,1

start_es() {
for,1
echo "Waiting for elasticsearch to respond..."
if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/fixtures/logstash-dummy-pack/bundle.sh
lines,20
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/integration/fixtures/webserver_certs/generate.sh
lines,70
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/suse/sles-11/bootstrap.sh
lines,8
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/suse/bootstrap.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/suse/sles-12/bootstrap.sh
lines,11
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/suse/user_bootstrap.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/redhat/bootstrap.sh
lines,4
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/redhat/user_bootstrap.sh
lines,5
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/debian/ubuntu-1404/bootstrap.sh
lines,8
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/debian/bootstrap.sh
lines,7
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/debian/debian-8/bootstrap.sh
lines,6
function,0


for,0

if,0

git@github.com:elastic/logstash.git,6046402a3582eb813cfdc9c3ed5dca89e961ed6e,logstash,13648,./logstash/qa/sys/debian/user_bootstrap.sh
lines,5
function,0


for,0

if,0

git@github.com:lgvalle/Material-Animations.git,be755fe9ebe7f9093360e4263c4293de368da1c7,Material-Animations,13550,
git@github.com:kunal-kushwaha/DSA-Bootcamp-Java.git,93ce6c86ba495b1eff126cbb33e87e9bdd535e00,DSA-Bootcamp-Java,13508,
git@github.com:doocs/source-code-hunter.git,edffbb407032f10a976af564f8849ad326d25f7c,source-code-hunter,13372,
git@github.com:Curzibn/Luban.git,d1fca89f2564e995cbdd9defb8000e5212ab5000,Luban,13366,
git@github.com:Bigkoo/Android-PickerView.git,e200d8c063aa2568d728854c048340ad2e4e0c0b,Android-PickerView,13335,
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/passing_test.sh
lines,2
function,0


for,0

if,0

git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/third_party/boringssl_fips/boringssl_fips.sh
lines,93
function,0


for,0

if,2
if [[ "$(uname)" != "Linux" ]]; then if [[ "$(tool/bssl isfips)" != "1" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/aead/aead_cli_test.sh
lines,215
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/daead/deterministic_aead_cli_test.sh
lines,215
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/mac/mac_cli_test.sh
lines,205
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/hybrid_encryption/hybrid_cli_test.sh
lines,216
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/jwt/jwt_signature_cli_test.sh
lines,182
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/digital_signatures/digital_signatures_cli_test.sh
lines,179
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/cc/examples/key_derivation/key_derivation_cli_test.sh
lines,118
function,5

test_command() { assert_command_succeeded() { assert_command_failed() { start_test_case() { end_test_case() {
for,0

if,2
if (( TEST_STATUS != 0 )); then if (( TEST_STATUS == 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/bazel_fips/run_tests.sh
lines,64
function,0


for,0

if,1
if (( $? != 0 || NUM_MATCHES != 1)); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/examples/cmake/run_tests.sh
lines,30
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/examples/cmake_openssl/run_tests.sh
lines,30
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/cmake/run_tests.sh
lines,28
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/cmake_openssl/run_tests.sh
lines,28
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/cc/bazel/run_tests.sh
lines,26
function,0


for,0

if,0

git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/go/gomod/run_tests.sh
lines,61
function,0


for,2
for go_module_directory in "${GO_MODULE_DIRECTORIES[@]}"; do for go_module_directory in "${GO_MODULE_DIRECTORIES[@]}"; do
if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/go/bazel/run_tests.sh
lines,43
function,0

MANUAL_TARGETS=()
for,0

if,2
if [[ -n "${KOKORO_ROOT:-}" ]]; then if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/java_src/run_tests.sh
lines,102
function,1

test_build_bazel_file() {
for,0

if,2
if ! cmp -s java_src/BUILD.bazel java_src/BUILD.bazel.generated ; then if [[ -n "${KOKORO_ROOT:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/gcp_ubuntu_per_language/python/pip/run_tests.sh
lines,45
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/update_certs.sh
lines,33
function,0


for,0

if,1
if [[ -z "${KOKORO_ROOT}" || "${PLATFORM}" != "linux" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/test_utils.sh
lines,173
function,9

_print_testcase_failed_and_exit() { _start_test_case() { _end_test_case_with_success() { _get_all_tests() { _do_run_test() { run_all_tests() { ASSERT_CMD_SUCCEEDED() { ASSERT_CMD_FAILED() { ASSERT_FILE_EQUALS() {
for,1
for test in $(_get_all_tests); do
if,5
if (( $result == 0 )); then if [[ "${_HAS_ERROR}" == "true" ]]; then if (( $? != 0 )); then if (( $? == 0 )); then if ! diff "${input_file}" "${expected_file}"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_go.sh
lines,63
function,1

install_temp_go() {
for,0

if,1
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/replace_http_archive_with_local_repository_test.sh
lines,93
function,5

_copy_test_file() { test_ReplaceHttpArchiveWithLocalRepositoryTest_GeneralTest() { HttpArchiveIsNotDeletedBecauseOtherHttpArchiveIsPresent() { HttpArchiveIsDeletedBecauseOtherHttpArchiveIsComment() { main() {
for,0

if,0

git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_python3.sh
lines,56
function,0

install_python3() {
for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/copy_credentials.sh
lines,136
function,4

process_args() { copy_gcp_credentials() { copy_aws_credentials() { main() {
for,0

if,6
if [[ -z "${TESTDATA_DIR}" ]]; then if [[ ! -d "${TESTDATA_DIR}" ]]; then if [[ -z "${KMS_SERVICE}" ]]; then if [[ -z "${TINK_TEST_SERVICE_ACCOUNT}" ]]; then if [[ -z "${AWS_TINK_TEST_SERVICE_ACCOUNT}" ]]; then if [[ -z "${KOKORO_ROOT}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/run_go_mod_tests.sh
lines,192
function,7
function overlay_module() {
usage() { process_args() { function overlay_module() { overlay_internal_deps() { build_and_test_local_go_mod() { test_go_module_depending_on_local_one() { main() {
for,1
for full_dep_name in "${internal_deps[@]}"; do
if,6
if [[ -z "${FULL_GITHUB_MODULE_NAME}" ]]; then if [[ -z "${GO_MODULE_LOCAL_PATH}" ]]; then if [[ -z "${GO_MODULE_VERSION}" ]]; then if [[ -z "${GO_MODULE_GITHUB_HEAD_BRANCH}" ]]; then if [[ ! -z "${internal_deps+x}" ]]; then if [[ "${FULL_GITHUB_MODULE_NAME}" =~ github.com/google/tink[a-z./]+ ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/check_go_generated_files_up_to_date.sh
lines,105
function,3

usage() { process_args() { main() {
for,2
for generated_file_path in "${current_go_generated_files[@]}"; do for generated_file_path in "${new_go_generated_files[@]}"; do
if,3
if command -v "bazelisk" &> /dev/null; then if [[ -z "${GO_PROJECT_DIR}" ]]; then if ! cmp -s "${generated_file_path}" \
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/upgrade_gcc.sh
lines,40
function,1

upgrade_gcc() {
for,0

if,1
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_tink_via_pip.sh
lines,80
function,3

usage() { process_args() { main() {
for,0

if,3
if [[ -z "${TINK_PY_ROOT_DIR}" ]]; then if [[ -z "${KOKORO_ROOT:-}" ]] ; then if [[ "${platform}" == 'darwin' ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_protoc.sh
lines,49
function,1

install_temp_protoc() {
for,0

if,2
if [[ "${platform}" == 'darwin' ]]; then if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/run_bazel_tests.sh
lines,138
function,4

usage() { BUILD_FLAGS=() TEST_FLAGS=() process_args() { print_debug_output() { main() {
for,0

if,8
if [[ -z "${WORKSPACE_DIR}" ]]; then if [[ "${MANUAL_ONLY}" == "true" ]] && (( ${ if command -v "bazelisk" &> /dev/null; then if [[ "${PLATFORM}" == 'darwin' ]]; then if [[ "${workspace_dir}" =~ javascript ]]; then if [[ "${MANUAL_ONLY}" == "false" ]]; then if (( $bazel_test_return != 0 && $bazel_test_return != 4 )); then if (( ${
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/run_cmake_tests.sh
lines,76
function,3

usage() { process_args() { main() {
for,0

if,1
if [[ -z "${CMAKE_PROJECT_DIR}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_cmake.sh
lines,63
function,1

install_cmake() {
for,0

if,2
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]]; then if (( "$
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/update_android_sdk.sh
lines,41
function,0


for,0

if,2
if [[ -z "${KOKORO_ROOT}" ]] ; then if [[ "${PLATFORM}" == 'darwin' ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/testutils/install_openssl.sh
lines,75
function,1

install_openssl() {
for,0

if,3
if [[ "${PLATFORM}" == "darwin" ]]; then if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]]; then if (( "$
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/cc/examples/cmake/run_tests.sh
lines,24
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/cc/cmake/run_tests.sh
lines,23
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/cc/bazel/run_tests.sh
lines,24
function,0


for,0

if,1
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/go/gomod/run_tests.sh
lines,159
function,4
function test_go_mod() { function overlay_module() { function overlay_internal_deps() { function main() {
function test_go_mod() { function overlay_module() { function overlay_internal_deps() { function main() {
for,3
for full_dep_name in "${internal_deps[@]}"; do for go_mod_dir in "${go_mod_dirs[@]}"; do for go_mod_dir in "${go_mod_dirs[@]}"; do
if,1
if [[ ! -z "${internal_deps+x}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/go/bazel/run_tests.sh
lines,47
function,0

MANUAL_TARGETS=()
for,0

if,3
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]]; then if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${IS_KOKORO}" == "true" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/java_src/run_tests.sh
lines,30
function,0


for,0

if,1
if [[ -n "${KOKORO_ROOT:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/python/pip/run_tests.sh
lines,38
function,0


for,0

if,1
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/macos_external/tools/run_tests.sh
lines,30
function,0


for,0

if,1
if [[ -n "${KOKORO_ARTIFACTS_DIR:-}" ]] ; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/kokoro/run_tests.sh
lines,215
function,11

use_bazel() { run_cc_tests() { run_go_tests() { run_py_tests() { run_tools_tests() { run_java_tests() { run_cc_examples_tests() { run_java_examples_tests() { run_py_examples_tests() { run_all_tests() { main() {
for,0

if,14
if [[ -n "${KOKORO_ROOT}" ]]; then if [[ "${IS_KOKORO}" == "false" ]]; then if ! command -v "bazelisk" &> /dev/null; then if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${PLATFORM}" == "darwin" ]]; then if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${KOKORO_JOB_NAME:-}" =~ ^tink/github \ if [[ "${IS_KOKORO}" == "true" ]]; then if [[ "${PLATFORM}" == 'linux' ]]; then if [[ "${PLATFORM}" == 'darwin' ]]; then if [[ -z "${ANDROID_HOME}" ]]; then if [[ -z "${TMP}" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/hybrid/hybrid_example_test.sh
lines,132
function,1

test_command() {
for,0

if,7
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/aead/aead_example_test.sh
lines,155
function,1

test_command() {
for,0

if,9
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s $DATA_FILE "$DATA_FILE.decrypted"; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/signature/signature_example_test.sh
lines,117
function,1

test_command() {
for,4
echo "+++ Success: Signature verification failed for invalid signature." echo "--- Failure: Signature passed for an invalid signature." echo "+++ Success: Signature verification failed for invalid signature." echo "--- Failure: Signature passed for an invalid signature."
if,4
if [[ $TEST_STATUS -eq 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/deterministicaead/deterministic_aead_test.sh
lines,171
function,1

test_command() {
for,0

if,10
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s $DATA_FILE "$DATA_FILE.decrypted"; then if cmp -s "${DATA_FILE}.encrypted1" "${DATA_FILE}.encrypted2"; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/gcs/gcs_envelope_aead_example_test.sh
lines,83
function,1

test_command() {
for,0

if,3
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s ${DATA_FILE} "${DATA_FILE}.decrypted"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/streamingaead/streaming_aead_example_test.sh
lines,141
function,1

test_command() {
for,0

if,8
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/envelopeaead/envelope_aead_example_test.sh
lines,131
function,1

test_command() {
for,0

if,7
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s ${DATA_FILE} "${DATA_FILE}.decrypted"; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 1 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/cleartextkeyset/cleartext_keyset_example_test.sh
lines,93
function,1

test_command() {
for,0

if,4
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s ${DATA_FILE} "${DATA_FILE}.decrypted"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/mac/mac_example_test.sh
lines,125
function,1

test_command() {
for,4
echo "+++ Success: MAC verification failed for a modified mac." echo "--- Failure: MAC verification passed for a modified mac." echo "+++ Success: MAC verification failed for a modified message." echo "--- Failure: MAC verification passed for a modified message."
if,4
if [[ $TEST_STATUS -eq 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/jwt/jwt_signature_example_test.sh
lines,149
function,1

test_command() {
for,4
echo "+++ Success: Verification passed for a valid token." echo "--- Failure: Verification failed for a valid token." echo "+++ Success: Verification failed for an invalid audience." echo "--- Failure: Verification passed for an invalid audience."
if,7
if [[ $TEST_STATUS -eq 0 ]]; then if [[ $TEST_STATUS -eq 0 ]]; then if [[ $TEST_STATUS -eq 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then if [[ $TEST_STATUS -ne 0 ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/java_src/examples/encryptedkeyset/encrypted_keyset_example_test.sh
lines,97
function,1

test_command() {
for,0

if,4
if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if [[ ${TEST_STATUS} -eq 0 ]]; then if cmp -s ${DATA_FILE} "${DATA_FILE}.decrypted"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/hybrid/hybrid_cli_test.sh
lines,152
function,2

test_command() { print_test() {
for,0

if,7
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/streaming_aead/streaming_aead_cli_test.sh
lines,144
function,2

test_command() { print_test() {
for,0

if,6
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/aead/aead_cli_test.sh
lines,174
function,2

test_command() { print_test() {
for,0

if,9
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "$DATA_FILE.decrypted"; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/signature/signature_cli_test.sh
lines,131
function,2

test_command() { print_test() {
for,4
echo "+++ Success: Signature verification failed for invalid signature." echo "--- Failure: Signature passed for an invalid signature." echo "+++ Success: Signature verification failed for invalid signature." echo "--- Failure: Signature passed for an invalid signature."
if,4
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/gcs/gcs_envelope_aead_cli_test.sh
lines,101
function,2

test_command() { print_test() {
for,0

if,3
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "${DATA_FILE}.decrypted"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/encrypted_keyset/encrypted_keyset_cli_test.sh
lines,180
function,2

test_command() { print_test() {
for,0

if,9
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "${DATA_FILE}.decrypted"; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "${DATA_FILE}.decrypted"; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/mac/mac_cli_test.sh
lines,132
function,2

test_command() { print_test() {
for,4
echo "+++ Success: MAC verification failed for a modified mac." echo "--- Failure: MAC verification passed for a modified mac." echo "+++ Success: MAC verification failed for a modified message." echo "--- Failure: MAC verification passed for a modified message."
if,4
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/envelope_aead/envelope_cli_test.sh
lines,156
function,2

test_command() { print_test() {
for,0

if,7
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "${DATA_FILE}.decrypted"; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/deterministic_aead/deterministic_aead_cli_test.sh
lines,191
function,2

test_command() { print_test() {
for,0

if,10
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "$DATA_FILE.decrypted"; then if cmp -s "${DATA_FILE}.encrypted1" "${DATA_FILE}.encrypted2"; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 1 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/jwt/jwt_signature_test.sh
lines,178
function,2

test_command() { print_test() {
for,4
echo "+++ Success: Verification passed for a valid token." echo "--- Failure: Verification failed for a valid token." echo "+++ Success: Verification failed for an invalid token." echo "--- Failure: Verification passed for an invalid token."
if,7
if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then if (( TEST_STATUS != 0 )); then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/examples/cleartext_keyset/cleartext_keyset_cli_test.sh
lines,97
function,2

test_command() { print_test() {
for,0

if,4
if [[ ${TEST_STATUS} -eq 0 ]]; then if (( TEST_STATUS == 0 )); then if (( TEST_STATUS == 0 )); then if cmp -s "${DATA_FILE}" "${DATA_FILE}.decrypted"; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/tools/distribution/test_linux_binary_wheels.sh
lines,74
function,0


for,1
for v in "${!PYTHON_VERSIONS[@]}"; do
if,2
if [[ "${ARCH}" == "aarch64" || "${ARCH}" == "arm64" ]]; then if [[ "${ARCH}" == "aarch64" || "${ARCH}" == "arm64" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/tools/distribution/create_release.sh
lines,201
function,6

__create_and_test_wheels_for_linux() { __create_and_test_sdist_for_linux() { create_distribution_for_linux() { create_distribution_for_macos() { enable_py_version() { main() {
for,1
for v in "${PYTHON_VERSIONS[@]}"; do
if,2
if [[ "${PLATFORM}" == 'linux' ]]; then elif [[ "${PLATFORM}" == 'darwin' ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/python/tools/distribution/build_linux_binary_wheels.sh
lines,88
function,0


for,2
for v in "${!PYTHON_VERSIONS[@]}"; do for wheel in ./tink*.whl; do
if,2
if [[ "${ARCH}" == "aarch64" || "${ARCH}" == "arm64" ]]; then if [[ "${ARCH}" == "aarch64" || "${ARCH}" == "arm64" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/tools/release_tinkey.sh
lines,139
function,8

usage() { do_command() { print_command() { print_and_do() { do_if_not_dry_run() { build_tinkey() { upload_to_gcs() { main() {
for,0

if,5
if [ -z "${VERSION}" ]; then if [[ "${VERSION}" =~ " " ]]; then if command -v "bazelisk" &> /dev/null; then if ! "$@"; then if [[ "${DRY_RUN}" == "true" ]]; then
git@github.com:google/tink.git,8f6316b9245fb2d2bd37693953cc5efcc86daf41,tink,13327,./tink/tools/coverage.sh
lines,74
function,0


for,2
for ROOT in java apps/paymentmethodtoken; do for ff do
if,3
if [[ -z "${genhtml}" ]]; then if [[ -z "${destdir}" ]]; then if [[ -z "${targets}" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/build.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/pulsar/scripts/pulsar-zookeeper-ruok.sh
lines,29
function,0


for,0

if,1
if [ "$status" == "imok" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/pulsar/scripts/install-pulsar-client.sh
lines,30
function,0


for,0

if,1
if [ "${ARCH}" == "arm64" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/pulsar/scripts/generate-zookeeper-config.sh
lines,64
function,0


for,1
for SERVER in $(echo $ZOOKEEPER_SERVERS | tr "," "\n")
if,6
if [ $? != 0 ]; then if [[ ! -z "$EXTERNAL_PROVIDED_SERVERS" && $(fgrep -ix $EXTERNAL_PROVIDED_SERVERS <<< "true") ]]; then if [[ "$SERVER" == "$HOSTNAME"* ]]; then if [ "$HOSTNAME" == "$SERVER" ]; then if [ ! -z "$MY_ID" ]; then if [ ! -e $DATA_DIR/myid ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/publish.sh
lines,84
function,0


for,0

if,7
if [[ ${TRAVIS_TAG} == *"candidate"* || ${TRAVIS_TAG} == *"rc"* ]]; then if [ -z "$DOCKER_USER" ]; then if [ -z "$DOCKER_PASSWORD" ]; then if [ $? -ne 0 ]; then if [[ -z ${DOCKER_REGISTRY} ]]; then if [[ "$GIT_BRANCH" == "master" ]]; then if [[ "$GIT_BRANCH" == "master" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker/get-version.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/pulsar-io-gen.sh
lines,144
function,3

add_maven_deps_to_classpath() { pulsar_help() { or command is the full name of a class with a defined main() method.
for,0

if,13
if [ -f "$PULSAR_HOME/conf/bkenv.sh" ] if [ -f "$PULSAR_HOME/conf/pulsar_env.sh" ] if [[ -z $JAVA_HOME ]]; then if [ $? != 0 ]; then if [ $? == 0 ]; then if [ $? != 0 ] && [ ! -e "$PULSAR_JAR" ]; then elif [ -e "$BUILT_JAR" ]; then if [ "$MAVEN_HOME" != "" ]; then if [ ! -f "${f}" ] if [ -d "$PULSAR_HOME/lib" ]; then if [ -z "$PULSAR_LOG_CONF" ]; then if [ $ if [ "$COMMAND" == "conf" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/check-binary-license.sh
lines,136
function,0


for,7
for J in $JARS; do echo $J unaccounted for in LICENSE for J in $LICENSEJARS; do for J in $NOTICEJARS; do for J in $JARS; do echo $J unaccounted for in trino/LICENSE for J in $LICENSEJARS; do
if,13
if [[ "$1" == "--no-presto" || "$1" == "--no-pulsar-sql" ]]; then if [ -z $TARBALL ]; then if [ $? == 0 ]; then if [ $? != 0 ]; then if [ $? != 0 ]; then if [ $J == "checker-qual.jar" ]; then if [ $? != 0 ]; then if [ "$NO_PRESTO" -ne 1 ]; then if [ -n "$JARS" ]; then if [ $? == 0 ]; then if [ $? != 0 ]; then if [ $? != 0 ]; then if [ $EXIT != 0 ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/rename-netty-native-libs.sh
lines,64
function,0


for,1
for line in "${FILES_TO_RENAME[@]}"; do
if,1
if [ -f $FILE_PREFIX/$FROM ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/set-project-version.sh
lines,44
function,0


for,0

if,1
if [ $
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/stage-release.sh
lines,49
function,0


for,0

if,1
if [ $
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/src/sign-release.sh
lines,32
function,0


for,1
for FILE in $FILES
if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/scripts/pre-integ-tests.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/scripts/post-integ-tests.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/certificate-authority/generate_keystore.sh
lines,63
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/init-cluster.sh
lines,38
function,0


for,0

if,1
if [ $? != 0 ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-presto-worker.sh
lines,29
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-websocket.sh
lines,29
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-standalone.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-local-zk.sh
lines,29
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-functions-worker.sh
lines,31
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-global-zk.sh
lines,29
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-proxy.sh
lines,29
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-broker.sh
lines,30
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/tests/docker-images/latest-version-image/scripts/run-bookie.sh
lines,34
function,0


for,0

if,1
if [ -z "$NO_AUTOSTART" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/conf/pulsar_env.sh
lines,96
function,0


for,1
for token in $("$JAVA_BIN" -version 2>&1 | grep 'version "'); do
if,7
if [ -z "$JAVA_HOME" ]; then if [[ $token =~ \"([[:digit:]]+)\.([[:digit:]]+)(.*)\" ]]; then if [[ ${BASH_REMATCH[1]} == "1" ]]; then elif [[ $token =~ \"([[:digit:]]+)(.*)\" ]]; then if [[ -z "$PULSAR_GC_LOG" ]]; then if [[ $JAVA_MAJOR_VERSION -gt 8 ]]; then if [[ $JAVA_MAJOR_VERSION -ge 17 ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/conf/pulsar_tools_env.sh
lines,73
function,0


for,1
for i in ${PULSAR_MEM_ARR}
if,2
if [ -n "$PULSAR_MEM" ]; then if [ "${i:0:4}" != "-Xms" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/conf/bkenv.sh
lines,96
function,0


for,1
for token in $("$JAVA_BIN" -version 2>&1 | grep 'version "'); do
if,8
if [ -z "$JAVA_HOME" ]; then if [[ $token =~ \"([[:digit:]]+)\.([[:digit:]]+)(.*)\" ]]; then if [[ ${BASH_REMATCH[1]} == "1" ]]; then elif [[ $token =~ \"([[:digit:]]+)(.*)\" ]]; then if [[ -z "$BOOKIE_GC_LOG" ]]; then if [[ -z "$BOOKIE_GC_LOG" ]]; then if [[ $JAVA_MAJOR_VERSION -gt 8 ]]; then if [[ $JAVA_MAJOR_VERSION -ge 17 ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-function-go/pb/generate.sh
lines,83
function,0


for,2
// uses for the client/broker wire protocol. // See "Pulsar binary protocol specification" for more information.
if,2
if [ ! -d "${pulsarSrc}" ]; then if [ ! -d "${protoDefinitions}" ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/docker-compose/kitchen-sink/scripts/init-cluster.sh
lines,37
function,0


for,0

if,1
if [ $? != 0 ]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/deployment/terraform-ansible/templates/pulsar_env.sh
lines,60
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/run-logtopic-function.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/run-publish-function.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/scripts/python/generate.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/instance/src/scripts/run_python_instance_tests.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/run-counter-function.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/submit-python-function.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-functions/run-exclamation-function.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/docker/publish.sh
lines,57
function,0


for,0

if,4
if [ -z "$DOCKER_USER" ]; then if [ -z "$DOCKER_PASSWORD" ]; then if [ $? -ne 0 ]; then if [[ -z ${DOCKER_REGISTRY} ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/pulsar_ci_tool.sh
lines,633
function,30
function ci_list_functions() { function ci_print_thread_dumps() { function _ci_mvn() { function ci_dependency_check() { function ci_pick_ubuntu_mirror() { function ci_install_tool() { function fail() { function ci_docker_save_image_to_github_actions_artifacts() { function ci_docker_load_image_from_github_actions_artifacts() { function ci_restore_tar_from_github_actions_artifacts() { function ci_store_tar_to_github_actions_artifacts() { function ci_move_test_reports() { function ci_check_ready_to_test() {
function ci_list_functions() { function ci_print_thread_dumps() { function _ci_mvn() { function ci_dependency_check() { function ci_pick_ubuntu_mirror() { function ci_install_tool() { function fail() { function ci_docker_save_image_to_github_actions_artifacts() { function ci_docker_load_image_from_github_actions_artifacts() { function ci_restore_tar_from_github_actions_artifacts() { function ci_store_tar_to_github_actions_artifacts() { function ci_move_test_reports() { function ci_check_ready_to_test() { ci_snapshot_pulsar_maven_artifacts() { ci_upload_unittest_coverage_files() { ci_upload_inttest_coverage_files() { ci_upload_systest_coverage_files() { _ci_upload_coverage_files_inttest() { _ci_upload_coverage_files() { ci_restore_unittest_coverage_files() { ci_restore_inttest_coverage_files() { ci_restore_systest_coverage_files() { _ci_restore_coverage_files() { _ci_list_testgroups_with_coverage() { ci_delete_unittest_coverage_files() { ci_delete_inttest_coverage_files() { ci_delete_systest_coverage_files() { _ci_delete_coverage_files() { ci_create_test_coverage_report() { ci_create_inttest_coverage_report() {
for,18
for java_pid in $(jps -q -J-XX:+PerfDisableSharedMem); do echo "Storing output for debugging in $artifactfile" for f in test-reports/*~; do echo "Review decision for PR FORK_PR_BODY_URL_ENCODED=$(jq -n -r "\"This PR is for running tests for upstream PR ${PR_URL}.\n\n<!-- Before creating this PR, please ensure that the fork $FORK_REPO_URL is up to date with https://github.com/apache/pulsar -->\" | @uri") [Create PR in fork for running tests](${FORK_REPO_URL}/compare/${PR_BASE_BRANCH}...${PR_BRANCH_LABEL}?expand=1&title=${FORK_PR_TITLE_URL_ENCODED}&body=${FORK_PR_BODY_URL_ENCODED}) and any changes made during the review. You as a PR author are responsible for following up on test failures. An alternative for the PR approval is to add a ready-to-test label to the PR. This can be done for execFile in $execFiles; do for project in $projects; do for testgroup in $(_ci_list_testgroups_with_coverage "${job_name}"); do for testgroup in $(yq e ".jobs.${job_name}.strategy.matrix.include.[] | select(.no_coverage != true) | .group" "$GITHUB_WORKSPACE/.github/workflows/pulsar-ci.yaml"); do for execFile in $execFiles; do for project in $projects; do echo "Found cached classpath for $artifactId." echo "Resolving classpath for $project..." for classpathEntry in $(cat $completeClasspathFile | { grep -v -f $filterArtifactsFile || true; } | sort | uniq | { grep -v -E "$excludeJarsPattern" || true; }); do for artifactId in $(cat $completeClasspathFile | sort | uniq | { grep -v -E "$excludeJarsPattern" || true; } | perl -p -e 's|.*/org/apache/pulsar/([^/]*)/.*|$1|'); do
if,36
} | xargs -I {} sh -c 'echo "$(curl -m 5 -sI {}dists/$(lsb_release -c | cut -f2)-security/Contents-$(dpkg --print-architecture).gz|sed s/\\r\$//|grep Last-Modified|awk -F": " "{ print \$2 }" | LANG=C date -f- -u +%s)" "{}"' | sort -rg | awk '{ if (NR==1) TS=$1; if ($1 == TS) print $2 }' if [ -z "$UBUNTU_MIRROR" ]; then if [[ "$OLD_MIRROR" != "$UBUNTU_MIRROR" ]]; then if [ -n "$GITHUB_ENV" ]; then if ! command -v $tool_executable &>/dev/null; then if [[ "$GITHUB_ACTIONS" == "true" ]]; then if [[ "$GITHUB_ACTIONS" == "true" ]]; then if [ -n "${GITHUB_WORKSPACE}" ]; then if [ -d test-reports ]; then if [ -d surefire-reports ]; then if [ -d "$target_dir" ]; then if [[ -z "$GITHUB_EVENT_PATH" ]]; then if printf "%s" "${PR_JSON}" | jq -e '.draft | select(. == true)' &> /dev/null; then elif ! ( printf "%s" "${PR_JSON}" | jq -e '.mergeable | select(. == true)' &> /dev/null ); then if printf "%s" "${PR_JSON}" | jq -e '.labels[] | .name | select(. == "ready-to-test")' &> /dev/null; then if [[ "$PR_REVIEW_DECISION" == "APPROVED" ]]; then if [[ "$PR_BASE_BRANCH" != "master" ]]; then [Sync your fork if it's behind.](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork)${sync_non_master_fork_docs} if [ -n "$GITHUB_WORKSPACE" ]; then if [[ "${firsttestgroup}" == "${testgroup}" ]]; then if [ -n "$GITHUB_WORKSPACE" ]; then if [ ! -f /tmp/provided_pulsar_maven_artifacts ]; then if [[ -n "$execFiles" ]]; then if [ -n "$GITHUB_WORKSPACE" ]; then if [[ -n "$execFiles" ]]; then if [ ! -f /tmp/jacocoDir/jacococli.jar ]; then if [[ -d "$project/target/classes" && -d "$project/src/main/java" ]]; then if [[ -n "$(echo "$project" | grep -v -E "$excludeProjectsPattern")" ]]; then if [ -f "target/classpath_$artifactId" ]; then if [[ -f $classpathEntry && -n "$(unzip -Z1C $classpathEntry 'META-INF/bundled-dependencies/*' 2>/dev/null)" ]]; then if [[ -n "$project" && -d "$project/src/main/java" ]]; then if [[ -n "$(find /tmp/jacocoDir -name "*.exec" -print -quit)" ]]; then if [ ! -f /tmp/jacocoDir/jacococli.jar ]; then if [ ! -d /tmp/jacocoDir/pulsar_lib ]; then if [ -z "$1" ]; then if [[ "$(LC_ALL=C type -t "${ci_function_name}")" == "function" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/run_integration_group.sh
lines,249
function,22

mvn_list_modules() { mvn_run_integration_test() { test_group_shade() { test_group_shade_build() { test_group_shade_run() { test_group_backwards_compat() { test_group_cli() { test_group_function() { test_group_messaging() { test_group_loadbalance() { test_group_plugin() { test_group_schema() { test_group_standalone() { test_group_transaction() { test_group_tiered_filesystem() { test_group_tiered_jcloud() { test_group_pulsar_connectors_thread() { test_group_pulsar_connectors_process() { test_group_sql() { test_group_pulsar_io() { test_group_pulsar_io_ora() { list_test_groups() {
for,2
echo "::group::Build dependencies for $modules" echo "::group::Run tests for " "$@"
if,15
JAVA_MAJOR_VERSION="$(java -version 2>&1 |grep " version " | awk -F\" '{ print $2 }' | awk -F. '{ if ($1=="1") { print $2 } else { print $1 } }')" if [[ "$1" == "--build-only" ]]; then if [[ "$1" == "--clean" ]]; then if [[ "$GITHUB_ACTIONS" == "true" && "$GITHUB_EVENT_NAME" != "pull_request" ]]; then if [[ "$1" == "--no-fail-fast" ]]; then if [ $use_fail_fast -eq 1 ]; then if [[ "$1" == "--coverage" ]]; then if [ ! -d /tmp/jacocoDir ]; then if [ $skip_build_deps -ne 1 ]; then if [[ $build_only -ne 1 ]]; then if [[ $JAVA_MAJOR_VERSION -ge 8 && $JAVA_MAJOR_VERSION -lt 11 ]]; then if [[ $JAVA_MAJOR_VERSION -gt 8 && $JAVA_MAJOR_VERSION -lt 17 ]]; then if [[ $JAVA_MAJOR_VERSION -ge 8 && $JAVA_MAJOR_VERSION -lt 11 ]]; then if [ -z "$TEST_GROUP" ]; then if [[ "$(LC_ALL=C type -t "${test_group_function_name}")" == "function" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/build_java_test_image.sh
lines,31
function,0


for,0

if,1
if [[ "$(docker version -f '{{.Server.Experimental}}' 2>/dev/null)" == "true" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/run_unit_group.sh
lines,237
function,17
function mvn_test() { function test_group_broker_group_1() { function test_group_broker_group_2() { function test_group_broker_group_3() { function test_group_broker_group_4() { function test_group_broker_client_api() { function test_group_broker_client_impl() { function test_group_client() { function print_testng_failures() { function test_group_broker_flaky() { function test_group_proxy() { function test_group_other() { function test_group_pulsar_io() { function test_group_pulsar_io_elastic() { function test_group_pulsar_io_kafka_connect() { function list_test_groups() {
function mvn_test() { echo_and_restore_trace() { function test_group_broker_group_1() { function test_group_broker_group_2() { function test_group_broker_group_3() { function test_group_broker_group_4() { function test_group_broker_client_api() { function test_group_broker_client_impl() { function test_group_client() { function print_testng_failures() { function test_group_broker_flaky() { function test_group_proxy() { function test_group_other() { function test_group_pulsar_io() { function test_group_pulsar_io_elastic() { function test_group_pulsar_io_kafka_connect() { function list_test_groups() {
for,2
echo "::group::Run tests for " "$@" for failed_test_class in $(cat "$testng_failed_file" | grep 'class name=' | perl -p -e 's/.*\"(.*?)\".*/$1/'); do
if,14
if [[ "$1" == "--clean" ]]; then if [[ "${COLLECT_COVERAGE}" == "false" ]]; then if [[ "$1" == "--install" ]]; then if [[ "$GITHUB_ACTIONS" == "true" && "$GITHUB_EVENT_NAME" != "pull_request" ]]; then if [[ "$1" == "--no-fail-fast" ]]; then if [ $use_fail_fast -eq 1 ]; then if [ -f "$testng_failed_file" ]; then if [ $failed_count -eq 1 ]; then if [ -f "${test_report_file}" ]; then if [ -n "${modules_with_quarantined_tests}" ]; then echo "::group::Running quarantined tests outside of pulsar-broker & pulsar-proxy (if any)" if [[ "$1" == "--list" ]]; then if [ -z "$TEST_GROUP" ]; then if [[ "$(LC_ALL=C type -t "${test_group_function_name}")" == "function" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/build/regenerate_certs_for_tests.sh
lines,77
function,3
function generate_ca() { function reissue_certificate() { function reissue_certificate_no_subject() {
function generate_ca() { function reissue_certificate() { function reissue_certificate_no_subject() {
for,0

if,0

git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/bin/pulsar-admin-common.sh
lines,119
function,1

add_maven_deps_to_classpath() {
for,0

if,12
if [ -f "$PULSAR_HOME/conf/pulsar_tools_env.sh" ] if [[ -z $JAVA_HOME ]]; then if [ $? != 0 ]; then if [ $? == 0 ]; then if [ $? != 0 ] && [ ! -e "$PULSAR_JAR" ]; then elif [ -e "$BUILT_JAR" ]; then if [ "$MAVEN_HOME" != "" ]; then if [ ! -f "${f}" ] if [ -d "$PULSAR_HOME/lib" ]; then if [ -z "$PULSAR_CLIENT_CONF" ]; then if [ -z "$PULSAR_LOG_CONF" ]; then if [[ -z "$IS_JAVA_8" ]]; then
git@github.com:apache/pulsar.git,b6a593cd018a4124a6ce30720a001d6184603783,pulsar,13176,./pulsar/pulsar-metadata/src/test/resources/ssl/generate-self-signed-certificates.sh
lines,70
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/deeplearning4j/buildmultiplescalaversions.sh
lines,83
function,5
function echoError() { function sparkError() { function scalaError() { function whatchanged() { function beep(){ echo -e '\a';}
function echoError() { function sparkError() { function scalaError() { function whatchanged() { function beep(){ echo -e '\a';}
for,1
for i in $(git status -s --porcelain -- $(find ./ -mindepth 2 -name pom.xml)|awk '{print $2}'); do
if,4
if [ -z "$(whatchanged)" ]; then if [[ "${@ if [ -z "$(whatchanged)" ]; then if [[ "${@
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/nd4j/buildmultiplescalaversions.sh
lines,57
function,3
function echoError() { function scalaError() { function whatchanged() {
function echoError() { function scalaError() { function whatchanged() {
for,1
for i in $(git status -s --porcelain -- $(find ./ -mindepth 2 -name pom.xml)|awk '{print $2}'); do
if,2
if [ -z "$(whatchanged)" ]; then if [[ "${@
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/protobuf/tf/google/protobuf/io/gzip_stream_unittest.sh
lines,28
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/protobuf/tf/google/protobuf/compiler/zip_output_unittest.sh
lines,89
function,1

fail() {
for,0

if,3
if $UNZIP -h > /dev/null; then if $JAR c $TEST_TMPDIR/testzip.proto > /dev/null; then if [[ "$(TZ=UTC $JAR tvf $TEST_TMPDIR/testzip.jar)" != *'Tue Jan 01 00:00:00 UTC 1980'* ]]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/bootstrap-libnd4j-from-url.sh
lines,121
function,4
function append_args { function create_config { function print_config { function copy_lib {

for,1
for var in "$@"
if,12
if [ -n "$1" ]; then if [ "$1" == "cuda" ]; then elif [ "$1" == "aurora" ]; then if test -f "${config_copy}"; then if test -f "${config}"; then if [ "$1" == "cpu" ]; then if ! [[ -z "$LIBND4J_FILE_NAME" ]]; then if ! [[ -z "$LIBND4J_URL" ]]; then if [ -z "${LIBND4J_HOME_SUFFIX}" ]; then export LIBND4J_HOME_SUFFIX="cpu"; fi if [ "$ if [ "$2" == "cuda" ]; then elif [ "$2" == "aurora" ]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/publish-snapshots.sh
lines,21
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/codegen/op-codegen/generate.sh
lines,10
function,0


for,0

if,1
if test "$
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/codegen/libnd4j-gen/generate.sh
lines,3
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/packages/push_to_bintray.sh
lines,124
function,2
function usage() { function grab() {
function usage() { function grab() {
for,0

if,7
if [ $ if [ -z "$PACKAGE_NAME" ] || [ -z "$PACKAGE_VERSION" ] || [ -z "$PACKAGE_RELEASE" ] || [ -z "$PACKAGE_ARCH" ]; then if [ $BINTRAY_REPO == "deb" ]; then if [ "$HTTP_CODE" != "200" ]; then if [ "$XDEBUG" = "true" ]; then if [ "$HTTP_CODE" != "201" ]; then if [ "$HTTP_CODE" != "201" ]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/build_ve_prerequisites.sh
lines,80
function,1
function message {

for,0

if,3
if [[ ! -d "/usr/local/ve/veda" ]] ; then if [ ! -f "${VEDNN_ROOT}/lib/libvednn_openmp.a" ]; then if [[ $isLLVMVE == "is not installed" ]] ; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/proto.sh
lines,33
function,0


for,1
for i in `find tensorflow/core/framework | grep \.proto$`
if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/nano-env.sh
lines,3
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/build_veda.sh
lines,45
function,1
function message {

for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/run-nano-build-cross-compile.sh
lines,2
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/pi_build.sh
lines,460
function,10
function message { function check_requirements { function rename_top_folder { function download_extract_base { function download_extract { function download_extract_xz { function download_extract_unzip { function git_check { function fix_pi_linker { function cuda_cross_setup {
OTHER_ARGS=()
for,5
for i in "${!TARGET_ARRS[@]}"; do for i in "${@}" for dir in "${1}"/* for i in $(find . -maxdepth 1) message "Cross compiler directory for the target: ${CROSS_COMPILER_DIR}"
if,48
if [ -z "${BUILD_USING_MAVEN}" ]; then export BUILD_USING_MAVEN=; fi if [ -z "${CURRENT_TARGET}" ]; then export CURRENT_TARGET=arm32; fi if [ -z "${ARMCOMPUTE_DEBUG}" ]; then export ARMCOMPUTE_DEBUG=0; fi if [ -z "${HAS_ARMCOMPUTE}" ]; then export HAS_ARMCOMPUTE=1; fi if [ -z "${ARMCOMPUTE_TAG}" ]; then export ARMCOMPUTE_TAG=v20.05; fi if [ -z "${LIBND4J_BUILD_MODE}" ]; then export LIBND4J_BUILD_MODE=Release; fi if [ -z "${ANDROID_VERSION}" ]; then export ANDROID_VERSION=21; fi if [ -z "${CUDA_VER}" ]; then export CUDA_VER=10.2; fi if [ -z "${LOCAL_CUDA_INSTALLED_VER}" ]; then export LOCAL_CUDA_INSTALLED_VER=10.2; fi if [ -z "${LIBND4J_BUILD_THREADS}" ]; then export LIBND4J_BUILD_THREADS=$(nproc); fi if [ -z "${PROTO_EXEC}" ]; then export PROTO_EXEC="protoc"; fi if [ -z "${NDK_VERSION}" ]; then export NDK_VERSION="r21d"; fi if [ -z "${PERFORM_RELEASE}" ]; then export PERFORM_RELEASE=0; fi if [ -z "${RELEASE_VERSION}" ]; then export RELEASE_VERSION="1.0.0-M2"; fi if [ -z "${SNAPSHOT_VERSION}" ]; then export SNAPSHOT_VERSION="1.0.0-SNAPSHOT"; fi if [ -z "${MODULES}" ]; then export MODULES=; fi if [ -z "${RELEASE_REPO_ID}" ]; then export RELEASE_REPO_ID=""; fi if [ ${CURRENT_TARGET} == "linux-arm64" ];then if [ ${CURRENT_TARGET} == "linux-arm32" ];then if [[ "${TARGET_ARRS[$i]}" = "${CURRENT_TARGET}" ]]; then if [ ${TARGET_INDEX} -eq -1 ];then if [ "${CROSS_COMPILER_DIR-}" == "" ]; then if [ ! -e "$i" ]; then if [ -d "$dir" ] if [ ! -f "${down_file}" ]; then if [ ${xtract_arg} = "-unzip" ]; then if [ -n "$3" ]; then if [ ! -f "${1}/ld.original" ]; then if [ ! -d "${loc_DIR}/cuda/bin" ];then if [ "${DOWNLOAD_CROSS}" == "ok" ]; then if [ ! -d "${CROSS_COMPILER_DIR}/folder" ]; then if [ "${TARGET_OS}" = "android" ];then if [ $ND_VER -lt 19 ]; then if [ "$BLAS_TARGET_NAME" = "ARMV7" ];then if [ -z "${BUILD_USING_MAVEN}" ] ;then if [ ! -d "${OPENBLAS_DIR}" ]; then if [ ! -f "${THIRD_PARTY}/lib/libopenblas.so" ]; then if [ "${ARMCOMPUTE_TARGET}" != "None" ];then if [ ! -d "${SCONS_LOCAL_DIR}" ]; then if [ ! -d "${ARMCOMPUTE_DIR}" ]; then if [ ! -f "${ARMCOMPUTE_DIR}/build/libarm_compute-static.a" ]; then if [ "${TARGET_OS}" = "android" ];then if [ "${CURRENT_TARGET}" == "jetson-arm64" ];then if [ "${CURRENT_TARGET}" != "jetson-arm64" ]; then if [ -z "${detect}" ] ;then if [ -z "${BUILD_USING_MAVEN}" ] ;then if [ "${DEPLOY-}" != "" ]; then if [ "${PERFORM_RELEASE}" == "1" ] || [ "${PERFORM_RELEASE}" == 1 ]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/buildnativeoperations.sh
lines,742
function,3

setwindows_msys() { setandroid_defaults() { mkbuilddir() {
for,2
for P in $BUILD_PATH; do for i in "${HLP[@]}"; do
if,71
if [[ $KERNEL == *"windows"* ]]; then if [[ -z ${ANDROID_NDK:-} ]]; then if [[ -z ${ANDROID_VERSION:-} ]]; then if which cmake3 &> /dev/null; then if [[ $ if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ] || [ "$(expr substr $(uname -s) 1 4)" == "MSYS" ]; then elif [ "$(uname -m)" == "ppc64le" ]; then if [ -z "$ARCH" ]; then if [ -z "$OS" ]; then if [[ -z ${ANDROID_NDK:-} ]]; then if [ -z "$ARCH" ]; then if [ ! -z ${RPI_BIN+set} ]; then if [ -z "$ARCH" ]; then if [ ! -z ${RPI_BIN+set} ]; then if [ -z "$ARCH" ]; then if [ -z "$ARCH" ]; then if [ -z "$ARCH" ]; then if [ -z "$ARCH" ]; then if xcrun --sdk iphoneos --show-sdk-version &> /dev/null; then if xcrun --sdk iphoneos --show-sdk-version &> /dev/null; then if xcrun --sdk iphoneos --show-sdk-version &> /dev/null; then if xcrun --sdk iphoneos --show-sdk-version &> /dev/null; then if [ "$CHIP" == "cuda" ]; then if [ -z "${VCINSTALLDIR:-}" ]; then if [ ! -d "include/generated" ]; then if [ -f "$OP_OUTPUT_FILE" ]; then if [ -z "$BUILD" ]; then if [ -z "$CHIP" ]; then if [ -z "$LIBTYPE" ]; then if [ -z "$PACKAGING" ]; then if [ "$CHIP_EXTENSION" == "avx512" ] || [ "$ARCH" == "avx512" ]; then elif [ "$CHIP_EXTENSION" == "avx2" ] || [ "$ARCH" == "avx2" ]; then elif [ "$CHIP_EXTENSION" == "x86_64" ] || [ "$ARCH" == "x86_64" ]; then if [ -z "$ARCH" ]; then if [ -z "$COMPUTE" ]; then if [ "$ARCH" == "x86-64" ]; then if [ "$FUNC_TRACE" == "ON" ]; then if [ -z "$OPERATIONS" ]; then if [ -n "$DATATYPES" ]; then if [ -z "$EXPERIMENTAL" ]; then if [ "$CHIP" == "cpu" ]; then elif [ "$CHIP" == "aurora" ]; then elif [ "$CHIP" == "cuda" ]; then if [ -z "$NAME" ]; then if [ "$CHIP" == "cpu" ]; then elif [ "$CHIP" == "cuda" ]; then elif [ "$CHIP" == "aurora" ]; then if [ "$LIBTYPE" == "dynamic" ]; then if [ "$BUILD" == "release" ]; then if [ "$PACKAGING" == "none" ]; then if [ "$PACKAGING" == "rpm" ]; then if [ "$PACKAGING" == "deb" ]; then if [ "$PACKAGING" == "msi" ]; then if [ "$EXPERIMENTAL" == "yes" ]; then if [ "$MINIFIER" == "true" ]; then if [ "$TESTS" == "true" ]; then if [ "$CHIP" == "cuda" ] && [ -n "$CHIP_VERSION" ]; then if [ "${CUDA_PATH-}" == "" ]; then if [[ -n "${BUILD_PATH:-}" ]]; then if [[ -f "$P/include/openblas_config.h" ]]; then if [[ ! -f "$OPENBLAS_PATH/include/openblas_config.h" ]]; then if [ "$CLEAN" == "true" ]; then if [ "$HELPER" == "" ]; then if [ "$LOG_OUTPUT" == "none" ]; then if [ "$PARALLEL" == "true" ]; then if [ "$VERBOSE" == "true" ]; then if [ "$CHECK_VECTORIZATION" == "ON" ]; then if [ "$MAKE_COMMAND" == "make" ]; then if [ "$LOG_OUTPUT" == "none" ]; then if [ "$LOG_OUTPUT" == "none" ]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/flatc-generate.sh
lines,21
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/cibuild.sh
lines,40
function,1

install() {
for,0

if,1
if hash nvcc 2>/dev/null; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/libnd4j/tests_cpu/run_tests.sh
lines,202
function,0


for,0

if,4
if [[ $ if [ -n "$BUILD_PATH" ]; then if which cygpath; then if [[ "$TEST_FILTER" != "none" ]]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/update-versions.sh
lines,15
function,0


for,1
for f in $(find . -name 'pom.xml' -not -path '*target*'); do
if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/.github/actions/build-centos/build.sh
lines,53
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/datavec/buildmultiplescalaversions.sh
lines,71
function,4
function echoError() { function sparkError() { function scalaError() { function whatchanged() {
function echoError() { function sparkError() { function scalaError() { function whatchanged() {
for,1
for i in $(git status -s --porcelain -- $(find ./ -mindepth 2 -name pom.xml)|awk '{print $2}'); do
if,3
if [ -z "$(whatchanged)" ]; then if [ -z "$(whatchanged)" ]; then if [[ "${@
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/release-specified-component.sh
lines,111
function,0


for,1
echo "Adding osx specific parameters for gpg signing"
if,8
if [[ $ if [ -z "$COMMAND" ]; then if [ -z "$4" ]; then if [[ "$2" != *-SNAPSHOT ]] if [[ "${machine}" == "Mac" ]]; then if [ -z "${MODULES}" ]; then export MODULES= ; fi if [[ -z ${STAGING_REPOSITORY:-} ]]; then if [[ ! $(grep stagingRepository.id target/nexus-staging/staging/*.properties) =~ ^stagingRepository.id=(.*) ]]; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/post-release-tag.sh
lines,11
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/change-cuda-versions.sh
lines,124
function,3

usage() { check_cuda_version() { sed_i() {
for,1
for i in ${VALID_VERSIONS[*]}; do [ $i = "$1" ] && return 0; done
if,2
if [[ ($ if test -f "$2" && test -f "$1"; then
git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/platform-tests/bootstrap-onnx.sh
lines,8
function,0


for,1
for file in `cat src/main/resources/onnx-models.txt`; do
if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/platform-tests/run-onnx-tests.sh
lines,2
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/platform-tests/run-tensorflow-tests.sh
lines,2
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/platform-tests/run-keras-tests.sh
lines,2
function,0


for,0

if,0

git@github.com:deeplearning4j/deeplearning4j.git,61c8ccf9da864612c1dbec3469b8e40e553567bf,deeplearning4j,13164,./deeplearning4j/change-spark-versions.sh
lines,71
function,2

usage() { check_spark_version() {
for,1
for i in ${VALID_VERSIONS[*]}; do [ $i = "$1" ] && return 0; done
if,1
if [[ ($
git@github.com:JessYanCoding/AndroidAutoSize.git,e402ecdd998ea07549513ac08c12e9f097f3b48c,AndroidAutoSize,13124,
git@github.com:seaswalker/spring-analysis.git,4379cce848af96997a9d7ef91d594aa129be8d71,spring-analysis,13089,
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/kokoro/continuous.sh
lines,37
function,0


for,0

if,2
if [ "${KOKORO_JOB_CLUSTER}" = "MACOS_EXTERNAL" ]; then if [ "${KOKORO_JOB_CLUSTER}" = "GCP_UBUNTU_DOCKER" ]; then
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/kokoro/presubmit.sh
lines,29
function,0


for,0

if,2
if [ "${KOKORO_JOB_CLUSTER}" = "MACOS_EXTERNAL" ]; then if [ "${KOKORO_JOB_CLUSTER}" = "GCP_UBUNTU_DOCKER" ]; then
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/kokoro/docker_setup_ubuntu.sh
lines,6
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/kokoro/docker_setup_macos.sh
lines,17
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-plugins-extension-common/kokoro/release_build.sh
lines,9
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-build-plan/kokoro/release_build.sh
lines,9
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-cli/src/test/resources/buildfiles/projects/allProperties/project/script.sh
lines,2
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-cli/scripts/update_gcs_latest.sh
lines,40
function,4

EchoRed() { EchoGreen() { Die() { CheckVersion() {
for,0

if,1
if [ "$gcsResult" == "$versionString" ]
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/examples/multi-module/gradle-build.sh
lines,6
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/examples/multi-module/maven-build.sh
lines,11
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-maven-plugin/src/test/resources/maven/projects/simple/mock-docker.sh
lines,5
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-maven-plugin/kokoro/release_build.sh
lines,14
function,0


for,0

if,1
if [ "${KOKORO_JOB_CLUSTER}" = "GCP_UBUNTU_DOCKER" ]; then
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-maven-plugin/scripts/update_gcs_latest.sh
lines,40
function,4

EchoRed() { EchoGreen() { Die() { CheckVersion() {
for,0

if,1
if [ "$gcsResult" == "$versionString" ]
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-maven-plugin-extension-api/kokoro/release_build.sh
lines,9
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-gradle-plugin/src/integration-test/resources/gradle/projects/simple/mock-docker.sh
lines,5
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-gradle-plugin/scripts/release.sh
lines,27
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-gradle-plugin/scripts/update_gcs_latest.sh
lines,40
function,4

EchoRed() { EchoGreen() { Die() { CheckVersion() {
for,0

if,1
if [ "$gcsResult" == "$versionString" ]
git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-gradle-plugin-extension-api/kokoro/release_build.sh
lines,9
function,0


for,0

if,0

git@github.com:GoogleContainerTools/jib.git,440bd4897c6c427cc9a491128aa76c72378d605b,jib,13011,./jib/jib-core/kokoro/release_build.sh
lines,9
function,0


for,0

if,0

git@github.com:pinpoint-apm/pinpoint.git,79d0348247c347dc89a9fa8f81d7c02dd6b13c0e,pinpoint,13001,./pinpoint/thrift/build-thrift-mac.sh
lines,6
function,0


for,0

if,1
if [[ $rc != 0 ]] ; then
git@github.com:pinpoint-apm/pinpoint.git,79d0348247c347dc89a9fa8f81d7c02dd6b13c0e,pinpoint,13001,./pinpoint/thrift/build-thrift-linux.sh
lines,29
function,0


for,0

if,3
if ! [ -x "${thrift_path}${thrift_bin}" ]; then if [ $rc -eq 0 ]; then if [[ $rc != 0 ]] ; then
git@github.com:pinpoint-apm/pinpoint.git,79d0348247c347dc89a9fa8f81d7c02dd6b13c0e,pinpoint,13001,./pinpoint/thrift/install-thrift-linux.sh
lines,189
function,0


for,1
for pkg in "${pkg_arr[@]}"
if,27
if [ -z "$1" ]; then if [ -z "$2" ]; then echo -n "Check if Thrift is installed in system... " if [ $? -eq 0 ]; then echo -n "Check if Thrift version is ${tversion}... " if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then echo -n "Check if Thrift is built but not copied to compiler path... " if [ -x "thrift-${tversion}/compiler/cpp/thrift" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -f "/etc/os-release" ]; then if [[ "${DIST_ID}" = "centos" || "${DIST_ID}" = "rhel" ]]; then if ! [ "${DIST_VERSION}" -ge 7 ]; then if [[ "${DIST_ID}" = "centos" || "${DIST_ID}" = "rhel" ]]; then if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ ${pkg_count} -ne 0 ]; then if [ $? -ne 0 ]; then if [[ "${DIST_ID}" = "centos" || "${DIST_ID}" = "rhel" ]]; then if [ "$pkg" = "Development Tools" ]; then elif [ "$pkg" = "ant" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:pinpoint-apm/pinpoint.git,79d0348247c347dc89a9fa8f81d7c02dd6b13c0e,pinpoint,13001,./pinpoint/tools/src/main/script/networktest.sh
lines,9
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-symbolmap/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-3dpie/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-racebar/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-bubblemap/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-sankey/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-view/view-chartmix/build.sh
lines,8
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/kingbase/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/presto/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/mongo/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/maxcompute/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/dm/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/extensions/dataease-extensions-datasource/kylin/build.sh
lines,6
function,0


for,0

if,0

git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/installer/quick_start.sh
lines,75
function,0


for,2
for git_url in ${git_urls[*]} for i in {1..3}
if,9
if [[ -x "$(command -v python)" ]];then elif [[ -x "$(command -v python3)" ]]; then if [ $? != 0 ];then if [[ ${success} == "true" ]];then if [[ "x${server_url}" == "x" ]];then if [[ "${server_url}" == "gitee.com" ]];then if [[ "x${DEVERSION}" == "x" ]];then if [ ! -f ${dataease_online_file_name} ];then if [ $? != 0 ];then
git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/installer/dataease/uninstall.sh
lines,40
function,0


for,0

if,3
if [ -f /usr/bin/dectl ]; then if test ! -z "$(docker images -f dangling=true -q)"; then if test -n "$(docker images | grep 'registry.cn-qingdao.aliyuncs.com/dataease')"; then
git@github.com:dataease/dataease.git,6c964254b8548d3ee9b5931f0d4996dbc094539d,dataease,12971,./dataease/installer/dataease/install.sh
lines,375
function,2
function log() { function prop {
function log() {
for,3
for i in ${templates_files[@]}; do for i in $(ls images); do for b in {1..30}
if,49
if [ -f /usr/bin/dectl ]; then if [[ $DE_BASE ]] && [[ -f $DE_BASE/dataease/.env ]]; then if [ -f ${DE_RUN_BASE}/docker-compose-mysql.yml ]; then if [ "x${DE_ENGINE_MODE}" = "x" ]; then if [ "x${DE_DOCKER_SUBNET}" = "x" ]; then if [ "x${DE_DOCKER_GATEWAY}" = "x" ]; then if [ "x${DE_DORIS_FE_IP}" = "x" ]; then if [ "x${DE_DORIS_BE_IP}" = "x" ]; then if [[ -f $dataease_conf ]]; then if [[ -f $dataease_conf ]] && [[ ! ${DE_EXTERNAL_DORIS} ]]; then if [ ${DE_DORIS_HOST} = "doris-fe" ]; then if [ ${DE_EXTERNAL_DORIS} = "false" ] && [ ${DE_ENGINE_MODE} = "local" ]; then if [[ -f $dataease_conf ]] && [[ ! ${DE_EXTERNAL_KETTLE} ]]; then if [ ${DE_CARTE_HOST} = "kettle" ]; then if [ ${DE_EXTERNAL_KETTLE} = "false" ] && [ ${DE_ENGINE_MODE} = "local" ]; then if [[ -f ${DE_RUN_BASE}/docker-compose-doris.yml ]]; then if [[ ! $current_doris_version =~ "v1.2.4" ]]; then if [[ $available_disk -lt 20480 ]];then if [ ${keep_doris} = "true" ]; then if [ ${DE_EXTERNAL_MYSQL} = "false" ]; then if [[ -f $dataease_conf ]]; then if [ -f $i ]; then if [ ! -f /usr/bin/dectl ]; then if which getenforce && [ $(getenforce) == "Enforcing" ];then if which docker >/dev/null 2>&1; then if [[ -d docker ]]; then if [[ ! -f get-docker.sh ]];then if [ ! -d "$docker_config_folder" ];then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -eq 0 ]; then if [[ -d docker ]]; then if [[ ! -f /usr/local/bin/docker-compose ]];then if [ $? -ne 0 ]; then if [[ -d images ]]; then if [ ${DE_ENGINE_MODE} != "local" ]; then if [[ $i =~ "doris" ]] || [[ $i =~ "kettle" ]]; then if which chkconfig;then if [ -f /etc/rc.d/rc.local ];then if [ "$dataeaseService" -eq 0 ]; then if [[ $(grep "vm.max_map_count" /etc/sysctl.conf | wc -l) -eq 0 ]];then elif (( $(grep "vm.max_map_count" /etc/sysctl.conf | awk -F'=' '{print $2}') < 2000000 ));then if [ $(grep "net.ipv4.ip_forward" /etc/sysctl.conf | wc -l) -eq 0 ];then if which firewall-cmd >/dev/null; then if systemctl is-active firewalld &>/dev/null ;then if [[ $http_code == 200 ]];then if [[ $http_code == 000 ]];then elif [[ $http_code == 200 ]];then if [[ $http_code != 200 ]];then
git@github.com:java-decompiler/jd-gui.git,b3c1ced04e571fc316648d114ff0c8121e051d8f,jd-gui,12926,./jd-gui/src/osx/resources/universalJavaApplicationStub.sh
lines,308
function,0


for,1
osascript -e "tell application \"System Events\" to display dialog \"ERROR launching '${CFBundleName}'!\n\nYou need to have JAVA installed on your Mac!\nVisit http://java.com for more information...\" with title \"${CFBundleName}\" buttons {\" OK \"} default button 1 with icon path to resource \"${CFBundleIconFile}\" in bundle (path to me)"
if,13
if expr "$link" : '^/' 2> /dev/null >/dev/null; then if [ $exitcode -ne 0 ]; then if [ $exitcode -eq 0 ]; then if [[ ! -z ${JVMWorkDir} ]]; then if [ "${JVMStartOnMainThread}" == "true" ]; then if [[ $JVMClassPath_RAW == *Array* ]] ; then if [ -n "$JAVA_HOME" ] ; then elif [ ! -z ${JVMVersion} ] && [ -x /usr/libexec/java_home ] && /usr/libexec/java_home -F; then if /usr/libexec/java_home -F -v ${JVMVersion}; then elif [ -x /usr/libexec/java_home ] && /usr/libexec/java_home -F; then elif [ -h /Library/Java/Home ]; then if [ -z ${JVMMainClass} ]; then elif [ -f "$JAVACMD" ] && [ -x "$JAVACMD" ] ; then
git@github.com:Netflix/zuul.git,8eeb23eb9d781183f5a0f903e65bb7c0f5321140,zuul,12879,
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/services/src/bin/run.sh
lines,16
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/cases/cluster.sh
lines,280
function,9
function usage { function check_env_file { function category { function show_status { function build_shared_dir { function docker_file { function choose_static_file { function verify_docker_file { function run_setup {

for,4
Status of the cluster (for debugging within build scripts) part of up. Use only for debugging. for id in $(docker ps -a --format "{{.ID}}"); do echo "Logs for Container ID $id"
if,13
if [ $ if [ ! -f $ENV_FILE ]; then if [ $ if [ -f "$CLUSTER_DIR/$TEMPLATE_SCRIPT" ]; then if [ ! -d $CLUSTER_DIR ]; then if [ -n "$USE_INDEXER" ]; then if [ "$USE_INDEXER" != "indexer" ] && [ "$USE_INDEXER" != "middleManager" ] if [ "$USE_INDEXER" == "indexer" ]; then if [ ! -f "$CLUSTER_DIR/$compose_file" ]; then if [ -f "$CLUSTER_DIR/docker-compose.yaml" ]; then if [ ! -f "$COMPOSE_DIR/docker-compose.yaml" ]; then if [ -f "$SETUP_SCRIPT" ]; then if which docker-compose > /dev/null
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/cases/cluster/GcsDeepStorage/verify.sh
lines,23
function,0


for,0

if,1
if [ ! -f "$GOOGLE_APPLICATION_CREDENTIALS" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/cases/cluster/AzureDeepStorage/verify.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/cases/cluster/S3DeepStorage/verify.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/docker/test-setup.sh
lines,79
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/docker/druid.sh
lines,93
function,3

getConfPath() setKey() setupConfig()
for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/docker/launch.sh
lines,150
function,0


for,0

if,11
if [ -d $TEST_EXTN_DIR ]; then if [ -z "$druid_extensions_path" ]; then if [ -n "$MYSQL_DRIVER_CLASSNAME" ]; then if [ -n "$druid_extensions_loadList" ]; then if [ -n "$druid_test_loadList" ]; then if [ -n "$DRUID_INSTANCE" ]; then if [ -f $LOG4J_CONFIG ]; then if [ -n "$DRUID_CLASSPATH" ]; then if [ -d $HADOOP_XML ]; then if [ -d $EXTRA_LIBS ]; then if [ -d $EXTRA_RESOURCES ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/docker-build.sh
lines,56
function,0


for,0

if,2
if [ ! -d $TARGET_DIR/docker ]; then if [[ ! -f $DISTRIB_FILE || $SOURCE_FILE -nt $DISTRIB_FILE ]]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/build-image.sh
lines,48
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests-ex/image/rebuild.sh
lines,48
function,0


for,0

if,1
if [ ! -f $TARGET_DIR/env.sh ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/middleManager.sh
lines,25
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/jconsole.sh
lines,53
function,0


for,3
echo "Downloading missing jars for Log4j api version ${LOG4J2_VERSION} to ${LOG4J_API_PATH}" echo "Downloading missing jars for Log4j core version ${LOG4J2_VERSION} to ${LOG4J_CORE_PATH}" echo "Downloading missing jars for Log4j gui version ${LOG4J2_VERSION} to ${LOG4J_GUI_PATH}"
if,4
if [ ! -e ${LOG4J_API_PATH} ]; then if [ ! -e ${LOG4J_CORE_PATH} ]; then if [ ! -e ${LOG4J_GUI_PATH} ]; then if [ -z "$JAVA_BIN_DIR" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/broker.sh
lines,25
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/overlord.sh
lines,25
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/historical.sh
lines,25
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/node.sh
lines,108
function,0


for,0

if,11
if [ $ if [[ $LOG_DIR == druid/ ]]; if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ ! -d "$PID_DIR" ]; then mkdir -p $PID_DIR; fi if [ ! -d "$LOG_DIR" ]; then mkdir -p $LOG_DIR; fi echo "Logging to default file[$LOG_DIR/$nodeType.log] if no changes made to log4j2.xml" if [ -f $pid ]; then if kill -0 $TARGET_PID > /dev/null 2>&1; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/bin/coordinator.sh
lines,25
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/examples/quickstart/tutorial/hadoop/docker/bootstrap.sh
lines,41
function,0


for,1
cd $HADOOP_HOME/share/hadoop/common ; for cp in ${ACP//,/ }; do echo == $cp; curl -LO $cp ; done; cd -
if,2
if [[ $1 == "-d" ]]; then if [[ $1 == "-bash" ]]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/it.sh
lines,316
function,7
function usage function tail_logs function build_override { function reuse_override { function require_category { function require_env_var { function verify_env_vars {

for,8
build Druid and the distribution for CI pipelines Start the cluster for category. Stop the cluster for category. Run the tests for the given module on an alread-running cluster. Does not stop the cluster. Primarily for debugging. Start the cluster, run the test for category, and stop the cluster. See docs for additional details. echo "$1 must be set for test category $CATEGORY" 1>&2
if,14
Stop all running Docker containers. Do this if "down" won't work USE_INDEXER: Set to middleManager (default if not set) if [ -n "$OVERRIDE_ENV" ]; then if [ ! -f "$OVERRIDE_ENV" ]; then if [ -f "$LOCAL_ENV" ]; then if [ ! -f "$OVERRIDE_FILE" ]; then if [ -z "$CATEGORY" ]; then if [ -z "$1" ]; then if [ -f "$VERIFY_SCRIPT" ]; then if [ $ if [ $ if [ $ if [ $RESULT -ne 0 ]; then if [ $(docker ps | wc -l) -ne 1 ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/.github/scripts/setup_test_profiling_env.sh
lines,44
function,0


for,0

if,2
if [ "$ if [[ "$1" == "17" ]];
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/.github/scripts/license_checks_script.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/.github/scripts/unit_tests_script.sh
lines,78
function,0


for,4
for f in ${all_files} for f in ${project_files} { for i in 1 2 3; do curl -o codecov.sh -s https://codecov.io/bash && break || sleep 15; done } { for i in 1 2 3; do bash codecov.sh -X gcov && break || sleep 15; done }
if,2
if [[ "${MAVEN_PROJECTS}" = \!* ]] if [ -n "${project_files}" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/.github/scripts/setup_generate_license.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/.github/scripts/analyze_dependencies_script.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/upload.sh
lines,52
function,0


for,0

if,4
if [ $ if command -v s3cmd >/dev/null 2>&1 if [ ! -z "`$s3ls "$S3PATH/$DRUID_TAR"`" ]; then if [ ! -z "`$s3ls "$S3PATH/$MYSQL_TAR"`" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/hooks/install-hooks.sh
lines,40
function,1
function cp_if_not_exist(){
function cp_if_not_exist(){
for,0

if,2
if [ -e "$2" ] if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/hooks/uninstall-hooks.sh
lines,37
function,0


for,0

if,1
if [ $
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/run-mysql.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-to-be-revoked-client-cert.sh
lines,61
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-expired-client-cert.sh
lines,127
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-good-client-cert.sh
lines,62
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/set-docker-host-ip.sh
lines,35
function,0


for,0

if,3
if [ -z "$DOCKER_HOST_IP" ]; then if [ -z "$DOCKER_HOST_IP" ]; then if [ -z "$DOCKER_HOST_IP" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-client-certs-and-keystores.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-untrusted-root-client-cert.sh
lines,60
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-valid-intermediate-client-cert.sh
lines,94
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-server-certs-and-keystores.sh
lines,86
function,0


for,0

if,1
if [ -f "$FILE_CHECK_IF_RAN" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-incorrect-hostname-client-cert.sh
lines,56
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-invalid-intermediate-client-cert.sh
lines,94
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/tls/generate-root-certs.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/druid.sh
lines,107
function,4

getConfPath() setKey() setupConfig() setupData()
for,0

if,3
if [ "$DRUID_INTEGRATION_TEST_GROUP" = "query" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-retry" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-error" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "high-availability" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "security" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "ldap-security" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "upgrade" ]; then if [ "$MYSQL_DRIVER_CLASSNAME" != "com.mysql.jdbc.Driver" ] ; then if [ "$DRUID_INTEGRATION_TEST_GROUP" = "input-source" ] ; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/docker/base-setup.sh
lines,64
function,1

install_zk() {
for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/setup_druid_on_k8s.sh
lines,53
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/docker_compose_args.sh
lines,78
function,1

getComposeArgs()
for,0

if,11
if [ "$DRUID_INTEGRATION_TEST_INDEXER" != "indexer" ] && [ "$DRUID_INTEGRATION_TEST_INDEXER" != "middleManager" ] if [ "$DRUID_INTEGRATION_TEST_INDEXER" = "indexer" ] if [ "$DRUID_INTEGRATION_TEST_GROUP" = "security" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "ldap-security" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-retry" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-error" ] || [ "$DRUID_INTEGRATION_TEST_GROUP" = "high-availability" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "kafka-data-format" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "security" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "ldap-security" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-retry" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "query-error" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "high-availability" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "kafka-data-format" ] elif [ "$DRUID_INTEGRATION_TEST_GROUP" = "kinesis-data-format" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/setup_k8s_cluster.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/copy_resources_template.sh
lines,84
function,0


for,0

if,2
if [ -n "$DRUID_INTEGRATION_TEST_START_HADOOP_DOCKER" ] && [ "$DRUID_INTEGRATION_TEST_START_HADOOP_DOCKER" == true ] if [ -n "$DRUID_INTEGRATION_TEST_RESOURCE_FILE_DIR_PATH" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/setup_druid_operator_on_k8s.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/docker_build_containers.sh
lines,56
function,0


for,0

if,2
if [ -z "$DRUID_INTEGRATION_TEST_JVM_RUNTIME" ] if [ -n "$DRUID_INTEGRATION_TEST_BUILD_HADOOP_DOCKER" ] && [ "$DRUID_INTEGRATION_TEST_BUILD_HADOOP_DOCKER" == true ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/stop_k8s_cluster.sh
lines,30
function,0


for,0

if,1
if ($BUILD_DRUID_CLSUTER); then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/copy_hadoop_resources.sh
lines,60
function,0


for,2
echo "Waiting for hadoop namenode to be up" echo "Exhausted all runs while waiting for namenode to be up. Exiting"
if,2
if [ $i -lt $MAX_ITERATIONS ]; then if [ -n "${HADOOP_VERSION}" ] && [ "${HADOOP_VERSION:0:1}" == "3" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/build_run_k8s_cluster.sh
lines,39
function,0


for,0

if,2
if ($BUILD_DRUID_CLSUTER); then if [ -f "$k3sFile" ]; then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/script/docker_run_cluster.sh
lines,57
function,0


for,0

if,4
if [ -z "$DRUID_INTEGRATION_TEST_OVERRIDE_CONFIG_PATH" ] if [ "$DRUID_INTEGRATION_TEST_GROUP" = "s3-deep-storage" ] || \ if [ -n "$DRUID_INTEGRATION_TEST_START_HADOOP_DOCKER" ] && [ "$DRUID_INTEGRATION_TEST_START_HADOOP_DOCKER" == true ] if [ -z "$DRUID_INTEGRATION_TEST_OVERRIDE_CONFIG_PATH" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/stop_cluster.sh
lines,50
function,0


for,0

if,4
if [ -n "$DRUID_INTEGRATION_TEST_SKIP_RUN_DOCKER" ] && [ "$DRUID_INTEGRATION_TEST_SKIP_RUN_DOCKER" == true ] if [ ! -z "$HADOOP_CONTAINER" ] if [ -z "$DRUID_INTEGRATION_TEST_OVERRIDE_CONFIG_PATH" ] if [ ! -z "$(docker network ls -q -f name=druid-it-net)" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/integration-tests/build_run_cluster.sh
lines,42
function,0


for,0

if,3
if !($DRUID_INTEGRATION_TEST_SKIP_BUILD_DOCKER); then if !($DRUID_INTEGRATION_TEST_SKIP_RUN_DOCKER); then if ($DRUID_INTEGRATION_TEST_START_HADOOP_DOCKER); then
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/distribution/docker/druid.sh
lines,203
function,5

getConfPath() { getSingleServerConfPath() { getClusterConfPath() { setKey() { setJavaKey() {
for,0

if,15
if [ -n "$DRUID_SINGLE_NODE_CONF" ] if [ -n "$DRUID_CONFIG_COMMON" ] if [ -n "${SCONFIG}" ] if [ -n "${ZOOKEEPER}" ]; if [ "${DRUID_SET_HOST}" = "1" ] if [ -n "$DRUID_XMX" ]; then setJavaKey ${SERVICE} -Xmx -Xmx${DRUID_XMX}; fi if [ -n "$DRUID_XMS" ]; then setJavaKey ${SERVICE} -Xms -Xms${DRUID_XMS}; fi if [ -n "$DRUID_MAXNEWSIZE" ]; then setJavaKey ${SERVICE} -XX:MaxNewSize -XX:MaxNewSize=${DRUID_MAXNEWSIZE}; fi if [ -n "$DRUID_NEWSIZE" ]; then setJavaKey ${SERVICE} -XX:NewSize -XX:NewSize=${DRUID_NEWSIZE}; fi if [ -n "$DRUID_MAXDIRECTMEMORYSIZE" ]; then setJavaKey ${SERVICE} -XX:MaxDirectMemorySize -XX:MaxDirectMemorySize=${DRUID_MAXDIRECTMEMORYSIZE}; fi if [ -n "$DRUID_LOG_LEVEL" ] if [ -n "$DRUID_LOG4J" ] if [ -n "$DRUID_SERVICE_LOG_LEVEL" ] if [ -n "$DRUID_SERVICE_LOG4J" ] if [ -n "${DRUID_DIRS_TO_CREATE}" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/distribution/docker/peon.sh
lines,156
function,3

getConfPath() { setKey() { setJavaKey() {
for,0

if,7
if [ -n "${ZOOKEEPER}" ]; if [ "${DRUID_SET_HOST}" = "1" ] if [ -n "$DRUID_CONFIG_COMMON" ] if [ -n "${SCONFIG}" ] if [ -n "$DRUID_LOG_LEVEL" ] if [ -n "$DRUID_LOG4J" ] if [ -n "${DRUID_DIRS_TO_CREATE}" ]
git@github.com:apache/druid.git,5752a1a3831d4f9dc181101e7ae0ebf10871385d,druid,12868,./druid/distribution/bin/build-textfile-readme.sh
lines,28
function,0


for,0

if,1
if ! [[ "$DRUID_VERSION" =~ [0-9]+\.[0-9]+\.[0-9]+(\-incubating)?$ ]];
git@github.com:LuckSiege/PictureSelector.git,635d33463bee291370e7aae2b92f497e2a6dfe29,PictureSelector,12723,
git@github.com:yuliskov/SmartTubeNext.git,c85d26db1679b64d5abf7ff4688d29991af5807c,SmartTubeNext,12721,./SmartTubeNext/exoplayer-amzn-2.10.6/extensions/opus/src/main/jni/convert_android_asm.sh
lines,47
function,0


for,0

if,2
if [[ ! -x "${ASM_CONVERTER}" ]]; then if [[ ! "${file}" =~ .*_gnu\.s$ ]]; then
git@github.com:yuliskov/SmartTubeNext.git,c85d26db1679b64d5abf7ff4688d29991af5807c,SmartTubeNext,12721,./SmartTubeNext/exoplayer-amzn-2.10.6/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh
lines,114
function,2

remove_trailing_whitespace() { convert_asm() {
for,3
for i in $(seq 0 ${limit}); do for i in $(seq 0 ${limit}); do for f in ${allowed_files}; do
if,3
if [ $ if [[ ! -e "${file}" ]]; then if [[ "${extglob_status}" == "off" ]]; then
git@github.com:facebookarchive/stetho.git,7c4dc8de4deb28c012b199ef52b9b5c7ad626793,stetho,12653,./stetho/scripts/hprof_dump.sh
lines,27
function,0


for,0

if,1
if [[ -z "$1" ]]; then
git@github.com:sqshq/piggymetrics.git,6bb2cf9ddbca980b664d3edbb6ff775d75369278,piggymetrics,12618,./piggymetrics/mongodb/init.sh
lines,33
function,0


for,0

if,3
if test -z "$MONGODB_PASSWORD"; then create_user="if (!db.getUser('user')) { db.createUser({ user: 'user', pwd: '$MONGODB_PASSWORD', roles: [ {role:'readWrite', db:'piggymetrics'} ]}) }" if test -n "$INIT_DUMP"; then
git@github.com:greenrobot/greenDAO.git,2611b1c8d220953c1308131a225a0cf41dce3d1f,greenDAO,12589,
git@github.com:questdb/questdb.git,e4b6520e7b33187a0d752d53748aa7e981db3f81,questdb,12572,./questdb/core/src/main/bin/env.sh
lines,3
function,0


for,0

if,0

git@github.com:questdb/questdb.git,e4b6520e7b33187a0d752d53748aa7e981db3f81,questdb,12572,./questdb/core/src/main/bin/questdb.sh
lines,284
function,9
function read_link { function usage { function export_pid { function export_java { function export_args { function start { function query { function stop { function banner {

for,0

if,20
if [ "$f" != "" ]; then if [[ "$f" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if [ "$n" != "" ]; then if [ "$LINK" != "" ]; then if [ -f "$BASE/java" ]; then if [ "$JAVA_HOME" = "" -a -e /usr/libexec/java_home ]; then if [ "$JAVA_HOME" = "" ]; then if [ ! -x "$JAVA" ]; then if [[ $ if [[ $ if [[ "${QDB_PID}" != "" ]]; then if [ ! -d "$QDB_ROOT" ]; then if [ "$(uname)" == "Darwin" ]; then if [ "${QDB_CONTAINER_MODE}" != "" ]; then elif [ "${QDB_DISABLE_HUP_HANDLER}" = "" ]; then if [[ "${QDB_PID}" = "" ]]; then if [[ "${QDB_PID}" = "" ]]; then if [[ "${QDB_PID}" != "" ]]; then if [[ "${QDB_PID}" != "" ]]; then if [[ $
git@github.com:questdb/questdb.git,e4b6520e7b33187a0d752d53748aa7e981db3f81,questdb,12572,./questdb/core/docker-entrypoint.sh
lines,70
function,1

find_and_own_dir() {
for,0

if,8
if [ ${IGNORE_FIND_AND_OWN_DIR+x} ] if [ "$IGNORE_DATA_ROOT_MOUNT_CHECK" = "false" ] && mount | grep "/root/.questdb" -q; then if [ -n "$JVM_PREPEND" ]; then if [ $ if [ "${1:0:1}" = '-' ]; then elif [ "$1" = "/app/bin/java" ]; then if [ "$(id -u)" = '0' ] && [ "${QUESTDB_DATA_DIR%/}" != "/root/.questdb" ] && [ "$RUN_AS_ROOT" = "false" ] ; then if [ "$DO_CHOWN" = "true" ]; then
git@github.com:questdb/questdb.git,e4b6520e7b33187a0d752d53748aa7e981db3f81,questdb,12572,./questdb/pkg/ami/marketplace/scripts/1-per-boot.sh
lines,47
function,0


for,0

if,3
if [ ! -f "/var/lib/questdb/conf/server.conf" ]; then if [ ! -f "/var/lib/questdb/conf/full_auth.json" ]; then if [ ! -f "/var/lib/questdb/conf/auth.txt" ]; then
git@github.com:youth5201314/banner.git,b82bf41dd5716b7883976fd1e6002652ffd674bd,banner,12504,
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/backup/myconfig.sh
lines,4
function,0


for,0

if,0

git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/server/scripts/build-wrapper.sh
lines,29
function,0


for,0

if,2
if [[ "$EUID" == 0 ]] if [[ "$BUILDTYPE" == debug ]]
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/server/build_without_gradle.sh
lines,87
function,0


for,0

if,1
if [[ $PLATFORM -lt 31 ]]
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/QtScrcpy/clang-format-all.sh
lines,84
function,2
function usage {
find-dominating-file() {
for,3
for clangfmt in clang-format{,-{4,3}.{9,8,7,6,5,4,3,2,1,0}}; do for dir in "$@"; do for dir in "$@"; do
if,7
if [ $ if which "$clangfmt" &>/dev/null; then if [ -z "$FMT" ]; then if [ ! -d "${dir}" ]; then if [ -r "$1"/"$2" ]; then if [ "$1" = "/" ]; then if ! find-dominating-file . .clang-format; then
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/QtScrcpy/sndcpy/sndcpy.sh
lines,45
function,0


for,1
echo "Waiting for device $1..."
if,3
if [[ $ if [[ $sndcpy_installed == "" ]]; then if [[ $sndcpy_started != "" ]]; then
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/lrelease.sh
lines,2
function,0


for,0

if,0

git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/linux/build_for_linux.sh
lines,67
function,0


for,0

if,4
if [[ $build_mode != "Release" && $build_mode != "Debug" && $build_mode != "MinSizeRel" && $build_mode != "RelWithDebInfo" ]]; then if [ -d "$output_path" ]; then if [ $? -ne 0 ] ;then if [ $? -ne 0 ] ;then
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/lupdate.sh
lines,3
function,0


for,0

if,0

git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/mac/publish_for_mac.sh
lines,86
function,0


for,0

if,1
if [ -d "$publish_path" ]; then
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/mac/build_for_mac.sh
lines,82
function,0


for,0

if,5
if [[ $build_mode != "Release" && $build_mode != "Debug" && $build_mode != "MinSizeRel" && $build_mode != "RelWithDebInfo" ]]; then if [ -d "$output_path" ]; then if [ -d "$build_path" ]; then if [ $? -ne 0 ] ;then if [ $? -ne 0 ] ;then
git@github.com:barry-ran/QtScrcpy.git,cec31a6f675e9a00bc4a56db96b7cfbc856d797b,QtScrcpy,12476,./QtScrcpy/ci/mac/package_for_mac.sh
lines,37
function,0


for,0

if,2
if [ $? -ne 0 ] ;then if [ $? -ne 0 ] ;then
git@github.com:zhihu/Matisse.git,21591aebe73a56435d84afc7b5cd50ea7ae2a6b8,Matisse,12447,
git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-jenkins/src/main/resources/mall-tiny-jenkins.sh
lines,11
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/document/redis-cluster/config/redis.sh
lines,0
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-drone/run.sh
lines,26
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-deploy/deploy/run.sh
lines,26
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-gitlab/run.sh
lines,25
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-arthas2/src/main/docker/run.sh
lines,27
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-arthas2/src/main/arthas/run.sh
lines,22
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-arthas/src/main/docker/run.sh
lines,26
function,0


for,0

if,0

git@github.com:macrozheng/mall-learning.git,d119bd893bba22fb7f85270bb07595d5421f406d,mall-learning,12348,./mall-learning/mall-tiny-arthas/src/main/resources/mall-tiny-jenkins.sh
lines,11
function,0


for,0

if,0

git@github.com:daimajia/AndroidViewAnimations.git,6a35c466d23e49c5cd174289ebe8d9ccdbc69044,AndroidViewAnimations,12343,
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/extensions/mailer/runtime/src/test/resources/certs/generate-certs.sh
lines,32
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/extensions/amazon-lambda/common-deployment/src/main/resources/lambda/bootstrap-example.sh
lines,12
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/extensions/amazon-lambda/common-deployment/src/main/resources/lambda/manage.sh
lines,86
function,5
function cmd_create() { function cmd_delete() { function cmd_invoke() { function cmd_update() { function usage() {
function cmd_create() { function cmd_delete() { function cmd_invoke() { function cmd_update() { function usage() {
for,0

if,3
if [ $(aws --version | awk '{print substr($1,9)}' | cut -c1-1) -ge 2 ]; then inputFormat="--cli-binary-format raw-in-base64-out"; fi if [ "_$1" == "_" ] || [ "$1" == "help" ] if [ "$1" == "native" ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/coverage-report/prepare.sh
lines,28
function,0


for,3
for j in '../extensions' '../core' '../devtools' '../independent-projects/' for i in `find $j -regex .*target/classes` for i in `find $j -regex .*src/main/java`
if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/tcks/resteasy-reactive/update-dependencies.sh
lines,104
function,0


for,0

if,3
if [ "${CI:-}" == true ] && [ ! -f "${PRG_PATH}/target/testsuite/tests/pom.xml" ] if [ -z "${ARTIFACT_IDS}" ] if [ "${CI:-}" == true ] && [ $(git status -s -u no '*pom.xml' | wc -l) -ne 0 ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/tcks/resteasy-reactive/update-ref.sh
lines,15
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/docs/sync-web-site.sh
lines,161
function,0


for,1
echo "Web Site updated - wait for CI build"
if,15
if [ $ if [ $ if [ -z $TARGET_DIR ]; then if [[ "$QUARKUS_WEB_SITE_PUSH" != "true" ]]; then if [ $BRANCH == "main" ] && [ "$QUARKUS_RELEASE" == "true" ]; then if [ "$QUARKUS_RELEASE" == "true" ]; then if [ ! -f ${TARGET_GUIDES}/_attributes-local.adoc ]; then if [ ! -f ${TARGET_GUIDES}/guides.md ]; then if [ ! -f _data/guides-${BRANCH_WITH_DASH}.yaml ]; then if [ -d ../target/asciidoc/generated/ ]; then if [ -f target/indexByType.yaml ]; then if [[ "$QUARKUS_WEB_SITE_PUSH" = "true" ]] Run one of the following command to check the web site (if not done already): OR if you want to generate all versions include the maintenance branches (2.7, 2.13...): - you may need to add an environment variable if you are running rootless: -e JEKYLL_ROOTLESS=1
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/.github/docker-prune.sh
lines,15
function,0


for,1
echo "docker-prune.sh is disabled for now"
if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/.github/filter-native-tests-json.sh
lines,55
function,0


for,0

if,3
if [ "$1" == '_all_' ] elif [ -z "$1" ] if [ -z "$(echo "${JSON}" | jq '.include[]')" ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/.github/ci-prerequisites.sh
lines,45
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/.github/filter-virtual-threads-tests-json.sh
lines,55
function,0


for,0

if,3
if [ "$1" == '_all_' ] elif [ -z "$1" ] if [ -z "$(echo "${JSON}" | jq '.include[]')" ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/.github/filter-jvm-tests-json.sh
lines,19
function,0


for,0

if,1
if [[ $repoName == "quarkusio/quarkus" ]]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/integration-tests/hibernate-orm-compatibility-5.6/mariadb/update-dump.sh
lines,29
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/integration-tests/hibernate-orm-compatibility-5.6/postgresql/update-dump.sh
lines,30
function,0


for,0

if,0

git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/integration-tests/gradle/update-dependencies.sh
lines,96
function,0


for,0

if,2
if [ -z "${ARTIFACT_IDS}" ] if [ "${CI:-}" == true ] && [ $(git status -s -u no '*pom.xml' | wc -l) -ne 0 ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/update-extension-dependencies.sh
lines,121
function,0


for,0

if,4
if [ "${CI:-}" == true ] if [ "${ANSWER}" == y ] if [ -z "${ARTIFACT_IDS}" ] if [ "${CI:-}" == true ] && [ $(git status -s -u no '*pom.xml' | wc -l) -ne 0 ]
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/update-version.sh
lines,54
function,0


for,0

if,9
if [ $ if [ -f devtools/gradle/gradle.properties ]; then if [ -f integration-tests/gradle/gradle.properties ]; then if [ -f extensions/azure-functions-http/maven-archetype/src/main/resources/archetype-resources/pom.xml ]; then if [ -f extensions/amazon-lambda/maven-archetype/src/main/resources/archetype-resources/pom.xml ]; then if [ -f extensions/amazon-lambda-http/maven-archetype/src/main/resources/archetype-resources/pom.xml ]; then if [ -f extensions/funqy/funqy-amazon-lambda/maven-archetype/src/main/resources/archetype-resources/pom.xml ]; then if [ -f extensions/amazon-lambda-rest/maven-archetype/src/main/resources/archetype-resources/pom.xml ]; then if [ -f coverage-report/pom.xml ]; then
git@github.com:quarkusio/quarkus.git,d35d52fec6b1d3dac8c208137a9d3551cc05b6e4,quarkus,12323,./quarkus/devtools/cli/distribution/release-cli.sh
lines,75
function,0


for,0

if,6
if [ -z "$VERSION" ] if [ -z "$BRANCH" ] if [ -z "$MAINTENANCE" ] if [ -z "$PREVIEW" ] if [ "$MAINTENANCE" == "true" ]; then if [ "$PREVIEW" == "true" ]; then
git@github.com:daimajia/AndroidSwipeLayout.git,5f8678b04751fb8510a88586b22e07ccf64bca99,AndroidSwipeLayout,12316,
git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/jdk/java-17.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/jdk/java-8.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/jdk/java-21.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/jdk/java-22.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/jdk/java-11.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/maven/maven-3.6.3.sh
lines,4
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/gradle/gradle-7.6.1.sh
lines,4
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/gradle/gradle-8.3.sh
lines,4
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/gradle/gradle-6.8.3.sh
lines,4
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/ant/ant-1.10.9.sh
lines,3
function,0


for,0

if,0

git@github.com:projectlombok/lombok.git,d328ec35c18df71fdeb087d4dd9e19c1ac96387d,lombok,12262,./lombok/docker/provision/bazel/bazel-2.0.0.sh
lines,3
function,0


for,0

if,0

git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/deploy-guice.sh
lines,78
function,2

_deploy() { _deploy_extension() {
for,1
for ext in "${EXTENSIONS[@]}"
if,5
if [[ $ext == 'dagger-adapter' ]]; then elif [[ $ext == 'testlib' ]]; then elif [[ $ext == 'jmx' ]]; then elif [[ $ext == 'struts2' ]]; then if [[ -d "extensions/$ext" ]]; then
git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/install-local-snapshot.sh
lines,8
function,0


for,0

if,0

git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/publish-latest-docs.sh
lines,26
function,0


for,0

if,1
if [[ -d api-docs/latest ]]; then
git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/deploy-library.sh
lines,54
function,2

deploy_library() { bazel_output_file() {
for,1
echo "Could not find bazel output file for $library"
if,3
if [ -n "$srcjar" ] && [ -n "$javadoc" ] ; then if [[ ! -e $output_file ]]; then if [[ ! -e $output_file ]]; then
git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/diff-jars.sh
lines,35
function,0


for,1
for EXT in assistedinject dagger-adapter grapher jmx jndi persist servlet spring testlib throwingproviders
if,0

git@github.com:google/guice.git,73dc9f3b8afac8b742b766049afc69caf95dbf51,guice,12162,./guice/util/generate-latest-docs.sh
lines,37
function,0


for,2
for ext in "${EXTENSIONS[@]}" echo -e "Generating latest API diff for extension ${ext}\n"
if,3
if [[ -d "build/docs" ]]; then if [[ $ext == 'struts2' ]]; then if [[ -f extensions/$ext/pom.xml ]]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/customize.sh
lines,192
function,1

enforce_install_from_magisk_app() {
for,0

if,22
if $BOOTMODE; then if [ ! -f "$TMPDIR/verify.sh" ]; then if [ "$FLAVOR" == "riru" ]; then if [ "$ARCH" != "arm" ] && [ "$ARCH" != "arm64" ] && [ "$ARCH" != "x86" ] && [ "$ARCH" != "x64" ]; then if [ "$FLAVOR" == "zygisk" ]; then if [ "$ARCH" = "arm" ] || [ "$ARCH" = "arm64" ]; then if [ "$IS64BIT" = true ]; then if [ "$ARCH" = "x86" ] || [ "$ARCH" = "x64" ]; then if [ "$IS64BIT" = true ]; then elif [ "$FLAVOR" == "riru" ]; then if [ "$ARCH" = "arm" ] || [ "$ARCH" = "arm64" ]; then if [ "$IS64BIT" = true ]; then if [ "$ARCH" = "x86" ] || [ "$ARCH" = "x64" ]; then if [ "$IS64BIT" = true ]; then if [ "$RIRU_MODULE_DEBUG" = true ]; then if [ "$RIRU_API" -ge 26 ]; then if [ "$API" -ge 29 ]; then if [ "$ARCH" = "arm" ] || [ "$ARCH" = "arm64" ]; then if [ "$IS64BIT" = true ]; then elif [ "$ARCH" == "x86" ] || [ "$ARCH" == "x64" ]; then if [ "$IS64BIT" = true ]; then if [ "$(grep_prop ro.maple.enable)" == "1" ] && [ "$FLAVOR" == "zygisk" ]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/util_functions.sh
lines,63
function,4

check_magisk_version() { require_new_android() { check_android_version() { check_incompatible_module() {
for,1
for id in "riru_dreamland" "riru_edxposed" "riru_edxposed_sandhook" "taichi"; do
if,4
if [ "$FLAVOR" == "riru" ] || [ "$FLAVOR" == "zygisk" ]; then if [ "$MAGISK_VER_CODE" -lt 24000 ]; then if [ "$API" -ge 27 ]; then if [ -d "$MODULEDIR/$id" ] && [ ! -f "$MODULEDIR/$id/disable" ] && [ ! -f "$MODULEDIR/$id/remove" ]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/post-fs-data.sh
lines,26
function,0


for,0

if,0

git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/riru.sh
lines,86
function,2

check_riru_version() { enforce_install_from_magisk_app() {
for,0

if,9
if [ "$MAGISK_VER_CODE" -ge 21000 ]; then if [ ! -f "$MAGISK_CURRENT_RIRU_MODULE_PATH/api_version" ] && [ ! -f "/data/adb/riru/api_version" ] && [ ! -f "/data/adb/riru/api_version.new" ]; then if [ "$RIRU_API" -lt $RIRU_MODULE_MIN_API_VERSION ]; then if $BOOTMODE; then if [ ! -d $MAGISK_CURRENT_RIRU_MODULE_PATH ]; then if [ -f "$MAGISK_CURRENT_RIRU_MODULE_PATH/disable" ] || [ -f "$MAGISK_CURRENT_RIRU_MODULE_PATH/remove" ]; then if [ -f $MAGISK_CURRENT_RIRU_MODULE_PATH/util_functions.sh ]; then if [ "$RIRU_MODULE_MIN_API_VERSION" -ge 11 ]; then if [ -f /data/adb/riru/util_functions.sh ]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/verify.sh
lines,71
function,2

abort_verify() { extract() {
for,0

if,2
if [ $junk_paths = true ]; then if [ -f "$hash_path" ]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/uninstall.sh
lines,30
function,0


for,0

if,2
if [ -d "$MODSDIR/riru_lsposed" ] && [ -d "$MODSDIR/zygisk_lsposed" ]; then if [ -f "$MODSDIR/riru_lsposed/remove" ] && [ -f "$MODSDIR/zygisk_lsposed/remove" ]; then
git@github.com:LSPosed/LSPosed.git,6f1268e7af94df07ed7a51b44813295d29d21725,LSPosed,12042,./LSPosed/magisk-loader/magisk_module/service.sh
lines,23
function,0


for,0

if,0

git@github.com:Netflix/eureka.git,efc1cf6017f13f5f2491838bde894630a37dfd75,eureka,12011,./eureka/eureka-server/runclient.sh
lines,15
function,0


for,1
for i in testlibs/WEB-INF/lib/*
if,1
if [ "$TEST_CLASSPATH" = "" ] ; then
git@github.com:Netflix/eureka.git,efc1cf6017f13f5f2491838bde894630a37dfd75,eureka,12011,./eureka/eureka-server/runservice.sh
lines,15
function,0


for,1
for i in testlibs/WEB-INF/lib/*
if,1
if [ "$TEST_CLASSPATH" = "" ] ; then
git@github.com:theonedev/onedev.git,8adf95648983548570022f869aa2dbe4ac40286f,onedev,11920,./onedev/server-product/docker/entrypoint-server.sh
lines,29
function,1

_sigterm() {
for,0

if,1
if [[ $UNAME == "aarch64" ]]; then
git@github.com:theonedev/onedev.git,8adf95648983548570022f869aa2dbe4ac40286f,onedev,11920,./onedev/server-product/docker/build.sh
lines,31
function,1
function finish {

for,0

if,1
if [ "$1" != "release" ] ; then
git@github.com:theonedev/onedev.git,8adf95648983548570022f869aa2dbe4ac40286f,onedev,11920,./onedev/server-product/docker/entrypoint-agent.sh
lines,26
function,1

_sigterm() {
for,0

if,1
if [[ $UNAME == "aarch64" ]]; then
git@github.com:theonedev/onedev.git,8adf95648983548570022f869aa2dbe4ac40286f,onedev,11920,./onedev/server-product/helm/build.sh
lines,22
function,0


for,0

if,1
if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:codecentric/spring-boot-admin.git,ed8969f41faa2ad31bf0d62a074cd496b9a6665c,spring-boot-admin,11902,
git@github.com:pagehelper/Mybatis-PageHelper.git,1845b451a6022c12a0fde1884d4c80a5ab686096,Mybatis-PageHelper,11844,
git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/server/src/test/resources/certificates/CA.sh
lines,326
function,2

cp_pem() { usage() {
for,1
for j
if,13
if [ $flag -eq 1 ]; then if [ $? -eq 0 ] ; then if [ $? -eq 0 ]; then if [ -z "$OPENSSL" ]; then OPENSSL=openssl; fi if [ -z "$DAYS" ] ; then DAYS="-days 10000" ; fi if [ -z "$CATOP" ] ; then CATOP=./demoCA ; fi if [ "$NEW" -o ! -f ${CATOP}/serial ]; then if [ ! -f ${CATOP}/private/$CAKEY ]; then if [ "$FILE" ]; then if [ ! -f "${CATOP}/serial" ]; then if [ -z "$2" ] ; then if [ -z "$1" ]; then if [ $? != 0 ]; then
git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/pki/pem/encrypted/gen.sh
lines,43
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/pki/pem/legacy/gen.sh
lines,24
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/pki/pem/pkcs8/gen.sh
lines,15
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/ssl/test-certificates/gen.sh
lines,35
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/ssl/test-certificates/gen-revocation.sh
lines,10
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/ssl/test-certificates/gen-ca.sh
lines,45
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/ssl/src/test/resources/org/neo4j/ssl/test-certificates/gen-server.sh
lines,24
function,0


for,0

if,0

git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/cypher-shell/tyre-kicking-test/tyrekicking.sh
lines,45
function,3
function prepare { function prepare-bundle { function testscript {

for,0

if,3
if [ $ if ${workspace}/cypher-shell/cypher-shell -u neo4j -p neo "RETURN 1;"; then elif ${workspace}/cypher-shell/cypher-shell -a "bolt://localhost:7687" -u neo4j -p neo "RETURN 1;"; then
git@github.com:neo4j/neo4j.git,74099806e5460a5992d3146dab5108c53919d640,neo4j,11838,./neo4j/community/cypher-shell/packaging/bin/shared.sh
lines,49
function,2

parse_version_from_zipfile() { parse_version() {
for,0

if,2
if [[ "${version_label}" = "${version_no_label}" ]]; then if [ -z ${version_label} ]; then
git@github.com:gyoogle/tech-interview-for-developer.git,ed8c9810be6eb6404c13d9a03661809e6d27e8a0,tech-interview-for-developer,11814,
git@github.com:Tencent/VasSonic.git,59936beff656d4b5718ff6444d6c5e001a2c5231,VasSonic,11719,
git@github.com:Yalantis/uCrop.git,63dda2e17138ed1b6b91a1dd83224452e7c51f6c,uCrop,11618,
git@github.com:DuGuQiuBai/Java.git,f7aa7398c6e0e856125d4c7f3446a9406198ca3d,Java,11573,
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-server/src/test/resources/test-patch.sh
lines,647
function,15

parseArgs() { checkout () { setup () { checkAuthor () { checkTests () { applyPatch () { checkJavadocWarnings () { checkJavacWarnings () { checkReleaseAuditWarnings () { checkStyle () { checkFindbugsWarnings () { runCoreTests () { runContribTests () { submitJiraComment () { cleanupAndExit () {
for,2
echo " Testing patch for ${defect}." Please justify why no new tests are needed for this patch.
if,42
if [[ $ if [ -z "$defect" ] ; then if [ ! -e "$PATCH_DIR" ] ; then if [[ $ if [[ ! -e "$PATCH_FILE" ]] ; then if [[ ! -e "$PATCH_DIR" ]] ; then if [[ $? == 0 ]] ; then if [[ $? -ne 0 ]] ; then if [[ $? -ne 0 ]] ; then if [[ $HUDSON == "false" ]] ; then if [[ $uncommitted || $untracked ]] ; then if [[ $HUDSON == "true" ]] ; then if [[ `$GREP -c 'Patch Available' $PATCH_DIR/jira` == 0 ]] ; then if [[ $? == 0 ]] ; then if [ -z "$OK_FINDBUGS_WARNINGS" ] || [[ -z "$OK_JAVADOC_WARNINGS" ]] || [[ -z $OK_RELEASEAUDIT_WARNINGS ]]; then if [[ $? != 0 ]] ; then if [[ $authorTags != 0 ]] ; then if [[ $testReferences == 0 ]] ; then if [[ $HUDSON == "true" ]] ; then if [[ $patchIsDoc != 0 ]] ; then if [[ $? != 0 ]] ; then if [[ $javadocWarnings > $OK_JAVADOC_WARNINGS ]] ; then if [[ $? != 0 ]] ; then if [[ -f $PATCH_DIR/patchJavacWarnings.txt ]] ; then if [[ $patchJavacWarnings != "" && $trunkJavacWarnings != "" ]] ; then if [[ $patchJavacWarnings -gt $trunkJavacWarnings ]] ; then if [[ -f $PATCH_DIR/patchReleaseAuditWarnings.txt ]] ; then if [[ $patchReleaseAuditWarnings != "" && $OK_RELEASEAUDIT_WARNINGS != "" ]] ; then if [[ $patchReleaseAuditWarnings -gt $OK_RELEASEAUDIT_WARNINGS ]] ; then if [ $? != 0 ] ; then if [[ $findbugsWarnings > $OK_FINDBUGS_WARNINGS ]] ; then if [[ $? != 0 ]] ; then if [[ $? != 0 ]] ; then if [[ $HUDSON == "false" ]] ; then if [[ $result == 0 ]] ; then if [[ $HUDSON == "true" ]] ; then if [[ $HUDSON == "true" ]] ; then if [ -e "$PATCH_DIR" ] ; then if [[ $HUDSON == "true" ]] ; then if [[ $RESULT != 0 ]] ; then if [[ $? != 0 ]] ; then if [[ $HUDSON == "true" ]] ; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-server/src/test/resources/test-scripts.sh
lines,221
function,4

fail() { genconfig1() { genconfig2() { clear_tmp() { start() { stop() {
for,0

if,2
if [ ! -d "conf" ]; then if $cygwin
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-server/src/test/resources/test-github-pr.sh
lines,614
function,14

parseArgs() { checkout () { setup () { checkAuthor () { checkTests () { checkJavadocWarnings () { checkJavacWarnings () { checkReleaseAuditWarnings () { checkStyle () { checkFindbugsWarnings () { runCoreTests () { runContribTests () { submitJiraComment () { cleanupAndExit () {
for,2
echo " Testing patch for pull request ${PULLREQUEST_ID}." Please justify why no new tests are needed for this patch.
if,37
if [[ $ if [ ! -e "$PATCH_DIR" ] ; then if [[ $ if [[ ! -e "$PATCH_FILE" ]] ; then if [[ ! -e "$PATCH_DIR" ]] ; then if [[ $? == 0 ]] ; then if [[ $? -ne 0 ]] ; then if [[ $? -ne 0 ]] ; then if [[ $QABUILD == "false" ]] ; then if [[ $uncommitted || $untracked ]] ; then if [ -z "$OK_FINDBUGS_WARNINGS" ] || [[ -z "$OK_JAVADOC_WARNINGS" ]] || [[ -z $OK_RELEASEAUDIT_WARNINGS ]]; then if [[ $? != 0 ]] ; then if [[ $authorTags != 0 ]] ; then if [[ $testReferences == 0 ]] ; then if [[ $QABUILD == "true" ]] ; then if [[ $patchIsDoc != 0 ]] ; then if [[ $javadocWarnings > $OK_JAVADOC_WARNINGS ]] ; then if [[ $? != 0 ]] ; then if [[ -f $PATCH_DIR/patchJavacWarnings.txt ]] ; then if [[ $patchJavacWarnings != "" && $trunkJavacWarnings != "" ]] ; then if [[ $patchJavacWarnings -gt $trunkJavacWarnings ]] ; then if [[ -f $PATCH_DIR/patchReleaseAuditWarnings.txt ]] ; then if [[ $patchReleaseAuditWarnings != "" && $OK_RELEASEAUDIT_WARNINGS != "" ]] ; then if [[ $patchReleaseAuditWarnings -gt $OK_RELEASEAUDIT_WARNINGS ]] ; then if [ $? != 0 ] ; then if [[ $findbugsWarnings > $OK_FINDBUGS_WARNINGS ]] ; then if [[ $? != 0 ]] ; then if [[ $? != 0 ]] ; then if [[ $QABUILD == "false" ]] ; then if [[ $result == 0 ]] ; then if [[ $QABUILD == "true" ]] ; then if [[ $QABUILD == "true" ]] ; then if [ -e "$PATCH_DIR" ] ; then if [[ $QABUILD == "true" ]] ; then if [[ $RESULT != 0 ]] ; then if [[ $checkTestsResult != 0 ]] ; then if [[ $QABUILD == "true" ]] ; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-server/src/main/resources/lastRevision.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-recipes/zookeeper-recipes-queue/src/main/c/tests/zkServer.sh
lines,75
function,0


for,3
for f in "${base_dir}"/zookeeper-*.jar for i in "${base_dir}"/build/lib/*.jar for i in "${base_dir}"/zookeeper-server/src/main/resource/lib/*.jar
if,3
if [ "x$1" == "x" ] if [ "x$1" == "xstartClean" ] if [ -r "/tmp/zk.pid" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-recipes/zookeeper-recipes-lock/src/main/c/tests/zkServer.sh
lines,75
function,0


for,3
for f in "${base_dir}"/zookeeper-*.jar for i in "${base_dir}"/build/lib/*.jar for i in "${base_dir}"/zookeeper-server/src/main/resource/lib/*.jar
if,3
if [ "x$1" == "x" ] if [ "x$1" == "xstartClean" ] if [ -r "/tmp/zk.pid" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/dev/docker/run.sh
lines,72
function,0


for,0

if,1
if [ "$(uname -s)" == "Linux" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-client/zookeeper-client-c/tests/zkServer.sh
lines,259
function,0


for,4
for i in "${zk_base}"/build/lib/*.jar for d in "${zk_base}"/zookeeper-server/target/lib/*.jar for i in "${zk_base}"/zookeeper-server/src/main/resource/lib/*.jar for i in {1..120}
if,19
if [ "x$1" == "x" ] if $cygwin if [ -r "/tmp/zk.pid" ] if [ -r "${base_dir}/build/tmp/zk.pid" ] if [ $? -eq 0 ] if [ -n "$pid" ] if [ "x${base_dir}" == "x" ] if $cygwin if [ "x$1" == "xstartRequireSASLAuth" ] if [ "x$2" != "x" ] if [ "x$3" != "x" ] if [ "x$1" == "xstartCleanReadOnly" ] if [ "x${base_dir}" == "x" ] if [ "x$1" == "xstartClean" ] || [ "x$1" == "xstartCleanReadOnly" ] if [ "x$read_only" != "x" ] if [ "x$1" == "xstartRequireSASLAuth" ] || [ "x$1" == "xstartCleanReadOnly" ] if ps -p $pid > /dev/null if [ $? -ne 0 ] if $success
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-client/zookeeper-client-c/ssl/gencerts.sh
lines,127
function,0


for,0

if,0

git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkSnapshotComparer.sh
lines,36
function,0


for,0

if,1
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkCli.sh
lines,43
function,0


for,0

if,1
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkServer.sh
lines,320
function,0


for,1
echo "Client port not found. Looking for secureClientPort in the static config."
if,37
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then if [ "x$JMXLOCALONLY" = "x" ] if [ "x$JMXDISABLE" = "x" ] || [ "$JMXDISABLE" = 'false' ] if [ "x$JMXPORT" = "x" ] if [ "x$JMXAUTH" = "x" ] if [ "x$JMXSSL" = "x" ] if [ "x$JMXLOG4J" = "x" ] if [ "x$JMXHOSTNAME" = "x" ] if [ "x$SERVER_JVMFLAGS" != "x" ] if [ "x$2" != "x" ] if [ "x$(dirname "$ZOOCFG")" != "x$ZOOCFGDIR" ] if $cygwin if [ -n "$ZOO_DATADIR_AUTOCREATE_DISABLE" ]; then if [ ! -d "$ZOO_DATADIR/version-2" ]; then if [ -n "$ZOO_DATALOGDIR" ] && [ ! -d "$ZOO_DATALOGDIR/version-2" ]; then if [ -z "$ZOOPIDFILE" ]; then if [ ! -d "$ZOO_DATADIR" ]; then if [ ! -w "$ZOO_LOG_DIR" ] ; then if [ -f "$ZOOPIDFILE" ]; then if kill -0 `cat "$ZOOPIDFILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if [ $? -eq 0 ]; if ps -p "${pid}" > /dev/null 2>&1; then if [ "${ZOO_NOEXEC}" != "" ]; then if [ ! -f "$ZOOPIDFILE" ] if ! [ $clientPortAddress ] if ! [[ "$clientPort" =~ ^[0-9]+$ ]] if ! [[ "$myid" =~ ^[0-9]+$ ]] ; then if [ ! "$clientPortAndAddress" ] ; then if [ ! "$clientPortAndAddress" ] ; then if [[ "$clientPortAndAddress" =~ ^.*:[0-9]+ ]] ; then if [[ "$clientPortAndAddress" =~ \[.*\]:[0-9]+ ]] ; then if [ ! "$clientPort" ] ; then if [ "$secureClientPort" ] ; then if ! [ $clientPortAddress ] if [ "x$STAT" = "x" ] if [ "$isSSL" = "true" ] ; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkEnv.sh
lines,153
function,0


for,6
for i in "$ZOOBINDIR"/../zookeeper-server/src/main/resources/lib/*.jar for i in "$ZOOBINDIR"/../zookeeper-*.jar for i in "${LIBPATH[@]}" for d in "$ZOOBINDIR"/../build/lib/*.jar for d in "$ZOOBINDIR"/../zookeeper-server/target/lib/*.jar for d in "$ZOOBINDIR"/../zookeeper-metrics-providers/zookeeper-prometheus-metrics/target/lib/*.jar
if,12
if [ $ if [ "--config" = "$1" ] if [ "x$ZOOCFGDIR" = "x" ] if [ -e "${ZOOKEEPER_PREFIX}/conf" ]; then if [ -f "${ZOOCFGDIR}/zookeeper-env.sh" ]; then if [ "x$ZOOCFG" = "x" ] if [ -f "$ZOOCFGDIR/java.env" ] if [ "x${ZOO_LOG_DIR}" = "x" ] if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then elif type -p java; then if ls "${ZOOKEEPER_PREFIX}"/share/zookeeper/zookeeper-*.jar > /dev/null 2>&1; then if $cygwin
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkSnapShotToolkit.sh
lines,38
function,0


for,0

if,1
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkSnapshotRecursiveSummaryToolkit.sh
lines,39
function,0


for,0

if,1
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkCleanup.sh
lines,53
function,0


for,0

if,2
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then if [ "x$ZOODATALOGDIR" = "x" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkTxnLogToolkit.sh
lines,38
function,0


for,0

if,1
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/bin/zkServer-initialize.sh
lines,141
function,2

usage() { initialize() {
for,0

if,10
if [ -e "$ZOOBIN/../libexec/zkEnv.sh" ]; then if [ $? != 0 ] ; then if [ ! -e "$ZOOCFG" ]; then if [ -z "$ZOO_DATADIR" ]; then if [ $FORCE ]; then if [ -d "$ZOO_DATADIR/version-2" ]; then if [ -n "$ZOO_DATALOGDIR" ] && [ -d "$ZOO_DATALOGDIR/version-2" ]; then if [ -n "$ZOO_DATALOGDIR" ]; then if [ $MYID ]; then echo "No myid provided, be sure to specify it in $ZOO_DATADIR/myid if using non-standalone"
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-rest/src/test/zkServer.sh
lines,91
function,0


for,2
for i in "${zk_base}"/build/lib/*.jar for i in "${zk_base}"/zookeeper-server/src/main/resource/lib/*.jar
if,7
if [ "x$1" == "x" ] if [ "x$1" == "xstartClean" ] if [ "x${base_dir}" == "x" ] if [ -r "/tmp/zk.pid" ] if [ -r "${base_dir}/build/tmp/zk.pid" ] if [ "x${base_dir}" == "x" ] if [ "x${base_dir}" == "x" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-rest/rest.sh
lines,90
function,0


for,2
for i in "$ZKREST_HOME"/lib/*.jar for i in "$ZKREST_HOME"/zookeeper-*.jar
if,4
if readlink -f "$0" > /dev/null 2>&1 if $cygwin if [ -z $ZKREST_PIDFILE ] if [ ! -f "$ZKREST_PIDFILE" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-loggraph/src/main/resources/loggraph.sh
lines,43
function,1

make_canonical () {
for,2
for i in `ls $LIBDIR`; do for i in `ls $BUILDDIR/*.jar`; do
if,1
if [ ! -x $BUILDDIR ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-loggraph/src/main/resources/loggraph-dev.sh
lines,38
function,1

make_canonical () {
for,1
for i in `ls $LIBDIR`; do
if,1
if [ ! -x $BUILDDIR ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-zooinspector/zooInspector.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-zooinspector/zooInspector-dev.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-zkpython/src/test/zkServer.sh
lines,102
function,0


for,2
for i in "${PROJECT_ROOT}"/zookeeper-server/target/lib/*.jar for i in "${PROJECT_ROOT}"/zookeeper-server/src/main/resource/lib/*.jar
if,6
if [ "x$1" == "x" ] if [ "x${base_dir}" == "x" ] if [ -r "${WORK_DIR}/../zk.pid" ] if [ $? -eq 0 ] if [ -n "$pid" ] if [ "x$1" == "xstartClean" ]
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/zookeeper-contrib/zookeeper-contrib-zkpython/src/test/run_tests.sh
lines,43
function,0


for,1
for test in `ls $1/*_test.py`;
if,1
if [ $ARGC -lt 2 ]; then
git@github.com:apache/zookeeper.git,248cc091d440659a819bdd44fe5b41a38321a929,zookeeper,11570,./zookeeper/tools/sonar/code-coverage.sh
lines,70
function,2

usage() { execute() {
for,1
echo " The required parameters for publishing the coverage results to SonarQube:"
if,1
if [ -n "$SONAR_LOGIN" ] && [ -n "$SONAR_PROJECT_KEY" ] && [ -n "$SONAR_URL" ]; then
git@github.com:janishar/mit-deep-learning-book-pdf.git,a1d207f3d31ff3ffd3ac378bce83be4a0eb41acb,mit-deep-learning-book-pdf,11536,
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/release.sh
lines,270
function,9

usage() { check_adb_device() { check_env() { prepare_branch() { build() { upload_to_maven_central() { publish_distribution() { push_release() { publish_javadoc() {
for,5
echo "2. There should be 4 stagging repositories in the console, select them all and click the Close menu option. It will take some time to process the action. Screenshot for close" echo "3. After ~5min the repos would be closed, select them all and click the Release menu option. Screenshot for release" echo "4. A confirmation prompt will show, select the automatically drop option and confirm. Screenshot for confirmation" echo "5. Done! After some time you would be able to search for them." echo "A pull request has been created for branch ${branch_name}."
if,21
if [ "$ if ! adb get-state 1>/dev/null 2>&1 ; then if [[ ! -x "$path_to_s3cmd" ]] ; then if [[ ! -e "$HOME/.s3cfg" ]] ; then if ! grep "ossrhUsername=realm" "$HOME/.gradle/gradle.properties" > /dev/null ; then if ! grep "ossrhPassword=.*" "$HOME/.gradle/gradle.properties" > /dev/null; then if grep buildTargetABIs "$HOME/.gradle/gradle.properties" | grep -v "^ if grep ccachePath "$HOME/.gradle/gradle.properties" | grep -v "^ if grep lcachePath "$HOME/.gradle/gradle.properties" | grep -v "^ if [[ -z ${REALM_IO_PATH} ]] ; then if [[ ! -e ${REALM_IO_PATH} ]] ; then if [[ "$BRANCH_TO_RELEASE" != "releases" ]] ; then if [ -z "$editor" ] ; then if [ "$(grep -c "YYYY-MM-DD" CHANGELOG.md)" -eq 1 ] ; then if ! git diff-index --quiet HEAD CHANGELOG.md ; then if ! grep -q "SNAPSHOT" version.txt ; then if [[ "${VERSION}" != "${version_in_changelog}" ]] ; then if git ls-remote --tags origin | grep "v${VERSION}" > /dev/null ; then if git tag | grep "v${VERSION}" > /dev/null ; then if [[ ! "$VERSION" =~ [a-zA-Z] ]] ; then if [[ ! -x "$path_to_hub" ]] ; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/unroll_stacktrace.sh
lines,107
function,4

usage() { find_ndkstack() { download_and_unzip_stripped_libs() { unroll_stacktrace() {
for,0

if,9
if [ "$ if [ "$ if [ -z $DATA ]; then elif [ "$ if [ ! -f "$PROPS_FILE" ]; then if [[ -z "${REALM_CORE_DOWNLOAD_DIR}" ]]; then if [ ! -f "$STRIPPED_LIBS_FILE" ]; then if [ ! -d "$STRIPPED_LIBS_DIR" ]; then if [ ! -d "$DIR" ]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/analyze_realm_metrics.sh
lines,35
function,0


for,0

if,0

git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/update_gradle_wrapper.sh
lines,25
function,0


for,1
for i in $(find $(pwd) -type f -name gradlew); do
if,0

git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/stop_local_server.sh
lines,27
function,0


for,0

if,4
if [[ -f $WORK_PATH/baas_server.pid ]]; then if [[ -f $WORK_PATH/mongod.pid ]]; then if [[ -n "$BAAS_PID" ]]; then if [[ -n "$MONGOD_PID" ]]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/bind_android_ports.sh
lines,9
function,0


for,0

if,0

git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/app_config_generator.sh
lines,132
function,0


for,3
for APP_NAME in "$@" for APP_NAME in "$@" for APP_NAME in "$@"
if,5
if [ "$AUTH_MODE" = "auto" ]; then if [ "$AUTH_MODE" = "function" ]; then if [ "$AUTH_MODE" = "email" ]; then if [ "$SYNC_MODE" = "partition" ]; then if [ "$SYNC_MODE" = "flex" ]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/stop_server.sh
lines,5
function,0


for,0

if,0

git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/start_server.sh
lines,60
function,0


for,0

if,2
if [[ -z "${GITHUB_DOCKER_USER}" ]]; then if [[ -z "${GITHUB_DOCKER_TOKEN}" ]]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/sync_test_server/start_local_server.sh
lines,198
function,11
function echo_step () { function check_dependencies () { function bind_android_emulator_ports () { function install_baas_ui () { function wait_for_mongod { function bind_baas_ui () { function install_baas () { function boot_command_server () { function generate_app_configs () { function import_apps () { function cleanup () {
function echo_step () { function check_dependencies () { function bind_android_emulator_ports () { function install_baas_ui () { function bind_baas_ui () { function install_baas () { function boot_command_server () { function generate_app_configs () { function import_apps () { function cleanup () {
for,3
echo "Error: Timed out waiting for mongod to start" echo_step "Waiting for mongod to boot to bind ui" for app in *; do
if,11
if ! realm-cli --version 2>&1 | grep -q "1.3.4"; then if [ -z ${AWS_ACCESS_KEY_ID} ]; then if [ -z ${AWS_SECRET_ACCESS_KEY} ]; then if ! which -s node; then if ! which -s yarn; then if [[ ! -e ~/.npmrc ]]; then if ! ping -qo `hostname` >/dev/null 2>&1; then if ! which -s yq; then if [[ ! -d $BAAS_INSTALL_PATH/baas-ui/.git ]]; then if [[ $WAIT_COUNTER = $RETRY_COUNT ]]; then if [ -f "$app/secrets.json" ]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/fix-h1s.sh
lines,24
function,1

usage() {
for,0

if,1
if [ "$
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/realm-cli.sh
lines,209
function,17

is_server_active(){ start_server(){ stop_server(){ restart_server(){ server_status(){ bind_server(){ server_help(){ server(){ java_install(){ java_build(){ java_test(){ java_check(){ java_clean(){ java_size(){ java_help(){ java(){ show_help(){
for,0

if,5
if is_server_active if is_server_active if is_server_active if is_server_active if ! [[ -n "${REALM_JAVA_PATH}" ]]; then
git@github.com:realm/realm-java.git,28d62fde4a7ef821a729146b9b1b006a0df65d9c,realm-java,11404,./realm-java/tools/publish_release.sh
lines,179
function,10

usage() { abort_release() { check_env() { verify_release_preconditions() { verify_changelog() { create_javadoc() { upload_to_mavenCentral() { upload_debug_symbols() { upload_javadoc() { notify_slack_channels() {
for,1
payload="{ \"username\": \"Realm CI\", \"icon_emoji\": \":realm_new:\", \"text\": \"<$link_to_changelog|*Realm Java $RELEASE_VERSION has been released*>\\nSee the Release Notes for more details. Note, it can take up to 10 minutes before the release is visible on Maven Central.\" }"
if,8
if [ "$ if [ -x "$path_to_s3cmd" ] if [ -x "$path_to_git" ] if [ "v$version" = "$gitTag" ] if [ `eval $query` -ne 1 ] if [ -z "$tag" ] if [ -z "$current_commit" ] if [ "$1" != "verify" ]; then
git@github.com:redis/jedis.git,d2f6712cb633a5cba84ef0c555be7caeec7a8abb,jedis,11325,
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/zap-webswing.sh
lines,89
function,0


for,0

if,12
if [ -z `command -v $0` ]; then if [ ! -f $HOME/webswing-server.war ]; then if [ ! -f $JAVA_HOME/bin/java ]; then if [ -z `command -v xvfb-run` ]; then if [ ! -z `command -v ldconfig` ]; then if [ `ldconfig -p | grep -i libXext | wc -l` -lt 1 ]; then if [ `ldconfig -p | grep -i libxi | wc -l` -lt 1 ]; then if [ `ldconfig -p | grep -i libxtst | wc -l` -lt 1 ]; then if [ `ldconfig -p | grep -i libxrender | wc -l` -lt 1 ]; then if [ ! -z "${ZAP_WEBSWING_OPTS}" ]; then elif [ -f ${ZAP_PRIVATE} ]; then elif [ -w /zap/wrk ]; then
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/zap-x.sh
lines,20
function,0


for,0

if,2
if [ ! -f /tmp/.X1-lock ] if [ -f /tmp/.X1-lock ]
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/integration_tests/af_context_tests.sh
lines,44
function,0


for,1
for file in *.context
if,2
if [ ! -f /zap/wrk/output/$file ] if [ "$DIFF" != "" ]
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/integration_tests/af_plan_tests.sh
lines,44
function,0


for,1
for file in *.yaml
if,1
if [ "$RET" != 0 ]
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/integration_tests/install_tests.sh
lines,8
function,0


for,0

if,0

git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/integration_tests/baseline_tests.sh
lines,87
function,1

check_results() {
for,1
for f in $files
if,3
if [ $expected -ne $code ] if [ "$d" == "" ] if $pass
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/docker/integration_tests/python_tests.sh
lines,17
function,0


for,0

if,1
if [ "$RES" -eq 0 ]
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/zap/src/main/dist/zap.sh
lines,127
function,0

ARGS=()
for,1
for var in "$@"; do
if,20
if [ "$OS" = "Darwin" ]; then if [ -e ../PlugIns/jre*/Contents/Home/bin/java ]; then if [ "`echo ${JAVA_OUTPUT} | grep "continuing with system-provided Java"`" ] ; then if [ $JAVA_MAJOR_VERSION -ge 11 ]; then if [ "$OS" = "Darwin" ]; then if [ -f "$JVMPROPS" ]; then elif [ "$OS" = "Linux" ]; then elif [ "$OS" = "Darwin" ]; then elif [ "$OS" = "SunOS" ]; then elif [ "$OS" = "FreeBSD" ]; then if [ ! -z "$JMEM" ]; then elif [ -z "$MEM" ]; then if [ "$MEM" -gt 512 ]; then if [[ "$var" == -Xmx* ]]; then elif [[ $var == --jvmdebug* ]]; then if [ ! "$JAVADEBUGPORT" ]; then elif [[ $var != -psn_* ]]; then if [ -n "$JMEM" ] if [ -n "$JAVADEBUG" ] if [ "$OS" = "Darwin" ]; then
git@github.com:zaproxy/zaproxy.git,64caa857c0e5e7ae7c8df84825f6332a90c911e2,zaproxy,11287,./zaproxy/zap/src/main/macOS/ZAP.app/Contents/MacOS/ZAP.sh
lines,8
function,0


for,0

if,0

git@github.com:frank-lam/fullstack-tutorial.git,566d7368741e805bc7e5f4f4e3abfb5f9eecc598,fullstack-tutorial,11271,./fullstack-tutorial/assets/deploy/deploy.sh
lines,39
function,0


for,2
for f in $(find ../notes/ -type f -print | grep assets) for f in $(find ../notes/ -type f -print | grep pics)
if,0

git@github.com:pxb1988/dex2jar.git,b5bda4fb4935ae8b3869b422454ae3b3896c7bc1,dex2jar,11239,./dex2jar/dex-tools/src/main/bin_gen/d2j_invoke.sh
lines,48
function,0


for,2
for k in "$PRGDIR"/lib/*.jar for k in "$PRGDIR"/lib/*.jar
if,2
if expr "$link" : '/.*' > /dev/null; then if [ `uname -a | grep -i -c cygwin` -ne 0 ]; then
git@github.com:permissions-dispatcher/PermissionsDispatcher.git,74b532bf1fe430fb12ad8414b80399f2d7cfc954,PermissionsDispatcher,11174,
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-standalone-server/src/main/dist-bin/start.sh
lines,43
function,0


for,2
for d in alert-server api-server master-server worker-server; do for f in $DOLPHINSCHEDULER_HOME/../$d/libs/*.jar; do
if,2
if [[ "$DOCKER" == "true" ]]; then if [[ ! $CP =~ $JAR_FILE_NAME ]];then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-standalone-server/src/main/bin/start.sh
lines,50
function,0


for,1
for d in $DOLPHINSCHEDULER_HOME/libs/*; do
if,3
if [ -f $JVM_ARGS_ENV_FILE ]; then if [[ "$line" == -* ]]; then if [[ "$DOCKER" == "true" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-standalone-server/src/main/bin/jvm_args_env.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/start-all.sh
lines,58
function,0


for,4
for workerGroup in ${workersGroup[@]} for master in ${mastersHost[@]} for worker in ${workerNames[@]} for apiServer in ${apiServersHost[@]}
if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/remove-zk-node.sh
lines,50
function,1

print_usage(){
for,0

if,1
if [ $
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/dolphinscheduler-daemon.sh
lines,146
function,2
function overwrite_server_env() { function get_server_running_status() {
function overwrite_server_env() { function get_server_running_status() {
for,0

if,15
if [ $ if [ -f "${BIN_ENV_FILE}" ]; then if [ ! -d "$DOLPHINSCHEDULER_LOG_DIR" ]; then if [ "$command" = "api-server" ]; then elif [ "$command" = "master-server" ]; then elif [ "$command" = "worker-server" ]; then elif [ "$command" = "alert-server" ]; then elif [ "$command" = "standalone-server" ]; then if [ -f $pid ]; then if [[ $(ps -p "$TARGET_PID" -o comm=) =~ "bash" ]]; then if [[ $state == "RUNNING" ]]; then if [ -f $pid ]; then if kill -0 $TARGET_PID > /dev/null 2>&1; then if kill -0 $TARGET_PID > /dev/null 2>&1; then if [[ $state == "STOP" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/env/install_env.sh
lines,63
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/env/dolphinscheduler_env.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/scp-hosts.sh
lines,62
function,0


for,4
for workerGroup in ${workersGroup[@]} for host in ${hostsArr[@]} for i in ${!workerNames[@]}; do for dsDir in bin master-server worker-server alert-server api-server ui tools
if,2
if ! ssh -o StrictHostKeyChecking=no -p $sshPort $host test -e $installPath; then if [[ ${workerNames[$i]} == $host ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/install.sh
lines,58
function,0


for,0

if,4
if [ ${baseDir} = $installPath ]; then elif [ ! -d $installPath ];then elif [[ -z "${installPath// }" || "${installPath// }" == "/" || ( $(command -v realpath) && $(realpath -s "${installPath}") == "/" ) ]]; then if [ $? -eq 0 ];then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/status-all.sh
lines,73
function,0


for,4
for workerGroup in ${workersGroup[@]} for master in ${mastersHost[@]} for worker in ${workerNames[@]} for apiServer in ${apiServersHost[@]}
if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/script/stop-all.sh
lines,53
function,0


for,4
for workerGroup in ${workersGroup[@]} for master in ${mastersHost[@]} for worker in ${workerNames[@]} for apiServer in ${apiServersHost[@]}
if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-alert/dolphinscheduler-alert-server/src/main/bin/start.sh
lines,47
function,0


for,0

if,3
if [ -f $JVM_ARGS_ENV_FILE ]; then if [[ "$line" == -* ]]; then if [[ "$DOCKER" == "true" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-alert/dolphinscheduler-alert-server/src/main/bin/jvm_args_env.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-alert/dolphinscheduler-alert-plugins/dolphinscheduler-alert-script/src/test/script/shell/test.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-alert/dolphinscheduler-alert-plugins/dolphinscheduler-alert-script/src/test/script/shell/scriptExample.sh
lines,38
function,0


for,0

if,1
if [ "$t" = "error msg title" ]
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-api/src/main/bin/start.sh
lines,47
function,0


for,0

if,3
if [ -f $JVM_ARGS_ENV_FILE ]; then if [[ "$line" == -* ]]; then if [[ "$DOCKER" == "true" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-api/src/main/bin/jvm_args_env.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-worker/src/main/bin/start.sh
lines,49
function,0


for,0

if,3
if [ -f $JVM_ARGS_ENV_FILE ]; then if [[ "$line" == -* ]]; then if [[ "$DOCKER" == "true" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-worker/src/main/bin/jvm_args_env.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-tools/src/main/bin/create-demo-processes.sh
lines,31
function,0


for,0

if,1
if [ "$DOCKER" != "true" ]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-tools/src/main/bin/migrate-resource.sh
lines,31
function,0


for,0

if,1
if [ "$DOCKER" != "true" ]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-tools/src/main/bin/upgrade-schema.sh
lines,31
function,0


for,0

if,1
if [ "$DOCKER" != "true" ]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/mysql/start-job.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/mysql/install_env.sh
lines,61
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/mysql/running_test.sh
lines,108
function,0


for,1
for ((i=1; i<=TIMEOUT; i++))
if,11
if [[ $MASTER_HTTP_STATUS -eq 200 && $WORKER_HTTP_STATUS -eq 200 && $API_HTTP_STATUS -eq 200 && $ALERT_HTTP_STATUS -eq 200 ]];then if [[ $START_HEALTHCHECK_EXITCODE -eq 0 ]];then if [[ $i -eq $TIMEOUT ]];then if [[ $MASTER_HTTP_STATUS -ne 200 ]];then if [[ $WORKER_HTTP_STATUS -ne 200 ]]; then if [[ $API_HTTP_STATUS -ne 200 ]]; then if [[ $ALERT_HTTP_STATUS -ne 200 ]]; then if [[ $MASTER_HTTP_STATUS -ne 200 ]];then if [[ $WORKER_HTTP_STATUS -ne 200 ]];then if [[ $API_HTTP_STATUS -ne 200 ]];then if [[ $ALERT_HTTP_STATUS -ne 200 ]];then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/mysql/dolphinscheduler_env.sh
lines,57
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/mysql/deploy.sh
lines,43
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/postgresql/start-job.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/postgresql/install_env.sh
lines,61
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/postgresql/running_test.sh
lines,109
function,0


for,1
for ((i=1; i<=TIMEOUT; i++))
if,11
if [[ $MASTER_HTTP_STATUS -eq 200 && $WORKER_HTTP_STATUS -eq 200 && $API_HTTP_STATUS -eq 200 && $ALERT_HTTP_STATUS -eq 200 ]];then if [[ $START_HEALTHCHECK_EXITCODE -eq 0 ]];then if [[ $i -eq $TIMEOUT ]];then if [[ $MASTER_HTTP_STATUS -ne 200 ]];then if [[ $WORKER_HTTP_STATUS -ne 200 ]]; then if [[ $API_HTTP_STATUS -ne 200 ]]; then if [[ $ALERT_HTTP_STATUS -ne 200 ]]; then if [[ $MASTER_HTTP_STATUS -ne 200 ]];then if [[ $WORKER_HTTP_STATUS -ne 200 ]];then if [[ $API_HTTP_STATUS -ne 200 ]];then if [[ $ALERT_HTTP_STATUS -ne 200 ]];then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/postgresql/dolphinscheduler_env.sh
lines,57
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/.github/workflows/cluster-test/postgresql/deploy.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-e2e/dolphinscheduler-e2e-case/src/test/resources/docker/datasource-mysql/download-mysql.sh
lines,27
function,0


for,0

if,1
if ! curl -Lo "${DS_HOME}/${MYSQL_DRIVER}" ${MYSQL_URL}; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/resources/docker/datasource-mysql/download-mysql.sh
lines,27
function,0


for,0

if,1
if ! curl -Lo "${DS_HOME}/${MYSQL_DRIVER}" ${MYSQL_URL}; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-master/src/main/bin/start.sh
lines,47
function,0


for,0

if,3
if [ -f $JVM_ARGS_ENV_FILE ]; then if [[ "$line" == -* ]]; then if [[ "$DOCKER" == "true" ]]; then
git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/dolphinscheduler-master/src/main/bin/jvm_args_env.sh
lines,30
function,0


for,0

if,0

git@github.com:apache/dolphinscheduler.git,8f16fd797596022e9f084dc1ffa39546597330d5,dolphinscheduler,11131,./dolphinscheduler/tools/dependencies/check-LICENSE.sh
lines,45
function,0


for,0

if,1
if [ -d "dist" ];then
git@github.com:Tencent/matrix.git,3b8293bd65d47eeea7caf1f32a3a5d4d5eab60e7,matrix,11109,./matrix/codecc.sh
lines,25
function,0


for,0

if,0

git@github.com:Tencent/matrix.git,3b8293bd65d47eeea7caf1f32a3a5d4d5eab60e7,matrix,11109,./matrix/matrix/matrix-android/matrix-sqlite-lint/src/lemon/lemon-gen/generate_parse.sh
lines,9
function,0


for,0

if,0

git@github.com:Tencent/matrix.git,3b8293bd65d47eeea7caf1f32a3a5d4d5eab60e7,matrix,11109,./matrix/matrix/matrix-android/matrix-sqlite-lint/src/lemon/lemon-gen/clean_parse.sh
lines,1
function,0


for,0

if,0

git@github.com:Tencent/matrix.git,3b8293bd65d47eeea7caf1f32a3a5d4d5eab60e7,matrix,11109,./matrix/matrix/matrix-android/gradle/clang-format.sh
lines,2
function,0


for,0

if,0

git@github.com:jfeinstein10/SlidingMenu.git,4254feca3ece9397cd501921ee733f19ea0fdad8,SlidingMenu,11109,
git@github.com:androidannotations/androidannotations.git,0d24f1b64dd6b4c27d9a77d3b771a129a59b5b4c,androidannotations,11104,./androidannotations/check_missing_copyright.sh
lines,23
function,0


for,2
for f in $FILES echo "Please add second copyright line: 'Copyright (C) 2016-<current> the AndroidAnnotations project' for the files listed above!"
if,3
if [ $? -eq 0 ] && [ $f != "check_missing_copyright.sh" ]; then if [ $? -ne 0 ]; then if [ $HAS_MISSING == true ]; then
git@github.com:code4craft/webmagic.git,c0d38a6f1a8406bd0723838a8742db118e4f6463,webmagic,10971,./webmagic/webmagic-scripts/deploy.sh
lines,5
function,0


for,0

if,0

git@github.com:gyf-dev/ImmersionBar.git,071ebc7f3547e5493f319812576c6f18f6c382a1,ImmersionBar,10945,
git@github.com:careercup/CtCI-6th-Edition.git,59018cfcb90292209275db1c4b3ed306d4b07d7f,CtCI-6th-Edition,10906,
git@github.com:H07000223/FlycoTabLayout.git,528fcffe88d54eeafbc85ffd1ce375df043b3a28,FlycoTabLayout,10895,
git@github.com:lingochamp/FileDownloader.git,6237a8cac174bcc916e4342b14ab1ab72a5768d4,FileDownloader,10870,./FileDownloader/install.sh
lines,7
function,0


for,0

if,1
if [ "$1" == "y" ]; then
git@github.com:mission-peace/interview.git,94be5deb0c0df30ade2a569cf3056b7cc1e012f4,interview,10857,
git@github.com:alibaba/vlayout.git,00d6be0a1fa89c2f54ca923d2ea2e34d279d289e,vlayout,10824,
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/android-interop-testing/wait-for-emulator.sh
lines,16
function,0


for,1
echo "Waiting for emulator to start..."
if,1
if [[ $failcounter -gt 300 ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/android-interop-testing/start-emulator.sh
lines,13
function,0


for,0

if,1
if [ $
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/run_in_docker.sh
lines,27
function,1

quote() { bash -c "function fixFiles() { chown -R $(id -u):$(id -g) /grpc-java; }; trap fixFiles EXIT; $(quote "$@")"
for,1
for arg in "$@"; do
if,1
if [[ -t 0 ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/run_arm64_tests_in_docker.sh
lines,47
function,0


for,0

if,1
if [[ -t 0 ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/sync-protos.sh
lines,30
function,0


for,1
for project in alts grpclb services rls interop-testing; do
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/build_docker.sh
lines,8
function,0


for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/bazel.sh
lines,14
function,0


for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/android-interop.sh
lines,62
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/xds_url_map.sh
lines,178
function,5

build_java_test_app() { build_test_app_docker_images() { build_docker_images_if_needed() { run_test() { main() {
for,0

if,3
if is_version_branch "${TESTING_VERSION}"; then if [[ "${FORCE_IMAGE_BUILD}" == "1" || -z "${server_tags}" || -z "${client_tags}" ]]; then if [[ -n "${KOKORO_ARTIFACTS_DIR}" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/android.sh
lines,143
function,0


for,0

if,3
if [[ ! -z $(git status --porcelain) ]]; then if [[ -z "${KOKORO_GITHUB_PULL_REQUEST_COMMIT:-}" ]]; then if [[ -n "$dex_method_diff" ]]
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/xds_k8s_lb.sh
lines,189
function,5

build_java_test_app() { build_test_app_docker_images() { build_docker_images_if_needed() { run_test() { main() {
for,1
for test in "${test_suites[@]}"; do
if,4
if is_version_branch "${TESTING_VERSION}"; then if [[ "${FORCE_IMAGE_BUILD}" == "1" || -z "${server_tags}" || -z "${client_tags}" ]]; then if [[ -n "${KOKORO_ARTIFACTS_DIR}" ]]; then if [[ "${TESTING_VERSION}" =~ "master" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/psm-security.sh
lines,185
function,5

build_java_test_app() { build_test_app_docker_images() { build_docker_images_if_needed() { run_test() { main() {
for,1
for test in "${test_suites[@]}"; do
if,3
if is_version_branch "${TESTING_VERSION}"; then if [[ "${FORCE_IMAGE_BUILD}" == "1" || -z "${server_tags}" || -z "${client_tags}" ]]; then if [[ -n "${KOKORO_ARTIFACTS_DIR}" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/linux_artifacts.sh
lines,23
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/xds_v3.sh
lines,34
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/release_artifacts.sh
lines,10
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/kokoro.sh
lines,9
function,1

spongify_logs() {
for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/linux_aarch64.sh
lines,17
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/gae-interop.sh
lines,55
function,1
function cleanup() {
function cleanup() {
for,0

if,3
if [[ -f /VERSION ]]; then if ! gcloud app versions describe "$DUMMY_DEFAULT_VERSION" --service="$KOKORO_GAE_SERVICE"; then echo "Cleaning out stale deploys from previous runs, it is ok if this part fails"
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/upload_artifacts.sh
lines,98
function,0


for,0

if,4
if [[ -f /VERSION ]]; then if gpg --version | grep 'gpg (GnuPG) 1.'; then if gpg --version | grep 'gpg (GnuPG) 2.'; then if [[ "v$VERSION" = "$LATEST_VERSION" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/unix.sh
lines,120
function,0


for,1
for f in examples/example-*
if,7
if [[ -f /usr/libexec/java_home ]]; then if [[ -z "${ALL_ARTIFACTS:-}" ]]; then if [[ -z "${SKIP_TESTS:-}" ]]; then if [[ -z "${SKIP_CLEAN_CHECK:-}" && ! -z $(git status --porcelain) ]]; then if [ -f "pom.xml" ]; then if [[ -z "${ALL_ARTIFACTS:-}" ]]; then if [[ "$ARCH" = "aarch_64" || "$ARCH" = "ppcle_64" || "$ARCH" = "s390_64" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/kokoro/macos.sh
lines,13
function,0


for,0

if,1
if [[ -f /VERSION ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/observability-test/build_docker.sh
lines,26
function,0


for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/observability-test/run.sh
lines,29
function,0


for,0

if,2
if [ "$1" = "server" ] ; then elif [ "$1" = "client" ] ; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/make_dependencies.sh
lines,66
function,0


for,0

if,10
if [[ $(uname) == 'Linux' ]]; then if [[ $(uname) == 'Darwin' ]]; then if [ -f ${INSTALL_DIR}/bin/protoc ]; then if [[ ! -d "$DOWNLOAD_DIR"/protobuf-"${PROTOBUF_VERSION}" ]]; then if [[ "$ARCH" == x86* ]]; then elif [[ "$ARCH" == aarch* ]]; then elif [[ "$ARCH" == ppc* ]]; then elif [[ "$ARCH" == s390* ]]; then elif [[ "$ARCH" == loongarch* ]]; then if [[ -L /tmp/protobuf ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/build_artifacts_in_docker.sh
lines,8
function,0


for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/sonatype-upload.sh
lines,110
function,0


for,3
PROFILEID The Sonatype profile to use for staging repository ~/.config/sonatype-upload: Configuration file for Sonatype username and password for X in $(cd "$DIR" && find -type f | cut -b 3-); do
if,3
if [ $ if [ -z "$DIR" ]; then if [ -z "$USERNAME" -o -z "$PASSWORD" ]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/sign-local-repo.sh
lines,26
function,0


for,0

if,1
if [ $
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/buildscripts/qemu_helpers/prepare_qemu.sh
lines,26
function,0


for,0

if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/run-test-client.sh
lines,11
function,0


for,0

if,1
if [[ ! -e "$BIN" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/xds/third_party/googleapis/import.sh
lines,51
function,0


for,1
for file in "${FILES[@]}"
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/xds/third_party/protoc-gen-validate/import.sh
lines,52
function,0


for,1
for file in "${FILES[@]}"
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/xds/third_party/xds/import.sh
lines,75
function,0


for,1
for file in "${FILES[@]}"
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/xds/third_party/envoy/import.sh
lines,203
function,0


for,1
for file in "${FILES[@]}"
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/istio-interop-testing/third_party/istio/import.sh
lines,58
function,0


for,1
for file in "${FILES[@]}"
if,0

git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/run-test-server.sh
lines,11
function,0


for,0

if,1
if [[ ! -e "$BIN" ]]; then
git@github.com:grpc/grpc-java.git,ccf91018285cf112c0cc287cd9f1ef6ad161717e,grpc-java,10820,./grpc-java/compiler/check-artifact.sh
lines,156
function,4

fail() assertEq () checkArch () checkDependencies ()
for,2
echo "Checking for expected dependencies ..." echo "Checking for unexpected dependencies ..."
if,29
if [[ $ if [ -z "$lineno" ]; then if [[ "$1" != "$2" ]]; then if [[ "$OS" == windows || "$OS" == linux ]]; then if [[ "$OS" == linux ]]; then if [[ "$ARCH" == x86_32 ]]; then elif [[ "$ARCH" == x86_64 ]]; then elif [[ "$ARCH" == aarch_64 ]]; then elif [[ "$ARCH" == loongarch_64 ]]; then elif [[ "$ARCH" == ppcle_64 ]]; then elif [[ "$ARCH" == s390_64 ]]; then if [[ "$ARCH" == x86_32 ]]; then elif [[ "$ARCH" == x86_64 ]]; then elif [[ "$OS" == osx ]]; then if [[ "$ARCH" == x86_32 ]]; then elif [[ "$ARCH" == x86_64 ]]; then elif [[ "$ARCH" == aarch_64 ]]; then if [[ "$OS" == windows ]]; then elif [[ "$OS" == linux ]]; then if [[ "$ARCH" == x86_32 ]]; then elif [[ "$ARCH" == x86_64 ]]; then elif [[ "$ARCH" == aarch_64 ]]; then elif [[ "$ARCH" == loongarch_64 ]]; then elif [[ "$ARCH" == ppcle_64 ]]; then elif [[ "$ARCH" == s390_64 ]]; then elif [[ "$OS" == osx ]]; then if [[ -z "$white_list" || -z "$dump_cmd" ]]; then if [[ $ret == 0 ]]; then elif [[ $ret != 1 ]]; then
git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-auth.sh
lines,14
function,0


for,0

if,0

git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-monitor.sh
lines,14
function,0


for,0

if,0

git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-admin.sh
lines,15
function,0


for,0

if,0

git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-portal.sh
lines,18
function,0


for,0

if,0

git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-gateway.sh
lines,15
function,0


for,0

if,0

git@github.com:macrozheng/mall-swarm.git,adb488998d8c5435ac1a94dd1fc072bee7c5b372,mall-swarm,10731,./mall-swarm/document/sh/mall-search.sh
lines,16
function,0


for,0

if,0

git@github.com:android-async-http/android-async-http.git,018a0b8d96a0dd569de9f8128cfe5d030e0423ef,android-async-http,10646,
git@github.com:daniulive/SmarterStreaming.git,21f51bda50d3ed8fcc842b56a8d628d11b0676ff,SmarterStreaming,10633,
git@github.com:Netflix/conductor.git,d16453149f1589867359624416eabb89595a0a5c,conductor,10590,./conductor/docker/server/bin/startup.sh
lines,40
function,0


for,0

if,1
if [ -z "$CONFIG_PROP" ];
git@github.com:Netflix/conductor.git,d16453149f1589867359624416eabb89595a0a5c,conductor,10590,./conductor/ui/test-karbon.sh
lines,0
function,0


for,0

if,0

git@github.com:jeasonlzy/okhttp-OkGo.git,e34c2fa150dba4fa6e9460439f6c30adeea48225,okhttp-OkGo,10570,
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/data/sounds/generate-all-audio.sh
lines,59
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/plugin/update_plugin_lib.sh
lines,15
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/scripts/update_statsd_lib.sh
lines,35
function,3

has_croot() { check_environment() { main() {
for,0

if,3
if ! has_croot; then if [ $NUM_ARGS -ne 1 ]; then if check_environment ; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/scripts/update_shared_lib.sh
lines,35
function,3

has_croot() { check_environment() { main() {
for,0

if,3
if ! has_croot; then if [ $NUM_ARGS -ne 1 ]; then if check_environment ; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/scripts/copy_profile_icons.sh
lines,14
function,0


for,2
for user in `adb $* shell ls /data/system/users | grep -v xml` for photo in `adb $* shell ls /data/system/users | grep -v xml`
if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/tools/lint/update_baseline.sh
lines,18
function,0


for,0

if,1
if [[ $PWD != *"/frameworks/base/packages/SystemUI" ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/packages/SystemUI/tools/lint/run_lint.sh
lines,59
function,0


for,3
for cases where the lint violation is intended, so that reviewers about for any file, or checks that are not actionable by the immediately for some reason, run ./tools/lint/update_baseline.sh to
if,5
if [[ $ if [[ exitcode -eq 1 ]]; then if [[ -z $ANDROID_BUILD_TOP ]]; then if [[ ! -f $ANDROID_BUILD_TOP/$systemuijarpath ]]; then if [[ exitcode -eq 1 ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/backup/test_restore.sh
lines,111
function,2
function check_file function check_exists

for,0

if,3
if [ "$data" = "$2" ] ; then if [ "$data" = "exists" ]; then if [ \( "$need_bug" -ne 0 \) -a -d "$BUGREPORT_DIR" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/backup/test_backup.sh
lines,65
function,0


for,2
for pkg in $b_pkgs; do echo 'Waiting 5 seconds for things to settle...'
if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/backup/backup_stress_test.sh
lines,64
function,0


for,0

if,2
if [ "$failed" -ne 0 ]; then if [ $i -eq $iterations ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/backup/test_backup_common.sh
lines,33
function,2
function a { $DRY_RUN adb $ADB_OPTS "$@"; } function adb_root

for,0

if,1
if [ "$root_status" != "adbd is already running as root" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/Codegen/runTest.sh
lines,33
function,0

function header_and_eval() {
for,0

if,1
if [[ "$0" = *"/Codegen/runTest.sh" ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tests/HierarchyViewerTest/run_tests.sh
lines,4
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/skp-capture.sh
lines,134
function,5

adb() { spin() { banner() { adb_test_file_nonzero() { adb_filesize() {
for,0

if,10
if [ -z "$1" ]; then if ! command -v adb > /dev/null 2>&1; then if [ -x "${ANDROID_SDK_ROOT}/platform-tools/adb" ]; then if (( "$2" > 1 )); then if [ -z "$enable_capture_value" ]; then if [ ! -z "$2" ]; then if [ $(date +%s) -gt $timeout ] ; then if ! (( $counter % 20)) ; then if [ $(date +%s) -gt $timeout ] ; then if ! [ -f "$local_path" ] ; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_fugu.sh
lines,48
function,0


for,0

if,2
if [ $thermal -eq 1 ] if [ $thermal -eq 1 ]
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_buller.sh
lines,64
function,0


for,0

if,1
if [ "$board" = "bullhead" ]
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_volantis.sh
lines,46
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_generic.sh
lines,384
function,13
function_core_check() { function_setup_go() { function_lock_cpu() { function_abs() { function_lock_gpu_kgsl() { function_cut_first_from_space_seperated_list() { function_lock_cpu
function_core_check() { function_setup_go() { function_lock_cpu() { function_abs() { function_lock_gpu_kgsl() { function_cut_first_from_space_seperated_list() {
for,9
echo "Invalid argument \$1 for ARG_CORES, should be 'big' or 'little', but was $ARG_CORES" echo "Invalid argument \$1 for ARG_CORES, should be 'big' or 'little', but was $ARG_CORES" for freq in ${cpuAvailFreq}; do for currOpFreq in $AVAIL_OP_FREQS; do for cpu in ${enableIndices}; do for cpu in ${disableIndices}; do for freq in ${gpuAvailFreq}; do for freq in ${gpuAvailFreq}; do for freq in $list; do
if,30
if [ "`command -v getprop`" == "" ]; then if [ -n "`command -v adb`" ]; then if [[ `id` != "uid=0"* ]]; then if [ "$ARG_CORES" == "big" ]; then elif [ "$ARG_CORES" == "little" ]; then if [ "$ARG_CORES" == "big" ]; then elif [ "$ARG_CORES" == "little" ]; then if [ -f /d/fpsgo/common/force_onoff ]; then if [ "$fpsgoState" != "0" ] && [ "$fpsgoState" != "force off" ]; then if [ -f "$CPU_BASE/cpu$cpu/online" ]; then if (function_core_check $maxFreq $cpuIdealFreq); then if [ -z "$disableIndices" ]; then elif [ ${maxFreq} == ${cpuIdealFreq} ] && [ ${availFreqCmpr} == ${cpuAvailFreqCmpr} ]; then if [ -z "$disableIndices" ]; then if [ -z "$enableIndices" ]; then if [ ${freqMhz} -ge ${TARGET_FREQ_MHZ} ]; then if [ $newChosenFreqDiff -lt $chosenFreqDiff ]; then if [ "$DEVICE" == "wembley" ]; then if [ $currDiff -lt $prevDiff ]; then if [ -f "$CPU_BASE/cpu$cpu/online" ]; then if [ "$obsCur" -ne "$chosenFreq" ] || [ "$obsMin" -ne "$chosenFreq" ] || [ "$obsMax" -ne "$chosenFreq" ]; then if [ $n -lt 0 ]; then if [ ! -d /sys/class/kgsl/kgsl-3d0/ ]; then if [ ${DEVICE} == "walleye" ] || [ ${DEVICE} == "taimen" ]; then if [ ${freq} -gt ${gpuMaxFreq} ]; then if [ ${freqMhz} -ge ${TARGET_FREQ_MHZ} ] && [ ${chosenFreq} -ge ${freq} ]; then if [ ${gpuMaxFreq} != ${firstFreq} ]; then if [ obsCur -ne ${chosenFreq} ] || [ obsMin -ne ${chosenFreq} ] || [ obsMax -ne ${chosenFreq} ]; then if [ "$DEVICE" -ne "wembley" ]; then if [ ${DEVICE} == "marlin" ] || [ ${DEVICE} == "sailfish" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/stopruntime.sh
lines,27
function,0


for,1
for pid in $( adb shell ps | awk '{ if ( $9 == "surfaceflinger" ) { print $2 } }' ); do
if,1
for pid in $( adb shell ps | awk '{ if ( $9 == "surfaceflinger" ) { print $2 } }' ); do
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_ryu.sh
lines,31
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_taieye.sh
lines,50
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/hwui/tests/scripts/prep_marlfish.sh
lines,45
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/libs/androidfw/tests/data/sparse/gen_strings.sh
lines,20
function,0


for,1
for i in {0..999}
if,1
if [ "$(($i % 3))" -eq "0" ]
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/errorprone/refaster/refaster.sh
lines,11
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/media/jni/soundpool/tests/build_and_run.sh
lines,33
function,0


for,1
echo "waiting for device"
if,1
if [ -z "$ANDROID_BUILD_TOP" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/apct-tests/perftests/textclassifier/run.sh
lines,8
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/core/tests/utiltests/runtests.sh
lines,24
function,0


for,0

if,1
if [ -z $ANDROID_BUILD_TOP ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/core/tests/coretests/src/android/database/run_newdb_perf_test.sh
lines,30
function,0


for,1
for (( i=0; i<$RUN_N; i++ ))
if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/core/tests/systemproperties/run_core_systemproperties_test.sh
lines,24
function,0


for,0

if,2
if [[ -z $ANDROID_PRODUCT_OUT && $rebuilld == true ]]; then if [[ $rebuild == true ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/core/jni/runtime_native_boot-flags-test.sh
lines,324
function,23
function say { function banner { function fail { function reboot_and_wait_for_device { function check_device_config_flag { function check_no_device_config_flag { function get_system_property { function check_system_property { function check_no_system_property { function find_zygote_runtime_option { function check_zygote_runtime_option { function check_no_zygote_runtime_option { function check_android_runtime_message { function check_no_android_runtime_message { function test_android_runtime_flag { function check_nogenerational_cc { function check_no_nogenerational_cc { function check_generational_cc { function check_no_generational_cc { function check_default_boot_image { function check_no_default_boot_image { function check_apex_boot_image { function check_no_apex_boot_image {

for,3
for i in $(seq $niters); do for zygote in $zygotes; do for zygote in $zygotes; do
if,1
if [[ "$exit_status" -eq 0 ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/svc/svc.sh
lines,57
function,0


for,0

if,9
if [ "x$1" == "xwifi" ]; then if [ "x$2" == "xenable" ]; then elif [ "x$2" == "xdisable" ]; then if [ "x$1" == "xdata" ]; then if [ "x$2" == "xenable" ]; then elif [ "x$2" == "xdisable" ]; then if [ "x$1" == "xbluetooth" ]; then if [ "x$2" == "xenable" ]; then elif [ "x$2" == "xdisable" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/input/input.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/device_config/device_config.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/requestsync/requestsync.sh
lines,7
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/appops/appops.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/dpm/dpm.sh
lines,5
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/uinput/uinput.sh
lines,9
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/idmap2/static-checks.sh
lines,132
function,6
function _log() function _eval() function _clang_format() function _bpfmt() function _cpplint() function _parse_args()
function _log() function _eval() function _clang_format() function _bpfmt() function _cpplint() function _parse_args()
for,1
for path in $cpp_files; do
if,8
if [[ $? -eq 0 ]]; then if [[ "$output" ]]; then if [[ "$output" ]]; then if [[ "$output" ]]; then if [[ $? -ne 0 ]]; then if [[ $opt_mode == "check" ]]; then elif [[ $opt_mode == "fix" ]]; then elif [[ $opt_mode == "help" ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/idmap2/valgrind.sh
lines,57
function,2
function _log() function _eval()
function _log() function _eval()
for,0

if,1
if [[ $? -eq 0 ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/hid/hid.sh
lines,9
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/locksettings/locksettings.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/sm/sm.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/content/content.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/bmgr/bmgr.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/settings/settings.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/ime/ime.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/uiautomator/cmds/uiautomator/uiautomator.sh
lines,129
function,0


for,2
echo "for more details." echo "Error: more parameters expected for runtest; please see usage for details"
if,12
if [ ${USER_ID} -ne 0 ]; then if [ ! -d ${tmp_cache} ]; then if [ -z "${1}" ]; then if [ -n "${1}" ]; then if [ "${cmd}" == "runtest" ]; then if [ -z "${1}" ] && [ -z "${jars}" ]; then if [ -z "${1}" ]; then if [ "${1:0:1}" = "-" ]; then if [ "${1:0:1}" != "/" ]; then if [ ! -f ${jar} ]; then if [ "${1}" = "--nohup" ]; then if [ -n "${jars}" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/wm/wm.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/appwidget/appwidget.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/telecom/telecom.sh
lines,7
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/pm/pm.sh
lines,2
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/vr/vr.sh
lines,7
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/abx/abx2xml.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/abx/abx.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/abx/xml2abx.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/bu/bu.sh
lines,7
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/cmds/am/am.sh
lines,9
function,0


for,0

if,1
if [ "$1" != "instrument" ] ; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/native/copy-to-ndk.sh
lines,55
function,1

copyndkheaders() {
for,2
for i in $(cd $SRC_HEADERS; ls *.h); do for j in $ALL_PLATFORMS; do
if,5
if [ "$changed" == "" -a -e $dst ]; then if diff $src $dst >/dev/null; then if [ "$changed" == "true" -o "$changed" == "" ]; then if diff $SRC_LIB_ANDROID $DST_LIB_ANDROID >/dev/null; then if [ "$didsomething" != "" ]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/obbtool/mkobb.sh
lines,281
function,7

find_binaries() { check_prereqs() { cleanup() { hidden_prompt() { read_key() { onexit() { usage() {
for,4
echo "mkobb.sh -- Create OBB files for use on Android" echo " -d <directory> Use <directory> as input for OBB files" echo " -K Prompt for key to encrypt OBB file" echo "salt for use with obbtool is:"
if,28
if [ "`uname -s`x" != "Linuxx" ]; then \ if ! egrep -q "^cryptoloop " /proc/modules; then \ if ! egrep -q "name\s*:\s*${CRYPTO}$" /proc/crypto; then \ if ! egrep -q "^\s*${FS}$" /proc/filesystems; then \ if [ "${MKFSBIN}x" = "x" ]; then \ elif [ ! -x "${MKFSBIN}" ]; then \ if [ "${LOSETUPBIN}x" = "x" ]; then \ elif [ ! -x "${LOSETUPBIN}" ]; then \ if [ "${PBKDF2GEN}x" = "x" ]; then \ if [ "${loopdev}x" != "x" ]; then \ if [ "x$c" = "x" ]; then \ if [ "${key}x" = "x" ]; then \ if [ "${key}x" != "${key2}x" ]; then \ if [ "x${temp_mount}" != "x" ]; then \ if [ "x${loop_dev}" != "x" ]; then \ if [ ${use_crypto} -eq 1 ]; then \ if [ "x${tempfile}" != "x" -a -f "${tempfile}" ]; then \ if [ "x${keyfile}" != "x" -a -f "${keyfile}" ]; then \ if [ "${directory}x" = "x" -o ! -d "${directory}" ]; then \ if [ "${filename}x" = "x" ]; then \ if [ ${use_crypto} -eq 1 -a "${key}x" = "x" -a 0${prompt_key} -eq 0 ]; then \ if [ 0${prompt_key} -eq 1 ]; then \ if [ ! -d "${outdir}" ]; then \ if [ $? -ne 0 ]; then \ if [ $? -ne 0 ]; then \ if [ ${use_crypto} -eq 1 ]; then \ if [ ${use_crypto} -eq 1 ]; then \ if [ ${use_crypto} -eq 1 ]; then \
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/signedconfig/debug_sign.sh
lines,6
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/signedconfig/verify_b64.sh
lines,36
function,1
function verify() {
function verify() {
for,0

if,2
if verify "${DATA}" "${SIGNATURE}" "${PROD_KEY_NAME}"; then if verify "${DATA}" "${SIGNATURE}" "${DEBUG_KEY_NAME}"; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/signedconfig/gen_priv_key.sh
lines,7
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/hiddenapi/exclude.sh
lines,74
function,0


for,6
PACKAGES=$(for t in $TEAMS; do echo $(eval echo \${${t}_PACKAGES}); done) for file in $(git show --name-only --pretty=format: $SHA | grep "boot/hiddenapi/hiddenapi-.*txt"); do echo -e "\e[1m\e[31mfor packages that are handled using UnsupportedAppUsage. Please remove\e[0m" for t in ${TEAMS} echo -e "\e[33mContact ${EMAIL} for help with the following:\e[0m" for i in ${TEAM_ENTRIES}
if,2
if [[ -n "${ENTRIES}" ]]; then if [[ -n "${TEAM_ENTRIES}" ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/locked_region_code_injection/test/unit-test.sh
lines,98
function,0


for,1
for class in lockedregioncodeinjection/*.class; do
if,5
if [[ -n $1 ]]; then if [[ -z $TOP || $TOP = / ]]; then elif [[ ! -d $TOP ]]; then elif [[ ! -d $TOP/prebuilts/misc/common ]]; then if [[ -d $OUT ]]; then rm -r $OUT; fi
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/aosp/aosp_sha.sh
lines,42
function,0


for,1
echo -e "\033[0;31;47mThe source of truth for '$file' is in AOSP.\033[0m"
if,6
if git log -n 1 --format='%D' HEAD@{upstream} | grep -q aosp/; then elif git log -n 1 --format='%B' $1 | grep -q -E "^Ignore-AOSP-First: .+" ; then if [[ $line =~ cherry\ picked\ from ]] ; then if (( cherrypick != 0 )); then if (( count == 0 )); then if (( count != 0 )); then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/lock_agent/start_with_lockagent.sh
lines,13
function,0


for,0

if,1
if [[ "$1" == --agent-options ]] ; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/stringslint/stringslint_sha.sh
lines,3
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/tools/aapt/tests/plurals/run.sh
lines,16
function,0


for,0

if,0

git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/api/dump_api_shas.sh
lines,56
function,1

eecho() { echo $@ >&2 ; }
for,2
{ for d in $apidirs; do for f in $(find . -name '*current.txt'); do
if,1
if [[ $1 == *..* ]]; then
git@github.com:aosp-mirror/platform_frameworks_base.git,f661b30d2e2a9251c049d4d28a71b24aa655a7f7,platform_frameworks_base,10499,./platform_frameworks_base/api/gen_combined_removed_dex.sh
lines,11
function,0


for,1
for f in "$@"; do
if,0

git@github.com:alibaba/COLA.git,ca12d5fb8a84c580c38e0a74f300720a2962f8db,COLA,10490,./COLA/cola-components/dev-util-archetypes/new-cola-starter-component.sh
lines,36
function,0


for,0

if,0

git@github.com:alibaba/COLA.git,ca12d5fb8a84c580c38e0a74f300720a2962f8db,COLA,10490,./COLA/cola-components/dev-util-archetypes/new-cola-normal-component.sh
lines,37
function,0


for,0

if,0

git@github.com:lipangit/JiaoZiVideoPlayer.git,3db479b1a816965336fa5884708037a0a2971c33,JiaoZiVideoPlayer,10458,
git@github.com:tbruyelle/RxPermissions.git,fd2b50fe8c11f4c62122d78ed4eda51463ae2fdf,RxPermissions,10447,
git@github.com:square/javapoet.git,44afd4876cebc49b571c58d8e0119b35b087f93e,javapoet,10441,
git@github.com:amitshekhariitbhu/android-interview-questions.git,6c835526d7941c4d12b2bfd4aa5db7ee4f74891b,android-interview-questions,10394,
git@github.com:newbee-ltd/newbee-mall.git,613a662adf1da7623ec34459bc83e3c1b12d8ce7,newbee-mall,10393,
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/release.sh
lines,107
function,5
function printgreen() { function printred() { function build { function publish { function instructions {
function printgreen() { function printred() {
for,1
echo "Welcome to the release process for Apereo CAS ${casVersion}"
if,4
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [[ "${casVersion}" == v* ]] ; if [[ -z $SONATYPE_USERNAME && -z $SONATYPE_PASSWORD ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/testcas.sh
lines,515
function,3
function isDockerOnLinux() { function isDockerOnWindows() {
function isDockerOnLinux() { function isDockerOnWindows() { printHelp() {
for,4
printf "${RED}Docker engine is not available for the linux platform.${ENDCOLOR}" printf "${RED}Docker engine is not available for the windows platform.${ENDCOLOR}" echo -e "\nPlease see the test script for details." for item in $(echo "$category" | sed "s/,/ /g")
if,5
if [[ $? -ne 0 ]] ; then if [[ $dockerPlatform =~ "linux" ]]; then if [[ $dockerPlatform =~ "windows" ]]; then if [[ -z "$task" ]] if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/influxdb/run-influxdb-server.sh
lines,23
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/zookeeper/run-zookeeper-server.sh
lines,9
function,0


for,1
echo "Waiting for ZooKeeper image to prepare..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mssqlserver/run-mssql-server.sh
lines,44
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/saml2/run-samlsp-server.sh
lines,50
function,0


for,0

if,4
if [[ -n "${AUTHN_CONTEXT}" ]]; then if [[ -n "${SIGN_AUTHN_REQUESTS}" ]]; then if [[ -n "${ACS_URL}" ]]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/saml2/run-saml-server.sh
lines,63
function,0


for,1
echo "Creating private key and certificate for SP metadata"
if,4
if [[ -z "${SP_SLO_SERVICE}" ]]; then if [[ -z "${SP_ACS_SERVICE}" ]]; then if [[ -z "${SP_ENTITY_ID}" ]]; then if [[ -z "${IDP_ENTITYID}" ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/elastic/run-elastic-apm.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/memcached/run-memcached-server.sh
lines,16
function,0


for,1
echo "Running image for memcached..."
if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/k3d/setup.sh
lines,115
function,0


for,3
echo "Please install kubectl for your OS from https://kubernetes.io/docs/tasks/tools/" echo "Checking for host entry" --for condition=ready pod \
if,10
if [[ ! -z "${GITHUB_PATH}" ]]; then if [[ ${k3d_installed} -ne 0 ]]; then if [[ ! -f ${K3D_DIR}/install.sh ]]; then if [[ ${helm_installed} -ne 0 ]]; then if [[ ! -f ${K3D_DIR}/install.sh ]]; then if [[ ${kubectl_installed} -ne 0 ]]; then if [[ $cluster_found -ne 0 ]]; then if [[ $host_found -ne 0 ]]; then if [[ "${CI}" == "true" ]]; then if [[ $ingress_controller_found -ne 0 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/postgres/init_users.sh
lines,17
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/postgres/run-postgres-server.sh
lines,19
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mongodb/run-mongodb-server.sh
lines,26
function,1
function runscript {

for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mongodb/mongo-init.sh
lines,7
function,1

db.getName()
for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/docker/entrypoint.sh
lines,25
function,1
function printgreen() {
function printgreen() {
for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-acs-signed/ready.sh
lines,9
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-acs-signed/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/redis-ticket-registry-loadbalanced/bootstrap.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/service-discovery-eureka/init.sh
lines,9
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/redis-ticket-service-registry/init.sh
lines,7
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-optional-login/init.sh
lines,11
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-login-ldap-attributes/create_cert.sh
lines,22
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-sonarqube/exit.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-sonarqube/init.sh
lines,29
function,0


for,2
echo "Waiting for sonarqube pods to be ready" kubectl wait --namespace sonarqube --for condition=ready pod --selector=statefulset.kubernetes.io/pod-name=sonarqube-sonarqube-0 --timeout=600s
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-security-vault/init.sh
lines,14
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-local-storage/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-local-storage/init.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/scim-login-success/init.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-postbinding-for-authnrequest/init.sh
lines,8
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-with-sso-policy/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-with-sso-policy/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-redirect-binding/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-redirect-binding/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-relaystate/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-relaystate/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/simple-mfa-login-jpa/init.sh
lines,11
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-authnrequestsigned/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-authnrequestsigned/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/adfs-login-saml2-sp/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/adfs-login-saml2-sp/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-jdbc/init.sh
lines,10
function,0


for,1
echo "Waiting for PostgreSQL database to get ready..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-shibidp/init.sh
lines,43
function,0


for,5
echo -e "Removing previous running containers, if any, for ${SCENARIO}" echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}" echo -e "Fetching shib-cas-authn release artifacts for v${VERSION}" echo -e "Waiting for Shibboleth IdP..."
if,2
echo -e "Removing previous running containers, if any, for ${SCENARIO}" echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-contextclass-redirect/ready.sh
lines,20
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-contextclass-redirect/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-mdq/init.sh
lines,13
function,0


for,0

if,1
if [[ -z $TMPDIR ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-strapi/strapi/entrypoint.sh
lines,26
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-strapi/init.sh
lines,35
function,0


for,1
echo "Waiting for Strapi start"
if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-idp-discovery/init.sh
lines,7
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-slo-idp/init.sh
lines,12
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-configserver/exit.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-configserver/init.sh
lines,33
function,0


for,1
echo "Waiting for Spring Cloud Config Server..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-oidc-idp/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-oidc-idp/init.sh
lines,6
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-with-sso/init.sh
lines,7
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-contextclass-mfa/ready.sh
lines,6
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-contextclass-mfa/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/actuator-endpoint-login-jdbc/init.sh
lines,14
function,0


for,1
echo "Waiting for PostgreSQL database to get ready..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2/init.sh
lines,8
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-metadata-directory/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/wsfed-idp-login/init.sh
lines,12
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-authncontext/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-authncontext/init.sh
lines,5
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/amqp-ticket-registry/init.sh
lines,10
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-oidc-rp-saml2-idp/init.sh
lines,8
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-sp-logout-post/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/pm-must-change-password-jdbc/ready.sh
lines,30
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/actuator-endpoint-metrics/init.sh
lines,71
function,1

generate_post_data()
for,0

if,3
if [ $retVal == 0 ]; then if [ $retVal == 0 ]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-session-timeout-saml2-idp/init.sh
lines,8
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-distributed-session/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-distributed-session/bootstrap.sh
lines,6
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-distributed-session/init.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-logout-redirect/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-logout-redirect/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/http-session-mongodb/init.sh
lines,7
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-with-cas-request/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-concurrent/ready.sh
lines,27
function,0


for,0

if,2
if [[ -z "${IDP_SIGNING_CERTIFICATE}" ]]; then if [[ -z "${IDP_ENCRYPTION_CERTIFICATE}" ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-concurrent/init.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-oidc-idp-selection-discovery/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/actuator-form-login-ldap/init.sh
lines,13
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/service-registry-replication-hazelcast/init.sh
lines,8
function,0


for,0

if,1
if [[ -z $TMPDIR ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-unsolicited/ready.sh
lines,17
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-unsolicited/init.sh
lines,6
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/actuator-form-login-ldap-userauthz/init.sh
lines,13
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-consent/init.sh
lines,6
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-passive-authnrequest/ready.sh
lines,20
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-passive-authnrequest/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/passwordless-mfa-login-duo-with-ldap/init.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/token-login-saml2-idp-initiated/ready.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/token-login-saml2-idp-initiated/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-mongodb/init.sh
lines,21
function,2
function runscript {
runscript "db.getName()"
for,1
echo "Waiting for MongoDb database to get ready..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-override-metadata/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/password-sync-ldap/init.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-login-ldap-cert-in-header/create_cert.sh
lines,22
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-login-ldap-cert-in-header/init.sh
lines,8
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-slo/init.sh
lines,8
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/configuration-properties-zookeeper/init.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-mongodb-metadata/init.sh
lines,13
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/jpa-ticket-registry-postgres/init.sh
lines,7
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-login-cert-in-header/init.sh
lines,8
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-acs-unsigned/ready.sh
lines,9
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-acs-unsigned/init.sh
lines,4
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/x509-login/init.sh
lines,11
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-simplesign-binding/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-simplesign-binding/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-idp-initiated-incommon/init.sh
lines,9
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-logout-with-sso/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-logout-with-sso/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-mfa-provider-selection/init.sh
lines,8
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-encrypted/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-encrypted/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/service-registry-replication-kafka/init.sh
lines,8
function,0


for,0

if,1
if [[ -z $TMPDIR ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-logout-post/init.sh
lines,7
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-slo-idp-backchannel/init.sh
lines,12
function,0


for,0

if,1
echo -e "Removing previous SAML metadata directory, if any"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-jwt-rsa/init.sh
lines,7
function,0


for,0

if,1
if [[ -z $TMPDIR ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/mongodb-ticket-service-registry/init.sh
lines,7
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-with-sso/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-with-sso/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-refeds-duo-bypass/ready.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-refeds-duo-bypass/init.sh
lines,6
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-consent-with-sso/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-consent-with-sso/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-service-selection-strategy/ready.sh
lines,20
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp-service-selection-strategy/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/oidc-login-jwt-hmac/init.sh
lines,7
function,0


for,0

if,1
if [[ -z $TMPDIR ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/passwordless-login-jpa/init.sh
lines,8
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-mfa/ready.sh
lines,18
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-mfa/init.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp/ready.sh
lines,15
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/delegated-login-saml2-sp-saml2-idp/init.sh
lines,6
function,0


for,2
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}" echo -e "Creating SAML metadata directory for ${SCENARIO}"
if,1
echo -e "Removing previous SAML metadata directory, if any, for ${SCENARIO}"
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-metadata-json/ready.sh
lines,10
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-metadata-json/exit.sh
lines,5
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-login-sp-metadata-json/init.sh
lines,7
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/scenarios/saml2-idp-sp-logout-redirect/init.sh
lines,3
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/configure-ci.sh
lines,44
function,3
function printred() { function printgreen() { function printyellow() {
function printred() { function printgreen() { function printyellow() {
for,0

if,3
if [[ -z $NODE_VERSION_REQUIRED ]]; then if [[ -z $NATIVE_BUILD_ENABLED ]]; then if [[ -z $NATIVE_RUN_ENABLED ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/run-all.sh
lines,25
function,0


for,1
for scenario in `find $SCENARIOS_FOLDER -mindepth 1 -maxdepth 1 -type d -printf '%f '`; do
if,2
if [[ -f "${PUPPETEER_DIR}/logs/0-${scenario}.log" ]]; then if [[ $RC -ne 0 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/puppeteer/run.sh
lines,779
function,6
function printcyan() { function printgreen() { function printyellow() { function printred() { function progressbar() { function sleepfor() {
function printcyan() { function printgreen() { function printyellow() { function printred() { function progressbar() { function sleepfor() { processIds=()
for,23
for current_task in $(seq "$tasks_in_total") echo -n "Running Puppeteer tests for Apereo CAS Server: " && printcyan "${casVersion}" printred "Missing scenario name for the test" echo "Checking for required environment variables" for e in ${requiredEnvVars//,/ } ; do printgreen "Generating keystore ${keystore} for CAS with\nDN=${dname}, SAN=${subjectAltName} ..." printgreen "Exporting cert for adding to trust bundles if needed by test" printgreen "\nBuilding CAS found in $PWD for dependencies [${dependencies}] with flags [${FLAGS}]" sleepfor 25 printgreen "Current Java processes found for PID ${pid}" printcyan "Waiting for build to finish. Process id is ${pid} - Waiting for ${targetArtifact}" sleepfor 60 printcyan "Building Docker image for scenario ${scenarioName} via $dockerContextDirectory" for env in "${variables[@]}" for env in "${variables[@]}" for (( c = 1; c <= instances; c++ )) for script in ${scripts}; do printcyan "Waiting for CAS instance sleepfor $timeout for script in ${scripts}; do printyellow "Running test scenario against a CAS native-image executable is disabled for scenario ${scriptPath}" printyellow "This allows for the bootstrapping and initialization of the test scenario without actually running the test suite" for p in "${processIds[@]}"; do
if,74
if [[ -z "${tmp}" ]] ; then if [[ $? -eq 0 ]]; then if [ $total -eq $current ]; then if [[ -z "$scenario" ]] ; then if [[ ! -d "${scenario}" ]]; then if [[ "${NATIVE_BUILD}" == "true" || "${NATIVE_RUN}" == "true" ]]; then if [ $? -ne 0 ]; then if [[ ! -z ${requiredEnvVars} ]]; then if [[ -z "${!e}" ]]; then if [[ "${CI}" == "true" && ! -d ~/.npm ]] ; then if [[ "${dockerRequired}" == "true" ]]; then echo "Checking if Docker is available..." if [[ "$CI" == "true" && "${RUNNER_OS}" != "Linux" ]]; then if [[ $dockerInstalled -ne 0 ]] ; then if [[ "$CI" == "true" ]]; then if [[ "${buildDockerImage}" == "true" && $dockerInstalled -ne 0 ]]; then if [[ "${enabled}" == "false" ]]; then if [[ "${CI}" == "true" ]]; then if [[ "${RERUN}" == "true" ]]; then if [[ "${INITONLY}" == "true" ]]; then if [[ "${CI}" == "" || "${CI}" == "false" ]]; then if [[ "${NATIVE_BUILD}" == "true" ]]; then if [[ "${DRYRUN}" == "true" ]]; then if [[ ! -d "${PUPPETEER_DIR}/node_modules/puppeteer" || "${INSTALL_PUPPETEER}" == "true" ]]; then if [[ "${RERUN}" != "true" ]]; then if [[ "${RERUN}" != "true" && "${INITONLY}" != "true" ]]; then if [[ -f "${keystore}" ]]; then printgreen "Exporting cert for adding to trust bundles if needed by test" if [[ "${NATIVE_BUILD}" == "false" && "${NATIVE_RUN}" == "false" ]]; then if [[ $project == starter* ]]; then if [[ "${NATIVE_BUILD}" == "false" && "${NATIVE_RUN}" == "false" ]]; then if [[ ! -f "$casWebApplicationFile" ]]; then if [[ -n "${buildScript}" ]]; then if [[ "${NATIVE_BUILD}" == "false" && "${NATIVE_RUN}" == "false" ]]; then if [[ "${REBUILD}" == "true" && "${RERUN}" != "true" ]]; then if [[ "${NATIVE_BUILD}" == "true" || "${NATIVE_RUN}" == "true" ]]; then elif [[ "${CI}" == "true" && ! -z "${GRADLE_BUILDCACHE_PSW}" ]]; then if [[ -d ./webapp/cas-server-webapp-${project}/build/libs ]]; then if [[ "${NATIVE_BUILD}" == "true" ]]; then if [[ "${BUILD_SPAWN}" == "background" ]]; then if [[ $? -ne 0 ]]; then if [[ $counter -gt $PUPPETEER_BUILD_CTR ]]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [[ "${RERUN}" != "true" && "${NATIVE_BUILD}" == "false" ]]; then if [ $? -eq 1 ]; then if [[ "${buildDockerImage}" == "true" ]]; then if [[ -f "$SCENARIO_FOLDER/docker/Dockerfile" ]]; then if [ $RC -ne 0 ]; then if [[ "${RERUN}" != "true" && "${NATIVE_BUILD}" == "false" ]]; then if [[ "${CI}" != "true" ]]; then if [[ -n "${bootstrapScript}" ]]; then if [[ $? -ne 0 ]]; then if [[ ! -z "$instances" ]]; then if [[ $? -ne 0 ]]; then if [[ "${INITONLY}" == "false" ]]; then if [[ "$DEBUG" == "true" ]]; then if [[ "${NATIVE_RUN}" == "true" ]]; then elif [[ "${buildDockerImage}" == "true" ]]; then if [[ "${CI}" == "true" ]]; then if [[ $RC -ne 0 ]]; then if [[ "$DEBUG" == "true" ]]; then if [[ "${INITONLY}" == "false" ]]; then if [[ "${NATIVE_BUILD}" == "true" ]]; then if [[ "${DRYRUN}" != "true" && "${NATIVE_BUILD}" == "false" ]]; then if [[ "${CLEAR}" == "true" ]]; then if [[ "${NATIVE_RUN}" == "false" ]]; then if [[ $RC -ne 0 ]]; then if [[ $RC -ne 0 ]]; then if [[ "${RERUN}" != "true" ]]; then if [[ "${INITONLY}" == "true" ]]; then if [[ "${CI}" != "true" ]]; then if [[ "${CI}" == "true" && $dockerInstalled -eq 0 ]]; then if [[ "${buildDockerImage}" == "true" ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/httpbin/run-httpbin-server.sh
lines,8
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/rabbitmq/run-rabbitmq-server.sh
lines,17
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/consul/run-consul-server.sh
lines,13
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/cosmosdb/run-cosmosdb-server.sh
lines,44
function,0


for,4
echo "Trying to determine Docker image for platform $dockerPlatform" echo "Windows platform is not supported for CosmosDb" echo "Azure CosmosDb emulator for Linux is not quite ready yet." echo "Waiting for CosmosDb to come online..."
if,2
if [[ $dockerPlatform =~ "windows" ]]; then if [[ "${CI}" == "true" ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/syncope/run-syncope-server.sh
lines,559
function,0


for,4
echo -e "Waiting for Syncope server to come online...\n" "helpMessage": "Enter the value for status in case of status not specified. Default is \"true\".", "helpMessage": "Specify a value for disabled status. Default is \"false\".", "helpMessage": "Specify a value for enabled status. Default is \"true\".",
if,4
"helpMessage": "Specify if value quotation is required. Default is true.", "helpMessage": "Specify if first line of the file must be ignored. Default is true.", "helpMessage": "Character used to separate values in a multi-value scenario. Multivalue unsupported if not provided.", "helpMessage": "Supported object classes (__ACCOUNT__ as default if empty)",
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mysql/run-mysql-server.sh
lines,17
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mariadb/run-mariadb-server.sh
lines,17
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/ldap/run-ldap-server.sh
lines,34
function,0


for,0

if,2
if [ $retVal == 0 ]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/ldap/reset-ad-server.sh
lines,14
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/ldap/run-ad-server.sh
lines,171
function,0


for,2
echo Creating users for tests echo Putting cert in trust store for use by unit test
if,5
if [[ $? -eq 0 ]]; then if [[ "${RESET}" == "true" ]] ; then if [[ $? -ne 0 ]] ; then if [[ -f ${TMPDIR}/adcacerts.jks ]] ; then if [[ -d /c/$TMPDIR ]] ; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/oracle/run-oracle-server.sh
lines,17
function,0


for,1
echo "Waiting for Oracle docker container to prepare..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/perf/perftests-jmeter.sh
lines,164
function,2
function printred() { function printgreen() {
function printred() { function printgreen() {
for,3
echo -e "Build started at $(date) for test category ${testCategory}" printgreen "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}" printgreen "Launched CAS with pid ${pid} with modules ${casModules}. Waiting for CAS server to come online..."
if,5
if [ $retVal == 0 ]; then if [[ ! -f webapp/cas-server-webapp-"${webAppServerType}"/build/libs/cas.war ]]; then if [ $? -eq 1 ]; then if [[ ! -f "/tmp/apache-jmeter-${jmeterVersion}.zip" ]]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/perf/perftests-locust.sh
lines,82
function,0


for,3
echo "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}" echo "Launched CAS with pid ${pid}. Waiting for CAS server to come online..." echo -e "Configuring virtual environment for mylocustenv..."
if,3
if [ $retVal == 0 ]; then if [ $? -eq 1 ]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/dynamodb/run-dynamodb-server.sh
lines,16
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/redis/run-redis-server.sh
lines,22
function,0


for,0

if,1
if [ "$COUNT_REDIS" -eq 4 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/native/build.sh
lines,103
function,3
function printred() { function printgreen() { function printyellow() {
function printred() { function printgreen() { function printyellow() {
for,1
printgreen "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}"
if,8
if [[ "${BUILD}" == "true" ]]; then if [[ "${CI}" == "true" ]]; then if [[ $? -ne 0 ]]; then if [[ "${RUN}" == "true" ]]; then if [[ -f "${keystore}" ]]; then if [[ $? -ne 0 ]]; then if [[ "${CI}" == "true" ]]; then if [[ $? -ne 0 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/aws/run-aws-server.sh
lines,18
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/shell/cas-shell-script.sh
lines,16
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/shell/run-shell.sh
lines,12
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/cas/run-cas-client.sh
lines,42
function,0


for,1
echo "Timed out waiting for client application."
if,3
if [[ -z $TMPDIR ]]; then if [[ ! -f ${TMPDIR}/bootiful-cas-client.jar ]] ; then if [[ $counter -gt 30 ]] ; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/cas/run-cas-server.sh
lines,89
function,0


for,2
echo -e "Generating keystore for CAS Server at ${keystore}" echo -e "Waiting for CAS..."
if,1
if [[ -z "${CAS_KEYSTORE}" ]] ; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/scim/run-scim-server.sh
lines,8
function,0


for,1
echo "Waiting for SCIM image to prepare..."
if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/webapp/validate-configserver-webapp.sh
lines,36
function,0


for,2
echo "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}" echo "Launched CAS config server with pid ${pid}. Waiting for CAS config server to come online..."
if,1
if [ "$cmd" == 200 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/webapp/validate-external-webapp.sh
lines,91
function,0


for,3
echo "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}" echo -e "Checking for Apache Tomcat version..." echo -e "Preparing web application ${project} for deployment..."
if,2
if [[ $? -ne 0 ]]; then if [ "$rc" == 200 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/webapp/validate-embedded-webapp.sh
lines,122
function,3

createConfig() { dumpOutput() { testUrl() {
for,2
echo "Generating keystore ${keystore} for CAS with DN=${dname}, SAN=${subjectAltName}" echo "Launched CAS with pid ${pid}. Waiting for CAS server to come online..."
if,5
if [[ -f "${outputfile}" ]]; then if [ "$rc" == 200 ]; then if [[ $? -eq 0 ]] ; then if [[ ${retVal} -ne 0 ]]; then if [[ ${retVal} -ne 0 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/kafka/run-kafka-server.sh
lines,17
function,0


for,0

if,1
if [[ ${COUNT_KAFKA} -eq 2 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/grouper/run-grouper-server.sh
lines,24
function,0


for,1
echo "Waiting for Grouper server to come online..."
if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/cassandra/generate-keys.sh
lines,96
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/cassandra/run-cassandra-server.sh
lines,51
function,0


for,1
echo "Waiting for Cassandra server to come online..."
if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/radius/run-radius-server.sh
lines,16
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/oidc/run-keycloak-server.sh
lines,34
function,0


for,1
echo "Waiting for Keycloak docker container to prepare..."
if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/gcp/run-gcp-server.sh
lines,43
function,1
function runContainer() {
function runContainer() {
for,0

if,2
if [ $retVal == 0 ]; then if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/gcp/entrypoint.sh
lines,14
function,0


for,0

if,0

git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/tests/mail/run-mail-server.sh
lines,16
function,0


for,0

if,1
if [ $retVal == 0 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/docs/publish.sh
lines,456
function,4
function printred() { function printgreen() { function printyellow() { function validateProjectDocumentation() {
function printred() { function printgreen() { function printyellow() { function validateProjectDocumentation() {
for,6
printgreen "Generating documentation for property filter ${propFilter}\n" printgreen "Looking for badly named include fragments..." printgreen "Looking for unused include fragments..." for f in $files; do printgreen "\nBuilding documentation site for $branchVersion with data at $PWD/gh-pages/_data" printgreen "Configuring tracking branches for repository...\n"
if,35
if [[ ${retVal} -eq 0 ]]; then if [[ $branchVersion == "master" ]]; then if [ -z "$GH_PAGES_TOKEN" ] && [ "${GITHUB_REPOSITORY}" != "${REPOSITORY_NAME}" ]; then if [[ "${CI}" == "true" ]]; then if [[ $clone == "true" ]]; then elif [[ ! -d "$PWD/gh-pages" ]]; then if [[ $cloneRepository == "true" ]]; then if [[ $branchVersion == "development" ]]; then if [[ $generateData == "true" ]]; then if [[ ! -f "$docgen" ]]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then if [[ $proofRead == "true" ]]; then if [ $docsVal == 0 ]; then if [ $docsVal == 1 ]; then if [ $docsVal == 1 ]; then if [ $docsVal == 1 ]; then if [ $res == 1 ]; then if [[ ${buildDocs} == "true" ]]; then if [[ "$CI" == "true" ]]; then if [[ "${CI}" == "true" ]]; then if [[ ${serve} == "true" ]]; then if [[ "${CI}" == "true" ]]; then if [[ ${retVal} -eq 1 ]]; then if [[ "$CI" == "true" ]]; then if [[ $proofRead == "true" ]]; then if [[ ${retVal} -eq 1 ]]; then if [[ $clone == "true" ]]; then if [ -z "$GH_PAGES_TOKEN" ] && [ "${GITHUB_REPOSITORY}" != "${REPOSITORY_NAME}" ]; then if [[ $clone == "true" ]]; then elif [[ "${publishDocs}" == "true" ]]; then if [[ ${retVal} -eq 1 ]]; then if [[ ${retVal} -eq 1 ]]; then if [[ $clone == "true" ]]; then if [[ ${retVal} -eq 0 ]]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/metadata/publish-project-metadata.sh
lines,88
function,3
function execPostRequestWithHttpie() { function publishProjectModules() { function publishProjectConfiguration() {
function execPostRequestWithHttpie() { function publishProjectModules() { function publishProjectConfiguration() {
for,12
echo "Publishing CAS modules for CAS version ${casVersion}" echo "Unable to successfully generate metadata for project modules" echo "Clearing previous records for ${casVersion}" echo "Clearing SNAPSHOT records for ${casVersion}" echo "Uploading module records for ${casVersion}" echo "Unable to upload records for CAS version ${casVersion}. Aborting..." echo "Publishing CAS configuration metadata for CAS version ${casVersion}" echo "Unable to successfully generate metadata for CAS configuration" echo "Clearing previous records for ${casVersion}" echo "Clearing SNAPSHOT records for ${casVersion}" echo "Uploading configuration records for ${casVersion}" echo "Unable to upload records for CAS version ${casVersion}. Aborting..."
if,7
if [[ -z $CAS_PROJECT_DB_URL_ENDPOINT || -z $CAS_PROJECT_DB_API_KEY ]]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then if [ $? -eq 1 ]; then
git@github.com:apereo/cas.git,076c722699cdb24c0fe3ea003209af25b4093b24,cas,10335,./cas/ci/init-build.sh
lines,36
function,0


for,1
echo -e "Checking for sudo, not available on Windows bash"
if,1
if [ $? -eq 0 ]; then
git@github.com:jhy/jsoup.git,da4e275eaddcef242b3912d85b3bbf35f713c80b,jsoup,10333,
git@github.com:google/auto.git,1f738027abf061421c9fee0102471ad6f31cfbb3,auto,10239,./auto/util/publish-snapshot-on-commit.sh
lines,6
function,0


for,0

if,0

git@github.com:google/auto.git,1f738027abf061421c9fee0102471ad6f31cfbb3,auto,10239,./auto/util/generate-latest-docs.sh
lines,25
function,0


for,0

if,0

git@github.com:JessYanCoding/MVPArms.git,8adc86be91eaef3b384f72a7bb0ae6b43a393046,MVPArms,10237,
git@github.com:metersphere/metersphere.git,dcf8e31c7c4fde4d7673ae8954c1ff5cf1e9246f,metersphere,10188,
git@github.com:JakeWharton/ViewPagerIndicator.git,8cd549f23f3d20ff920e19a2345c54983f65e26b,ViewPagerIndicator,10164,
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/cli/src/main/resources/install-linux.sh
lines,13
function,0


for,0

if,1
if [ -f /proc/1/cgroup ] && grep docker /proc/1/cgroup -qa; then
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/markPassed.sh
lines,29
function,0


for,1
for i in "${ADDR[@]}"; do
if,2
if [ $counter == 1 ] if [ "$responseStatus" -ne "200" ]
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/stopDb.sh
lines,7
function,0


for,0

if,0

git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/runMySQL.sh
lines,0
function,0


for,0

if,0

git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/testCli.sh
lines,72
function,0


for,0

if,8
if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]] if [[ $? -ne 0 ]]
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/doTests.sh
lines,242
function,1
function cleanup {

for,3
for i in "${ADDR[@]}"; do echo "fetching latest X.Y version for $currPinnedDb given plugin-interface X.Y version: $piVersion gave response: $response" echo "fetching latest X.Y.Z version for $currPinnedDb, X.Y version: $pinnedDbVersionX2 gave response: $response"
if,16
if test -f "pluginInterfaceExactVersionsOutput"; then if [[ $? -ne 0 ]] if [ $counter == 1 ] if [ "$responseStatus" -ne "200" ] if [[ $line = "" ]]; then if [[ $currPinnedDb == $pluginToTest ]] if [[ $currPinnedDb == "sqlite" ]] if [[ $(echo "$response" | jq .plugin) == "null" ]] if [[ $(echo "$response" | jq .tag) == "null" ]] if [[ $currPinnedDb == "sqlite" ]] if [[ $currPinnedDb == "sqlite" ]] if [[ $? -ne 0 ]] if [[ $currPinnedDb == "sqlite" ]] if [[ $? -ne 0 ]] if [[ $currPinnedDb == "sqlite" ]] if [[ $someTestsRan = "true" ]]
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/getPluginInterfaceExactVersions.sh
lines,18
function,0


for,0

if,1
if [[ `echo $response | jq .tag` == "null" ]]
git@github.com:supertokens/supertokens-core.git,7ec4fee3bf9dfd1e043efb89760794d3dee94d23,supertokens-core,10152,./supertokens-core/.circleci/startDb.sh
lines,112
function,0


for,0

if,0

git@github.com:clojure/clojure.git,6975553804b0f8da9e196e6fb97838ea4e153564,clojure,10142,./clojure/antsetup.sh
lines,8
function,0


for,1
echo "Wrote maven-classpath.properties for standalone ant use"
if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/build.sh
lines,30
function,0


for,1
echo "Helps building parts of LanguageTool - for a complete build, run mvn directly"
if,2
if [ $ if [ \! -d $MODULE ]
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/src/main/resources/tools/test-broken-url.sh
lines,49
function,0


for,2
for grammar_xml in $(find languagetool-language-modules/*/src -name grammar.xml); do for url in $(xmlstarlet c14n --without-comments $grammar_xml |
if,2
if [[ ${urls[$url]} != 1 ]]; then if wget --timeout 30 --quiet --user-agent firefox -O /dev/null $url; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/scripts/extractProhibitedCompoundsErrors.sh
lines,4
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/scripts/hunspell/merge_dict.sh
lines,132
function,0


for,7
echo "Expects separate header files for .dic / spelling.txt" echo "Header file for dictionary $DIC_HEADER does not exist; creating empty file" echo "Header file for additional dictionary $ADDITIONAL_DIC_HEADER does not exist; creating empty file" echo "File for merged dictionary words $ADDITIONAL_DIC_FILE_MERGED does not exist; creating empty file" for file in "${CONTENT_DIR}/${LANG_CODE}_wordlist.xml" "CONTENT_DIR}/${LANG_CODE}_${COUNTRY_CODE}_wordlist.xml" "${CONTENT_DIR}/${LANG_CODE}_${COUNTRY_CODE_LOWER}_wordlist.xml"; echo "Extending file with word list for suggestions" echo "Continuining without extending word list for suggestions"
if,10
if [ $ if [ ! -f ${DIC_HEADER} ]; then if [ ! -f ${ADDITIONAL_DIC_HEADER} ]; then if [ ! -f ${ADDITIONAL_DIC_FILE_MERGED} ]; then if [ -f ${file} ]; then if [ ! -f ${ADDITIONAL_DIC_FILE} ]; then if [ -f ${SUGGESTION_WORDS} ]; then if [ ${LANG_CODE} = "en" ]; then if [ ${LANG_CODE} = "de" ]; then if [ -f ${FREQ_FILE} ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/scripts/hunspell/merge_dict_all.sh
lines,44
function,0


for,0

if,2
if [ $ if [ $
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/scripts/extractProhibitedCompounds.sh
lines,6
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-dev/scripts/disableProhibitedCompounds.sh
lines,12
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/deploy_release.sh
lines,64
function,0


for,0

if,2
if [ $ MVN_COMMAND=$(if [ $3 = "true" ]; then echo "mvnd"; else echo "mvn"; fi)
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/.circleci/kick_off_premium.sh
lines,76
function,0


for,1
echo "No premium tests for $BRANCH."
if,11
if [[ "$BRANCH" != "master" ]]; then if grep -q -e "languagetool-core/.*" /home/circleci/git_diffs.txt; then if grep -q -e "languagetool-dev/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-dev/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/de/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/de/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/en/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/en/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/es/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/es/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/fr/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/fr/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/nl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/nl/ $PROJECTS"; fi if grep -q -e "languagetool-language-modules/pt/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/pt/ $PROJECTS"; fi if grep -q -e "languagetool-server/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-server/ $PROJECTS"; fi if [ -z "$PROJECTS" ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-client-example/build-opensource.sh
lines,13
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/deploy-modules.sh
lines,109
function,0


for,1
echo "No deployment for $BRANCH."
if,45
if [[ "$BRANCH" != "master" ]]; then elif grep -q -e "pom.xml" /home/circleci/git_diffs.txt; then PROJECTS="ALL"; if grep -q -e "languagetool-core/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-core",$PROJECTS; fi if grep -q -e "languagetool-commandline/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-commandline,$PROJECTS"; fi if grep -q -e "languagetool-dev/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-dev,$PROJECTS"; fi if grep -q -e "languagetool-gui-commons/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-gui-commons,$PROJECTS"; fi if grep -q -e "languagetool-http-client/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-http-client,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ar/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ar,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ast/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ast,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/be/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/be,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/br/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/br,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ca/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ca,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/da/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/da,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/de/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/de,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/el/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/el,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/en/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/en,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/eo/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/eo,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/es/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/es,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/fa/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/fa,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/fr/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/fr,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ga/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ga,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/gl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/gl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/is/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/is,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/it/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/it,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ja/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ja,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/km/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/km,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/lt/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/lt,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ml/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ml,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/nl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/nl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/pl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/pl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/pt/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/pt,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ro/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ro,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ru/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ru,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sk/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sk,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sv/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sv,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ta/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ta,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/tl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/tl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/uk/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/uk,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/zh/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/zh,$PROJECTS"; fi if grep -q -e "languagetool-server/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-server,$PROJECTS"; fi if grep -q -e "languagetool-tools/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-tools,$PROJECTS"; fi if grep -q -e "languagetool-wikipedia/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-wikipedia,$PROJECTS"; fi if [ -z "$PROJECTS" ]; then elif [ "$PROJECTS" == "ALL" ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-standalone/src/main/resources/testrules.sh
lines,8
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-standalone/scripts/tatoeba-language-split.sh
lines,33
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-standalone/scripts/get-i18n-strings.sh
lines,12
function,0


for,0

if,1
if [ $
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-standalone/scripts/stage-artifacts.sh
lines,99
function,0


for,1
for PROJECT in languagetool-core en fr de pl ca it br nl pt ru ast be zh da eo gl el ja km ro sk sl es sv tl uk fa ta ga ar de-DE-x-simple-language all languagetool-gui-commons languagetool-wikipedia languagetool-server languagetool-http-client
if,12
if [ "$(basename $CURRENT_DIR)" != 'scripts' ]; then if [ $DRY_RUN -eq 1 ] if [ -d "../../languagetool-language-modules/$PROJECT" ] if [ ! -f $JAR_FILE ] if [ ! -f $POM_FILE ] if [ $PROJECT != "all" ] if [ ! -f $SOURCE_FILE ] if [ $DRY_RUN -eq 1 ] if [ $PROJECT != "all" ] if [ ! -f $JAVADOC_FILE ] if [ $DRY_RUN -eq 1 ] if [ $DRY_RUN -eq 1 ]
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/build-zip.sh
lines,4
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/create_snapshot.sh
lines,56
function,0


for,0

if,1
if [ $
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/test-modules.sh
lines,108
function,0


for,0

if,45
if grep -q -e "languagetool-core/.*" /home/circleci/git_diffs.txt; then elif grep -q -e "pom.xml" /home/circleci/git_diffs.txt; then if grep -q -e "languagetool-commandline/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-commandline,$PROJECTS"; fi if grep -q -e "languagetool-dev/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-dev,$PROJECTS"; fi if grep -q -e "languagetool-gui-commons/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-gui-commons,$PROJECTS"; fi if grep -q -e "languagetool-http-client/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-http-client,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ar/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ar,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ast/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ast,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/be/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/be,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/br/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/br,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ca/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ca,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/da/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/da,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/de/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/de,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/el/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/el,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/en/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/en,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/eo/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/eo,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/es/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/es,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/fa/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/fa,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/fr/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/fr,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ga/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ga,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/gl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/gl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/is/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/is,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/it/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/it,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ja/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ja,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/km/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/km,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/lt/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/lt,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ml/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ml,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/nl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/nl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/pl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/pl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/pt/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/pt,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ro/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ro,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ru/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ru,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sk/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sk,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/sv/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/sv,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/ta/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/ta,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/tl/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/tl,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/uk/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/uk,$PROJECTS"; fi if grep -q -e "languagetool-language-modules/zh/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-language-modules/zh,$PROJECTS"; fi if grep -q -e "languagetool-office-extension/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-office-extension,$PROJECTS"; fi if grep -q -e "languagetool-server/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-server,$PROJECTS"; fi if grep -q -e "languagetool-standalone/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-standalone,$PROJECTS"; fi if grep -q -e "languagetool-tools/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-tools,$PROJECTS"; fi if grep -q -e "languagetool-wikipedia/.*" /home/circleci/git_diffs.txt; then PROJECTS="languagetool-wikipedia,$PROJECTS"; fi if [ -z "$PROJECTS" ]
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-rpm-package/src/main/resources/makekeystore.sh
lines,46
function,0


for,0

if,4
if [ ! -d "$1" ]; then if [ ! -f "$1"/privkey1.pem ]; then if [ ! -f "$1"/cert1.pem ]; then if [ ! -f "$1"/chain1.pem ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/install.sh
lines,488
function,22

display_help() { install() { install_quiet() { build () { build_quiet () { uninstall_loud () { uninstall_quiet () { install_maven() { install_java() { install_unzip() { install_homebrew() { -e 'on homebrew_dialog()' \ -e 'homebrew_dialog()' \ detect_maven() { detect_java() { detect_unzip() { detect_screen() { detect_uninstall() { postinstall_command () { check_command_line () { build_or_install_loud () { build_or_install_quiet () {
for,8
echo 'A tool for installing or building LanguageTool.' echo " Please install maven yourself or override automatic OS detection with -o <OS> See help for more details." echo " Please install java yourself or override automatic OS detection with -o <OS> See help for more details." echo " Please install unzip yourself or override automatic OS detection with -o <OS> See help for more details." -e 'set dialog_result to display dialog "Do you want to get homebrew to install packages necessary for languagetool?" with title "LanguageTool Installer" buttons {"Yes","No","What is Homebrew?"} default button 1' \ -e 'set dialog_result to display dialog "Do you want to get homebrew to install packages necessary for languagetool?" with title "LanguageTool Installer" buttons {"Yes","No"} default button 1' \ echo "Post-installation commands are not available for the build option. Contributions are welcome." echo "Post-installation commands are not available for the build option. Contributions are welcome."
if,38
echo 'Packages(only if -b is specified):' echo 'Submit a GitHub issue if you are encountering problems or want to suggest new features' if [ -e languagetool ]; then if [ "$specifypackage" = YES ]; then if [ -e languagetool ]; then if [ "$specifypackage" = YES ]; then if [ "$remove" = "all" ] || [ "$remove" = "ALL" ] || [ "$remove" = "a" ] || [ "$remove" = "A" ]; then if [ "$remove" = "all" ] || [ "$remove" = "ALL" ] || [ "$remove" = "a" ] || [ "$remove" = "A" ]; then if [[ "$OSTYPE" == "linux-gnu" ]]; then if [[ "$OSTYPE" == "linux-gnu" ]]; then elif [[ "$OSTYPE" == "darwin"* ]]; then if ! [ -x "$(brew -v)" ]; then if [[ "$OSTYPE" == "linux-gnu" ]]; then elif [[ "$OSTYPE" == "darwin"* ]]; then if ! [ -x "$(brew -v)" ]; then if ! [[ "$accept" == "YES" ]]; then if ! [[ "$display" == "no" ]]; then -e 'if the button is "What is Homebrew?" then' \ if [[ $REPLY =~ ^[Yy]$ ]]; then if [[ "$dialog" = "Yes" ]]; then if ! [ "$(type -t mvn)" ]; then if ! [ "$(type -t java)" ]; then if ! [ "$(type -t unzip)" ]; then if ! [ "$(type -t DISPLAY)" ]; then if [ "$command" ]; then if ! [ -e "/etc/languagetool/uninstall.sh" ]; then if [ "$command" = GUI ] || [ "$command" = gui ] || [ "$command" = standalone ]; then elif [ "$command" = commandline ] || [ "$command" = cmdline ] || [ "$command" = cmd ] || [ "$command" = CMD ] || [ "$command" = "command line" ]; then elif [ "$command" = server ] || [ "$command" = web ]; then if [ -e $file ]; then if [ "$build" == YES ]; then if [ "$cmd" ]; then if [ "$build" == YES ]; then if [ "$cmd" ]; then if [ "$help" == YES ]; then if [ "$uninstall" == YES ]; then if [ "$quiet" == YES ]; then if [ "$quiet" == YES ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/ar/src/main/resources/org/languagetool/rules/ar/indent.sh
lines,20
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/ru/src/main/resources/org/languagetool/resource/ru/hunspell/make-freq-wordlist-ru.sh
lines,5
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/ru/src/main/resources/org/languagetool/resource/ru/hunspell/make_ru_RU.sh
lines,2
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/ru/src/main/resources/org/languagetool/resource/ru/make_dict_ru.sh
lines,4
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/sr/src/main/resources/org/languagetool/resource/sr/script/tag2corp.sh
lines,57
function,0


for,3
for file in a be ce ch de dje dzhe ef em en er es e ge ha i je ka ell lje nje o pe sha te tshe u ve ze zhe misc for fext in words names echo "Serbian word corpus for Hunspell is ready in file '${OUTPUT_DIR}/hunspell-serbian-corpus.txt'."
if,2
if [ -s ${INFILE} ]; then if [ ${RETVAL} -eq 0 ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/sr/src/main/resources/org/languagetool/resource/sr/script/gendicts.sh
lines,54
function,1

rm_temp_files() {
for,0

if,3
if [ "$DIALECT" == "e" ]; then elif [ "$DIALECT" == "i" ]; then if [ ! -f ${CORPUS_FILE} ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/sk/src/main/resources/org/languagetool/resource/sk/create_dictionary.sh
lines,63
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/pt/src/main/resources/org/languagetool/rules/pt/indent.sh
lines,20
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/indent.sh
lines,25
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/make_en_ca_dict.sh
lines,7
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/make_en_gb_dict.sh
lines,12
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/make_en_us_dict.sh
lines,7
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/make_en_za_dict.sh
lines,7
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/make_en_au_dict.sh
lines,7
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/br/src/main/resources/org/languagetool/resource/br/hunspell/create-fsa-spell-dictionary.sh
lines,30
function,0


for,0

if,1
if [ ! -f $file_oxt ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/uk/src/main/resources/org/languagetool/rules/uk/src/test_disambiguation.sh
lines,4
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/uk/src/main/resources/org/languagetool/rules/uk/src/test_xmlrules.sh
lines,4
function,0


for,0

if,0

git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/uk/src/main/resources/org/languagetool/rules/uk/src/test_rules.sh
lines,19
function,0


for,0

if,1
if [ "$1" != "" ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/de/src/main/resources/org/languagetool/resource/de/hunspell/create_dict.sh
lines,78
function,0


for,0

if,3
if [ $ if [ ! -f $ADDITIONAL_DICT_FILE ]; then if [ ! -f $UNKNOWN_TO_HUNSPELL ]; then
git@github.com:languagetool-org/languagetool.git,c29389aa7cc3b882a4f22491f398d9e9cfa429dd,languagetool,10141,./languagetool/languagetool-language-modules/gl/src/main/resources/org/languagetool/resource/gl/makedict-gl.sh
lines,113
function,5

_help() taglist() dictionary() synthesis() docgen()
for,0

if,6
if [ -z "$1" ]; then elif [ "$1" == "dict" ]; then elif [ "$1" == "taglist" ]; then elif [ "$1" == "synthesis" ]; then elif [ "$1" == "doc" ]; then elif [ "$1" == "all" ]; then
git@github.com:TooTallNate/Java-WebSocket.git,bc180ae07e9ae3d539d2c1dbf3a9199a97dda926,Java-WebSocket,9977,
git@github.com:cryptomator/cryptomator.git,3b2d455b4a6ff3ef51c3e10ab67fb0adb77d4ed5,cryptomator,9842,./cryptomator/dist/linux/appimage/build.sh
lines,100
function,0


for,0

if,1
if [ -z "${JAVA_HOME}" ]; then echo "JAVA_HOME not set. Run using JAVA_HOME=/path/to/jdk ./build.sh"; exit 1; fi
git@github.com:cryptomator/cryptomator.git,3b2d455b4a6ff3ef51c3e10ab67fb0adb77d4ed5,cryptomator,9842,./cryptomator/dist/linux/appimage/resources/AppDir/bin/cryptomator.sh
lines,21
function,0


for,0

if,4
if command -v dpkg &> /dev/null; then elif command -v rpm &> /dev/null; then elif command -v pacman &> /dev/null; then if [ "$GTK2_PRESENT" -eq 0 ] && [ "$GTK3_PRESENT" -ne 0 ]; then
git@github.com:cryptomator/cryptomator.git,3b2d455b4a6ff3ef51c3e10ab67fb0adb77d4ed5,cryptomator,9842,./cryptomator/dist/mac/dmg/build.sh
lines,173
function,1

usage() { echo "Usage: $0 [-s <codesign-identity>]" 1>&2; exit 1; }
for,1
for JAR_PATH in `find ${APP_NAME}.app -name "*.jar"`; do
if,7
if [ "$(machine)" = "arm64e" ]; then if [ -z "${JAVA_HOME}" ]; then echo "JAVA_HOME not set. Run using JAVA_HOME=/path/to/jdk ./build.sh"; exit 1; fi if [ -n "${CODESIGN_IDENTITY}" ]; then if [[ ! `security find-identity -v -p codesigning | grep -w "${CODESIGN_IDENTITY}"` ]]; then echo "Given codesign identity is invalid."; exit 1; fi if [ "${POM_JFX_VERSION}" -ne "${JMOD_VERSION}" ]; then if [ -n "${CODESIGN_IDENTITY}" ]; then if [[ `unzip -l ${JAR_PATH} | grep '.dylib\|.jnilib'` ]]; then
git@github.com:wasabeef/glide-transformations.git,d950f0c33f27f864e4ab4b26fce66c27079911c1,glide-transformations,9820,
git@github.com:doocs/jvm.git,f8ea42642c82376c3cd7456740fcf5de7763fc4d,jvm,9814,
git@github.com:googlesamples/easypermissions.git,2b2b5c40d11caf601c89da0af995f57772a2e52b,easypermissions,9733,
git@github.com:YoKeyword/Fragmentation.git,0394930a3e2368f210df31f2632fb89b9c44e121,Fragmentation,9726,
git@github.com:OpenRefine/OpenRefine.git,a74297af935b8615e6ee9a3fe06b883e5f13e14d,OpenRefine,9714,./OpenRefine/.github/workflows/release/add_apple_keys.sh
lines,20
function,0


for,0

if,0

git@github.com:OpenRefine/OpenRefine.git,a74297af935b8615e6ee9a3fe06b883e5f13e14d,OpenRefine,9714,./OpenRefine/packaging/apple_certs/codesign.sh
lines,56
function,1
function codesignJarsInDir {

for,1
for dir in "${1}" ; do
if,2
if [ $? -eq 0 ] if [ $(basename "${libfile}") == "libjffi-1.2.jnilib" ]; then
git@github.com:HarlonWang/AVLoadingIndicatorView.git,841f98d230b14f0617e541a8b421f8dd96acd030,AVLoadingIndicatorView,9708,
git@github.com:itwanger/toBeBetterJavaer.git,7fc50d3e73fdf5c9faf16360b5b6b25c00aca6b5,toBeBetterJavaer,9702,
git@github.com:paascloud/paascloud-master.git,781281a9503332ed3cef44ea618349d14230a127,paascloud-master,9688,
git@github.com:react-native-camera/react-native-camera.git,d88edcb9a5b212b5887e4b4b28043e0538160091,react-native-camera,9640,
git@github.com:ksoichiro/Android-ObservableScrollView.git,47a5fb2db5e93d923a8c6772cde48bbb7d932345,Android-ObservableScrollView,9628,./Android-ObservableScrollView/.travis-script.sh
lines,19
function,0


for,0

if,3
if [ "$TEST_TARGET" = "android" ]; then elif [ "$TEST_TARGET" = "website" ]; then if [ "$TRAVIS_PULL_REQUEST" = "false" ] && [ "$TRAVIS_BRANCH" = "master" ] && [ ! -z "$GH_TOKEN" ]; then
git@github.com:Activiti/Activiti.git,0588901ccc65ab92b8e2276b4f3bf0d88733742d,Activiti,9626,
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/elasticsearch/scripts/es_init.sh
lines,89
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/hudi/scripts/setup_demo_container_adhoc_2.sh
lines,77
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/hudi/scripts/run_sync_tool.sh
lines,56
function,1
function error_exit {

for,0

if,4
if [ -z "${HADOOP_HOME}" ]; then if [ -z "${HIVE_HOME}" ]; then if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "${HIVE_JDBC}" ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/hudi/scripts/setup_demo_container_adhoc_1.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/hive/scripts/healthy_check.sh
lines,23
function,0


for,0

if,1
if [[ ! -f "/mnt/SUCCESS" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/docker-compose/hive/scripts/hive-metastore.sh
lines,80
function,0


for,0

if,2
if [[ ! -d "/mnt/scripts/tpch1.db" ]]; then if [[ ! -d "/mnt/scripts/paimon1" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/thirdparties/run-thirdparties-docker.sh
lines,441
function,2

usage() { start_kafka_producers() { function control_container() {
for,5
for element in "${COMPONENTS_ARR[@]}"; do for topic in "${topics[@]}"; do for json_topic in "${json_topics[@]}"; do for file in trino_hive.yaml trino_hive.env gen_env.sh hive.properties echo "Waiting for container ${TRINO_CONTAINER_ID} to ${operation}..."
if,49
if ! OPTS="$(getopt \ if [[ "$ if [[ "${COMPONENTS}"x == ""x ]]; then if [[ "${STOP}" -eq 1 ]]; then if [[ "${HELP}" -eq 1 ]]; then if [[ "${COMPONENTS}"x == ""x ]]; then if [[ "${CONTAINER_UID}"x == "doris--"x ]]; then if [[ "${element}"x == "mysql"x ]]; then elif [[ "${element}"x == "pg"x ]]; then elif [[ "${element}"x == "oracle"x ]]; then elif [[ "${element}"x == "sqlserver"x ]]; then elif [[ "${element}"x == "clickhouse"x ]]; then elif [[ "${element}"x == "es"x ]]; then elif [[ "${element}"x == "hive"x ]]; then elif [[ "${element}"x == "kafka"x ]]; then elif [[ "${element}"x == "iceberg"x ]]; then elif [[ "${element}"x == "hudi"x ]]; then elif [[ "${element}"x == "trino"x ]];then elif [[ "${element}"x == "spark"x ]];then if [[ "${RUN_ES}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_MYSQL}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_PG}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_ORACLE}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_SQLSERVER}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_CLICKHOUSE}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_KAFKA}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_HIVE}" -eq 1 ]]; then if [ "_${IP_HOST}" == "_" ];then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_SPARK}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_ICEBERG}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ "${RUN_HUDI}" -eq 1 ]]; then if [[ "${STOP}" -ne 1 ]]; then if [[ ! -d "${ROOT}/docker-compose/hudi/scripts/hudi_docker_compose_attached_file" ]]; then if [[ "${RUN_TRINO}" -eq 1 ]]; then if [[ $file != "hive.properties" ]]; then if [[ "${STOP}" -ne 1 ]]; then if [ -z "$hive_metastore_ip" ]; then if [ "${status}" == "${expected_status}" ]; then if [ $retries -eq $max_retries ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/be/resource/entry_point.sh
lines,287
function,13

doris_log() { doris_note() { doris_warn() { doris_error() { _is_sourced() { docker_setup_env() { docker_required_variables_env() { get_doris_args() { docker_process_sql() { check_be_status() { docker_process_init_files() { check_arg() { _main() {
for,3
for i in "${feServerArray[@]}"; do for i in {1..300}; do for f; do
if,22
if [ "$ if [ -d "${DORIS_HOME}/be/storage/data" ]; then if [ -n "$BUILD_TYPE" ]; then if [[ $BUILD_TYPE =~ ^([kK]8[sS])$ ]]; then if [[ -n "$FE_SERVERS" && -n "$BE_ADDR" ]]; then if [[ $FE_SERVERS =~ ^.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4}(,.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4})*$ || $FE_SERVERS =~ ^.+:([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $BE_ADDR =~ ^[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4}$ || $BE_ADDR =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:):[1-6]{0,1}[0-9]{1,4}$ ]]; then if [[ -n "$FE_MASTER_IP" && -n "$BE_IP" && -n "$BE_PORT" ]]; then if [[ $FE_MASTER_IP =~ ^[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}$ || $FE_MASTER_IP =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $BE_IP =~ ^[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}$ || $BE_IP =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $BE_PORT =~ ^[1-6]{0,1}[0-9]{1,4}$ ]]; then if [ $RUN_TYPE == "ELECTION" ]; then elif [ $RUN_TYPE == "ASSIGN" ]; then if [[ $1 == true ]]; then if [[ "${be_join_status}" == 0 ]]; then if [[ $1 == true ]]; then if [[ $(( $i % 20 )) == 1 ]]; then if [[ $1 == true ]]; then if [ -x "$f" ]; then if [ -z $2 ]; then if [ -z ${DATABASE_ALREADY_EXISTS} ]; then if ! _is_sourced; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/be/resource/init_be.sh
lines,180
function,14

doris_log() { doris_note() { doris_warn() { doris_error() { _is_sourced() { docker_setup_env() { add_priority_networks() { show_be_args(){ docker_process_sql() { node_role_conf(){ register_be_to_fe() { check_be_status() { cleanup() { _main() {
for,2
for i in {1..300}; do for i in {1..300}; do
if,15
if [ "$ if [ -d "${DORIS_HOME}/be/storage/data" ]; then if [[ ${NODE_ROLE} == 'computation' ]]; then if [[ $register_be_status == 0 ]]; then if [ -n "$BE_ALREADY_EXISTS" ]; then if [[ $(( $i % 20 )) == 1 ]]; then if [[ $(( $i % 20 )) == 1 ]]; then if ! [[ $is_fe_start ]]; then if [[ $(($i % 20)) == 1 ]]; then if [[ "${be_join_status}" == 0 ]]; then if [[ $(($i % 20)) == 1 ]]; then if [[ ! $is_fe_start ]]; then if [[ $RUN_TYPE == "K8S" ]]; then if [ -z "$DATABASE_ALREADY_EXISTS" ]; then if ! _is_sourced; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/fe/resource/init_fe.sh
lines,326
function,15

doris_log() { doris_note() { doris_warn() { doris_error() { _is_sourced() { docker_setup_env() { docker_required_variables_env() { get_doris_fe_args() { add_priority_networks() { docker_process_sql() { docker_setup_db() { check_arg() { check_fe_status() { cleanup() { _main() {
for,3
for i in "${feServerArray[@]}"; do for i in {1..300}; do for i in {1..300}; do
if,34
if [ "$ if [ -d "${DORIS_HOME}/fe/doris-meta/image" ]; then if [ -n "$BUILD_TYPE" ]; then if [[ $BUILD_TYPE =~ ^([kK]8[sS])$ ]]; then if [[ -n "$FE_SERVERS" && -n "$FE_ID" ]]; then if [[ $FE_SERVERS =~ ^.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4}(,.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4})*$ || $FE_SERVERS =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $FE_ID =~ ^[1-9]{1}$ ]]; then if [[ -n "$FE_MASTER_IP" && -n "$FE_MASTER_PORT" && -n "$FE_CURRENT_IP" && -n "$FE_CURRENT_PORT" ]]; then if [[ $FE_MASTER_IP =~ ^[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}$ || $FE_MASTER_IP =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $FE_MASTER_PORT =~ ^[1-6]{0,1}[0-9]{1,4}$ ]]; then if [[ $FE_CURRENT_IP =~ ^[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}$ || $FE_CURRENT_IP =~ ^([0-9a-fA-F]{1,4}:){7,7}([0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,6}(:[0-9a-fA-F]{1,4}|:)|([0-9a-fA-F]{1,4}:){1,5}((:[0-9a-fA-F]{1,4}){1,2}|:)|([0-9a-fA-F]{1,4}:){1,4}((:[0-9a-fA-F]{1,4}){1,3}|:)|([0-9a-fA-F]{1,4}:){1,3}((:[0-9a-fA-F]{1,4}){1,4}|:)|([0-9a-fA-F]{1,4}:){1,2}((:[0-9a-fA-F]{1,4}){1,5}|:)|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6}|:)|:((:[0-9a-fA-F]{1,4}){1,7}|:)$ ]]; then if [[ $FE_CURRENT_PORT =~ ^[1-6]{0,1}[0-9]{1,4}$ ]]; then if [ $RUN_TYPE == "ELECTION" ]; then if [ ${MASTER_FE_IP} == ${CURRENT_FE_IP} ]; then elif [ $RUN_TYPE == "ASSIGN" ]; then if [ ${MASTER_FE_IP} == ${CURRENT_FE_IP} ]; then if [ ${CURRENT_FE_IS_MASTER} == true ]; then if [[ $register_fe_status == 0 ]]; then if [ -n "$CURRENT_FE_ALREADY_EXISTS" ]; then if [[ $(($i % 20)) == 1 ]]; then if [[ $(($i % 20)) == 1 ]]; then if ! [[ $is_fe_start ]]; then if [ -z $2 ]; then if [[ ${CURRENT_FE_IS_MASTER} == true ]]; then if [[ $1 == true ]]; then if [[ "${fe_join_status}" == 0 ]]; then if [[ $1 == true ]]; then if [[ $(($i % 20)) == 1 ]]; then if [[ $1 == true ]]; then if [[ $(($i % 20)) == 1 ]]; then if [[ $RUN_TYPE == "K8S" ]]; then if [ -z "$DATABASE_ALREADY_EXISTS" ]; then if [ $CURRENT_FE_IS_MASTER == true ]; then if ! _is_sourced; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/doris-compose/resource/common.sh
lines,36
function,2

health_log() { read_master_fe_ip() {
for,0

if,1
if [ $? -eq 0 ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/doris-compose/resource/init_be.sh
lines,55
function,2

add_backend() { main() {
for,0

if,3
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ ! -f $REGISTER_FILE ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/doris-compose/resource/init_fe.sh
lines,92
function,3

add_frontend() { fe_daemon() { main() {
for,1
for field in $header; do
if,8
if [ $? -ne 0 ]; then if [ $code -ne 0 ]; then if [ $? -ne 0 ]; then if [ $host_index -eq -1 ]; then if [ $is_master_index -eq -1 ]; then if [ $? -eq 0 ]; then if [ "$MASTER_FE_IP" != "$MY_IP" ]; then if [ "$MY_ID" = "1" -o -d "${DORIS_HOME}/doris-meta/image" ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/docker-compose-demo/build-cluster/rum-command/3fe_3be.sh
lines,86
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docker/runtime/broker/resource/init_broker.sh
lines,192
function,12

doris_log() { doris_note() { doris_warn() { doris_error() { _is_sourced() { docker_required_variables_env() { get_doris_broker_args() { docker_process_sql() { register_broker_to_fe() { check_arg() { check_broker_status() { _main() {
for,3
for i in "${feServerArray[@]}"; do for i in {1..300}; do for i in {1..300}; do
if,15
if [ "$ if [[ $FE_SERVERS =~ ^.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4}(,.+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4})*$ ]]; then if [[ $BROKER_ADDR =~ ^[a-zA-Z0-9]+:[1-2]{0,1}[0-9]{0,1}[0-9]{1}(\.[1-2]{0,1}[0-9]{0,1}[0-9]{1}){3}:[1-6]{0,1}[0-9]{1,4}$ ]]; then if [[ $(( $i % 20 )) == 1 ]]; then if [[ $register_broker_status == 0 ]]; then if [ -n "$BROKER_ALREADY_EXISTS" ]; then if [[ $(( $i % 20 )) == 1 ]]; then if ! [[ $is_fe_start ]]; then if [ -z $2 ]; then if [[ $1 == true ]]; then if [[ "${broker_join_status}" == 0 ]]; then if [[ $1 == true ]]; then if [[ $(( $i % 20 )) == 1 ]]; then if [[ $1 == true ]]; then if ! _is_sourced; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/run-be-ut.sh
lines,436
function,3

usage() { update_submodule() { jdk_version() {
for,5
for f in "${LIB_DIR}"/*.jar; do for f in "${LIB_DIR}/hadoop_hdfs/common"/*.jar; do for f in "${LIB_DIR}/hadoop_hdfs/common/lib"/*.jar; do for f in "${LIB_DIR}/hadoop_hdfs/hdfs"/*.jar; do for f in "${LIB_DIR}/hadoop_hdfs/hdfs/lib"/*.jar; do
if,34
if ! OPTS="$(getopt -n "$0" -o vhj:f: -l coverage,benchmark,run,clean,filter: -- "$@")"; then if [[ "$ if [[ -z "${PARALLEL}" ]]; then if [[ "${exit_code}" -ne 0 ]]; then if [[ "_${DENABLE_CLANG_COVERAGE}" == "_ON" ]]; then if [[ -z ${CMAKE_BUILD_DIR} ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ ! -d "${CMAKE_BUILD_DIR}" ]]; then if [[ -z "${GLIBC_COMPATIBILITY}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${USE_LIBCPP}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${USE_MEM_TRACKER}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${USE_DWARF}" ]]; then if [[ -z "${USE_UNWIND}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ "${RUN}" -ne 1 ]]; then if [[ -d "${DORIS_TEST_BINARY_DIR}/util/test_data" ]]; then if [[ -d "${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/" ]]; then if [[ -f "${DORIS_HOME}/output/be/lib/java-udf-jar-with-dependencies.jar" ]]; then if [[ -z "${DORIS_CLASSPATH}" ]]; then if [[ -d "${LIB_DIR}/hadoop_hdfs/" ]]; then if [[ -z "${java_cmd}" ]]; then if [[ "${version}" =~ ^1\. ]]; then if [[ "${java_version}" -gt 8 ]]; then if [[ -z ${JAVA_OPTS} ]]; then if [[ -z ${JAVA_OPTS_FOR_JDK_9} ]]; then if [[ "${MACHINE_OS}" == "Darwin" ]]; then if ! echo "${final_java_opt}" | grep "${max_fd_limit/-/\-}" >/dev/null; then if [[ -n "${JAVA_OPTS}" ]] && ! echo "${JAVA_OPTS}" | grep "${max_fd_limit/-/\-}" >/dev/null; then if [[ -f "${test}" ]]; then if [[ "_${DENABLE_CLANG_COVERAGE}" == "_ON" ]]; then if [[ -d "${DORIS_TEST_BINARY_DIR}"/report ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build.sh
lines,740
function,7
function copy_common_files() { function build_ui() {
usage() { clean_gensrc() { clean_be() { clean_fe() { function copy_common_files() { update_submodule() { function build_ui() {
for,4
--hive-udf build Hive UDF library for Spark Load. Default ON. USE_AVX2=0 STRIP_DEBUG_INFO=ON $0 build all and not using AVX2 instruction, and strip the debug info for Backend CAUSE='the architecture which the library libjvm.dylib is built for does not match' for extensions_module in "${extensions_modules[@]}"; do
if,69
if ! OPTS="$(getopt \ if [[ "$ if [[ "${PARAMETER_COUNT}" -eq 3 ]] && [[ "${PARAMETER_FLAG}" -eq 1 ]]; then if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f "${DORIS_THIRDPARTY}/installed/lib/libbacktrace.a" ]]; then if [[ "${CLEAN}" -eq 0 ]]; then if [[ "${exit_code}" -ne 0 ]]; then if [[ "${exit_code}" = "0" ]]; then if [[ "${CLEAN}" -eq 1 && "${BUILD_BE}" -eq 0 && "${BUILD_FE}" -eq 0 && "${BUILD_SPARK_DPP}" -eq 0 ]]; then if [[ -z "${WITH_MYSQL}" ]]; then if [[ -z "${GLIBC_COMPATIBILITY}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${USE_AVX2}" ]]; then if [[ -z "${WITH_LZO}" ]]; then if [[ -z "${USE_LIBCPP}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${STRIP_DEBUG_INFO}" ]]; then if [[ -z "${USE_MEM_TRACKER}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${USE_JEMALLOC}" ]]; then if [[ -z "${USE_BTHREAD_SCANNER}" ]]; then if [[ -z "${ENABLE_STACKTRACE}" ]]; then if [[ -z "${USE_DWARF}" ]]; then if [[ -z "${USE_UNWIND}" ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ -z "${DISPLAY_BUILD_TIME}" ]]; then if [[ -z "${OUTPUT_BE_BINARY}" ]]; then if [[ -n "${DISABLE_BE_JAVA_EXTENSIONS}" ]]; then if [[ "${DISABLE_BE_JAVA_EXTENSIONS}" == "ON" ]]; then if [[ -z "${DISABLE_JAVA_CHECK_STYLE}" ]]; then if [[ -z "${RECORD_COMPILER_SWITCHES}" ]]; then if [[ "${BUILD_BE_JAVA_EXTENSIONS}" -eq 1 && "$(uname -s)" == 'Darwin' ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ -z "${LIBJVM}" ]]; then elif [[ "$(file "${LIBJVM}" | awk '{print $NF}')" != "$(uname -m)" ]]; then if [[ -n "${CAUSE}" ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${BUILD_FE}" -eq 1 ]]; then if [[ "${BUILD_SPARK_DPP}" -eq 1 ]]; then if [[ "${BUILD_HIVE_UDF}" -eq 1 ]]; then if [[ "${BUILD_BE_JAVA_EXTENSIONS}" -eq 1 ]]; then if [[ "${BUILD_BE}" -eq 1 ]]; then if [[ -e "${DORIS_HOME}/gensrc/build/gen_cpp/version.h" ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ -z "${BUILD_FS_BENCHMARK}" ]]; then if [[ "${OUTPUT_BE_BINARY}" -eq 1 ]]; then if [[ "${BUILD_DOCS}" = "ON" ]]; then if ! ${NPM} --version; then if [[ -n "${CUSTOM_NPM_REGISTRY}" ]]; then if [[ -n "${CUSTOM_UI_DIST}" ]]; then if [[ "${BUILD_FE}" -eq 1 ]]; then if [[ "${FE_MODULES}" != '' ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${DISABLE_JAVA_CHECK_STYLE}" = "ON" ]]; then if [[ "${BUILD_FE}" -eq 1 ]]; then if [[ "${BUILD_SPARK_DPP}" -eq 1 ]]; then if [[ "${OUTPUT_BE_BINARY}" -eq 1 ]]; then if [[ -d "${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/" ]]; then if [[ -f "${DORIS_THIRDPARTY}/installed/lib/libz.so" ]]; then if [[ "${BUILD_BE_JAVA_EXTENSIONS_FALSE_IN_CONF}" -eq 1 ]]; then if [[ -f "${DORIS_HOME}/be/output/lib/fs_benchmark_tool" ]]; then if [[ "${BUILD_META_TOOL}" = "ON" ]]; then if [[ "${BUILD_INDEX_TOOL}" = "ON" ]]; then if [[ "${STRIP_DEBUG_INFO}" = "ON" ]]; then if [[ "${BUILD_FS_BENCHMARK}" = "ON" ]]; then if [[ -f "${module_path}" ]]; then if [[ "${BUILD_BROKER}" -eq 1 ]]; then if [[ "${BUILD_AUDIT}" -eq 1 ]]; then if [[ -n "${DORIS_POST_BUILD_HOOK}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/fe_plugins/auditloader/build.sh
lines,38
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/regression-test/pipeline/common/update-or-create-an-issue-comment.sh
lines,96
function,2

create_issue_comment() { update_or_create_issue_comment() {
for,1
for ((i = 1; i <= comments_count; ++i)); do
if,9
if [[ -z "$1" ]] || [[ -z "$2" ]]; then if [[ -z ${github_token} ]]; then if curl -s \ if [[ -z "$1" ]] || [[ -z "$2" ]]; then if [[ -z ${github_token} ]]; then if ! curl -s \ if [[ "${comment_user}" == "${COMMENT_USER}" ]] && if curl -s \ if curl -s \
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/regression-test/pipeline/common/custom_env.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/regression-test/pipeline/common/check-pr-if-need-run-build.sh
lines,195
function,6

usage() { _get_pr_changed_files() { _only_modified_regression_conf() { need_run_fe_ut() { need_run_be_ut() { need_run_regression_p0() { need_run_regression_p1() { need_run_arm_regression_p0() { need_run_ckb() {
for,5
for f in ${modified_files}; do for af in ${all_files}; do for af in ${all_files}; do for af in ${all_files}; do for af in ${all_files}; do
if,32
if [[ -z "$1" ]]; then echo -e "${usage_str}" && return 1; fi if ! curl --version >/dev/null; then echo 'error: curl required...' && return 1; fi if ! command -v jq >/dev/null; then sudo yum install jq -y || sudo apt install -y jq; fi if curl \ if [[ ${try_times} = 0 ]]; then echo -e "\033[31m List pull request(${pr_url}) files FAIL... \033[0m" && return 255; fi if [[ -z "${all_files}" ]]; then echo -e "\033[31m List pull request(${pr_url}) files FAIL... \033[0m" && return 255; fi if [[ "${which_file:-all}" == "all" ]]; then elif [[ "${which_file}" == "added" ]]; then elif [[ "${which_file}" == "modified" ]]; then elif [[ "${which_file}" == "removed" ]]; then if [[ -n ${added_files} || -n ${removed_files} ]]; then echo "Not only modified regression conf, find added/removed files" && return 1; fi if [[ "${f}" == "regression-test/pipeline/p0/conf/regression-conf.groovy" ]] || if ! _get_pr_changed_files "$1"; then echo "get pr changed files failed, return need" && return 0; fi if _only_modified_regression_conf; then echo "return no need" && return 1; fi if [[ "${af}" == 'fe'* ]] || if ! _get_pr_changed_files "$1"; then echo "get pr changed files failed, return need" && return 0; fi if _only_modified_regression_conf; then echo "return no need" && return 1; fi if [[ "${af}" == 'be'* ]] || if ! _get_pr_changed_files "$1"; then echo "get pr changed files failed, return need" && return 0; fi if _only_modified_regression_conf; then echo "return no need" && return 1; fi if [[ "${af}" == 'be'* ]] || if [[ $(($1 % 2)) -eq 0 ]]; then echo "the pull request id is even, return no need" && return 1; fi if ! _get_pr_changed_files "$1"; then echo "get pr changed files failed, return need" && return 0; fi if _only_modified_regression_conf; then echo "return no need" && return 1; fi if [[ "${af}" == 'be'* ]] || if [[ -z "$1" ]]; then elif [[ "$2" == "be-ut" ]]; then elif [[ "$2" == "fe-ut" ]]; then elif [[ "$2" == "ckb" ]]; then elif [[ "$2" == "regression-p0" ]]; then elif [[ "$2" == "regression-p1" ]]; then elif [[ "$2" == "arm-regression-p0" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/run-regression-test.sh
lines,214
function,1

usage() {
for,1
$0 --run test_select -genOut generate output file for test_select if not exist
if,16
--run run regression test. build framework if necessary -genOut generate .out file if not exist $0 --run test_select -genOut generate output file for test_select if not exist if [[ "$ if [[ "${RUN}" -eq 0 ]] && [[ "${CLEAN}" -eq 0 ]]; then if [[ ${WRONG_CMD} -eq 1 ]]; then if [[ -n "${CUSTOM_MVN}" ]]; then if ! "${MVN_CMD}" --version; then if [[ -n "${CUSTOM_CONFIG_FILE}" ]] && [[ -f "${CUSTOM_CONFIG_FILE}" ]]; then if [[ -z "${DORIS_THIRDPARTY}" ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${RUN}" -ne 1 ]]; then if ! test -f ${RUN_JAR:+${RUN_JAR}}; then if [[ -z "${JAVA_HOME}" ]]; then if [[ "$ if [[ "${TEAMCITY}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/contrib/udf/build_udf.sh
lines,151
function,1

usage() {
for,1
for dir in "${CMAKE_BUILD_DIR}/src"/*; do
if,7
if ! OPTS="$(getopt \ if [[ "$ if [[ "${HELP}" -eq 1 ]]; then if [[ "${BUILD_UDF}" -eq 1 ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${BUILD_UDF}" -eq 1 ]]; then if [[ -n "${DORIS_POST_BUILD_HOOK}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build_plugin.sh
lines,134
function,1

usage() {
for,0

if,7
if ! OPTS="$(getopt \ if [[ "$ if [[ "${HELP}" -eq 1 ]]; then if [[ "${ALL_PLUGIN}" -eq 1 ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${CLEAN}" -eq 1 ]]; then if [[ "${ALL_PLUGIN}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docs/generate-config-and-variable-doc.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/docs/build_help_zip.sh
lines,41
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/thirdparty/build-thirdparty.sh
lines,1800
function,63

usage() { check_prerequest() { check_if_source_exist() { check_if_archive_exist() { remove_all_dylib() { strip_lib() { build_libbacktrace() { build_libevent() { build_openssl() { build_thrift() { build_protobuf() { build_gflags() { build_glog() { build_gtest() { build_rapidjson() { build_snappy() { build_gperftools() { build_zlib() { build_lz4() { build_zstd() { build_bzip() { build_lzo2() { build_curl() { build_re2() { build_hyperscan() { build_boost() { build_mysql() { build_leveldb() { build_brpc() { build_rocksdb() { build_cyrus_sasl() { build_librdkafka() { build_libunixodbc() { build_flatbuffers() { build_cares() { build_grpc() { build_arrow() { build_abseil() { build_s2() { build_bitshuffle() { build_croaringbitmap() { build_fmt() { build_parallel_hashmap() { build_pdqsort() { build_libdivide() { build_orc() { build_cctz() { build_js_and_css() { build_tsan_header() { build_aws_sdk() { build_lzma() { build_xml2() { build_idn() { build_gsasl() { build_krb5() { build_hdfs3() { build_jemalloc() { build_libunwind() { build_benchmark() { build_simdjson() { build_nlohmann_json() { build_opentelemetry() { build_sse2neon() { build_xxhash() { build_binutils() { build_gettext() { build_concurrentqueue() { build_fast_float() { build_hadoop_libs() { build_dragonbox() {
for,3
for link in "${old_symbolic_links[@]}"; do for arch in "${arches[@]}"; do for package in "${packages[@]}"; do
if,71
if [[ -f "${DORIS_HOME}/env.sh" ]]; then if ! OPTS="$(getopt \ if [[ "${KERNEL}" == 'Darwin' ]]; then if [[ "${CONTINUE}" -eq 1 ]]; then if [[ -z "${start_package}" ]] || [[ "${ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f "${TP_DIR}/download-thirdparty.sh" ]]; then if [[ ! -f "${TP_DIR}/vars.sh" ]]; then if [[ "${CLEAN}" -eq 1 ]] && [[ -d "${TP_SOURCE_DIR}" ]]; then if [[ "${CC}" == *gcc ]]; then elif [[ "${CC}" == *clang ]]; then if echo "${test_warning_result}" | grep 'unknown warning option' >/dev/null; then if ! eval "${CMD}"; then if [[ "${aclocal_version}" != "${automake_version}" ]]; then if [[ -z $1 ]]; then echo "dir should specified to check if exist." if [[ ! -d "${TP_SOURCE_DIR}/$1" ]]; then if [[ -z $1 ]]; then echo "archive should specified to check if exist." if [[ ! -f "${TP_SOURCE_DIR}/$1" ]]; then if [[ "${KERNEL}" == 'Darwin' ]]; then if [[ -z "${STRIP_TP_LIB}" ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${STRIP_TP_LIB}" = "ON" ]]; then if [[ "${STRIP_TP_LIB}" = "ON" ]]; then if [[ -z $1 ]]; then if [[ ! -f "${TP_LIB_DIR}/$1" ]]; then if [[ "${KERNEL}" == 'Darwin' ]]; then elif [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [[ -f "${TP_INSTALL_DIR}/lib64/libcrypto.so" ]]; then if [[ -f "${TP_INSTALL_DIR}/lib64/libssl.so" ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ -f compiler/cpp/thrifty.hh ]]; then if [[ "${KERNEL}" == 'Darwin' ]]; then if [[ "${GLOG_SOURCE}" == "glog-0.4.0" ]]; then elif [[ "${GLOG_SOURCE}" == "glog-0.6.0" ]]; then if [[ ! -f configure ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ ! -d "${BOOST_SOURCE}" ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "$(uname -m)" != 'x86_64' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ ! -f "${ld}" ]]; then ld="$(command -v ld)"; fi if [[ ! -f "${ar}" ]]; then ar="$(command -v ar)"; fi if [[ "${MACHINE_TYPE}" == "aarch64" || "${MACHINE_TYPE}" == 'arm64' ]]; then if [[ "${arch}" == "avx2" ]]; then if [[ "${arch}" == "avx512" ]]; then if [[ "${arch}" == "avx2" ]] || [[ "${arch}" == "avx512" ]]; then if [[ ! -f "${nm}" ]]; then nm="$(command -v nm)"; fi if [[ ! -f "${objcopy}" ]]; then if ! objcopy="$(command -v objcopy)"; then if [[ -n "${USE_AVX2}" && "${USE_AVX2}" -eq 0 ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ ! -f "${TSAN_HEADER_FILE}" ]]; then if [[ ! -x "$(command -v autopoint)" ]]; then if [[ ! -x "$(command -v pkg-config)" ]]; then if [[ "${KERNEL}" == 'Darwin' ]]; then if [[ "$(uname -m)" == "x86_64" ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${KERNEL}" != 'Darwin' ]]; then if [[ "${ if [[ "$(uname -s)" == 'Darwin' ]]; then elif [[ "$(uname -s)" == 'Linux' ]]; then if [[ "${package}" == "${start_package}" ]]; then if [[ "${CONTINUE}" -eq 0 ]] || [[ "${PACKAGE_FOUND}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/thirdparty/download-thirdparty.sh
lines,418
function,2

md5sum_func() { download_func() {
for,7
echo "Error: No download url specified for ${FILENAME}" echo "Error: No dest dir specified for ${FILENAME}" for attemp in 1 2; do for TP_ARCH in "${TP_ARCHIVES[@]}"; do for TP_ARCH in "${TP_ARCHIVES[@]}"; do for TP_ARCH in "${TP_ARCHIVES[@]}"; do for patch_file in "${TP_PATCH_DIR}"/brpc-*; do
if,60
if [[ -z "${DORIS_HOME}" ]]; then if [[ -f "${DORIS_HOME}/custom_env.sh" ]]; then if [[ -z "${TP_DIR}" ]]; then if [[ ! -f "${TP_DIR}/vars.sh" ]]; then if ! command -v "${md5sum_bin}" >/dev/null 2>&1; then if [[ "${md5sum_bin}" == "" ]]; then if [[ "${md5}" != "${MD5SUM} ${DESC_DIR}/${FILENAME}" ]]; then if [[ -z "${FILENAME}" ]]; then if [[ -z "${DOWNLOAD_URL}" ]]; then if [[ -z "${DESC_DIR}" ]]; then if [[ -r "${DESC_DIR}/${FILENAME}" ]]; then if md5sum_func "${FILENAME}" "${DESC_DIR}" "${MD5SUM}"; then if wget --no-check-certificate -q "${DOWNLOAD_URL}" -O "${DESC_DIR}/${FILENAME}"; then if md5sum_func "${FILENAME}" "${DESC_DIR}" "${MD5SUM}"; then if [[ "${STATUS}" -ne 0 ]]; then if [[ -z "${REPOSITORY_URL}" ]]; then if ! download_func "${!NAME}" "${!URL}" "${TP_SOURCE_DIR}" "${!MD5SUM}"; then if ! download_func "${!NAME}" "${URL}" "${TP_SOURCE_DIR}" "${!MD5SUM}"; then if ! download_func "${!NAME}" "${!URL}" "${TP_SOURCE_DIR}" "${!MD5SUM}"; then if [[ ! -r "${TP_SOURCE_DIR}/${!NAME}" ]]; then if [[ -z "${!SOURCE}" ]]; then if [[ ! -d "${TP_SOURCE_DIR}/${!SOURCE}" ]]; then if [[ "${!NAME}" =~ ${SUFFIX_TGZ} ]]; then if ! "${TAR_CMD}" xzf "${TP_SOURCE_DIR}/${!NAME}" -C "${TP_SOURCE_DIR}/"; then elif [[ "${!NAME}" =~ ${SUFFIX_XZ} ]]; then if ! "${TAR_CMD}" xJf "${TP_SOURCE_DIR}/${!NAME}" -C "${TP_SOURCE_DIR}/"; then elif [[ "${!NAME}" =~ ${SUFFIX_ZIP} ]]; then if ! "${UNZIP_CMD}" -o -qq "${TP_SOURCE_DIR}/${!NAME}" -d "${TP_SOURCE_DIR}/"; then elif [[ "${!NAME}" =~ ${SUFFIX_BZ2} ]]; then if ! "${TAR_CMD}" xf "${TP_SOURCE_DIR}/${!NAME}" -C "${TP_SOURCE_DIR}/"; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${GLOG_SOURCE}" == "glog-0.4.0" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then elif [[ "${GLOG_SOURCE}" == "glog-0.6.0" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ ! -f ${PATCHED_MARK} ]]; then if [[ ! -f ${PATCHED_MARK} ]]; then if [[ ! -f ${PATCHED_MARK} ]]; then if [[ "${ROCKSDB_SOURCE}" == "rocksdb-5.14.2" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${OPENTELEMETRY_SOURCE}" == "opentelemetry-cpp-1.10.0" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${ARROW_SOURCE}" == "arrow-apache-arrow-13.0.0" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${LIBRDKAFKA_SOURCE}" == "librdkafka-1.8.2" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${JEMALLOC_DORIS_SOURCE}" = "jemalloc-5.3.0" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${HYPERSCAN_SOURCE}" == "vectorscan-vectorscan-5.4.7" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${AWS_SDK_SOURCE}" == "aws-sdk-cpp-1.11.119" ]]; then if wget --no-check-certificate -q https://doris-thirdparty-repo.bj.bcebos.com/thirdparty/aws-crt-cpp-1.11.119.tar.gz -O aws-crt-cpp-1.11.119.tar.gz; then if [[ "${SIMDJSON_SOURCE}" = "simdjson-3.0.1" ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then if [[ "${BRPC_SOURCE}" == 'brpc-1.4.0' ]]; then if [[ ! -f "${PATCHED_MARK}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/thirdparty/vars.sh
lines,575
function,0


for,0

if,2
if [[ "${MACHINE_TYPE}" == "aarch64" || "${MACHINE_TYPE}" == 'arm64' ]]; then if [[ "$(uname -s)" == 'Darwin' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/var.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/download_data.sh
lines,74
function,0


for,0

if,5
if [[ "${hdfs_download}" -eq 1 ]]; then if [[ "${kafka_download}" -eq 1 ]]; then if [[ "${bos_download}" -eq 1 ]]; then if [[ "${local_download}" -eq 1 ]]; then if [[ -d "${PYTEST_HOME}"/sys/data ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/qe/query_regression/var.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/qe/palo2/data/init_lateral_view.sh
lines,88
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_multi.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_mysql.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_unique.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_duplicate.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_list.sh
lines,41
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_broker.sh
lines,43
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_data_stream.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/deploy/qe/init_ext.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/run_restart_case.sh
lines,60
function,1
function pytest_execute()
function pytest_execute()
for,1
for i in ${cases}
if,2
if [[ ! -d ${REPORT_PATH} ]]; then if [[ -z ${testsuite} ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/pytest/run_case.sh
lines,325
function,6
function check_cluster () function pytest_execute () function case_execute () function long_time_case () function query_case () function sys_case ()
function check_cluster () function pytest_execute () function case_execute () function long_time_case () function query_case () function sys_case ()
for,2
for ((i=1;i<=PROCESS_NUM;i++)) for case_file in "$@"
if,5
if [[ -z ${testsuite} ]]; then if [[ -z ${PROCESS_NUM} ]]; then if [[ -z ${RESTART_BE_AUTO} ]]; then if [[ "${RESTART_BE_AUTO}" == true ]]; then if [[ -z "${QUERY_ONLY}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/gensrc/script/gen_build_version.sh
lines,198
function,0


for,4
// distributed with this work for additional information // KIND, either express or implied. See the License for the // distributed with this work for additional information // KIND, either express or implied. See the License for the
if,6
if [[ -z "${DORIS_HOME}" ]]; then if [[ -z "${DORIS_TEST_BINARY_DIR}" ]]; then if [[ -e "${DORIS_HOME}/fe/fe-core/target/generated-sources/build/org/apache/doris/common/Version.java" && if [[ -d '.git' ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -x "${java_cmd}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/samples/insert/shell/insert_utils.sh
lines,69
function,1
function check_insert_load_doris_func() {
function check_insert_load_doris_func() {
for,0

if,3
if [[ "${label}" == '' ]]; then if [[ "${load_status}" == 'FINISHED' || "${load_status}" == 'CANCELLED' ]]; then if [[ "${load_status}" == 'FINISHED' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/minidump/nereids_ut.sh
lines,176
function,1

jdk_version() {
for,2
for f in "${DORIS_HOME}/lib"/*.jar; do for path in $(ls "${DUMP_FILE_DIR}"); do
if,11
if [[ "$(uname -s)" == 'Darwin' ]] && command -v brew &>/dev/null; then if [[ "${env_line}" == *"="* ]]; then if [[ -e "${DORIS_HOME}/bin/palo_env.sh" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -x "${JAVA}" ]]; then if [[ -z "${java_cmd}" ]]; then if [[ "${version}" =~ ^1\. ]]; then if [[ ! -d "${LOG_DIR}" ]]; then if [[ "${java_version}" -gt 8 ]]; then if [[ -z "${JAVA_OPTS_FOR_JDK_9}" ]]; then if [[ "${f}" == *"doris-fe.jar" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/DataX/init-env.sh
lines,99
function,0


for,0

if,10
if [[ ! -z "$OSTYPE" ]]; then if [[ ${OSTYPE:0:6} == "darwin" ]]; then if [ ! -d $DATAX_GIT_DIR ]; then if [ ! -f "$DATAX_POM" ]; then if [ `grep -c "doriswriter" $DATAX_POM` -eq 0 ]; then if [[ USE_MACOS -eq 0 ]];then if [ `grep -c "doriswriter" $DATAX_PACKAGE` -eq 0 ]; then if [[ USE_MACOS -eq 0 ]];then if [ `grep -c "4.5.13" $DATAX_CORE_POM` -eq 0 ]; then if [[ USE_MACOS -eq 0 ]];then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/e_mysql_to_doris.sh
lines,92
function,0


for,4
for table in $(cat ${home_dir}/conf/mysql_tables | grep -v ' for t_name in $(cat ${home_dir}/conf/mysql_tables | grep -v ' for table in $(cat ${home_dir}/conf/doris_external_tables | grep -v ' for d_doris in $(cat ${home_dir}/conf/doris_external_tables | grep -v '
if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/e_auto.sh
lines,58
function,0


for,1
for table in $(cat ${home_dir}/conf/doris_external_tables | grep -v '
if,1
if [[ $old != $new ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/mysql_to_doris.sh
lines,86
function,0


for,4
for table in $(cat ${home_dir}/conf/mysql_tables | grep -v ' for t_name in $(cat ${home_dir}/conf/mysql_tables | grep -v ' for table in $(cat ${home_dir}/conf/doris_tables | grep -v ' for d_doris in $(cat ${home_dir}/conf/doris_tables | grep -v '
if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/mysql_type_convert.sh
lines,75
function,0

sed -i 's/DEFAULT CURRENT_TIMESTAMP\(()\)\? ON UPDATE CURRENT_TIMESTAMP\(()\)\?//ig' $path sed -i 's/DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP\(()\)\?//ig' $path sed -i 's/DEFAULT CURRENT_TIMESTAMP\(()\)\?//ig' $path
for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/get_tables.sh
lines,34
function,0


for,0

if,1
if [ -z ${dbs} ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/sync_to_doris.sh
lines,42
function,0


for,1
for table in $(cat ${home_dir}/conf/mysql_tables | grep -v '
if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/sync_check.sh
lines,52
function,0


for,1
for table in $(cat ${home_dir}/conf/mysql_tables | grep -v '
if,1
if [ $m_count -eq $d_count ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/jdbc/sync_to_doris.sh
lines,41
function,0


for,1
for table in $(cat ${home_dir}/conf/mysql_tables | grep -v '
if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/lib/jdbc/create_jdbc_catalog.sh
lines,39
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/extension/mysql_to_doris/bin/run.sh
lines,199
function,1
function usage() {
function usage() {
for,1
for table in $(cat ${home_dir}/conf/doris_external_tables | grep -v '
if,15
if [[ $ if [ -n "${DATABASE}" ]; then if [[ "JDBC" == "${TYPE}" && "${CREATE_EXTERNAL_TABLE}" -eq 1 ]]; then if [ "${res}" != 0 ]; then if [[ "ODBC" == "${TYPE}" && "${CREATE_EXTERNAL_TABLE}" -eq 1 ]]; then if [ "${res}" != 0 ]; then if [[ "${CREATE_OLAP_TABLE}" -eq 1 ]]; then if [ "${res}" != 0 ]; then if [[ "${INSERT_DATA}" -eq 1 ]]; then if [[ "JDBC" == "${TYPE}" ]]; then if [ "${res}" != 0 ]; then if [ "${res}" != 0 ]; then if [[ "ODBC" == "${TYPE}" && "${DROP_EXTERNAL_TABLE}" -eq 1 ]]; then if [ "${res}" != 0 ]; then if [[ "ODBC" == "${TYPE}" && "${AUTO_EXTERNAL_TABLE}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/env.sh
lines,283
function,0

covs=() profdatas=()
for,1
for cellar in "\${CELLARS[@]}"; do
if,39
if [[ -z "${DORIS_HOME}" ]]; then if [[ -n "${OSTYPE}" ]]; then if [[ "${OSTYPE}" != "linux-gnu" ]] && [[ "${OSTYPE:0:6}" != "darwin" ]]; then if [[ "$(uname -s)" == 'Darwin' ]]; then if ! command -v brew &>/dev/null; then if [[ ! -f "${DORIS_HOME}/custom_env.sh" ]] || if [[ -f "${DORIS_HOME}/custom_env.sh" ]]; then if [[ -z "${DORIS_THIRDPARTY}" ]]; then if [[ -z "${DORIS_BUILD_PYTHON_VERSION}" ]]; then if ! ${PYTHON} --version; then if [[ -z "${DORIS_TOOLCHAIN}" ]]; then if [[ "$(uname -s)" == 'Darwin' ]]; then if [[ "${DORIS_TOOLCHAIN}" == "gcc" ]]; then if [[ -z "${DORIS_GCC_HOME}" ]]; then if test -x "${DORIS_GCC_HOME}/bin/ld"; then elif [[ "${DORIS_TOOLCHAIN}" == "clang" ]]; then if [[ -z "${DORIS_CLANG_HOME}" ]]; then if test -x "${DORIS_CLANG_HOME}/bin/ld.lld"; then if [[ -f "${DORIS_CLANG_HOME}/bin/llvm-symbolizer" ]]; then if [[ ${ if [[ ${ if [[ -z "${ENABLE_PCH}" ]]; then if [[ "${ENABLE_PCH}" == "ON" ]]; then if [[ -z "${DORIS_BIN_UTILS}" ]]; then if [[ -z "${DORIS_GCC_HOME}" ]]; then if [[ ! -f "${DORIS_GCC_HOME}/bin/gcc" ]]; then if test -z "${BUILD_THIRDPARTY_WIP:-}"; then if [[ ! "$(printf '%s\n' "${required_ver}" "${flex_ver}" | sort -V | head -n1)" = "${required_ver}" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -x "${JAVA}" ]]; then if [[ "${JAVA_VER}" -lt 52 ]]; then if [[ -n "${CUSTOM_MVN}" ]]; then if ! "${MVN_CMD}" --version; then if [[ "$(uname -s)" == 'Darwin' ]]; then if ! command -v libtoolize &>/dev/null && command -v glibtoolize &>/dev/null; then if [[ -n "${CUSTOM_CMAKE}" ]]; then if ! "${CMAKE_CMD}" --version; then if NINJA_VERSION="$(ninja --version 2>/dev/null)"; then if CCACHE_VERSION="$(ccache --version 2>/dev/null)"; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build-support/shell-check.sh
lines,323
function,16

log() { log_info() { log_warning() { log_error() { get_version() { check_tool() { get_url() { get_md5() { download_tool() { install_shellcheck() { install_shfmt() { install_tools_if_neccessary() { find_shell_scripts() { local files=() run_tool() { run_shellcheck() { run_shfmt() { main() {
for,2
for i in {0..2}; do for pattern in "${exclude_patterns[@]}"; do
if,18
if [[ "${level}" == 'INFO' ]]; then elif [[ "${level}" == 'WARNING' ]]; then elif [[ "${level}" == 'ERROR' ]]; then if program="$(command -v "${tool}" 2>/dev/null)" && [[ ! "$(get_version "${program}")" < "${version}" ]]; then if [[ -f "${program}" && ! "$(get_version "${program}")" < "${version}" ]]; then if [[ "${tool}" == 'shellcheck' ]]; then if [[ "${arch}" == 'arm64' ]]; then elif [[ "${tool}" == 'shfmt' ]]; then if [[ "${arch}" == 'x86_64' ]]; then elif [[ "${arch}" == 'aarch64' ]]; then if [[ -f "${package}" && "$(md5sum "${package}" | awk '{print $1}')" == "${md5}" ]]; then if [[ "${i}" -gt 0 ]]; then if curl --connect-timeout 5 --speed-limit 1000 --speed-time 30 -L "${url}" -o "${package}" && if [[ "${SYSTEM_NAME}" == 'Darwin' ]] && command -v 'brew' &>/dev/null; then if [[ "${SYSTEM_NAME}" == 'Darwin' ]] && command -v 'brew' &>/dev/null; then if echo "${file:((${ if ! "${matched}"; then if [[ "${shellcheck_result}" -ne 0 || "${shfmt_result}" -ne 0 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build-support/clang-format.sh
lines,47
function,0


for,0

if,3
if [[ -z $(command -v clang-format) ]]; then CLANG_FORMAT_VERSION=$(clang-format --version | perl -nle 'print $& if m{version \K[0-9]+}') if [[ ${CLANG_FORMAT_VERSION} -ne 16 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build-support/check-format.sh
lines,47
function,0


for,0

if,3
if [[ -z $(command -v clang-format) ]]; then CLANG_FORMAT_VERSION=$(clang-format --version | perl -nle 'print $& if m{version \K[0-9]+}') if [[ ${CLANG_FORMAT_VERSION} -ne 16 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/generated-source.sh
lines,51
function,0


for,0

if,1
if [[ "$
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/bin/start_be.sh
lines,360
function,2

jdk_version() { set_tcmalloc_heap_limit() {
for,8
for preload_jar_dir in "${preload_jars[@]}"; do for f in "${DORIS_HOME}/lib/java_extensions/${preload_jar_dir}"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/common"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/common/lib"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/hdfs"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/hdfs/lib"/*.jar; do for f in "${DORIS_HOME}/custom_lib"/*.jar; do for var in http_proxy HTTP_PROXY https_proxy HTTPS_PROXY; do
if,34
if [[ "$(uname -s)" == 'Darwin' ]] && command -v brew &>/dev/null; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ "${MAX_MAP_COUNT}" -lt 2000000 ]]; then if [[ "${MAX_FILE_COUNT}" -lt 60000 ]]; then if [[ "$(swapon -s | wc -l)" -gt 1 ]]; then if [[ -z "${DORIS_CLASSPATH}" ]]; then if [[ -d "${DORIS_HOME}/lib/hadoop_hdfs/" ]]; then if [[ -d "${DORIS_HOME}/custom_lib" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]]; then if ! command -v "${java_cmd}" >/dev/null; then if [[ "${version}" =~ ^1\. ]]; then if [[ "${envline}" == *"="* ]]; then if [[ -e "${DORIS_HOME}/bin/palo_env.sh" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ -n ${!var} ]]; then if [[ ! -d "${LOG_DIR}" ]]; then if [[ -f "${pidfile}" ]]; then if kill -0 "$(cat "${pidfile}")" >/dev/null 2>&1; then if [[ ! -f '/bin/limit3' ]]; then if [[ "${RUN_IN_AWS}" -eq 0 ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ "${mem_limit_mb}" -eq 0 ]]; then if [[ "${mem_limit_mb}" -gt "${total_mem_mb}" ]]; then if [[ -f "${DORIS_HOME}/conf/hdfs-site.xml" ]]; then if [[ "${java_version}" -gt 8 ]]; then if [[ -z ${JAVA_OPTS_FOR_JDK_9} ]]; then if [[ -z ${JAVA_OPTS} ]]; then if [[ "${MACHINE_OS}" == "Darwin" ]]; then if ! echo "${final_java_opt}" | grep "${max_fd_limit/-/\\-}" >/dev/null; then if [[ -n "${JAVA_OPTS}" ]] && ! echo "${JAVA_OPTS}" | grep "${max_fd_limit/-/\\-}" >/dev/null; then if [[ -z ${JEMALLOC_CONF} ]]; then if [[ -z ${JEMALLOC_PROF_PRFIX} ]]; then if [[ "${RUN_DAEMON}" -eq 1 ]]; then elif [[ "${RUN_CONSOLE}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/bin/stop_be.sh
lines,95
function,0


for,0

if,9
if [[ "${envline}" == *"="* ]]; then if [[ "$1" = "--grace" ]]; then if [[ -f "${pidfile}" ]]; then if test -z "${pid}"; then if ! kill -0 "${pid}" 2>&1; then if [[ "doris_be" != "${pidcomm}" ]]; then if kill "-${signum}" "${pid}" >/dev/null 2>&1; then if kill -0 "${pid}" >/dev/null 2>&1; then if [[ -f "${pidfile}" ]]; then rm "${pidfile}"; fi
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/bin/stop_fe.sh
lines,95
function,0


for,0

if,9
if [[ "${envline}" == *"="* ]]; then if [[ "$1" = "--grace" ]]; then if [[ -f "${pidfile}" ]]; then if test -z "${pid}"; then if ! kill -0 "${pid}" 2>&1; then if [[ "java" != "${pidcomm}" ]]; then if kill "-${signum}" "${pid}" >/dev/null 2>&1; then if kill -0 "${pid}" >/dev/null 2>&1; then if [[ -f "${pidfile}" ]]; then rm "${pidfile}"; fi
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/bin/start_fe.sh
lines,261
function,1

jdk_version() {
for,3
for var in http_proxy HTTP_PROXY https_proxy HTTPS_PROXY; do for f in "${DORIS_HOME}/lib"/*.jar; do for f in "${DORIS_HOME}/custom_lib"/*.jar; do
if,24
if [[ "$(uname -s)" == 'Darwin' ]] && command -v brew &>/dev/null; then if [[ "${envline}" == *"="* ]]; then if [[ -e "${DORIS_HOME}/bin/palo_env.sh" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if ! command -v java &>/dev/null; then if [[ ! -x "${JAVA}" ]]; then if [[ -n ${!var} ]]; then if [[ -z "${java_cmd}" ]]; then if [[ "${version}" =~ ^1\. ]]; then if [[ ! -d "${LOG_DIR}" ]]; then if [[ "${java_version}" -gt 8 ]]; then if [[ -z "${JAVA_OPTS_FOR_JDK_9}" ]]; then if [[ "${f}" == *"doris-fe.jar" ]]; then if [[ -d "${DORIS_HOME}/custom_lib" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]]; then if [[ -f "${pidfile}" ]]; then if kill -0 "$(cat "${pidfile}")" >/dev/null 2>&1; then if [[ ! -f "/bin/limit" ]]; then if [[ -n "${JACOCO_COVERAGE_OPT}" ]]; then if [[ "${HELPER}" != "" ]]; then if [[ "${IMAGE_TOOL}" -eq 1 ]]; then if [[ -n "${IMAGE_PATH}" ]]; then elif [[ "${RUN_DAEMON}" -eq 1 ]]; then elif [[ "${RUN_CONSOLE}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/bin/run-fs-benchmark.sh
lines,276
function,2

jdk_version() { set_tcmalloc_heap_limit() {
for,5
for f in "${DORIS_HOME}/lib/java_extensions"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/common"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/common/lib"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/hdfs"/*.jar; do for f in "${DORIS_HOME}/lib/hadoop_hdfs/hdfs/lib"/*.jar; do
if,26
if [[ "$(uname -s)" == 'Darwin' ]] && command -v brew &>/dev/null; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ "${MAX_MAP_COUNT}" -lt 2000000 ]]; then if [[ "${MAX_FILE_COUNT}" -lt 65536 ]]; then if [[ -z "${DORIS_CLASSPATH}" ]]; then if [[ -d "${DORIS_HOME}/lib/hadoop_hdfs/" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]]; then if [[ -z "${java_cmd}" ]]; then if [[ "${version}" =~ ^1\. ]]; then if [[ "${envline}" == *"="* ]]; then if [[ -e "${DORIS_HOME}/bin/palo_env.sh" ]]; then if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -d "${LOG_DIR}" ]]; then if [[ -f "${pidfile}" ]]; then if kill -0 "$(cat "${pidfile}")" >/dev/null 2>&1; then if [[ ! -f '/bin/limit3' ]]; then if [[ "$(uname -s)" != 'Darwin' ]]; then if [[ "${mem_limit_mb}" -eq 0 ]]; then if [[ "${mem_limit_mb}" -gt "${total_mem_mb}" ]]; then if [[ -f "${DORIS_HOME}/conf/hdfs-site.xml" ]]; then if [[ "${java_version}" -gt 8 ]]; then if [[ -z ${JAVA_OPTS_FOR_JDK_9} ]]; then if [[ -z ${JAVA_OPTS} ]]; then if [[ "${MACHINE_OS}" == "Darwin" ]]; then if ! echo "${final_java_opt}" | grep "${max_fd_limit/-/\-}" >/dev/null; then if [[ -n "${JAVA_OPTS}" ]] && ! echo "${JAVA_OPTS}" | grep "${max_fd_limit/-/\-}" >/dev/null; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/emr_tools.sh
lines,192
function,1

usage() {
for,2
echo "Fail to generate spark obj table for test set" echo "Fail to generate spark hdfs table for test set, import hdfs data first"
if,13
if ! OPTS="$(getopt \ if [[ -n "${PROFILE}" ]]; then if [[ ${CASE} == 'ping' ]]; then if [[ ${SERVICE} == 'hw' ]]; then elif [[ ${SERVICE} == 'ali' ]]; then elif [[ ${CASE} == 'data_set' ]]; then if [[ ${SERVICE} == 'tx' ]]; then elif [[ ${SERVICE} == 'ali' ]]; then if ! sh stardard_set/gen_spark_create_sql.sh "${BUCKET}" obj; then if ! sh stardard_set/gen_spark_create_sql.sh hdfs:///benchmark-hdfs hdfs; then if [[ -z ${TEST_SET} ]]; then if [[ ${SERVICE} == 'tx' ]]; then elif [[ ${SERVICE} == 'ali' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/run_standard_set.sh
lines,76
function,0


for,1
echo "execute ${case} benchmark for ${TYPE}..."
if,8
if [[ -z "$4" ]]; then if [[ -z "$5" ]]; then elif [[ "$5" = 'all' ]]; then if [[ -z ${TYPE} ]]; then if [[ "${case}" = 'ssb' ]]; then elif [[ "${case}" = 'ssb_flat' ]]; then elif [[ "${case}" = 'tpch' ]]; then elif [[ "${case}" = 'clickbench' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/run_queries.sh
lines,46
function,0


for,1
for i in $(seq 1 "${TRIES}"); do
if,1
RES=$(mysql -vvv -h"${FE_HOST}" -u"${USER}" -P"${FE_QUERY_PORT}" -D"${DB}" -e "${query}" | perl -nle 'print $1 if /((\d+\.\d+)+ sec)/' || :)
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/gen_spark_create_sql.sh
lines,38
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/gen_tbl/gen_tpch_create_sql.sh
lines,140
function,0


for,0

if,3
if [[ -z "$1" ]]; then if [[ -z "$2" ]]; then if [[ -z "$3" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/gen_tbl/gen_clickbench_create_sql.sh
lines,153
function,0


for,0

if,3
if [[ -z "$1" ]]; then if [[ -z "$2" ]]; then if [[ -z "$3" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/standard_set/gen_tbl/gen_ssb_create_sql.sh
lines,166
function,0


for,0

if,3
if [[ -z "$1" ]]; then if [[ -z "$2" ]]; then if [[ -z "$3" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/default_emr_env.sh
lines,58
function,0


for,0

if,3
if [[ ${SERVICE} == 'ali' ]]; then elif [[ ${SERVICE} == 'hw' ]]; then elif [[ ${SERVICE} == 'tx' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/emr_storage_regression/ping_test/ping_poc.sh
lines,151
function,3

run_spark_create_sql() { run_hive_create_sql() { run_query() {
for,3
echo "Need warehouse for ${SERVICE}" for i in $(seq 1 "${TRIES}"); do for c in $(echo "${EMR_CATALOG}"); do
if,8
if [[ -z ${HMS_WAREHOUSE} ]]; then if [[ ${SERVICE} == 'ali' ]]; then elif [[ ${SERVICE} == 'tx' ]]; then elif [[ ${SERVICE} == 'hw' ]]; then if [[ ${SERVICE} == 'hw' ]]; then elif [[ ${SERVICE} == 'ali' ]]; then if [[ -n ${catalog} ]]; then if [[ ${SERVICE} == 'ali' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpch-tools/bin/create-tpch-tables.sh
lines,124
function,2

usage() { check_prerequest() {
for,0

if,8
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ${SCALE_FACTOR} -ne 1 ]] && [[ ${SCALE_FACTOR} -ne 100 ]] && [[ ${SCALE_FACTOR} -ne 1000 ]] && [[ ${SCALE_FACTOR} -ne 10000 ]]; then if ! ${CMD}; then if [[ ${SCALE_FACTOR} -eq 1 ]]; then elif [[ ${SCALE_FACTOR} -eq 100 ]]; then elif [[ ${SCALE_FACTOR} -eq 1000 ]]; then elif [[ ${SCALE_FACTOR} -eq 10000 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpch-tools/bin/run-tpch-queries.sh
lines,184
function,3

usage() { check_prerequest() { run_sql() {
for,1
for i in ${query_array[@]}; do
if,9
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ${SCALE_FACTOR} -eq 1 ]]; then elif [[ ${SCALE_FACTOR} -eq 100 ]]; then elif [[ ${SCALE_FACTOR} -eq 1000 ]]; then elif [[ ${SCALE_FACTOR} -eq 10000 ]]; then if ! ${CMD}; then if [[ -d "${RESULT_DIR}" ]]; then if [[ ${hot1} -lt ${hot2} ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpch-tools/bin/build-tpch-dbgen.sh
lines,92
function,1

check_prerequest() {
for,0

if,3
if ! ${CMD}; then if [[ -d ${TPCH_DBGEN_DIR} ]]; then if [[ -f ${TPCH_DBGEN_DIR}/dbgen ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpch-tools/bin/load-tpch-data.sh
lines,250
function,11
function load_region() { function load_nation() { function load_supplier() { function load_customer() { function load_part() { function load_partsupp() { function load_orders() { function load_lineitem() {
usage() { check_prerequest() { function load_region() { function load_nation() { function load_supplier() { function load_customer() { function load_part() { function load_partsupp() { function load_orders() { function load_lineitem() { run_sql() {
for,4
for ((i = 1; i <= PARALLEL; i++)); do for file in "${TPCH_DATA_DIR}"/lineitem.tbl*; do for file in "${TPCH_DATA_DIR}"/orders.tbl*; do for file in "${TPCH_DATA_DIR}"/partsupp.tbl*; do
if,4
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -d "${TPCH_DATA_DIR}"/ ]]; then if ! ${CMD}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpch-tools/bin/gen-tpch-data.sh
lines,153
function,1

usage() {
for,11
echo "Begin to generate data for table: region" echo "Begin to generate data for table: nation" echo "Begin to generate data for table: supplier" echo "Begin to generate data for table: part" echo "Begin to generate data for table: customer" echo "Begin to generate data for table: partsupp" for i in $(seq 1 "${PARALLEL}"); do echo "Begin to generate data for table: orders" for i in $(seq 1 "${PARALLEL}"); do echo "Begin to generate data for table: lineitem" for i in $(seq 1 "${PARALLEL}"); do
if,4
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f ${TPCH_DBGEN_DIR}/dbgen ]]; then if [[ -d ${TPCH_DATA_DIR}/ ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/clickbench-tools/run-clickbench-queries.sh
lines,135
function,3

usage() { check_prerequest() { pre_set() {
for,1
for i in $(seq 1 $TRIES); do
if,5
if [ $ if [[ "${HELP}" -eq 1 ]]; then if ! $CMD; then if [[ ! $query == SELECT* ]]; then RES=$(mysql -vvv -h$FE_HOST -u$USER -P$FE_QUERY_PORT -D$DB -e "${query}" | perl -nle 'print $1 if /\((\d+\.\d+)+ sec\)/' || :)
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/clickbench-tools/create-clickbench-table.sh
lines,98
function,2

usage() { check_prerequest() {
for,0

if,3
if [ $ if [[ "${HELP}" -eq 1 ]]; then if ! $CMD; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/clickbench-tools/load-clickbench-data.sh
lines,152
function,5
function check_doris_conf() { function load() { function signal_handler() {
usage() { check_prerequest() { wget_pids=() function check_doris_conf() { function load() { function signal_handler() {
for,4
for i in $(seq 0 9); do echo "wait for download task done..." for i in $(seq 0 9); do for PID in ${wget_pids[@]}; do
if,5
if [[ "${HELP}" -eq 1 ]]; then if ! $CMD; then if (($cv < 3600)); then if (($cv < 16000)); then if [ ! -f "$DATA_DIR/hits_split${i}" ]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/build-ssb-dbgen.sh
lines,64
function,0


for,0

if,2
if [[ -d ${SSB_DBGEN_DIR} ]]; then if [[ -f ${CURDIR}/ssb-dbgen/dbgen ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/create-ssb-tables.sh
lines,105
function,2

usage() { check_prerequest() {
for,0

if,3
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if ! ${CMD}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/run-ssb-flat-queries.sh
lines,152
function,3

usage() { check_prerequest() { run_sql() {
for,1
for i in '1.1' '1.2' '1.3' '2.1' '2.2' '2.3' '3.1' '3.2' '3.3' '3.4' '4.1' '4.2' '4.3'; do
if,3
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if ! ${CMD}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/run-ssb-queries.sh
lines,165
function,3

usage() { check_prerequest() { run_sql() {
for,1
for i in '1.1' '1.2' '1.3' '2.1' '2.2' '2.3' '3.1' '3.2' '3.3' '3.4' '4.1' '4.2' '4.3'; do
if,3
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if ! ${CMD}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/load-ssb-data.sh
lines,278
function,5
function load() {
usage() { check_prerequest() { run_sql() { load_lineitem_flat() { function load() {
for,8
for con in 'lo_orderdate<19930101' 'lo_orderdate>=19930101 and lo_orderdate<19940101' 'lo_orderdate>=19940101 and lo_orderdate<19950101' 'lo_orderdate>=19950101 and lo_orderdate<19960101' 'lo_orderdate>=19960101 and lo_orderdate<19970101' 'lo_orderdate>=19970101 and lo_orderdate<19980101' 'lo_orderdate>=19980101'; do echo 'Loading data for table: part' echo 'Loading data for table: date' echo 'Loading data for table: supplier' echo 'Loading data for table: customer' echo "Loading data for table: lineorder, with ${PARALLEL} parallel" for ((i = 1; i <= PARALLEL; i++)); do for file in "${SSB_DATA_DIR}"/lineorder.tbl.*; do
if,4
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -d ${SSB_DATA_DIR}/ ]]; then if ! ${CMD}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/ssb-tools/bin/gen-ssb-data.sh
lines,131
function,1

usage() {
for,5
echo "Begin to generate data for table: customer" echo "Begin to generate data for table: part" echo "Begin to generate data for table: supplier" echo "Begin to generate data for table: date" echo "Begin to generate data for table: lineorder"
if,4
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f ${SSB_DBGEN_DIR}/dbgen ]]; then if [[ -d ${SSB_DATA_DIR}/ ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/restore_tablet_tool.sh
lines,118
function,2

usage() { restore_tablet() {
for,0

if,2
if ! OPTS=$(getopt \ if ${BATCH_MODE}; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/create-tpcds-tables.sh
lines,125
function,2

usage() { check_prerequest() {
for,0

if,8
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ${SCALE_FACTOR} -ne 1 ]] && [[ ${SCALE_FACTOR} -ne 100 ]] && [[ ${SCALE_FACTOR} -ne 1000 ]] && [[ ${SCALE_FACTOR} -ne 10000 ]]; then if ! ${CMD}; then if [[ ${SCALE_FACTOR} -eq 1 ]]; then elif [[ ${SCALE_FACTOR} -eq 100 ]]; then elif [[ ${SCALE_FACTOR} -eq 1000 ]]; then elif [[ ${SCALE_FACTOR} -eq 10000 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/build-tpcds-tools.sh
lines,74
function,1

check_prerequest() {
for,0

if,4
if ! ${CMD} >/dev/null; then if [[ -d "${CURDIR}/DSGen-software-code-3.2.0rc1" ]]; then elif [[ -f "${CURDIR}/TPC-DS_Tools_v3.2.0.zip" ]]; then if [[ -f ${TPCDS_DBGEN_DIR}/dsdgen ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/load-tpcds-data.sh
lines,211
function,3

usage() { check_prerequest() { run_sql() {
for,3
for ((i = 1; i <= PARALLEL; i++)); do for table_name in ${!table_columns[*]}; do for file in "${TPCDS_DATA_DIR}/${table_name}"_{1..100}_*.dat; do
if,6
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -d "${TPCDS_DATA_DIR}"/ ]]; then if ! ${CMD} &>/dev/null; then if ! [[ -f "${file}" ]]; then continue; fi if [[ $(echo "${ret}" | jq ".Status") == '"Success"' ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/gen-tpcds-queries.sh
lines,173
function,1

usage() {
for,2
for i in {1..99}; do for q in ${query_strs}; do
if,17
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f ${TPCDS_DSQGEN_DIR}/dsqgen ]]; then if [[ -d ${TPCDS_QUERIE_DIR}/ ]]; then if [[ -f query_0.sql ]]; then if [[ ${i} -eq 2 ]]; then elif [[ ${i} -eq 5 ]]; then elif [[ ${i} -eq 12 ]] || [[ ${i} -eq 21 ]] || [[ ${i} -eq 22 ]] || [[ ${i} -eq 44 ]] || [[ ${i} -eq 81 ]] || [[ ${i} -eq 102 ]]; then elif [[ ${i} -eq 14 ]]; then elif [[ ${i} -eq 17 ]] || [[ ${i} -eq 40 ]] || [[ ${i} -eq 86 ]] || [[ ${i} -eq 98 ]] || [[ ${i} -eq 99 ]]; then elif [[ ${i} -eq 24 ]]; then elif [[ ${i} -eq 25 ]]; then elif [[ ${i} -eq 35 ]] || [[ ${i} -eq 96 ]]; then elif [[ ${i} -eq 53 ]]; then elif [[ ${i} -eq 70 ]]; then elif [[ ${i} -eq 84 ]]; then elif [[ ${i} -eq 88 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/run-tpcds-queries.sh
lines,184
function,3

usage() { check_prerequest() { run_sql() {
for,1
for i in ${query_array[@]}; do
if,9
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ${SCALE_FACTOR} -eq 1 ]]; then elif [[ ${SCALE_FACTOR} -eq 100 ]]; then elif [[ ${SCALE_FACTOR} -eq 1000 ]]; then elif [[ ${SCALE_FACTOR} -eq 10000 ]]; then if ! ${CMD}; then if [[ -d "${RESULT_DIR}" ]]; then if [[ ${hot1} -lt ${hot2} ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/tpcds-tools/bin/gen-tpcds-data.sh
lines,137
function,1

usage() {
for,2
for c in $(seq 1 "${PARALLEL}"); do for i in $(seq 1 "${PARALLEL}"); do
if,7
if [[ $ if [[ "${HELP}" -eq 1 ]]; then if [[ ! -f ${TPCDS_DBGEN_DIR}/dsdgen ]]; then if [[ -d ${TPCDS_DATA_DIR}/ ]]; then if [[ ${PARALLEL} -eq 1 ]] && "${TPCDS_DBGEN_DIR}"/dsdgen -SCALE "${SCALE_FACTOR}" -TERMINATE N -DIR "${TPCDS_DATA_DIR}"; then elif [[ ${PARALLEL} -gt 1 ]] && [[ ${PARALLEL} -le 100 ]]; then if ! [[ -f "customer_${i}_${PARALLEL}.dat" ]]; then continue; fi
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/tools/get_query_profiles.sh
lines,83
function,0


for,1
echo "get profiles for query ${QUERY_ID}, output dir: ${OUTPUT_DIR}"
if,3
if [[ -n "${PASSWORD}" ]]; then if [[ -z "${QUERY_ID}" ]]; then if [[ -z "${OUTPUT_DIR}" ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/run-fe-ut.sh
lines,124
function,1

usage() {
for,0

if,5
if ! OPTS="$(getopt \ if [[ "$ if [[ -z "${FE_UT_PARALLEL}" ]]; then if [[ "${COVERAGE}" -eq 1 ]]; then if [[ "${RUN}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/build-for-release.sh
lines,171
function,1

usage() {
for,0

if,8
if ! OPTS="$(getopt \ if [[ "$ if [[ "${HELP}" -eq 1 ]]; then if [[ -z ${VERSION} ]]; then if [[ "${ARCH}" == "aarch64" ]]; then elif [[ "${ARCH}" == "x86_64" ]]; then if [[ "${_USE_AVX2}" == "0" ]]; then if [[ "${TAR}" -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/fs_brokers/apache_hdfs_broker/build.sh
lines,51
function,0


for,0

if,0

git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/fs_brokers/apache_hdfs_broker/bin/start_broker.sh
lines,121
function,0


for,1
for f in "${BROKER_HOME}/lib"/*.jar; do
if,8
if [[ "$(uname -s)" == 'Darwin' ]] && command -v brew &>/dev/null; then if [[ -z "${JAVA_HOME}" ]]; then if [[ ! -x "${JAVA}" ]]; then if [[ "${envline}" == *"="* ]]; then if [[ -f "${pidfile}" ]]; then if kill -0 "$(cat "${pidfile}")" >/dev/null 2>&1; then if [[ ! -d "${BROKER_LOG_DIR}" ]]; then if [[ ${RUN_DAEMON} -eq 1 ]]; then
git@github.com:apache/doris.git,4006c7cd1f273a9e5526b92f7a1d707b765a7019,doris,9626,./doris/fs_brokers/apache_hdfs_broker/bin/stop_broker.sh
lines,49
function,0


for,0

if,3
if [[ -f "${pidfile}" ]]; then if [[ "java" != "${pidcomm}" ]]; then if kill -9 "${pid}" >/dev/null 2>&1; then
git@github.com:liaohuqiu/android-Ultra-Pull-To-Refresh.git,46fdc861243a3d90dca1f5d31f3c82559ee9e4fa,android-Ultra-Pull-To-Refresh,9607,./android-Ultra-Pull-To-Refresh/publish-to-maven.sh
lines,2
function,0


for,0

if,0

git@github.com:perwendel/spark.git,1973e402f5d4c1442ad34a1d38ed0758079f7773,spark,9544,
git@github.com:hackware1993/MagicIndicator.git,2b8e246878bff780401211196438c78611d02cca,MagicIndicator,9542,
git@github.com:asLody/VirtualApp.git,ee431f41854e06dfc7bfd7011bf84cf27fc9406b,VirtualApp,9525,
git@github.com:umano/AndroidSlidingUpPanel.git,45a460435b07e764138a700328836cafc1ed5c42,AndroidSlidingUpPanel,9475,
git@github.com:bilibili/DanmakuFlameMaster.git,e2846461a09e33720a049f628f09c653f55531f0,DanmakuFlameMaster,9462,
git@github.com:lzyzsd/JsBridge.git,07a2843fc1422dd7688e72be15d42dde4898ef89,JsBridge,9451,
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/testtool/test_stand_insert_perf.sh
lines,18
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME" ]; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/testtool/test_globaltable_insert_perf.sh
lines,18
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME" ]; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/testtool/test_stand_select_perf.sh
lines,18
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME" ]; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/testtool/test_stand_merge_sel_perf.sh
lines,18
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME" ]; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/testtool/test_stand_update_perf.sh
lines,18
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME" ]; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/bin/startup_nowrap.sh
lines,72
function,0


for,1
for i in "$MYCAT_HOME"/lib/*.jar
if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$MYCAT_HOME" ] ; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/bin/rehash.sh
lines,87
function,0


for,1
for i in "$MYCAT_HOME"/lib/*.jar
if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$MYCAT_HOME" ] ; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/bin/init_zk_data.sh
lines,47
function,2
function log_info() { date +o"%F %T INFO $1" ; } function log_error() { date +o"%F %T ERROR $1" ; }
function log_info() { date +o"%F %T INFO $1" ; } function log_error() { date +o"%F %T ERROR $1" ; }
for,1
for java_cmd in "$java_in_wrapper" "$JAVA_HOME/bin/java" "java" ; do
if,3
if $java_cmd -Xmx1m -version &>/dev/null ; then if [ "$JAVA_CMD" == "" ]; then if ! $JAVA_CMD -Xms256M -Xmx1G -DMYCAT_HOME=$MYCAT_HOME -cp "$MYCAT_HOME/conf:$MYCAT_HOME/lib/*" $MAIN_CLASS ; then
git@github.com:MyCATApache/Mycat-Server.git,243539fb74bbdcb9819fecc7e7b50ccf0899e671,Mycat-Server,9433,./Mycat-Server/src/main/assembly/bin/dataMigrate.sh
lines,91
function,0


for,1
for i in "$MYCAT_HOME"/lib/*.jar
if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$MYCAT_HOME" ] ; then
git@github.com:koral--/android-gif-drawable.git,5ce295e0f32de6669e0297b45797009afaa57ee5,android-gif-drawable,9430,
git@github.com:lihengming/spring-boot-api-project-seed.git,c305af6a6bb2b698b02d731ac27218bff51c5c1c,spring-boot-api-project-seed,9416,
git@github.com:pockethub/PocketHub.git,8228cb8f7197a7c2227e67ee48a2c8dc843fb553,PocketHub,9401,
git@github.com:jwtk/jjwt.git,917ffbb5d92d70b261159572a4e6bad39fe972e8,jjwt,9336,
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/data/edu/stanford/nlp/kbp/zh/semgrex/make_semgrex_great_again.sh
lines,13
function,0


for,2
for e in per org; do for t in residence birth death headquarters; do
if,2
if [ -f "${e}:country_of_${t}.rules" ]; then elif [ -f "${e}:countries_of_${t}.rules" ]; then
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/data/edu/stanford/nlp/kbp/zh/semgrex/propagate_relations.sh
lines,27
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/data/edu/stanford/nlp/kbp/es/semgrex/propagate_relations.sh
lines,27
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/true_caser.sh
lines,12
function,0


for,1
for i in `find $DIR -name "*.sgm"`
if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/corenlp/corenlp.sh
lines,22
function,0


for,0

if,1
if hash readlink 2>/dev/null; then
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/segmenter/segment-05202008.sh
lines,66
function,1

usage() {
for,0

if,8
if [ $ if [ $ if [ $ if [ $lang = "ctb" ]; then elif [ $lang = "pku" ]; then if [ $kBest != "0" ]; then if [ $lang = "ctb" ]; then elif [ $lang = "pku" ]; then
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/tsurgeon/tsurgeon.sh
lines,4
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/tregex/tregex.sh
lines,4
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/tagger/stanford-postagger.sh
lines,6
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/tagger/stanford-postagger-gui.sh
lines,2
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/ner/ner-gui.sh
lines,4
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/doc/ner/ner.sh
lines,4
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/lexparser/lexparser-gui.sh
lines,13
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/lexparser/lexparser-lang.sh
lines,51
function,0


for,1
echo ' out_file : Prefix for the output filename'
if,1
if [ ! $
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/lexparser/lexparser-lang-train-test.sh
lines,50
function,0


for,2
echo ' test_file : Test treebank file (for evaluation)' echo ' out_file : Prefix for the output filename'
if,1
if [ ! $
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/lexparser/lexparser.sh
lines,14
function,0


for,0

if,1
if [ ! $
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/sentiment/convert_sentiment.sh
lines,81
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/arabic-segmenter/train_ar_segmenter_da.sh
lines,22
function,0


for,0

if,1
if [ "$
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/arabic-segmenter/train_ar_segmenter.sh
lines,22
function,0


for,0

if,1
if [ "$
git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/scripts/ner/eval_conll_cmd.sh
lines,4
function,0


for,0

if,0

git@github.com:stanfordnlp/CoreNLP.git,f8838d2639589f684cbaa58964cb29db5f23df7f,CoreNLP,9178,./CoreNLP/test/regression/test-document-preprocessing.sh
lines,21
function,0


for,0

if,1
if [ `grep -v PASSED $TMP | wc -l` -eq 0 ] ; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/github-support/list-missing-commits-by-issue-key.sh
lines,141
function,1
function handleGitHistoryCommitMessageIssueKeys {

for,8
echo " fix-version : The Jira version for which issues will be compared against the Git history" echo " jira-token : Your Jira access token for authentication" echo "An example of comparing the issues in Jira for 1.8.0.CR1 with Git history would be:" echo "Getting issues from Jira for project $PROJECT_NAME and version $FIX_VERSION" for REPO in "${DEBEZIUM_REPOS[@]}"; echo "Getting git history for repository $REPO" for REPO in "${DEBEZIUM_REPOS[@]}"; for REPO in "${DEBEZIUM_REPOS[@]}";
if,8
if [ $ if [[ $ARG =~ $REGEX ]] ; then if [ -s "$ISSUE_CHECK" ]; then if [ -s "$ISSUE_CHECK" ]; then if [ -s "$ISSUE_CHECK" ]; then if [ $ISSUE_KEY_FOUND -eq 0 ]; then if [ -s "$SCRIPT_OUTPUT_OK" ]; then if [ -s "$SCRIPT_OUTPUT_BAD" ]; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/github-support/notify-documentation-changes.sh
lines,29
function,0


for,0

if,1
if [ -s "$GIT_OUTPUT_FILE" ]; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/github-support/list-contributors.sh
lines,63
function,0


for,2
for REPO in "${DEBEZIUM_REPOS[@]}"; for (( i = 1; i < "$((page_count + 1))"; i++ )); do
if,6
if [ $ if [[ -z $page_count ]]; then if [[ -z "$NAME" ]]; then if grep -qi "^$URL" $CONTRIBUTORS_ALIASES; then if grep -qi "^$NAME" $CONTRIBUTORS_ALIASES; then elif grep -qi "$NAME" $CONTRIBUTORS_FILTERS; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/docker/artifact-server/listing.sh
lines,64
function,0


for,3
for connector in ${CONNECTORS}; do for driver in **/jdbc/*.{zip,jar}; do for groovy_script in **/groovy/*.{zip,jar}; do
if,4
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [[ $(ls **/*"${connector}"*.zip) ]]; then if [[ ! $artifact ]]; then if [[ ! $artifact ]]; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/docker/rhel_kafka/docker-entrypoint.sh
lines,52
function,0


for,0

if,4
if [ -z "$1" ]; then if [ -z "$1" ]; then if find $KAFKA_CONNECT_PLUGINS -mindepth 1 -maxdepth 1 | read; then if [ -z "$1" ]; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/copy-images.sh
lines,59
function,1
function process_image() {
function process_image() {
for,1
for image in $IMAGES; do
if,3
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [ ! -z "${DEST_LOGIN}" ] ; then if [ "$COPY_IMAGES" = true ] ; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/maven-artifact-check.sh
lines,186
function,1

print_usage() {
for,3
for file in *; do for component in *; do for file in *; do
if,21
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [ ${PRINT_HELP} == true ]; then if [ -z "${ARTIFACT_URL}" ] && [ -z "${ARTIFACT_FILE}" ]; then if [ -n "${ARTIFACT_URL}" ]; then if [ -z "${artifact_version}" ]; then if [ -z "${artifact_version}" ]; then if [ -d "${file}" ]; then if [[ ! "${file}" == *"${artifact_version}"* ]]; then if [ ! -d "./maven-repository/io/debezium/" ]; then if [[ ! "${sorted_expected_components[*]}" == "${actual_components[*]}" ]]; then if [ ! -d "${component}" ]; then if [ ${ if [[ ! "${dir_content[0]}" == *"${artifact_version}"* ]]; then if [ -n "${BASH_REMATCH[0]}" ]; then if [ -n "${BASH_REMATCH[0]}" ]; then if [ -n "${BASH_REMATCH[0]}" ]; then if [ -z "${archive_filename}" ]; then if [ -z "${md5_filename}" ]; then if [ -z "${sha1_filename}" ]; then if [ "${sha1_sum}" != "${expected_sha1_sum}" ]; then if [ "${md5_sum}" != "${expected_md5_sum}" ]; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/trigger-nightly-docker.sh
lines,27
function,0


for,0

if,0

git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/build-connect-image.sh
lines,102
function,1
function process_image() {
function process_image() {
for,4
echo "[Build] ${source} not applicable for build" for archive in ${ARCHIVE_URLS}; do for input in ${EXTRA_LIBS}; do for image in $IMAGES; do
if,6
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [ ! -z "${DEST_LOGIN}" ] ; then if [[ "$name" =~ ^amq-streams-kafka-.*$ ]] ; then if [[ "${dest}" == '*' ]] ; then if [[ "${lib}" =~ ^.*\.zip$ ]] ; then if [[ "${lib}" =~ ^.*\.zip$ ]] ; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/upstream-artifact-server-prepare.sh
lines,99
function,0


for,1
for tag in ${TAGS}; do
if,5
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [ -z "${TAGS}" ] && [ "${AUTO_TAG}" = "false" ]; then if [ ! -z "${DEST_LOGIN}" ] && [ "$ORACLE" = "false" ]; then if [ "${ORACLE}" = "false" ] ; then if [ "${AUTO_TAG}" = "true" ] ; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/ocp-projects.sh
lines,106
function,3
function filevar() { function delete_project() { function process_component() {
function filevar() { function delete_project() { function process_component() {
for,2
for resource in ${PROJECT_DELETE_RESOURCES}; do for component in ${COMPONENTS}; do
if,6
if ${CREATE} && ${DELETE}; then if ${CREATE}; then if ${DELETE}; then if [ -z "${SKIP_ROOT}" ]; then if [ -n "${TESTSUITE}" ]; then if ${CREATE}; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/copy-plugins.sh
lines,106
function,0


for,3
for archive in ${ARCHIVE_URLS}; do for input in ${EXTRA_LIBS}; do for tag in ${TAGS}; do
if,7
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi if [ -z "${TAGS}" ] && [ "${AUTO_TAG}" = "false" ]; then if [ ! -z "${DEST_LOGIN}" ] ; then if [ -z "$dest" ] ; then if [ -z "$connectors_version" ]; then if [ -z "$dest" ] ; then if [ "${AUTO_TAG}" = "true" ] ; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/jenkins-jobs/scripts/check-contributors.sh
lines,62
function,0


for,1
for REPO in "${DEBEZIUM_REPOS[@]}";
if,6
if [ $ if ! grep -qi "$LINE" $COPYRIGHT; then if ! grep -qi "^$LINE$" $FILTERS; then if test -z "$NAME"; then if ! grep -qi "$COMMIT" "$FILTERED_COMMITS"; then if ! grep -qi "$NAME" $COPYRIGHT; then
git@github.com:debezium/debezium.git,215f3098b721ba3ba96d79a6bcbeb0829946612f,debezium,9121,./debezium/debezium-testing/tmt/tests/debezium/test.sh
lines,58
function,0


for,0

if,5
if [ "$TEST_PROFILE" = "mysql" ] elif [ "$TEST_PROFILE" = "postgres" ] elif [ "$TEST_PROFILE" = "oracle" ] elif [ "$TEST_PROFILE" = "sqlserver" ] if [ "$SQL_SERVER_VERSION" = "2017" ]
git@github.com:resilience4j/resilience4j.git,8e3e7b864e1150e8b77135cac2566c98b4639446,resilience4j,9045,
git@github.com:OpenFeign/feign.git,25c419d61975fff98b395deb8b28a4f7214454f5,feign,9032,./feign/scripts/release.sh
lines,40
function,1
function increment() {
function increment() {
for,0

if,0

git@github.com:OpenFeign/feign.git,25c419d61975fff98b395deb8b28a4f7214454f5,feign,9032,./feign/scripts/no-git-changes.sh
lines,29
function,0


for,0

if,1
if [ -z $(git status --porcelain) ];
git@github.com:navasmdc/MaterialDesignLibrary.git,7271050ff486cc4038e13f02b10a28aa4cf5b8cf,MaterialDesignLibrary,9023,
git@github.com:crossoverJie/cim.git,6cff5a3feec06dc512112b5bcd85fae78f4fa505,cim,8987,./cim/script/server-startup.sh
lines,1
function,0


for,0

if,0

git@github.com:crossoverJie/cim.git,6cff5a3feec06dc512112b5bcd85fae78f4fa505,cim,8987,./cim/script/route-startup.sh
lines,1
function,0


for,0

if,0

git@github.com:crossoverJie/cim.git,6cff5a3feec06dc512112b5bcd85fae78f4fa505,cim,8987,./cim/script/deploy.sh
lines,52
function,0


for,2
for var in ${PID[@]}; for var in ${PID[@]};
if,0

git@github.com:android/testing-samples.git,910bd7cb2a983390ab7dbd74e296607408dcc5a8,testing-samples,8985,./testing-samples/update_versions.sh
lines,76
function,1

sed -i "s/.*google()/ google()\n maven {\n url \"$repourl\"\n allowInsecureProtocol=true\n }/" $G
for,2
for p in $(cat projects.conf); do for G in build.gradle settings.gradle; do
if,1
if [ ! -z "$repourl" ]
git@github.com:android/testing-samples.git,910bd7cb2a983390ab7dbd74e296607408dcc5a8,testing-samples,8985,./testing-samples/test_all.sh
lines,21
function,0


for,1
for p in $(cat projects.conf); do
if,1
if [ "$code" -ne "0" ]; then
git@github.com:Justson/AgentWeb.git,5ee0585dc0a38f1075f80fa2b2bc9c66891c54c6,AgentWeb,8982,
git@github.com:GcsSloop/AndroidNote.git,21ba33e3d40c7f462d3c7c90322f4318060fe3ff,AndroidNote,8976,
git@github.com:kekingcn/kkFileView.git,8d5c987fe706605460a516c7941a4b947dde6166,kkFileView,8924,./kkFileView/server/src/main/bin/shutdown.sh
lines,36
function,0


for,0

if,2
if [ ! -e "$PID_FILE" ]; then if [ -s "$PID_FILE" ]; then
git@github.com:kekingcn/kkFileView.git,8d5c987fe706605460a516c7941a4b947dde6166,kkFileView,8924,./kkFileView/server/src/main/bin/startup.sh
lines,62
function,0


for,2
for i in ${DIR_HOME[@]} echo "Please execute ./showlog.sh to check log for more information"
if,5
if [ ! -f ${PID_FILE_NAME} ]; then if [ -s "${PID_FILE}" ]; then if [ $? -eq 0 ]; then if [ -f "$i/program/soffice.bin" ]; then if [ ! -n "${FLAG}" ]; then
git@github.com:kekingcn/kkFileView.git,8d5c987fe706605460a516c7941a4b947dde6166,kkFileView,8924,./kkFileView/server/src/main/bin/showlog.sh
lines,1
function,0


for,0

if,0

git@github.com:kekingcn/kkFileView.git,8d5c987fe706605460a516c7941a4b947dde6166,kkFileView,8924,./kkFileView/server/src/main/bin/install.sh
lines,36
function,2

install_redhat() { install_ubuntu() {
for,0

if,3
if [ $? -eq 0 ];then if [ $? -eq 0 ];then if [ -f "/etc/redhat-release" ]; then
git@github.com:didi/VirtualAPK.git,b1a778a06688f89f574ec8608f0764eadb9009b7,VirtualAPK,8903,./VirtualAPK/PluginDemo/make.sh
lines,4
function,0


for,0

if,0

git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/storm-core/src/genthrift.sh
lines,22
function,0


for,0

if,0

git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/bin/javadoc.sh
lines,18
function,0


for,0

if,0

git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/bin/build_modules.sh
lines,40
function,0


for,1
for module in $(cat MODULES)
if,1
if [ $module != "storm-console-logging" ]
git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/bin/install_zmq.sh
lines,48
function,0


for,0

if,1
if [ ! -d "$JAVA_HOME/include" ]; then
git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/bin/build_release.sh
lines,83
function,1
function quit {

for,2
for module in $(cat MODULES) for i in *.jar
if,0

git@github.com:nathanmarz/storm.git,cdb116e942666973bc4eaa0df098d5bab82739e7,storm,8870,./storm/bin/to_maven.sh
lines,54
function,1
function quit {

for,1
for module in $(cat MODULES)
if,0

git@github.com:laobie/StatusBarUtil.git,8bc86216b7538e8bf70de721d7415226d47bd5dd,StatusBarUtil,8815,
git@github.com:huanghaibin-dev/CalendarView.git,baea535e528db38aa4f9676b47d64a474c6de362,CalendarView,8776,
git@github.com:cats-oss/android-gpuimage.git,ceea576ec931c2968431ad46f1fb2e6d68a542e2,android-gpuimage,8768,
git@github.com:chrisbanes/Android-PullToRefresh.git,3bd8ef6869c3297bfe874d2f15c2ee53c3456e99,Android-PullToRefresh,8731,
git@github.com:plantuml/plantuml.git,2bb375b7ba2773e3a38311c446241a860266c75e,plantuml,8687,./plantuml/.github/scripts/release.sh
lines,68
function,0


for,0

if,1
if [[ -e "build/publications/maven/module.json.asc" ]]; then
git@github.com:plantuml/plantuml.git,2bb375b7ba2773e3a38311c446241a860266c75e,plantuml,8687,./plantuml/.github/scripts/release-snapshot.sh
lines,87
function,0


for,1
⚠️ **It is not ready for general use** ⚠️
if,1
if [[ -e "build/publications/maven/module.json.asc" ]]; then
git@github.com:plantuml/plantuml.git,2bb375b7ba2773e3a38311c446241a860266c75e,plantuml,8687,./plantuml/tools/create_sprites.sh
lines,175
function,3

main () { process_svg () { process_png () {
for,3
usage="Batch creates sprite files for PlantUml. for i in *.svg for i in *.png
if,4
-s if set processes SVGs if [ -z "$prefix" ] if [ ! -d "${dir}" ] if [ "$processsvg" -eq 1 ]
git@github.com:Freelander/Android_Data.git,df3d108a95de1a6b7198fd14fd7234b62af19b16,Android_Data,8662,
git@github.com:Blankj/awesome-java-leetcode.git,0d17728bfbe128132b21156dce19d4a5aa5001e9,awesome-java-leetcode,8602,
git@github.com:chrisjenx/Calligraphy.git,085e441954d787bd4ef31f245afe5f2f2a311ea5,Calligraphy,8592,
git@github.com:firebase/quickstart-android.git,1b048361c24b2f909923e8c735c1687e8134ad41,quickstart-android,8590,./quickstart-android/build_pull_request.sh
lines,34
function,0


for,1
for module in $changed_modules
if,2
if [[ ${MODULES} != *"${module_name}" ]]; then if [[ $AVAILABLE_TASKS =~ $module":app:" ]]; then
git@github.com:firebase/quickstart-android.git,1b048361c24b2f909923e8c735c1687e8134ad41,quickstart-android,8590,./quickstart-android/functions/test_setup.sh
lines,11
function,0


for,0

if,0

git@github.com:firebase/quickstart-android.git,1b048361c24b2f909923e8c735c1687e8134ad41,quickstart-android,8590,./quickstart-android/copy_mock_google_services_json.sh
lines,21
function,0


for,0

if,0

git@github.com:firebase/quickstart-android.git,1b048361c24b2f909923e8c735c1687e8134ad41,quickstart-android,8590,./quickstart-android/firestore/test_setup.sh
lines,11
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-atop/src/test/resources/io/trino/plugin/atop/hanging_atop.sh
lines,0
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive/src/test/resources/containers/hive_hadoop/hadoop-run.sh
lines,15
function,0


for,0

if,1
if test $
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-oracle/src/test/resources/restart.sh
lines,12
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-bigquery/src/test/resources/proxy/generate.sh
lines,14
function,0


for,1
echo "Bundle private key and certificate for mitmproxy"
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/conf/hive-tests-config-apache-hive3.sh
lines,1
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/conf/hive-tests-config-hdp3.sh
lines,1
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/conf/hive-tests-defaults.sh
lines,11
function,0


for,0

if,1
if [ -z "$DEFAULT_DOCKER_VERSION" ];
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/conf/files/hadoop-put.sh
lines,8
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_wasb_tests.sh
lines,46
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_tests.sh
lines,35
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/start_hive.sh
lines,21
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/common.sh
lines,214
function,16
function retry() { function hadoop_master_container() { function hadoop_master_ip() { function check_hadoop() { function exec_in_hadoop_master_container() { function stop_unnecessary_hadoop_services() { function expand_compose_args() { function cleanup_docker_containers() { function cleanup_hadoop_docker_containers() { function termination_handler() { function check_vars() { function start_docker_containers() { function start_hadoop_docker_containers() { function create_test_tables() { function deploy_core_site_xml() { function abort_if_not_gib_impacted() {
function retry() { function hadoop_master_container() { function hadoop_master_ip() { function check_hadoop() { function exec_in_hadoop_master_container() { function stop_unnecessary_hadoop_services() { function expand_compose_args() { function cleanup_docker_containers() { function cleanup_hadoop_docker_containers() { function termination_handler() { function check_vars() { function start_docker_containers() { function start_hadoop_docker_containers() { function create_test_tables() { function deploy_core_site_xml() { local args=() function abort_if_not_gib_impacted() {
for,3
for file in ${files[@]}; do for arg; do for name; do
if,6
if [[ ${EXIT_CODE} == 0 ]]; then if [[ ! -v "${arg}" ]]; then elif [[ -z "${!arg}" ]]; then if [ -n "${DOCKER_MACHINE_NAME:-}" ] if [[ "${CONTINUOUS_INTEGRATION:-false}" == 'true' ]]; then if [ -f "$impacted_log" ] && ! grep -q "^${module}$" "$impacted_log"; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_adl_tests.sh
lines,47
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_s3_tests.sh
lines,74
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_abfs_oauth_tests.sh
lines,49
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/plugin/trino-hive-hadoop2/bin/run_hive_abfs_access_key_tests.sh
lines,46
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/free-disk-space.sh
lines,70
function,2
function list_installed_packages() function free_up_disk_space_ubuntu()
function list_installed_packages() function free_up_disk_space_ubuntu()
for,1
for package in "${packages[@]}"; do
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/git-fetch-base-ref.sh
lines,10
function,0


for,0

if,1
if [ -z "${GITHUB_BASE_REF:-}" ] || [ "$GITHUB_BASE_REF" == master ]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/download-maven-dependencies.sh
lines,23
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/s3/delete-s3-bucket.sh
lines,27
function,0


for,1
echo "Waiting for AWS S3 bucket ${S3_BUCKET_IDENTIFIER} to be deleted"
if,1
if [[ ! -f "${S3_SCRIPTS_DIR}/.bucket-identifier" ]]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/s3/setup-empty-s3-bucket.sh
lines,43
function,0

OPTIONAL_BUCKET_CONFIGURATION=()
for,1
echo "Waiting for the AWS S3 bucket ${S3_BUCKET_IDENTIFIER} in the region ${AWS_REGION} to exist"
if,2
if [ "${AWS_REGION}" != 'us-east-1' ]; then if [ -z "${S3_CREATE_BUCKET_OUTPUT}" ]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/redshift/setup-aws-redshift.sh
lines,54
function,0


for,2
echo "Waiting for the Amazon Redshift cluster ${REDSHIFT_CLUSTER_IDENTIFIER} on the region ${AWS_REGION} to be available." echo "The Amazon Redshift cluster ${REDSHIFT_CLUSTER_IDENTIFIER} on the region ${AWS_REGION} is available for queries."
if,1
if [ -z "${REDSHIFT_CREATE_CLUSTER_OUTPUT}" ]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/.github/bin/redshift/delete-aws-redshift.sh
lines,34
function,0


for,1
echo "Waiting for the Amazon Redshift cluster $REDSHIFT_CLUSTER_IDENTIFIER to be deleted"
if,3
if [[ ! -f "${REDSHIFT_SCRIPTS_DIR}/.cluster-identifier" ]]; then if [ -z "${REDSHIFT_DELETE_CLUSTER_OUTPUT}" ]; then if [ "$?" -ne 0 ]
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-test-jdbc-compatibility-old-driver/bin/run_tests.sh
lines,46
function,0

failed_versions=()
for,1
for version in ${tested_versions[*]}; do
if,3
if (( previous_released_version == 404 )); then if (( (previous_released_version - first_tested_version) % version_step != 0 )); then if ! time env TRINO_JDBC_VERSION_UNDER_TEST="${version}" ${maven_run_tests} -Ddep.presto-jdbc-under-test="${version}"; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-spark-iceberg-jdbc-catalog/apply-hive-config-for-iceberg.sh
lines,5
function,0


for,1
echo "Applying hive-site configuration overrides for Spark"
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-hive-acid/apply-hive-config.sh
lines,5
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-oauth2-https-proxy/cert/create-certs.sh
lines,13
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/two-kerberos-hives/hadoop-master-2-copy-keytabs.sh
lines,7
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/two-kerberos-hives/update-location.sh
lines,9
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/two-kerberos-hives/hadoop-master-copy-keytabs.sh
lines,6
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/singlenode-spark-iceberg/apply-hive-config-for-iceberg.sh
lines,5
function,0


for,1
echo "Applying hive-site configuration overrides for Spark"
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/two-mixed-hives/hadoop-master-2/update-location.sh
lines,9
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/multinode-azure/apply-azure-config.sh
lines,5
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/multinode-kerberos-kudu/kerberos_init.sh
lines,43
function,1
function create_principal_with_forward_and_reverse_dns_entries() {
function create_principal_with_forward_and_reverse_dns_entries() {
for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/multinode-gcs/apply-gcs-config.sh
lines,6
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/conf/environment/multinode-kafka-ssl/secrets/create-certs.sh
lines,50
function,0


for,1
for i in broker1 client; do
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/hadoop-kerberos/create_kerberos_credential_cache_files.sh
lines,19
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/standard/set-trino-cli.sh
lines,3
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/hydra-identity-provider/cert/generate.sh
lines,13
function,0


for,1
for name in "hydra" "trino"
if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/hadoop/apply-config-overrides.sh
lines,15
function,0


for,0

if,2
if [[ -n "${OVERRIDES_DIR+x}" ]]; then if test -e /overrides; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/hadoop/hadoop-run.sh
lines,24
function,0


for,1
for init_script in "${HADOOP_INIT_D}"*; do
if,2
if test $ if test -d "${HADOOP_INIT_D}"; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/minio/apply-minio-config.sh
lines,12
function,1

fail() {
for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/run-presto.sh
lines,37
function,0


for,1
for init_script in /docker/presto-init.d/*; do
if,4
if test $ if test -d /docker/presto-init.d; then if [ -z "$JAVA_HOME" ]; then if [ ! -d "$JAVA_HOME" ]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/health-checks/hadoop-health-check.sh
lines,22
function,0


for,0

if,3
if test $ if ! test -f /tmp/supervisor.sock; then if [ "$FAILED" == "" ]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/health-checks/health.sh
lines,17
function,0


for,1
for health_script in "${HEALTH_D}"/*; do
if,2
if test $ if test -d "${HEALTH_D}"; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/docker/presto-product-tests/health-checks/trino-health-check.sh
lines,13
function,0


for,0

if,1
if test $
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/testing/trino-product-tests-launcher/src/main/resources/install-kafka-protobuf-provider.sh
lines,3
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/core/docker/build.sh
lines,95
function,1

usage() {
for,5
echo "🎣 Downloading server and client artifacts for release version ${TRINO_VERSION}" for artifactId in io.trino:trino-server:"${TRINO_VERSION}":tar.gz io.trino:trino-cli:"${TRINO_VERSION}":jar:executable; do for arch in "${ARCHITECTURES[@]}"; do echo "🫙 Building the image for $arch" for arch in "${ARCHITECTURES[@]}"; do
if,2
if [ -n "$TRINO_VERSION" ]; then if [[ "$arch" != "ppc64le" ]]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/core/docker/container-test.sh
lines,65
function,4
function cleanup { function test_trino_starts { function test_javahome { function test_container {

for,1
echo "🚨 Too many retries waiting for Trino to start" >&2
if,4
if [[ -n ${CONTAINER_ID:-} ]]; then if [[ $((I++)) -ge ${QUERY_RETRIES} ]]; then if ! RESULT=$(docker exec "${CONTAINER_ID}" trino --execute "SELECT 'success'" 2>/dev/null); then if ! [[ ${RESULT} == '"success"' ]]; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/core/trino-main/src/test/resources/cert/generate.sh
lines,7
function,0


for,0

if,0

git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/core/trino-main/bin/check_webui.sh
lines,43
function,0


for,2
echo "Refer to the root README.md for instructions" echo "Refer to the root README.md for instructions on generating Web UI"
if,3
if ! diff -u ${WEBUI_ROOT}/src/yarn.lock yarn.lock; then if ! diff -u ${WEBUI_ROOT}/dist dist; then if ! yarn --cwd ${WEBUI_ROOT}/src/ run flow; then
git@github.com:trinodb/trino.git,dc3f936a2a5307d6553ea94b8b6288b616fa577a,trino,8574,./trino/core/trino-server-rpm/src/main/resources/dist/config/env.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/src/com/facebook/buck/rules/modern/builders/trampoline.sh
lines,63
function,3
function resolveList() { function resolve() { function getJavaPathForVersion() {
function resolveList() { function resolve() { function getJavaPathForVersion() {
for,0

if,1
if [ "$BUCK_DEBUG_MODE" == "1" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/circleci_unzip_android_ndk.sh
lines,48
function,0


for,0

if,3
if [ -z "$1" ]; then if [ "$2" == "macos" ]; then if [ ! -f "$CACHED_PATH" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/create_tag.sh
lines,41
function,0


for,2
read -e -p "Enter tag name to create [hit enter for $DEFAULT_TAG]: " tag echo -n "Creating and committing .buckrelease file for $tag... "
if,2
if [[ -z $tag ]]; then if [[ $ok =~ ^(yes|y)$ ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/exopackage_test_single.sh
lines,321
function,13
function sedInPlace() { function installAndLaunch() { function runInstrumentationTestWithExternalRunner() { function runInstrumentationTest() { function create_image() { function edit_asset() { function edit_asset2() { function edit_resource() { function edit_java() { function edit_module() { function edit_cpp1() { function edit_cpp2() { function change_label() {
function sedInPlace() { function installAndLaunch() { function runInstrumentationTestWithExternalRunner() { function runInstrumentationTest() { function create_image() { function edit_asset() { function edit_asset2() { function edit_resource() { function edit_java() { function edit_module() { function edit_cpp1() { function edit_cpp2() { function change_label() {
for,2
echo "Unsupported OS name '$(uname -s)' for running sed." for BUCKFILE in `find . -name BUCK.fixture` ; do
if,1
if [ "$1" == "--debug" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/apple/build_script.sh
lines,19
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/exopackage_test_all.sh
lines,45
function,0


for,1
for DEV in $DEVICES ; do
if,1
if ./scripts/exopackage_test_single.sh; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/circleci_install_android_ndk.sh
lines,45
function,0


for,0

if,2
if [ "$1" == "macos" ]; then if [ ! -f "$CACHED_PATH" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/update-xctest.sh
lines,48
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/scripts/artificial-project.sh
lines,20
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/docs/soyweb-local.sh
lines,20
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/docs/publish.sh
lines,123
function,2

start_soyweb() { show_help() {
for,1
for arg do
if,8
if ! kill -0 "$soyweb_pid" >/dev/null 2>&1; then if ! git diff --quiet; then if [ $START_SOYWEB -eq 1 ]; then if [ $SOYWEB_PID -gt 0 ]; then if [ $KEEP_FILES -eq 0 ] && [ -n "$STATIC_FILES_DIR" ]; then if [ -n "$trap_command" ]; then if [ -z "$1" ] if [ $EXIT_CODE -ne 0 ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/docs/soyweb-prod.sh
lines,28
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/docs/soy2html.sh
lines,35
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/thrift/update.sh
lines,19
function,0


for,1
for f in $files_to_update; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/thrift/gen.sh
lines,4
function,0


for,1
for f in $(git ls-files -- *.thrift | grep -v "modern/builders/thrift"); do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/ini4j/build.sh
lines,28
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/remote-apis/update.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/intellij/get_jars.sh
lines,180
function,3

usage() { copy_or_stub_jars() { >&2 echo "ERROR: copy_or_stub_jars() requires parameters: SOURCE_DIR,
for,5
for lib in "${LIBS[@]}"; do for lib in "${LIBS_TO_COPY[@]}"; do for lib in "${LIBS_TO_STUB[@]}"; do for lib in "${ALL_LIBS[@]}"; do for copied in "${ALL_LIBS[@]}"; do
if,18
if [ "$ if ! [[ -e "$SOURCE_DIR/$lib" ]]; then if $SHOULD_FAIL ; then if [[ -e "$DEST_DIR/$lib" ]]; then if ! (cd "$DEST_DIR" && 2>/dev/null buck run //src/com/facebook/buck/jvm/java/abi:api-stubber "$SOURCE_DIR/$lib" "$DEST_DIR/$lib") ; then if $SHOULD_FAIL ; then if [[ "$1" == -h ]] || [[ "$1" == --help ]] || [[ "$1" == help ]]; then if [[ -z "$SRC_DIR" ]]; then if [[ "$OSTYPE" == darwin* ]]; then if [[ -d "$DEFAULT_LOCATION" ]]; then if [[ -z "$response" ]] || [[ "$response" =~ ^[Yy] ]]; then if [[ -z "$SRC_DIR" ]]; then if ! grep -q "binary_jar.*=.*\W${lib}\W" "$BUCK_FILE" ; then if [[ "$wanted" == "$copied" ]]; then if ! $FOUND ; then if $SHOULD_FAIL; then if [[ -e "$RESOURCES_JAR" ]]; then if [[ -n "$INTELLIJ_INFO" ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/sqlite/fetch.sh
lines,29
function,0


for,0

if,2
if [ "$REAL_BIN_HASH" != "$BIN_HASH" ]; then if [ "$REAL_SOURCE_HASH" != "$SOURCE_HASH" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/protobuf/gen.sh
lines,73
function,1
function ls_files_cmd {

for,3
for f in $(ls_files_cmd src/**.proto); do for f in $(ls_files_cmd src-gen/**/proto/*.meta); do for f in $(ls_files_cmd src-gen/**/proto/*.java); do
if,2
if git rev-parse --git-dir > /dev/null 2>&1; then if [ -n "$IS_GIT" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/java/bazel/update.sh
lines,50
function,1

remove_jar_entries() {
for,0

if,2
if [ -z "$NO_CLEANUP" ] && [ -n "${WORK_DIR}" ]; then if [ -z "$BAZEL_LOCAL" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/third-party/py/pywatchman/publish-pypi.sh
lines,23
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/artifact_cache/testdata/gen_test_certs.sh
lines,96
function,1
function encode() {
function encode() {
for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/query/testdata/just_build/prehook.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/testdata/external_test_runner/fail.sh
lines,4
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/testdata/external_test_runner/pass.sh
lines,4
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/testdata/run-command/cmd/command_template.sh
lines,10
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/testdata/run-command-failure/cmd/command.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cli/testdata/just_build/prehook.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/testutil/endtoend/testdata/mobile/common/js/package_worker.sh
lines,212
function,10

message_id () { handshake() { read_command() { concat() { write_asset() { write_sourcemap() { replace_root() { run_command() { command_loop() { shutdown() {
for,1
for infile in $infiles; do
if,18
if [[ -n "$job_json" && "$job_json" != "]" ]]; then if [[ "$2" == android ]]; then elif [[ "$2" == ios ]]; then if [[ "$1" == "$ROOT" ]]; then if [[ "$2" == '{'* ]]; then if [[ "$command" == "bundle" ]]; then if [[ -n "$source_map_path" ]]; then if [[ "$command" == "dependencies" ]]; then if [[ "$command" == "library-dependencies" ]]; then if [[ "$command" == "library-files" ]]; then if [[ "$command" == "transform" ]]; then if [[ "$command" == "optimize" ]]; then if [[ "$1" == "--assets" ]]; then elif [[ "$1" == "--sourcemap" ]]; then if [[ "$1" == "--platform" ]]; then if [[ "$2" != --* ]]; then if [[ -n "$assets_dir" ]]; then if [[ -z "$outfile" ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/event/listener/integration/testdata/simple_project/test/test.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/rust/testdata/simple_binary/linker.sh
lines,10
function,0


for,1
for i in gcc g++ clang clang++; do
if,1
if [ -x $(which i) ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/apple/projectV2/testdata/generating_combined_project_with_tests/Apps/dummy.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/apple/projectV2/testdata/project_with_cell/build_script.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/apple/projectV2/testdata/project_halide/halide_compile.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/apple/project/testdata/generating_combined_project_with_tests/Apps/dummy.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/apple/project/testdata/project_halide/halide_compile.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/project/intellij/testdata/preprocess_script_test/preprocess.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/project/intellij/testdata/project_with_scripts/scripts/postprocessing-script.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/project/intellij/testdata/project_with_scripts/scripts/preprocessing-script.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/js/testdata/js_rules/js/packager_worker.sh
lines,212
function,10

message_id () { handshake() { read_command() { concat() { write_asset() { write_sourcemap() { replace_root() { run_command() { command_loop() { shutdown() {
for,1
for infile in $infiles; do
if,18
if [[ -n "$job_json" && "$job_json" != "]" ]]; then if [[ "$2" == android ]]; then elif [[ "$2" == ios ]]; then if [[ "$1" == "$ROOT" ]]; then if [[ "$2" == '{'* ]]; then if [[ "$command" == "bundle" ]]; then if [[ -n "$source_map_path" ]]; then if [[ "$command" == "dependencies" ]]; then if [[ "$command" == "library-dependencies" ]]; then if [[ "$command" == "library-files" ]]; then if [[ "$command" == "transform" ]]; then if [[ "$command" == "optimize" ]]; then if [[ "$1" == "--assets" ]]; then elif [[ "$1" == "--sourcemap" ]]; then if [[ "$1" == "--platform" ]]; then if [[ "$2" != --* ]]; then if [[ -n "$assets_dir" ]]; then if [[ -z "$outfile" ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/js/testdata/js_rules/js/cp-and-append.sh
lines,10
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/js/testdata/js_rules/js/test_for_fruit.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/js/testdata/js_rules/external/write-node-modules.sh
lines,9
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/python/testdata/python_binary/external_sources/build_packages.sh
lines,12
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/python/testdata/python_binary/pex_tool.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/features/ocaml/testdata/ocaml/ocamldep_flags/fake_ppx.sh
lines,18
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cxx/testdata/step_test/cc.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/cxx/testdata/step_test/cxx.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/android/testdata/android_project/external_files/fake_reorder_script.sh
lines,1
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/android/testdata/android_project/java/com/example/aar/build_aar.sh
lines,19
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/android/testdata/android_project/native/merge/codegen.sh
lines,6
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/apple/toolchain/impl/testdata/code_sign_identity_store/fake_identities.sh
lines,5
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/apple/toolchain/impl/testdata/provisioning_profiles/fake_read_command.sh
lines,82
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/apple/testdata/provisioning_profiles/fake_read_command.sh
lines,82
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/apple/testdata/simple_application_bundle_with_target_codesigning/codesign/codesign.sh
lines,7
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/apple/testdata/apple_testx/script.sh
lines,4
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/crosscell/testdata/inter-cell/android/primary/native/merge/codegen.sh
lines,6
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/util/versioncontrol/testdata/create_from_zip.sh
lines,23
function,1

dump() {
for,0

if,1
trap 'if [ -z "$temp_dir" ] && [ -d "$temp_dir" ]; then rm -rf "$temp_dir"; fi' EXIT
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/util/shutdown/shutdown_test.sh
lines,20
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/util/unarchive/testdata/generate_archives.sh
lines,22
function,0


for,1
for i in ".tar cvf" ".tar.bz2 cjvf" ".tar.gz czvf" ".tar.xz cJvf"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/scala/testdata/scala_binary/scalac.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/java/testdata/external_javac_src_zip/javac.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/java/testdata/external_javac/javac.sh
lines,37
function,0


for,2
for i in "$@"; do for i in "${ARGS[@]:1}"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/java/testdata/external_javac/real-javac.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/java/testdata/external_javac/error.sh
lines,11
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/jvm/java/testdata/external_javac/check_env.sh
lines,20
function,0


for,0

if,1
if [ CHECK_THIS_VARIABLE ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/file/testdata/archives/generate_archives.sh
lines,24
function,0


for,1
for i in ".tar cvf" ".tar.bz2 cjvf" ".tar.gz czvf" ".tar.xz cJvf"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/core/test/rule/impl/testdata/test_with_external_runner/runner.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/core/rules/actions/lib/testdata/run_scripts/script.sh
lines,14
function,0


for,1
for arg in "$@"; do
if,1
if [ -n "$EXIT_CODE" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/core/rules/analysis/impl/testdata/testable_rules/runner.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/core/rules/analysis/impl/testdata/testable_rules/testable.sh
lines,10
function,0


for,1
for arg in "$@"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/core/rules/analysis/impl/testdata/runnable_rules/runnable.sh
lines,9
function,0


for,1
for arg in "$@"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_timeout/test.sh
lines,5
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_pwd/pwd.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_with_test/hello.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_with_test/test.sh
lines,3
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_resources/test.sh
lines,1
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_args/foo/test.sh
lines,4
function,0


for,0

if,1
if [[ "$1" != "hello" ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/command_alias/scripts/echo.sh
lines,10
function,0


for,1
for ARG in "$@"; do
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_with_caching/example.sh
lines,6
function,0


for,1
for arg in "$@"
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/genrule_classpath_filtering/pacakge.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/simple_test_suite/tests/test3.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/simple_test_suite/tests/bin.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/simple_test_suite/tests/test2.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/simple_test_suite/tests/test1.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/simple_test_suite/tests/test4.sh
lines,2
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/worker_tool_test/external_tool.sh
lines,68
function,0


for,2
for i in "$@"; do for ((i=1; i <= num_jobs ; i++))
if,4
if [ "$loc" != "" -a ! -e "$loc" ]; then elif [ "$loc" != "" ]; then if [ "$async" != "" ]; then if [ "$async" != "" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/worker_tool_test/concurrent_tool.sh
lines,28
function,0


for,0

if,1
if [ "," == "$next_char" ]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_trivial/example.sh
lines,6
function,0


for,1
for arg in "$@"
if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_type/test.sh
lines,0
function,0


for,0

if,0

git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_type/external_runner.sh
lines,14
function,0


for,0

if,2
if [[ "$1" == "--buck-test-info" ]]; then file=$2; fi if [[ "${external_runner_config
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_test_env/foo/test.sh
lines,4
function,0


for,0

if,1
if [[ "$HELLO" != "world" ]]; then
git@github.com:facebook/buck.git,9c7c421e49f4d92d67321f18c6d1cd90974c77c4,buck,8571,./buck/test/com/facebook/buck/shell/testdata/sh_binary_with_overwrite_violation/overwrite.sh
lines,4
function,0


for,0

if,0

git@github.com:ybq/Android-SpinKit.git,aa83e4d0a42c76eae15e8b18b79aa2a231cca5f8,Android-SpinKit,8491,
git@github.com:KunMinX/Jetpack-MVVM-Best-Practice.git,543eb8659089d74ccad403763cb16596febc89b7,Jetpack-MVVM-Best-Practice,8468,
git@github.com:junit-team/junit4.git,16228f3ccea3c6f1170488e0e268f3601d130f75,junit4,8468,./junit4/doc/markdown.sh
lines,0
function,0


for,0

if,0

git@github.com:signalapp/Signal-Server.git,8ec062fbefee0ed9696cb7ebd300f060c5727335,Signal-Server,8467,
git@github.com:ssssssss-team/spider-flow.git,c799cca99c7d064673dc79e6ef06a08bbc0e292d,spider-flow,8463,
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/dev.sh
lines,36
function,0


for,0

if,4
if [[ $MONITORING == true ]]; then if [[ $SEPARATE_CONSUMERS == true ]]; then if [[ $MONITORING == true ]]; then if [[ $(uname -m) == 'arm64' && $(uname) == 'Darwin' ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/kafka-setup/kafka-ready.sh
lines,14
function,0


for,1
for i in {1..60}
if,2
if [ $? -eq 0 ]; then if [ $i -eq 60 ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/kafka-setup/kafka-config.sh
lines,14
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/kafka-setup/kafka-setup.sh
lines,155
function,2

cleanup() { send() {
for,0

if,12
if [[ $DATAHUB_PRECREATE_TOPICS == "false" ]]; then if [[ $KAFKA_PROPERTIES_SECURITY_PROTOCOL == "SASL_PLAINTEXT" ]]; then if [[ $KAFKA_PROPERTIES_SECURITY_PROTOCOL == "SASL_SSL" ]]; then if [[ $KAFKA_PROPERTIES_SECURITY_PROTOCOL == "SSL" ]]; then if [[ -n $KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION ]]; then if [[ -n $KAFKA_PROPERTIES_SSL_KEYSTORE_TYPE ]]; then if [[ -n $KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION ]]; then if [[ -n $KAFKA_PROPERTIES_SSL_TRUSTSTORE_TYPE ]]; then if [[ -n "$KAFKA_PROPERTIES_SASL_CLIENT_CALLBACK_HANDLER_CLASS" ]]; then if [[ $started -eq $WORKERS ]]; then if [[ $DATAHUB_ANALYTICS_ENABLED == true ]]; then if [[ $USE_CONFLUENT_SCHEMA_REGISTRY == "TRUE" ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/kafka-setup/kafka-topic-workers.sh
lines,66
function,2

job() { work() {
for,1
for ((i=1;i<=$WORKERS;i++)); do
if,1
if [[ $read_status -eq 0 ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-mce-consumer/start.sh
lines,20
function,0


for,0

if,3
if [[ $SKIP_KAFKA_CHECK != true ]]; then if [[ $ENABLE_OTEL == true ]]; then if [[ $ENABLE_PROMETHEUS == true ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-frontend/start.sh
lines,60
function,0


for,0

if,8
if [[ ${ENABLE_PROMETHEUS:-false} == true ]]; then if [[ ${ENABLE_OTEL:-false} == true ]]; then if [[ ! -z ${SSL_TRUSTSTORE_FILE:-} ]]; then if [[ ! -z ${SSL_TRUSTSTORE_TYPE:-} ]]; then if [[ ! -z ${SSL_TRUSTSTORE_PASSWORD:-} ]]; then if [[ ! -z ${HTTP_PROXY_HOST:-} ]] && [[ ! -z ${HTTP_PROXY_PORT:-} ]]; then if [[ ! -z ${HTTPS_PROXY_HOST:-} ]] && [[ ! -z ${HTTPS_PROXY_PORT:-} ]]; then if [[ ! -z ${HTTP_NON_PROXY_HOSTS:-} ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/mysql-setup/init.sh
lines,5
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/nuke.sh
lines,11
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-ingestion-base/entrypoint.sh
lines,14
function,0


for,0

if,2
if [ ! -z "$ACTIONS_EXTRA_PACKAGES" ]; then if [[ ! -z "$ACTIONS_CONFIG" && ! -z "$ACTIONS_EXTRA_PACKAGES" ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-upgrade/datahub-upgrade.sh
lines,7
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-upgrade/nocode/run_clean.sh
lines,4
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-upgrade/nocode/run_upgrade.sh
lines,4
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/quickstart.sh
lines,43
function,0


for,0

if,4
if [[ $MONITORING == true ]]; then if [[ $SEPARATE_CONSUMERS == true ]]; then if [[ $(uname -m) == 'arm64' && $(uname) == 'Darwin' ]]; then if docker volume ls | grep -c -q datahub_neo4jdata
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-mae-consumer/start.sh
lines,46
function,0


for,1
for i in "${KAFKAS[@]}"; do
if,8
if [[ -n ${NEO4J_HOST:-} ]] && [[ ${NEO4J_HOST} != *"://"* ]]; then if [[ -n ${ELASTICSEARCH_USERNAME:-} ]] && [[ -z ${ELASTICSEARCH_AUTH_HEADER:-} ]]; then if [[ ${ELASTICSEARCH_USE_SSL:-false} == true ]]; then if [[ ${SKIP_KAFKA_CHECK:-false} != true ]]; then if [[ ${SKIP_ELASTICSEARCH_CHECK:-false} != true ]]; then if [[ ${GRAPH_SERVICE_IMPL:-} != elasticsearch ]] && [[ ${SKIP_NEO4J_CHECK:-false} != true ]]; then if [[ ${ENABLE_OTEL:-false} == true ]]; then if [[ ${ENABLE_PROMETHEUS:-false} == true ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/dev-with-cassandra.sh
lines,36
function,0


for,0

if,4
if [[ $MONITORING == true ]]; then if [[ $SEPARATE_CONSUMERS == true ]]; then if [[ $MONITORING == true ]]; then if [[ $(uname -m) == 'arm64' && $(uname) == 'Darwin' ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/ingestion/ingestion.sh
lines,5
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/datahub-gms/start.sh
lines,77
function,0


for,0

if,12
if ! echo $NEO4J_HOST | grep -q "://" ; then if [[ ! -z $ELASTICSEARCH_USERNAME ]] && [[ -z $ELASTICSEARCH_AUTH_HEADER ]]; then if [[ -z $ELASTICSEARCH_AUTH_HEADER ]]; then if [[ $ELASTICSEARCH_USE_SSL == true ]]; then if [[ $SKIP_EBEAN_CHECK != true ]]; then if [[ $ENTITY_SERVICE_IMPL == ebean ]] || [[ -z $ENTITY_SERVICE_IMPL ]]; then if [[ $ENTITY_SERVICE_IMPL == cassandra ]] && [[ $SKIP_CASSANDRA_CHECK != true ]]; then if [[ $SKIP_KAFKA_CHECK != true ]]; then if [[ $GRAPH_SERVICE_IMPL != elasticsearch ]] && [[ $SKIP_NEO4J_CHECK != true ]]; then if [[ $ENABLE_OTEL == true ]]; then if [[ $ENABLE_PROMETHEUS == true ]]; then if [[ $SKIP_ELASTICSEARCH_CHECK != true ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/postgres-setup/init.sh
lines,13
function,0


for,0

if,1
if [ "$POSTGRES_CREATE_DB" = true ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/elasticsearch-setup/create-indices.sh
lines,162
function,3
function create_if_not_exists { function create_datahub_usage_event_datastream() { function create_datahub_usage_event_aws_elasticsearch() {
function create_datahub_usage_event_datastream() { function create_datahub_usage_event_aws_elasticsearch() {
for,0

if,17
if [[ $ELASTICSEARCH_USE_SSL == true ]]; then if [[ -z $ELASTICSEARCH_AUTH_HEADER ]]; then if [[ ! -z $ELASTICSEARCH_USERNAME ]]; then if [[ $ELASTICSEARCH_INSECURE == true ]]; then if [[ -z "$INDEX_PREFIX" ]]; then if [ $RESOURCE_STATUS -eq 200 ]; then elif [ $RESOURCE_STATUS -eq 404 ]; then elif [ $RESOURCE_STATUS -eq 403 ]; then if [ $RESOURCE_STATUS -eq 401 ] || [ $RESOURCE_STATUS -eq 405 ]; then if [[ $USE_AWS_ELASTICSEARCH == false ]] && [[ $ELASTICSEARCH_URL == *"amazonaws"* ]]; then if [ $USAGE_EVENT_STATUS -eq 200 ]; then if [[ $USAGE_EVENT_DEFINITION != *"datahub_usage_event-$INDEX_SUFFIX"* ]]; then if [[ $DATAHUB_ANALYTICS_ENABLED == true ]]; then if [[ $USE_AWS_ELASTICSEARCH == false ]]; then if [ $DATAHUB_USAGE_EVENT_INDEX_RESPONSE_CODE -eq 404 ] elif [ $DATAHUB_USAGE_EVENT_INDEX_RESPONSE_CODE -eq 200 ]; then elif [ $DATAHUB_USAGE_EVENT_INDEX_RESPONSE_CODE -eq 403 ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/dev-without-neo4j.sh
lines,36
function,0


for,0

if,4
if [[ $MONITORING == true ]]; then if [[ $SEPARATE_CONSUMERS == true ]]; then if [[ $MONITORING == true ]]; then if [[ $(uname -m) == 'arm64' && $(uname) == 'Darwin' ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/quickstart/generate_docker_quickstart.sh
lines,12
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docker/quickstart/generate_and_compare.sh
lines,13
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/tests/integration/dbt/copy-from-sample-dbt.sh
lines,16
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/tests/integration/hana/post_start/import_sql.sh
lines,21
function,1
function main() {
function main() {
for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/tests/integration/kafka/send_records.sh
lines,12
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/release.sh
lines,24
function,0


for,0

if,4
if [[ ! ${RELEASE_SKIP_TEST:-} ]]; then elif [[ ! ${RELEASE_SKIP_INSTALL:-} ]]; then if [[ ${RELEASE_VERSION:-} ]]; then if [[ ! ${RELEASE_SKIP_UPLOAD:-} ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/custom_package_codegen.sh
lines,16
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/docgen.sh
lines,10
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/install_deps.sh
lines,31
function,0


for,0

if,3
if [ "$(uname)" == "Darwin" ]; then if command -v sudo; then if command -v yum; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/specgen.sh
lines,9
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/install_editable_versions.sh
lines,7
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/modeldocgen.sh
lines,16
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/datahub_preflight.sh
lines,119
function,3

verlte() { brew_install() { arm64_darwin_preflight() {
for,2
printf "⛅ Installing prerequisities for scipy" printf "👟 Running preflight for m1 mac\n"
if,11
printf '\n🔎 Checking if %s installed\n' "${package}" if [ -n "${version}" ]; then if [ -n "$2" ] && ! verlte "${required_version}" "${version}"; then printf "🔎 Checking if Scipy installed\n" if pip list | grep -F scipy; then if [ ! -z $(brew --prefix)/opt/postgresql ]; then if [ ! -z $(brew --prefix postgresql@14)/lib/postgresql@14 ]; then if pip list | grep -F confluent-kafka; then printf "🔎 Checking if current directory is metadata-ingestion folder\n" if [ "$(basename "$(pwd)")" != "metadata-ingestion" ]; then if [[ $(uname -m) == 'arm64' && $(uname) == 'Darwin' ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/datahub_docker.sh
lines,19
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/update_golden_files.sh
lines,11
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/codegen.sh
lines,14
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/modeldocupload.sh
lines,4
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/scripts/testdocgen.sh
lines,4
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/examples/cli_usage/user/run_example.sh
lines,1
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/examples/cli_usage/group/run_example.sh
lines,1
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion/examples/demo_data/generate_demo_data.sh
lines,18
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docs-website/genJsonSchema/generateJsonSchema.sh
lines,9
function,0


for,0

if,1
if [ -f "${SCHEMA_ROOT_DIR}/${SCHEMA_FILE_NAME}" ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docs-website/vercel-setup.sh
lines,31
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/docs-website/graphql/generateGraphQLSchema.sh
lines,18
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/perf-test/scripts/ingest_test.sh
lines,3
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-ingestion-modules/airflow-plugin/scripts/release.sh
lines,26
function,0


for,0

if,4
if [[ ! ${RELEASE_SKIP_TEST:-} ]]; then elif [[ ! ${RELEASE_SKIP_INSTALL:-} ]]; then if [[ ${RELEASE_VERSION:-} ]]; then if [[ ! ${RELEASE_SKIP_UPLOAD:-} ]]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/.github/scripts/docker_helpers.sh
lines,39
function,8
function get_short_sha { function get_tag { function get_tag_slim { function get_tag_full { function get_python_docker_release_v { function get_unique_tag { function get_unique_tag_slim { function get_unique_tag_full {

for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_ownership.sh
lines,10
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_schema.sh
lines,8
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_editable_properties.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_tags.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_properties.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_glossary.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_documentation.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/test_resources/timeline/test_timeline_editable_schema.sh
lines,6
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/run-quickstart.sh
lines,27
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/set-cypress-creds.sh
lines,4
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/cypress-dev.sh
lines,21
function,1

python -c 'from tests.cypress.integration_test import ingest_data; ingest_data()'
for,0

if,1
if [ "${RUN_QUICKSTART:-true}" == "true" ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/smoke-test/smoke.sh
lines,36
function,0


for,0

if,3
if [ "${RUN_QUICKSTART:-true}" == "true" ]; then if [[ -z "${TEST_STRATEGY}" ]]; then if [ "$TEST_STRATEGY" == "no_cypress" ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-events/mxe-schemas/rename-namespace.sh
lines,11
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-models-custom/scripts/insert_one.sh
lines,1
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/datahub-client/scripts/check_jar.sh
lines,46
function,0


for,1
for jarFile in ${jarFiles}; do
if,1
if [ $? -ne 0 ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/spark-smoke-test/docker/build_images.sh
lines,26
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/spark-smoke-test/setup_spark_smoke_test.sh
lines,45
function,0


for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/spark-smoke-test/python-spark-lineage-test/python_test_run.sh
lines,31
function,1

saluation () {
for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/spark-smoke-test/test-spark-lineage/java_test_run.sh
lines,26
function,1

saluation () {
for,0

if,0

git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/spark-smoke-test/smoke.sh
lines,62
function,1

is_healthy() {
for,1
echo "Setup environment for pytest"
if,2
if (( attempt_num == max_attempts )) if [ "${RUN_QUICKSTART:-true}" == "true" ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/spark-lineage/scripts/check_jar.sh
lines,46
function,0


for,1
for jarFile in ${jarFiles}; do
if,1
if [ $? -ne 0 ]; then
git@github.com:datahub-project/datahub.git,b1abd38a6b4aef3da0c50ecd23612cae7e3c5d28,datahub,8441,./datahub/metadata-integration/java/datahub-protobuf/scripts/check_jar.sh
lines,49
function,0


for,1
for jarFile in ${jarFiles}; do
if,1
if [ $? -ne 0 ]; then
git@github.com:dropwizard/dropwizard.git,42424bdfccff40b251e372b05271fe8f117e8f99,dropwizard,8425,./dropwizard/prepare_docs.sh
lines,60
function,0


for,2
echo "Creating a directory for documentation" git commit -m "Add docs for Dropwizard $release_number"
if,1
echo "Please review changes and push them with if they look good"
git@github.com:roughike/BottomBar.git,885d70e62359d15ed17dfd77a28809702d6ae513,BottomBar,8423,
git@github.com:airbnb/epoxy.git,9a43af4d043e71f29afe4cbeadf8c008740a5184,epoxy,8360,
git@github.com:shwenzhang/AndResGuard.git,e4df245d82f27d9a2d0dd108260a3510cbaba849,AndResGuard,8350,./AndResGuard/tool_output/build_apk.sh
lines,3
function,0


for,0

if,0

git@github.com:zhoutaoo/SpringCloud.git,66330fa22403bc1db4b16f4c1bdc25116065e1c9,SpringCloud,8327,./SpringCloud/docker-compose/init-db.sh
lines,8
function,0


for,1
for file in $(find /sql -name "*.sql" -exec ls {} \;| grep -v postgres | sort | tr ' ' '|' | tr '\n' ' ')
if,0

git@github.com:zhoutaoo/SpringCloud.git,66330fa22403bc1db4b16f4c1bdc25116065e1c9,SpringCloud,8327,./SpringCloud/install.sh
lines,223
function,0


for,0

if,0

git@github.com:amitshekhariitbhu/Android-Debug-Database.git,829ddd046fd57b80df20b43b0b4b17e4d8160bf1,Android-Debug-Database,8260,
git@github.com:json-path/JsonPath.git,21de6207945dfca6b49809fa9dd08c3781b7ab9d,JsonPath,8244,
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.circleci/generate.sh
lines,339
function,6

die () print_help() add_diff_tests () delete_job() delete_yaml_block() delete_repeated_jobs()
for,10
echo " Use this for permanent changes in config.yml that will be committed to the main repo." echo " -f Generate config.yml for tests compatible with the CircleCI free tier resources" echo " -p Generate config.yml for tests compatible with the CircleCI paid tier resources" echo " -b Specify the base git branch for comparison when determining changed tests to" echo " or when there are too many changed tests for CircleCI." for entry in $(echo $env_vars | tr "|" "\n"); do echo "Generating new config.yml file for free tier from config_template.yml" echo "Generating new config.yml file for paid tier from config_template.yml" echo "Generating new default config.yml file for free tier and FREE/PAID templates from config_template.yml." for test in $tests; do
if,26
e ) if (! ($has_env_vars)); then if [ "$ if $has_env_vars && $check_env_vars; then if [ "$key" != "DTEST_REPO" ] && if $free; then elif $paid; then elif $all; then echo "after running this command if you want them to persist." elif (! ($has_env_vars)); then if $detect_changed_tests; then if ! git show ${BASE_BRANCH} -- >&/dev/null; then if echo "$env_vars" | grep -q "${1}="; then elif [ -z "$env_vars" ]; then if $has_env_vars; then if (! (echo "$env_vars" | grep -q "REPEATED_UTESTS=" )); then if (! (echo "$env_vars" | grep -q "REPEATED_UTESTS_LONG=")); then if (! (echo "$env_vars" | grep -q "REPEATED_UTESTS_STRESS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_UTESTS_FQLTOOL=")); then if (! (echo "$env_vars" | grep -q "REPEATED_SIMULATOR_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_JVM_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_JVM_UPGRADE_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_LARGE_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_UPGRADE_DTESTS=")); then if (! (echo "$env_vars" | grep -q "REPEATED_ANT_TEST_CLASS=")); then if $all; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/curl_install.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/tail_syslog.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker-run-cqlsh-load-data.sh
lines,3
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_one_table.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_backup2.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_flush_table.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/yum_cass.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker-network-run.sh
lines,2
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker_cqlsh.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_both_backups.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_one_table2.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/find_two_snapshots.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/java_verify.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/find_backups.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/tail_syslog_package.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/curl_verify_sha.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_list_snapshots.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_status_nobin.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/flush_and_check.sh
lines,2
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/find_snapshots.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker_run.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/verify_gpg.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/run_cqlsh_nobin.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_clearsnapshot.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker-kill-and-remove.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_files.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/cqlsh_localhost.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/apt-get_update.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_snapshot.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/tarball.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/yum_update.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_flush.sh
lines,3
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/get_deb_package.sh
lines,2
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/start_tarball.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_mult_tables.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_clearsnapshot_all.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/find_sstables.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker-run-cqlsh-quickstart.sh
lines,2
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_mult_tables_again.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/nodetool_status.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/add_repo_keys.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/snapshot_mult_ks.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/docker_pull.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/apt-get_cass.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/run_cqlsh.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/yum_start.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/doc/modules/cassandra/examples/BASH/check_backups.sh
lines,1
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/ide/nbproject/update-netbeans-classpaths.sh
lines,31
function,0


for,1
CLASSPATH=`for f in build/lib/jars/*.jar ; do echo -n '${project.dir}/'$f: ; done ; for f in build/test/lib/jars/*.jar ; do echo -n '${project.dir}/'$f: ; done ;`
if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/build-shaded-dtest-jar.sh
lines,57
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/conf/cassandra-env.sh
lines,297
function,1

calculate_heap_sizes()
for,1
echo "It is not recommended to set -Xmn with the G1 garbage collector. See comments for -Xmn in jvm-server.options for details."
if,23
if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "8192" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ "x$CASSANDRA_LOG_DIR" = "x" ] ; then if [ "$?" = "1" ] ; then if [ "x$MAX_HEAP_SIZE" = "x" ] && [ "x$HEAP_NEWSIZE" = "x" -o $USING_G1 -eq 0 ]; then elif [ "x$MAX_HEAP_SIZE" = "x" ] || [ "x$HEAP_NEWSIZE" = "x" -a $USING_G1 -ne 0 ]; then if [ "x$MALLOC_ARENA_MAX" = "x" ] ; then if [ $DEFINED_XMX -ne 0 ] && [ $DEFINED_XMS -ne 0 ]; then elif [ $DEFINED_XMX -ne 0 ] || [ $DEFINED_XMS -ne 0 ]; then if [ $DEFINED_XMN -eq 0 ] && [ $DEFINED_XMX -ne 0 ]; then elif [ $DEFINED_XMN -ne 0 ] && [ $USING_CMS -eq 0 ]; then if [ $DEFINED_XMN -eq 0 ] && [ $USING_G1 -eq 0 ]; then if [ "$JVM_ARCH" = "64-Bit" ] && [ $USING_CMS -eq 0 ]; then if [ "x$CASSANDRA_HEAPDUMP_DIR" != "x" ]; then if [ "x$LOCAL_JMX" = "x" ]; then if [ "$LOCAL_JMX" = "yes" ]; then if [ "x$MX4J_ADDRESS" != "x" ]; then if [[ "$MX4J_ADDRESS" == \-Dmx4jaddress* ]]; then if [ "x$MX4J_PORT" != "x" ]; then if [[ "$MX4J_PORT" == \-Dmx4jport* ]]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/pylib/cassandra-cqlsh-tests.sh
lines,134
function,0


for,0

if,3
if [ "$cython" = "yes" ]; then if ls ${TMPDIR}/test/*/logs/* &>/dev/null ; then if ! command -v circleci >/dev/null 2>&1
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_docker_run.sh
lines,134
function,0


for,0

if,6
if [ "$1" == "-h" ]; then if [ "x${java_version}" == "x" ] ; then if [[ ! "${java_version}" =~ $regx_java_version ]]; then if [ -f ${cassandra_dir}/.git ] ; then if ! ( [[ "$(docker images -q ${image_name} 2>/dev/null)" != "" ]] ) ; then if ! ( docker pull -q ${image_name} >/dev/null 2>/dev/null ) ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/build-artifacts.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/check-code.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_build-redhat.sh
lines,122
function,0


for,0

if,7
if [ "$1" == "-h" ]; then if [ "${RPM_DIST}" == "rpm" ]; then elif [ "${RPM_DIST}" == "noboolean" ]; then if [[ $buildxml_version =~ $regx_snapshot ]]; then if [ "$tag" ]; then if [[ $tag =~ $regx_tag ]] || [[ $tag =~ $regx_tag_tentative ]]; then if [ $buildxml_version != $git_version ]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_create_user.sh
lines,64
function,0


for,0

if,2
if [ "$1" == "-h" ]; then if grep "^ID=" /etc/os-release | grep -q 'debian\|ubuntu' ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/build-debian.sh
lines,35
function,0


for,0

if,1
if [ "$1" == "-h" ]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/run-tests.sh
lines,238
function,0


for,1
[ "${target}" == "cqlsh-test" ] || { echo "cython is only supported for cqlsh-test"; exit 1; }
if,13
if [ "$ if [ "x${java_version}" == "x" ] ; then if [[ ! "${java_version}" =~ $regx_java_version ]]; then if [ "x" == "x${python_version}" ] ; then if ! ( [[ "$(docker images -q ${image_name} 2>/dev/null)" != "" ]] ) ; then if ! ( docker pull -q ${image_name} >/dev/null 2>/dev/null ) ; then if [[ ! -z ${JENKINS_URL+x} ]] && [[ ! -z ${NODE_NAME+x} ]] ; then if [ "${target}" == "long-test" ] ; then elif [[ "${target}" =~ dtest* ]] ; then if [ "$cython" == "yes" ]; then if [[ "${split_chunk}" =~ ^[0-9]+/[0-9]+$ ]]; then if [ -f ${cassandra_dir}/.git ] ; then if [ "$status" -ne 0 ] ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_set_java.sh
lines,64
function,0


for,0

if,4
if [ "$1" == "-h" ]; then echo " if Java version is not set, it is set to ${java_version_default} by default, valid ${java_version_supported}" if [[ ! "$java_version" =~ $regx_java_version ]]; then if grep "^ID=" /etc/os-release | grep -q 'debian\|ubuntu' ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/build-redhat.sh
lines,46
function,0


for,1
echo " build redhat packages, specify noboolean for centos7 compatibility"
if,2
if [ "$1" == "-h" ]; then if [ "${rpm_dist}" == "noboolean" ]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_build-debian.sh
lines,129
function,0


for,0

if,7
if [[ $buildxml_version =~ $regx_snapshot ]]; then if [ "$tag" ]; then if [[ $tag =~ $regx_tag ]] || [[ $tag =~ $regx_tag_tentative ]]; then if [[ $branch =~ $regx_branch ]]; then if [ -z $git_version ]; then if [[ ! $changelog_version =~ $chl_expected ]]; then if [ $buildxml_version != $git_version ]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/docker/_docker_init_tests.sh
lines,38
function,0


for,0

if,2
if [ "$1" == "-h" ]; then if [ -d "${DIST_DIR}/test/logs" ]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/build-artifacts.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/check-code.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/run-python-dtests.sh
lines,183
function,0


for,0

if,14
if [ "$ if [ "${java_version}" -eq 17 ] && [[ "${target}" == "dtest-upgrade" ]] ; then if [ "${DTEST_TARGET}" = "dtest" ]; then elif [ "${DTEST_TARGET}" = "dtest-novnode" ]; then elif [ "${DTEST_TARGET}" = "dtest-offheap" ]; then elif [ "${DTEST_TARGET}" = "dtest-large" ]; then elif [ "${DTEST_TARGET}" = "dtest-large-novnode" ]; then elif [ "${DTEST_TARGET}" = "dtest-upgrade" ]; then elif [ "${DTEST_TARGET}" = "dtest-upgrade-novnode" ]; then elif [ "${DTEST_TARGET}" = "dtest-upgrade-large" ]; then elif [ "${DTEST_TARGET}" = "dtest-upgrade-novnode-large" ]; then if [[ "${DTEST_SPLIT_CHUNK}" =~ ^[0-9]+/[0-9]+$ ]]; then elif [[ "x" != "x${DTEST_SPLIT_CHUNK}" ]] ; then if ls ${TMPDIR}/*/test/*/logs/* &>/dev/null ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/run-tests.sh
lines,266
function,6

_list_tests() { _split_tests() { _timeout_for() { _build_all_dtest_jars() { _run_testlist() { _main() {
for,15
echo "Skipping dtest jar build for branch under test as ${DIST_DIR}/dtest-${dtest_jar_version}.jar already exists" echo "Reusing ${TMP_DIR}/cassandra-dtest-jars for past branch dtest jars" echo "Cloning cassandra to ${TMP_DIR}/cassandra-dtest-jars for past branch dtest jars" for branch in cassandra-4.0 cassandra-4.1 cassandra-5.0 trunk ; do echo "Skipping dtest jar build for branch ${branch} as ${DIST_DIR}/dtest-${dtest_jar_version}.jar already exists" _run_testlist "unit" "testclasslist" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "unit" "testclasslist-cdc" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "unit" "testclasslist-compression" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "unit" "testclasslist-oa" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "unit" "testclasslist-system-keyspace-directory" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "unit" "testclasslist-trie" "${split_chunk}" "$(_timeout_for 'test.timeout')" _run_testlist "burn" "testclasslist" "${split_chunk}" "$(_timeout_for 'test.burn.timeout')" _run_testlist "long" "testclasslist" "${split_chunk}" "$(_timeout_for 'test.long.timeout')" ant testclasslist -Dtest.classlistprefix=distributed -Dtest.timeout=$(_timeout_for "test.distributed.timeout") -Dtest.classlistfile=<(echo "${testlist}") ${ANT_TEST_OPTS} || echo "failed ${target} ${split_chunk}" ant testclasslist -Dtest.classlistprefix=distributed -Dtest.timeout=$(_timeout_for "test.distributed.timeout") -Dtest.classlistfile=<(echo "${testlist}") ${ANT_TEST_OPTS} || echo "failed ${target} ${split_chunk}"
if,14
if [ "$ if [[ "${_split_chunk}" =~ ^[0-9]+/[0-9]+$ ]]; then elif [[ "x" != "x${_split_chunk}" ]] ; then if [ -f "${DIST_DIR}/dtest-${dtest_jar_version}.jar" ] ; then if [ -d ${TMP_DIR}/cassandra-dtest-jars ] && [ "https://github.com/apache/cassandra.git" == "$(git -C ${TMP_DIR}/cassandra-dtest-jars remote get-url origin)" ] ; then if [ "x" == "x${OFFLINE}" ] ; then if [ -f "${DIST_DIR}/dtest-${dtest_jar_version}.jar" ] ; then if [[ "${_split_chunk}" =~ ^[0-9]+/[0-9]+$ ]]; then if [[ -z "${testlist}" ]]; then if [[ -z "${testlist}" ]]; then if [[ "${_split_chunk}" =~ ^\d+/\d+$ ]] && [[ "1/1" != "${split_chunk}" ]] ; then if [ "${java_version}" -eq 17 ] && [[ "${target}" == "jvm-dtest-upgrade" ]] ; then if [[ -z "$testlist" ]]; then if [[ -z "${testlist}" ]]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/.build/build-jars.sh
lines,30
function,0


for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/redhat/cassandra.in.sh
lines,121
function,0


for,5
for jar in /usr/share/cassandra/lib/*.jar; do for jar in /usr/share/cassandra/*.jar; do for jar in "$CASSANDRA_HOME"/lib/"$platform"/*.jar ; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for opt in `grep "^-" $JVM_OPTS_FILE` `grep "^-" $JVM_DEP_OPTS_FILE`
if,9
if [ -n "$CLASSPATH" ]; then if [ -d "$CASSANDRA_HOME"/lib/"$platform" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$short" = "11" ] ; then elif [ "$JVM_VERSION" \< "17" ] ; then if [ $JAVA_VERSION -ge 17 ] ; then elif [ $JAVA_VERSION -ge 11 ] ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/redhat/noboolean/cassandra.in.sh
lines,88
function,0


for,5
for jar in /usr/share/cassandra/lib/*.jar; do for jar in /usr/share/cassandra/*.jar; do for jar in "$CASSANDRA_HOME"/lib/"$platform"/*.jar ; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for opt in `grep "^-" $JVM_OPTS_FILE` `grep "^-" $JVM_DEP_OPTS_FILE`
if,9
if [ -n "$CLASSPATH" ]; then if [ -d "$CASSANDRA_HOME"/lib/"$platform" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$short" = "11" ] ; then elif [ "$JVM_VERSION" \< "17" ] ; then if [ $JAVA_VERSION -ge 17 ] ; then elif [ $JAVA_VERSION -ge 11 ] ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/start_cassandra.sh
lines,27
function,1
function start_cassandra() {
function start_cassandra() {
for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/install_cassandra.sh
lines,55
function,1
function install_cassandra() {
function install_cassandra() {
for,0

if,1
if [[ "0.6" == "$C_MAJOR_VERSION" ]] ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/wipe_cassandra.sh
lines,27
function,1
function wipe_cassandra() {
function wipe_cassandra() {
for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/stop_cassandra.sh
lines,28
function,1
function stop_cassandra() {
function stop_cassandra() {
for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/configure_cassandra.sh
lines,70
function,1
function configure_cassandra() {
function configure_cassandra() {
for,2
for server in "$@"; do for server in "$@"; do
if,1
if [[ "x"`grep -e '^seeds:' $config_file` == "x" ]]; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/test/resources/functions/nodetool_cassandra.sh
lines,26
function,1
function nodetool_cassandra() {
function nodetool_cassandra() {
for,0

if,0

git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/bin/cassandra.in.sh
lines,163
function,0


for,6
echo "There are JAR artifacts for multiple versions in the $dir directory. Please clean the project with 'ant realclean' and build it again." 1>&2 for jar in "$CASSANDRA_HOME"/lib/*.jar; do for jsr223jar in "$CASSANDRA_HOME"/lib/jsr223/*/*.jar; do for jar in "$CASSANDRA_HOME"/lib/"$platform"/*.jar ; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for opt in `grep "^-" $JVM_OPTS_FILE` `grep "^-" $JVM_DEP_OPTS_FILE`
if,17
if [ "x$CASSANDRA_HOME" = "x" ]; then if [ "x$CASSANDRA_CONF" = "x" ]; then if [ -d $CASSANDRA_HOME/build ] ; then if [ "$jars_cnt" -gt 1 ]; then if [ "$jars_cnt" = "1" ]; then if [ -d "$CASSANDRA_HOME"/lib/jsr223/jruby/ruby ] ; then if [ -d "$CASSANDRA_HOME"/lib/jsr223/jruby/jni ] ; then if [ -f "$CASSANDRA_HOME"/lib/jsr223/jython/jython.jar ] ; then if [ -f "$CASSANDRA_HOME"/lib/jsr223/scala/scala-compiler.jar ] ; then if [ -d "$CASSANDRA_HOME"/lib/"$platform" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$short" = "11" ] ; then elif [ "$JVM_VERSION" \< "17" ] ; then if [ $JAVA_VERSION -ge 17 ] ; then elif [ $JAVA_VERSION -ge 11 ] ; then
git@github.com:apache/cassandra.git,06202c9ff3991a67ecc50edf26ba67b4394fef1a,cassandra,8214,./cassandra/tools/bin/cassandra.in.sh
lines,122
function,0


for,4
for jar in "$CASSANDRA_HOME"/tools/lib/*.jar; do for jar in "$CASSANDRA_HOME"/lib/*.jar; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for opt in `grep "^-" $JVM_OPTS_FILE` `grep "^-" $JVM_DEP_OPTS_FILE`
if,10
if [ "x$CASSANDRA_HOME" = "x" ]; then if [ "x$CASSANDRA_CONF" = "x" ]; then if [ -d $CASSANDRA_HOME/build ] ; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$short" = "11" ] ; then elif [ "$JVM_VERSION" \< "17" ] ; then if [ $JAVA_VERSION -ge 17 ] ; then elif [ $JAVA_VERSION -ge 11 ] ; then
git@github.com:florent37/MaterialViewPager.git,e2fb22e0ad95b00934c3d73cd1031c1cd5b407c1,MaterialViewPager,8183,./MaterialViewPager/publish.sh
lines,0
function,0


for,0

if,0

git@github.com:react-native-image-picker/react-native-image-picker.git,5c88725e541fbad22e7ae0a8ea3836a0de734867,react-native-image-picker,8174,
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/ruby/run_tests.sh
lines,2
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/gov2/lint_all_go.sh
lines,16
function,1
function runCommand() {
function runCommand() {
for,1
for d in aurora demotools dynamodb iam lambda s3 testtools
if,1
if [ $ret_code != 0 ]; then exit $ret_code; fi
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/gov2/run_all_tests.sh
lines,15
function,1
function runCommand() {
function runCommand() {
for,1
for d in ./aws-doc-sdk-examples/ ; do /bin/bash -c "(cd '$d' && go test -tags=$@ -timeout=60m ./...)"; done
if,1
if [ $@ ] && [ $@ == 'integration' ]
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/go/cloudwatch/Lambda/packageLambda.sh
lines,6
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/cpp/build_all_examples.sh
lines,55
function,0


for,1
for MAKE_FILE in "${CMAKE_FILES[@]}"
if,4
if [[ ${len} == 0 ]]; then if [ $? != 0 ]; then if [ $? != 0 ]; then if [ $HAD_ERROR = true ]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/ec2/change-ec2-instance-type/change_ec2_instance_type.sh
lines,273
function,2
function get_instance_info { function change_ec2_instance_type {
function usage() (
for,3
iecho "Waiting for $INSTANCE_ID to report 'stopped' state..." errecho "ERROR - AWS reports that it's unable to change the instance type for instance $INSTANCE_ID from $EXISTING_TYPE to $REQUESTED_TYPE.\n$RESPONSE" iecho "Waiting for instance $INSTANCE_ID to report 'running' state..."
if,13
if [[ $? -ne 0 ]] || [[ -z "$RESPONSE" ]]; then if [[ -z "$INSTANCE_ID" ]]; then if [[ -z "$REQUESTED_TYPE" ]]; then if [[ ${?} -ne 0 ]]; then if [[ "$EXISTING_TYPE" == "$REQUESTED_TYPE" ]]; then if [[ "$EXISTING_STATE" == "running" ]]; then if [[ $FORCE == false ]]; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if [[ "$RESTART" == "true" ]]; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/ec2/change-ec2-instance-type/awsdocs_general.sh
lines,150
function,6
function run_test { function test_failed { function errecho { function iecho { function ipause { function generate_random_name {

for,1
for _ in {1..4}
if,7
if [[ -z "$4" ]]; then EXPECTED_OUTPUT="$4"; else EXPECTED_OUTPUT=""; fi if [[ "$EXPECTED_ERR_CODE" -ne "$ERR" ]]; then if [[ -n "$EXPECTED_OUTPUT" ]]; then if [[ -z "$MATCH" ]]; then if [[ $VERBOSE == true ]]; then if [[ $INTERACTIVE == true ]]; then if [[ -n $1 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/ec2/change-ec2-instance-type/test_change_ec2_instance_type.sh
lines,198
function,1
function usage {

for,5
echo " instance can remain. Check for the instance and delete it manually to" iecho -n "Retrieving the AMI ID for the latest Amazon Linux 2 AMI..." iecho -n "Waiting for instance $EC2_INSTANCE_ID to exist..." iecho -n "Waiting for instance $EC2_INSTANCE_ID to reach running state..." iecho -n "Waiting for instance $EC2_INSTANCE_ID to terminate..."
if,11
if [ "$VERBOSE" == "true" ]; then iecho "Tests running in verbose mode."; fi if [ "$INTERACTIVE" == "true" ]; then iecho "Tests running in interactive mode."; fi if [ ${?} -ne 0 ]; then if [ ${?} -ne 0 ]; then if [[ ${?} -ne 0 ]]; then if [ "$EXISTING_TYPE" != "t2.nano" ]; then if [ "$EXISTING_STATE" != "stopped" ]; then if [ "$EXISTING_TYPE" != "t2.micro" ]; then if [ "$EXISTING_STATE" != "running" ]; then if [ ${?} -ne 0 ]; then if [[ ${?} -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/medical-imaging/tests/include_tests.sh
lines,90
function,2
function run_test() { function test_failed() {
function run_test() { function test_failed() {
for,0

if,4
if [[ -n "$4" ]]; then expected_output="$4"; else expected_output=""; fi if [[ "$expected_err_code" -ne "$err" ]]; then if [[ -n "$expected_output" ]]; then if [[ -z "$match" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/medical-imaging/tests/test_medical_imaging_examples.sh
lines,150
function,1
function main() {
function main() { function usage() {
for,0

if,7
if [ "$INTERACTIVE" == "true" ]; then iecho "Tests running in interactive mode."; fi if [ "$VERBOSE" == "true" ]; then iecho "Tests running in verbose mode."; fi if [ "${entries[1]}" == "$datastore_id" ]; then if [ "${ if [ "$data_store_found" == "false" ]; then if [ "${ if [ "$retrieved_datastore_id" != "$datastore_id" ]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/medical-imaging/medical_imaging_operations.sh
lines,279
function,4
function imaging_create_datastore() { function imaging_list_datastores() { function imaging_get_datastore() { function imaging_delete_datastore() {
function imaging_create_datastore() { function usage() { function imaging_list_datastores() { function usage() { function imaging_get_datastore() { function usage() { function imaging_delete_datastore() { function usage() {
for,1
echo "Creates an AWS HealthImaging data store for importing DICOM P10 files."
if,7
if [[ -z "$datastore_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$datastore_id" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$datastore_id" ]]; then if [[ $error_code -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/medical-imaging/awsdocs_general.sh
lines,133
function,5
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
for,1
for _ in {1..4}; do
if,10
if [[ $VERBOSE == true ]]; then if [[ $INTERACTIVE == true ]]; then if [[ -n $1 ]]; then if [ "$err_code" == 1 ]; then elif [ "$err_code" == 2 ]; then elif [ "$err_code" == 130 ]; then elif [ "$err_code" == 252 ]; then elif [ "$err_code" == 253 ]; then elif [ "$err_code" == 254 ]; then elif [ "$err_code" == 255 ]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/dynamodb/dynamodb_operations.sh
lines,1068
function,13
function dynamodb_create_table() { function dynamodb_wait_table_active() { function dynamodb_describe_table { function dynamodb_put_item() { function dynamodb_update_item() { function dynamodb_get_item() { function dynamodb_delete_item() { function dynamodb_query() { function dynamodb_scan() { function dynamodb_batch_write_item() { function dynamodb_batch_get_item() { function dynamodb_list_tables() { function dynamodb_delete_table() {
function dynamodb_create_table() { function usage() { function dynamodb_wait_table_active() { function usage() { function usage() { function dynamodb_put_item() { function usage() { function dynamodb_update_item() { function usage() { function dynamodb_get_item() { function usage() { function dynamodb_delete_item() { function usage() { function dynamodb_query() { function usage() { function dynamodb_scan() { function usage() { function dynamodb_batch_write_item() { function usage() { function dynamodb_batch_get_item() { function usage() { function dynamodb_list_tables() { function dynamodb_delete_table() { function usage() {
for,2
echo " -p provisioned_throughput -- Provisioned throughput settings for the table." echo "Waits for a DynamoDB table to become active."
if,44
if [[ -z "$table_name" ]]; then if [[ -z "$attribute_definitions" ]]; then if [[ -z "$key_schema" ]]; then if [[ -z "$provisioned_throughput" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$item" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$keys" ]]; then if [[ -z "$update_expression" ]]; then if [[ -z "$values" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$keys" ]]; then if [[ -n "$query" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -n "$query" ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$keys" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$key_condition_expression" ]]; then if [[ -z "$attribute_names" ]]; then if [[ -z "$attribute_values" ]]; then if [[ -z "$projection_expression" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ -z "$filter_expression" ]]; then if [[ -z "$expression_attribute_names" ]]; then if [[ -z "$expression_attribute_values" ]]; then if [[ -z "$projection_expression" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$item" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$item" ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$table_name" ]]; then if [[ $error_code -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/dynamodb/tests/include_tests.sh
lines,106
function,2
function run_test() { function test_failed() {
function run_test() { function test_failed() {
for,0

if,6
if [[ "$skip_tests" = true ]]; then if [[ -n "$4" ]]; then expected_output="$4"; else expected_output=""; fi if [[ "$expected_err_code" -ne "$err" ]]; then if [[ -n "$expected_output" ]]; then if [[ -z "$match" ]]; then if [[ "$exit_on_failure" = true ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/dynamodb/tests/test_dynamodb_examples.sh
lines,370
function,1
function main() {
function main() { function usage() {
for,2
run_test "Waiting for table to become active" \ for listed_table_name in "${table_names[@]}"; do
if,10
if [ "$INTERACTIVE" == "true" ]; then iecho "Tests running in interactive mode."; fi if [ "$VERBOSE" == "true" ]; then iecho "Tests running in verbose mode."; fi if [[ "$test_command_response" != "ACTIVE" ]]; then if [[ "$listed_table_name" == "$test_table_name" ]]; then if [[ "$found" == "false" ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/dynamodb/scenario_getting_started_movies.sh
lines,614
function,8
function get_input() { function clean_up() { function get_yes_no_input() { function get_int_input() { function get_float_input() { function echo_repeat() { function dynamodb_getting_started_movies() { function main() {
function get_input() { function clean_up() { function get_yes_no_input() { function get_int_input() { function get_float_input() { function echo_repeat() { function dynamodb_getting_started_movies() { function main() {
for,6
for ((i = 0; i < end; i++)); do echo -n "Enter a name for a new DynamoDB table: " echo "Waiting for the table to become active...." echo -n "Summarize the plot for me: " for batch_json in movie_files/movies_*.json; do echo "Now let's scan for movies released in a range of years. Enter a year: "
if,43
if [ -z "${mock_input+x}" ]; then if [ -n "${mock_input_array[*]}" ]; then if [ -n "$table_name" ]; then if (dynamodb_delete_table -n "$table_name"); then if [ -e "$key_schema_json_file" ]; then if [ -e "$attribute_definitions_json_file" ]; then if [ -e "$item_json_file" ]; then if [ -e "$key_json_file" ]; then if [ -e "$batch_json_file" ]; then if [ -e "$attribute_names_json_file" ]; then if [ -e "$attributes_values_json_file" ]; then if [ -z "$1" ]; then if [ "$response" = "y" ] || [ "$response" = "n" ]; then if [ "$response" = "y" ]; then if [ -z "$1" ]; then if [[ index -gt 10 ]]; then if [[ -n "$response" ]]; then if [[ -z $low ]] || [[ -z $high ]]; then if [[ $response -lt $low ]]; then if [[ $response -gt $high ]]; then if [ -z "$1" ]; then if [[ index -gt 10 ]]; then if [[ -n "$response" ]]; then if [[ -n "$response" ]]; then if [[ -z $low ]] || [[ -z $high ]]; then if (($(echo "$response < $low" | bc -l))); then if (($(echo "$response > $high" | bc -l))); then if dynamodb_create_table -n "$table_name" -a "$attribute_definitions_json_file" \ if dynamodb_wait_table_active -n "$table_name"; then if dynamodb_put_item -n "$table_name" -i "$item_json_file"; then if dynamodb_update_item -n "$table_name" -k "$key_json_file" -e "$update_expression" -v "$item_json_file"; then if dynamodb_batch_write_item -i "$batch_json_file" 1>/dev/null; then if get_yes_no_input "Let's move on...do you want to get info about '$title'? (y/n) "; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if ! get_yes_no_input "Try another year? (y/n) "; then if [[ ${?} -ne 0 ]]; then if get_yes_no_input "Do you want to remove '$added_title'? (y/n) "; then if ! dynamodb_delete_item -n "$table_name" -k "$key_json_file"; then if get_yes_no_input "Do you want to delete the table '$table_name'? (y/n) "; then if ! clean_up "$table_name"; then if ! clean_up; then if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/dynamodb/awsdocs_general.sh
lines,136
function,5
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
for,1
for _ in {1..4}; do
if,10
if [[ $VERBOSE == true ]]; then if [[ $INTERACTIVE == true ]]; then if [[ -n $1 ]]; then if [ "$err_code" == 1 ]; then elif [ "$err_code" == 2 ]; then elif [ "$err_code" == 130 ]; then elif [ "$err_code" == 252 ]; then elif [ "$err_code" == 253 ]; then elif [ "$err_code" == 254 ]; then elif [ "$err_code" == 255 ]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/run_tests.sh
lines,19
function,0


for,1
echo "Running tests for S3 Bucket Lifecycle Operations"
if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/s3/bucket-lifecycle-operations/test_bucket_operations.sh
lines,125
function,1
function usage() {
function usage() {
for,0

if,2
if [ "$INTERACTIVE" == "true" ]; then iecho "Tests running in interactive mode."; fi if [ "$VERBOSE" == "true" ]; then iecho "Tests running in verbose mode."; fi
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/s3/bucket-lifecycle-operations/bucket_operations.sh
lines,380
function,9
function bucket_exists() { function create_bucket() { function copy_file_to_bucket() { function download_object_from_bucket() { function copy_item_in_bucket() { function list_items_in_bucket() { function delete_item_in_bucket() { function delete_items_in_bucket() { function delete_bucket() {
function bucket_exists() { function create_bucket() { function usage() { function copy_file_to_bucket() { function download_object_from_bucket() { function copy_item_in_bucket() { function list_items_in_bucket() { function delete_item_in_bucket() { function delete_items_in_bucket() { function delete_bucket() {
for,2
echo " [-r region_code] The code for an AWS Region in which the bucket is created." for key in $keys; do
if,12
if [[ ${?} -eq 0 ]]; then if [[ -z "$bucket_name" ]]; then if [[ -n "$region_code" ]] && [[ "$region_code" != "us-east-1" ]]; then if (bucket_exists "$bucket_name"); then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if [[ $? -ne 0 ]]; then if [[ ${?} -eq 0 ]]; then if [[ $? -ne 0 ]]; then if [[ $? -ne 0 ]]; then if [[ $? -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/s3/bucket-lifecycle-operations/awsdocs_general.sh
lines,163
function,6
function run_test() { function test_failed() { function errecho() { function iecho() { function ipause() { function generate_random_name() {
function run_test() { function test_failed() { function errecho() { function iecho() { function ipause() { function generate_random_name() {
for,1
for _ in {1..4}; do
if,7
if [[ -z "$4" ]]; then expected_output="$4"; else expected_output=""; fi if [[ "$expected_err_code" -ne "$err" ]]; then if [[ -n "$expected_output" ]]; then if [[ -z "$match" ]]; then if [[ $VERBOSE == true ]]; then if [[ $INTERACTIVE == true ]]; then if [[ -n $1 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/s3/s3_getting_started.sh
lines,250
function,6
function get_input() { function yes_no_input() { function echo_repeat() { function s3_getting_started() { function main() {
function get_input() { function yes_no_input() { function echo_repeat() { function s3_getting_started() { function main() {
for,1
for ((i = 0; i < end; i++)); do
if,18
if [ -z "${mock_input+x}" ]; then if [ -n "${mock_input_array[*]}" ]; then if [ -z "$1" ]; then if [ "$response" = "y" ] || [ "$response" = "n" ]; then if [ "$response" = "y" ]; then if [ "$BUCKET_OPERATIONS_SOURCED" != "True" ]; then if create_bucket -b "$bucket_name" -r "$region_code"; then if [ ! -f "$file_name" ]; then if copy_file_to_bucket "$bucket_name" "$file_name" "$key"; then if yes_no_input "Would you like to download $key to the file $destination_file? (y/n) "; then if download_object_from_bucket "$bucket_name" "$destination_file" "$key"; then if yes_no_input "Would you like to copy $key a new object key in your bucket? (y/n) "; then if copy_item_in_bucket "$bucket_name" "$key" "$to_key"; then if [[ $? -ne 0 ]]; then if yes_no_input "Delete the bucket, $bucket_name, as well as the objects in it? (y/n) "; then if delete_items_in_bucket "$bucket_name" "$bucket_items"; then if delete_bucket "$bucket_name"; then if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/iam/tests/include_tests.sh
lines,90
function,2
function run_test() { function test_failed() {
function run_test() { function test_failed() {
for,0

if,4
if [[ -n "$4" ]]; then expected_output="$4"; else expected_output=""; fi if [[ "$expected_err_code" -ne "$err" ]]; then if [[ -n "$expected_output" ]]; then if [[ -z "$match" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/iam/tests/test_iam_examples.sh
lines,276
function,1
function main() {
function main() { function usage() {
for,0

if,8
if [ "$INTERACTIVE" == "true" ]; then iecho "Tests running in interactive mode."; fi if [ "$VERBOSE" == "true" ]; then iecho "Tests running in verbose mode."; fi run_test "$test_count Test if non-existing user is exists" \ run_test "$test_count. Test if existing user is exists" \ if [[ "${ if [[ "${ if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/iam/iam_operations.sh
lines,947
function,13
function iam_user_exists() { function iam_list_users() { function iam_create_user() { function iam_create_user_access_key() { function iam_list_access_keys() { function iam_create_role() { function iam_create_policy() { function iam_attach_role_policy() { function iam_detach_role_policy() { function iam_delete_policy() { function iam_delete_role() { function iam_delete_access_key() { function iam_delete_user() {
function iam_user_exists() { function iam_list_users() { function usage() { function iam_create_user() { function usage() { function iam_create_user_access_key() { function usage() { function iam_list_access_keys() { function usage() { function iam_create_role() { function usage() { function iam_create_policy() { function usage() { function iam_attach_role_policy() { function usage() { function iam_detach_role_policy() { function usage() { function iam_delete_policy() { function usage() { function iam_delete_role() { function usage() { function iam_delete_access_key() { function usage() { function iam_delete_user() { function usage() {
for,3
echo " [-f file_name] Optional file name for the access key output." echo "Lists the AWS Identity and Access Management (IAM) access key IDs for the specified user." echo "Deletes an WS Identity and Access Management (IAM) access key for the specified IAM user"
if,33
if [[ $error_code -eq 0 ]]; then if [[ $errors != *"error"*"(NoSuchEntity)"* ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$user_name" ]]; then if (iam_user_exists "$user_name"); then if [[ $error_code -ne 0 ]]; then if [[ -z "$user_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -n "$file_name" ]]; then if [[ -z "$user_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$role_name" ]]; then if [[ -z "$policy_document" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$policy_name" ]]; then if [[ -z "$policy_document" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$role_name" ]]; then if [[ -z "$policy_arn" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$role_name" ]]; then if [[ -z "$policy_arn" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$policy_arn" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$role_name" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$user_name" ]]; then if [[ -z "$access_key" ]]; then if [[ $error_code -ne 0 ]]; then if [[ -z "$user_name" ]]; then if (! iam_user_exists "$user_name"); then if [[ $error_code -ne 0 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/iam/awsdocs_general.sh
lines,133
function,5
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
function errecho() { function iecho() { function ipause() { function generate_random_name() { function aws_cli_error_log() {
for,1
for _ in {1..4}; do
if,10
if [[ $VERBOSE == true ]]; then if [[ $INTERACTIVE == true ]]; then if [[ -n $1 ]]; then if [ "$err_code" == 1 ]; then elif [ "$err_code" == 2 ]; then elif [ "$err_code" == 130 ]; then elif [ "$err_code" == 252 ]; then elif [ "$err_code" == 253 ]; then elif [ "$err_code" == 254 ]; then elif [ "$err_code" == 255 ]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/aws-cli/bash-linux/iam/iam_create_user_assume_role_scenario.sh
lines,552
function,9
function get_input() { function clean_up() { function yes_no_input() { function echo_repeat() { function s3_list_buckets() { function sts_assume_role() { function iam_create_user_assume_role() { function main() {
function get_input() { function clean_up() { function yes_no_input() { function echo_repeat() { function s3_list_buckets() { function sts_assume_role() { function usage() { function iam_create_user_assume_role() { function main() {
for,4
for ((i = 0; i < end; i++)); do echo -n "Enter a name for a new IAM user: " echo "Wait 10 seconds for the user to be ready." echo "Created IAM policy named $assume_role_policy_name for sts assume role"
if,31
if [ -z "${mock_input+x}" ]; then if [ -n "${mock_input_array[*]}" ]; then if [ -n "$assume_role_policy_arn" ]; then if (iam_delete_policy -n "$assume_role_policy_arn"); then if [ -n "$detach_policy_arn" ]; then if (iam_detach_role_policy -n "$role_name" -p "$detach_policy_arn"); then if [ -n "$policy_arn" ]; then if (iam_delete_policy -n "$policy_arn"); then if [ -n "$role_name" ]; then if (iam_delete_role -n "$role_name"); then if [ -n "$access_key_name" ]; then if (iam_delete_access_key -u "$user_name" -k "$access_key_name"); then if [ -n "$user_name" ]; then if (iam_delete_user -u "$user_name"); then if [ -z "$1" ]; then if [ "$response" = "y" ] || [ "$response" = "n" ]; then if [ "$response" = "y" ]; then if [[ $error_code -ne 0 ]]; then if [[ $error_code -ne 0 ]]; then if [ "$IAM_OPERATIONS_SOURCED" != "True" ]; then if [[ ${?} == 0 ]]; then if [[ ${?} != 0 ]]; then if [ ${?} == 0 ]; then if [[ ${?} == 0 ]]; then if (iam_attach_role_policy -n "$iam_role_name" -p "$policy_arn"); then if [ ${?} == 0 ]; then if [ ${?} == 0 ]; then if [ ${?} == 0 ]; then if [ ${?} == 0 ]; then if [[ ${?} -ne 0 ]]; then if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/swift/example_code/s3/ListBuckets-Simple/test.sh
lines,11
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/swift/example_code/swift-sdk/config/test.sh
lines,79
function,0


for,0

if,7
if [[ "$cmd_exit_code" -ne 0 ]]; then if [[ "$cmd_output" != *"Host: s3.us-east-1.amazonaws.com"* ]]; then if [[ "$cmd_output" != *"cfg/retry-mode if [[ "$config_exit_code" -ne "0" ]]; then if [[ "$cmd_exit_code" -ne 0 ]]; then if [[ "$cmd_exit_code" -ne 0 ]]; then if [[ "$config_exit_code" -ne "0" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/glacier/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/sqs/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/ec2/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/guardduty/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/cloudwatch/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/athena/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/pinpoint/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/textract/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/stepfunctions/run_workflow.sh
lines,0
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/s3control/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/swf/run_workflow.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/mediastore/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/dynamodb/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/dynamodb/changelicense.sh
lines,20
function,0


for,1
aws-doc-sdk-examples find_bash.sh output.txt outputbashcleaned.txt process_bash.py express or implied. See the License for the specific language governing\
if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/kms/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/s3/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/secretsmanager/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/java/example_code/iam/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/rust_dev_preview/run_all.sh
lines,35
function,0

FAIL=()
for,2
for f in "${DIRS[@]}" ; do for a in "${ACTIONS[@]}" ; do
if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/kotlin/run_tests.sh
lines,30
function,1

run_gradle_tests() {
for,1
for dir in "$1"/*/; do
if,3
if [[ -f "$dir/build.gradle.kts" ]]; then if [[ -d "$dir" ]]; then if [[ ! -d "$root_dir" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/.github/extract-snippets/extract-snippets.sh
lines,31
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javascriptv3/scripts/run_tests.sh
lines,30
function,3

run_unit_tests() { run_integration_tests() { run_all() {
for,0

if,5
if ! run_unit_tests || ! run_integration_tests; then if [[ $ elif [[ "$1" == "unit" && "$2" == "integration" ]] || [[ "$1" == "integration" && "$2" == "unit" ]]; then elif [[ "$1" == "unit" || "$2" == "unit" ]]; then elif [[ "$1" == "integration" || "$2" == "integration" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javascriptv3/hook_scripts/pre-commit.sh
lines,9
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/test/public_ecr_repositories/scripts/upload_image.sh
lines,19
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/python/cross_service/resilient_service/test/resources/server_startup_script.sh
lines,7
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/.tools/verify_python.sh
lines,12
function,0


for,0

if,1
if [ "$PYTHON3_MINOR" -lt "$MIN_VERSION" ] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/run_tests.sh
lines,29
function,1

run_mvn_tests() {
for,1
for dir in "$1"/*/; do
if,3
if [[ -f "$dir/pom.xml" ]]; then if [[ -d "$dir" ]]; then if [[ ! -d "$root_dir" ]]; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/glacier/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/sns/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/sqs/run_example.sh
lines,14
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/ec2/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/dynamodbasync/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/cognito/run_example.sh
lines,11
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/mediaconvert/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/cloudwatch/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/kinesis/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/athena/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/pinpoint/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/swf/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/dynamodb/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/s3/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/transcribe/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/identitystore/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/emr/run_example.sh
lines,2
function,0


for,0

if,0

git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/workdocs/run_example.sh
lines,12
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/javav2/example_code/iam/run_example.sh
lines,13
function,0


for,0

if,1
if [[ -z $* ]] ; then
git@github.com:awsdocs/aws-doc-sdk-examples.git,efe5454edc939517c5e9fa67dcdf31d9dbfbc481,aws-doc-sdk-examples,8172,./aws-doc-sdk-examples/workflows/resilient_service/resources/server_startup_script.sh
lines,7
function,0


for,0

if,0

git@github.com:hs-web/hsweb-framework.git,5f993b9455064628da6a3b8ada8266ddf5f8b2bf,hsweb-framework,8143,./hsweb-framework/build.sh
lines,1
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-demo/基于版本打包的demo/app/buildTpatch.sh
lines,17
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-demo/基于版本打包的demo/app/buildApk.sh
lines,13
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-demo/AtlasDemo/app/push_dexpatch_out.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/build_ShakaAapt_all_in_linux.sh
lines,31
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/frameworks/base/tools/aapt/tests/plurals/run.sh
lines,16
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/UpdateAndroidSource.sh
lines,56
function,0


for,1
for var in ${array[@]};do
if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/build_ShakaAapt_all_in_maxos.sh
lines,32
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/contrib/pngminus/pngminus.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/contrib/pngminus/png2pnm.sh
lines,42
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/contrib/pngminus/pnm2png.sh
lines,42
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/contrib/libtests/gentests.sh
lines,102
function,2

usage(){ doit(){
for,5
for gamma in "" --sRGB --linear --1.8 for ct in gray palette for bd in 1 2 4 8 for ct in gray-alpha rgb rgb-alpha for bd in 8 16
if,1
if test -e "$testdir"
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/contrib/tools/intgamma.sh
lines,110
function,3
function print(){
function print(){ /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII The 'exp()' case must invert the above, taking a 20-bit fixed point atlas find_bash.sh output.txt outputbashcleaned.txt process_bash.py To deal with this the following exp() function works out the exponent of the
for,4
atlas find_bash.sh output.txt outputbashcleaned.txt process_bash.py This is a table of -log(value/255)/log(2) for 'value' in the range 128 to for (i=128;i<256;++i) { .5 - l(i/255)*f; } for (i=0;i<16;++i) { for (i=11;i>=0;--i){
if,4
if ($0 == "") if (str == "") if (length(t) >= 80) { if (x >= 2^32) x = 2^32-1;
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libpng/autogen.sh
lines,225
function,2

clean_autotools(){ clean_configure(){
for,4
echo " pay for support." for file in $libpng_autotools_files for file in $libpng_libtool_files for file in $libpng_autotools_files
if,14
if test -d .git elif test -z "$maintainer" if test -n "$clean" if test -n "$maintainer" if test -f "$file" if test ! -f "$file" if test -z "$libpng_autotools_file_found" -o -n "$maintainer" if test -n "$libpng_autotools_file_missing" if autoreconf --warnings=all --force --install if test -d .git echo " autotools generated files if Makefile.am or configure.ac" echo " You can run autoreconf yourself if you don't like maintainer" echo "that do not have it. You have a complete 'configure', if you" echo "not need to run autogen.sh if you use it."
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/libcxx/ndk-test.sh
lines,19
function,0


for,1
>&2 echo "Error: libc++_ndk.so has not been built for this target."
if,2
if [ -z "$ANDROID_PRODUCT_OUT" ]; then if [ ! -f $ANDROID_PRODUCT_OUT/system/lib/libc++_ndk.so ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/dfsan/scripts/check_custom_wrappers.sh
lines,52
function,1

on_exit() { | sed "s/.*test_\(.*\)();/\1/" | sort > $DIFF_B
for,0

if,3
if [ $? -ne 0 ] if [ $? -ne 0 ] if [ -s ${ERRORLOG} ]
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/tsan/check_cmake.sh
lines,18
function,0


for,0

if,1
if [ -d "$ROOT/llvm-build" ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/tsan/go/buildgo.sh
lines,132
function,1

cleanup() {
for,1
for F in $SRCS; do
if,8
if [ "`uname -a | grep Linux`" != "" ]; then elif [ "`uname -a | grep FreeBSD`" != "" ]; then elif [ "`uname -a | grep Darwin`" != "" ]; then elif [ "`uname -a | grep MINGW`" != "" ]; then if [ $IN_TMPDIR != "0" ]; then if [ "$DEBUG" = "" ]; then if [ "$SILENT" != "1" ]; then if [ "$SILENT" != "1" ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/tsan/analyze_libtsan.sh
lines,54
function,1

get_asm() {
for,1
for f in $list; do
if,2
if [[ "$ awk "/[^:]$/ {print;} />:/ {c++; if (c == 2) {exit}}"
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/tsan/check_analyze.sh
lines,60
function,2

PrintRes() { check() {
for,5
for f in write1; do for f in write2 write4; do for f in write8; do for f in read1 read2 read4 read8; do for f in func_entry func_exit; do
if,2
if [[ "$ if [ "$res" == "" ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/compiler-rt/lib/sanitizer_common/scripts/check_lint.sh
lines,136
function,2

cleanup() { run_lint() {
for,2
for FILE in $FILES; do for temp in $TMPFILES; do
if,6
if [ "${LLVM_CHECKOUT}" = "" ]; then if [ "${PYTHON_EXECUTABLE}" != "" ]; then if [ "$?" != "0" ]; then if [ "${SILENT}" != "1" ]; then if [ "${COMPILER_RT}" = "" ]; then if [ -s $ERROR_LOG ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/expat/import_expat.sh
lines,53
function,0


for,0

if,1
if [ "$1" = "" ]; then
git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt/external/zlib/update_zlib.sh
lines,42
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-core/publish.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-gradle-plugin/atlas-plugin/test.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-gradle-plugin/atlas-plugin/publish.sh
lines,0
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-gradle-plugin/atlas-plugin/increment.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/atlas.git,c20c5b83f67b9a14fb597d59a287ec7a3e5bdbac,atlas,8103,./atlas/atlas-aapt-old/frameworks/base/tools/aapt/tests/plurals/run.sh
lines,16
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/.travis/setup_ramdisk.sh
lines,22
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/.travis/setup_environment.sh
lines,21
function,0


for,0

if,1
if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/.travis/run_iris.sh
lines,29
function,0


for,0

if,1
if [ "$HTTP_CODE" != "200" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/build.sh
lines,5
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/travis.sh
lines,93
function,2

configureTravis() { keep_alive() {
for,0

if,4
cancel_branch_build_with_pr || if [[ $? -eq 1 ]]; then exit 0; fi if [[ -n "${NEXT_TOKEN-}" ]]; then if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "${TRAVIS_BRANCH}" == "master" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/sonar-ws-generator/run.sh
lines,11
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/logs.sh
lines,103
function,4

toLower() { checkLogArgument() { buildTailArgs() { doTail() {
for,2
for t in $LOGS; do for t in $LOGS; do
if,6
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if [ "$lowerLogArg" = "$DEFAULT_LOG" ]; then if [ "$lowerLogArg" = "$t" ]; then if [ "$logArg" = "$DEFAULT_LOG" ] || [ "$logArg" = "$t" ]; then if [ "$script_name" = "logs.sh" ]; then if ! ls ${SQ_HOME_WILDCARD} &> /dev/null; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/patches/debug_web.sh
lines,11
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/patches/debug_ce.sh
lines,11
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/patches/telemetry.sh
lines,11
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/patches/postgres.sh
lines,12
function,0


for,0

if,0

git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/logs.sh
lines,103
function,4

toLower() { checkLogArgument() { buildTailArgs() { doTail() {
for,2
for t in $LOGS; do for t in $LOGS; do
if,6
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if [ "$lowerLogArg" = "$DEFAULT_LOG" ]; then if [ "$lowerLogArg" = "$t" ]; then if [ "$logArg" = "$DEFAULT_LOG" ] || [ "$logArg" = "$t" ]; then if [ "$script_name" = "logs.sh" ]; then if ! ls ${SQ_HOME_WILDCARD} &> /dev/null; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/editions.sh
lines,41
function,5

toLower() { checkEdition() { resolveAliases() { distributionDirOf() { baseFileNameOf() {
for,1
for t in $EDITIONS; do
if,1
if [ "$1" = "$t" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/os.sh
lines,24
function,1

runSQ() {
for,0

if,3
if [[ "${OSTYPE:-}" == "darwin"* ]]; then elif [[ "${OSTYPE:-}" == "msys"* ]]; then if [[ "${OSTYPE:-}" == "msys"* ]]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/property_utils.sh
lines,55
function,3

cnt_lines() { write_prop() { set_property() {
for,0

if,3
if grep -q "$REGEXP" "$FILE"; then if [[ "$OSTYPE" == "darwin"* ]]; then if [[ $LINE_COUNT -gt $NEW_LINE_COUNT ]]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/start.sh
lines,87
function,0


for,0

if,4
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if ! ls ${OSS_ZIP} &> /dev/null; then if ! ls $SH_FILE_DIR &> /dev/null; then if [ "$PATCHES" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/stop.sh
lines,32
function,1

stopAny() {
for,1
for edition in $EDITIONS; do
if,4
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if [[ "${OSTYPE:-}" != "msys" ]]; then if ls $SONAR_SH &> /dev/null; then if [ "$script_name" = "stop.sh" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/scripts/patches_utils.sh
lines,40
function,1

call_patches() {
for,1
for patch in $patches; do
if,4
if [ "${SONARQUBE_USER_PATCHES_HOME+x}" ]; then if [ "$USER_PATCHES_HOME" -a -x "$USER_PATCHES_HOME/$patch.sh" ]; then elif [ -x "$PATCHES_HOME/$patch.sh" ]; then elif [ "$USER_PATCHES_HOME" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/debug-server.sh
lines,10
function,0


for,0

if,1
if ! ls sonarqube-*/bin/sonar-application*.jar &> /dev/null; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/start.sh
lines,69
function,0


for,0

if,4
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if ! ls ${OSS_ZIP} &> /dev/null; then if ! ls $SH_FILE_DIR &> /dev/null; then if [ "$PATCHES" ]; then
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/sonar-application/src/main/assembly/bin/linux-x86-64/sonar.sh
lines,320
function,10

findjava() { getpid() { testpid() { console() { start() { waitforstop() { stopit() { forcestopit() { status() { dump() {
for,2
for C in $TOKENS; do echo "Waiting for $APP_NAME to exit..."
if,24
if [ -z "${SONAR_JAVA_PATH}" ]; then if ! command -v java 2>&1; then if ! [ -x "${SONAR_JAVA_PATH}" ] || ! [ -f "${SONAR_JAVA_PATH}" ]; then if expr "$LINK" : '/.*' > /dev/null; then if [ "$REALPATH" = "$SCRIPT" ] if [ ! -x "$PSEXE" ] if [ ! -x "$PSEXE" ] if [ -f "$PIDFILE" ] if [ -r "$PIDFILE" ] if [ "X$pid" != "X" ] if [ "X$pidtest" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" != "X" ] if [ "$CNT" -lt "5" ] if [ "X$pid" != "X" ] if [ "X$pid" = "X" ] if [ $? -ne 0 ] if [ "X$pid" = "X" ] if [ "X$pid" != "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ $? -ne 0 ]
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/sonar-application/src/main/assembly/bin/macosx-universal-64/sonar.sh
lines,320
function,10

findjava() { getpid() { testpid() { console() { start() { waitforstop() { stopit() { forcestopit() { status() { dump() {
for,2
for C in $TOKENS; do echo "Waiting for $APP_NAME to exit..."
if,24
if [ -z "${SONAR_JAVA_PATH}" ]; then if ! command -v java 2>&1; then if ! [ -x "${SONAR_JAVA_PATH}" ] || ! [ -f "${SONAR_JAVA_PATH}" ]; then if expr "$LINK" : '/.*' > /dev/null; then if [ "$REALPATH" = "$SCRIPT" ] if [ ! -x "$PSEXE" ] if [ ! -x "$PSEXE" ] if [ -f "$PIDFILE" ] if [ -r "$PIDFILE" ] if [ "X$pid" != "X" ] if [ "X$pidtest" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ "X$pid" != "X" ] if [ "$CNT" -lt "5" ] if [ "X$pid" != "X" ] if [ "X$pid" = "X" ] if [ $? -ne 0 ] if [ "X$pid" = "X" ] if [ "X$pid" != "X" ] if [ "X$pid" = "X" ] if [ "X$pid" = "X" ] if [ $? -ne 0 ]
git@github.com:SonarSource/sonarqube.git,1b716d07eae31eb4cd97d4ecd8d44cf6ae28df2b,sonarqube,8082,./sonarqube/stop.sh
lines,26
function,1

stopAny() {
for,1
for edition in $EDITIONS; do
if,4
if [ -r "$ROOT/private/scripts/editions.sh" ]; then if [[ "${OSTYPE:-}" != "msys" ]]; then if ls $SONAR_SH &> /dev/null; then if [ "$script_name" = "stop.sh" ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-websocket/script/build_k8s_cluster.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-websocket/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-alibaba-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-spring-cloud/script/build_k8s_cluster.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-spring-cloud/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-motan/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-brpc/script/build_k8s_cluster.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-brpc/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-websocket/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-upload-plugin/shenyu-integrated-test-admin/src/main/resources/bin/start.sh
lines,57
function,0


for,0

if,5
if [ ! -d ${LOGS_DIR} ]; then if [ -z "${ADMIN_JVM}" ]; then if [[ "$version" =~ "1.8" ]];then elif [[ "$version" =~ "11" ]];then elif [[ "$version" =~ "17" ]];then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-apache-dubbo/script/build_k8s_cluster.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-apache-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-alibaba-dubbo/script/build_k8s_cluster.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-alibaba-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-grpc/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-http/script/build_k8s_cluster.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-http/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-brpc/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-sofa/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-apache-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-https/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-combination/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-sdk-apache-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-spring-cloud/script/healthcheck.sh
lines,38
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-http/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-motan/script/build_k8s_cluster.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-k8s-ingress-motan/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-sdk-http/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-integrated-test/shenyu-integrated-test-sdk-alibaba-dubbo/script/healthcheck.sh
lines,36
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,1
if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-docker-compose-dist/src/main/resources/install.sh
lines,85
function,1
function check_sed() {
function check_sed() {
for,0

if,9
if [[ "$OSTYPE" == "darwin"* ]]; then if ! which gsed >/dev/null 2>&1; then elif [[ "$OSTYPE" == "linux"* ]]; then if ! which sed >/dev/null 2>&1; then if [[ $version == '' || $version == 'latest' ]]; then if [[ $version != v* && $version != 'master' ]]; then if [ "$version" != "master" ];then if [[ "$OSTYPE" == "darwin"* ]]; then elif [[ "$OSTYPE" == "linux"* ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-admin-dist/docker/entrypoint.sh
lines,35
function,0


for,0

if,1
if [ -z "${ADMIN_JVM}" ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-admin-dist/src/main/resources/bin/start.sh
lines,56
function,0


for,0

if,5
if [ ! -d ${LOGS_DIR} ]; then if [ -z "${ADMIN_JVM}" ]; then if [[ "$version" =~ "1.8" ]];then elif [[ "$version" =~ "11" ]];then elif [[ "$version" =~ "17" ]];then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-admin-dist/src/main/resources/bin/stop.sh
lines,51
function,0


for,2
for PID in ${PIDS} ; do for PID in ${PIDS} ; do
if,2
if [ -z "$PIDS" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-bootstrap-dist/docker/entrypoint.sh
lines,35
function,0


for,0

if,1
if [ -z "${BOOT_JVM}" ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-bootstrap-dist/src/main/resources/bin/start.sh
lines,58
function,0


for,0

if,5
if [ ! -d ${LOGS_DIR} ]; then if [ -z "${BOOT_JVM}" ]; then if [[ "$version" =~ "1.8" ]];then elif [[ "$version" =~ "11" ]];then elif [[ "$version" =~ "17" ]];then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-dist/shenyu-bootstrap-dist/src/main/resources/bin/stop.sh
lines,51
function,0


for,2
for PID in ${PIDS} ; do for PID in ${PIDS} ; do
if,2
if [ -z "$PIDS" ]; then if [ -n "$PID_EXIST" ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/script/storage_init_postgres.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/script/storage_init.sh
lines,23
function,0


for,0

if,1
if [[ "$storage" != "h2" ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/script/storage_init_mysql.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/e2e-http-postgres.sh
lines,44
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/healthcheck.sh
lines,51
function,0


for,2
for service in $(grep -v -E "^$|^ for loop in $(seq 1 30)
if,2
if [ "$status" -eq 200 ]; then if [ "$admin_status" -eq 200 -a "$bootstrap_status" -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/e2e-http-h2.sh
lines,38
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/e2e-http-mysql.sh
lines,44
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-grpc/k8s/script/e2e-grpc-sync.sh
lines,78
function,0


for,1
for sync in ${SYNC_ARRAY[@]}; do
if,3
if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then if (($?)); then if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-spring-cloud/k8s/script/e2e-springcloud-sync.sh
lines,80
function,0


for,1
for sync in ${SYNC_ARRAY[@]}; do
if,3
if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then if (($?)); then if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-spring-cloud/k8s/script/healthcheck.sh
lines,39
function,0


for,1
for loop in $(seq 1 30); do
if,2
if [ "$status" -eq 200 ]; then if [ "$status" -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/k8s/script/storage/storage_init_postgres.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/k8s/script/storage/storage_init_mysql.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/k8s/script/healthcheck.sh
lines,39
function,0


for,1
for loop in $(seq 1 30); do
if,2
if [ "$status" -eq 200 ]; then if [ "$status" -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/k8s/script/init/mysql_container_init.sh
lines,30
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/k8s/script/init/postgres_container_init.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-sofa/k8s/script/e2e-sofa-sync.sh
lines,79
function,0


for,1
for sync in ${SYNC_ARRAY[@]}; do
if,3
if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then if (($?)); then if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-apache-dubbo/k8s/script/e2e-apache-dubbo-sync.sh
lines,79
function,0


for,1
for sync in ${SYNC_ARRAY[@]}; do
if,3
if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then if (($?)); then if [[ "${MIDDLEWARE_SYNC_ARRAY[@]}" =~ "${sync}" ]]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-examples/shenyu-examples-http-swagger2/k8s/script/healthcheck.sh
lines,48
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,2
if [ $status -eq 200 ]; then if [ $status -eq 200 ]; then
git@github.com:apache/shenyu.git,a3ab663f66dd15d4203a79bf7a231dd17c6cb80a,shenyu,8060,./shenyu/shenyu-examples/shenyu-examples-http/k8s/script/healthcheck.sh
lines,52
function,0


for,2
for service in `grep -v -E "^$|^ for loop in `seq 1 30`
if,2
if [ $status -eq 200 ]; then if [ $status -eq 200 ]; then
git@github.com:seven332/EhViewer.git,ba6d41b91f53b0835f73fb2903b5c4ff1259786c,EhViewer,8038,
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/create-export-package-metadata.sh
lines,62
function,1

extract_export_package_value_for_buildxml() {
for,0

if,0

git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/ld.sh
lines,75
function,0


for,1
exit "LIB must be set for LINK.EXE to function properly"
if,5
if [ -z "$LIB" -a "$Lib" ]; then if type link | grep amd64; then if echo $LIB | grep amd64; then if ! type link | grep amd64; then if ! echo $LIB | grep amd64; then
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/cc.sh
lines,188
function,0


for,1
exit "INCLUDE and LIB must be set for CL.EXE to function properly"
if,9
if [ -z "$INCLUDE" -a -z "$Include" -o -z "$LIB" -a -z "$Lib" ]; then if type cl | grep amd64 >& /dev/null; then if echo $LIB | grep amd64 >& /dev/null; then if ! type cl | grep amd64 >& /dev/null; then if ! echo $LIB | grep amd64 >& /dev/null; then if [ -n "$assembly" ]; then if [ -n "$single" ]; then if [ -n "$assembly" ]; then if [ -n "$assembly" ]; then
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/.ci/build.sh
lines,124
function,6
function build_linux() function build_foreign_linux() function build_cross_linux() function build_cross() function build_ios() function build_macosx()
function build_linux() function build_foreign_linux() function build_cross_linux() function build_cross() function build_ios() function build_macosx()
for,0

if,1
if [ -z ${QEMU_CPU+x} ]; then
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/.ci/build-in-container.sh
lines,10
function,0


for,0

if,0

git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/.ci/build-cross-in-container.sh
lines,18
function,0


for,0

if,0

git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/.ci/install.sh
lines,78
function,0


for,0

if,1
if [[ $RUNNER_OS != 'Linux' ]]; then
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/msvcc.sh
lines,353
function,0


for,0

if,16
if test "$2" = "all"; then if [ -n "$single" ]; then if [ -n "$assembly" ]; then if [ -n "$linkargs" ]; then if [ -n "$opt" ]; then if [ -n "$static_crt" ]; then if [ -n "$debug_crt" ]; then if [ -n "$assembly" ]; then if [ -z "$outdir" ]; then if [ $ml = "armasm" ]; then if [ $ml = "armasm64" ]; then if test -n "$verbose"; then if [ $ml = "armasm" ]; then elif [ $ml = "armasm64" ]; then if test -n "$verbose"; then if test -n "$verbose"; then
git@github.com:java-native-access/jna.git,da87d77a9b56a6ca038c8e0b0925e34932944ec0,jna,8027,./jna/native/libffi/autogen.sh
lines,2
function,0


for,0

if,0

git@github.com:guolindev/LitePal.git,8ad8322cc6f808e6d6beb7ce4b13d12e8360ce45,LitePal,8015,
git@github.com:PaperMC/Paper.git,4b0bc74c90582f2d52d720c795228130545cd103,Paper,8014,./Paper/scripts/checkoutpr.sh
lines,54
function,0


for,1
read -p "Press 'm' to merge, 'r' to rebase, or 'n' for nothing" -n 1 -r >&2
if,7
if [ -z "$1" ]; then if [[ "$REPLY" =~ ^[Mm]$ ]]; then elif [[ "$REPLY" =~ ^[Rr]$ ]]; then if [[ "$REPLY" =~ ^[Pp]$ ]]; then if [[ "$pushed" == "1" ]]; then if [[ "$REPLY" =~ ^[Mm]$ ]]; then if [[ "$REPLY" =~ ^[Rr]$ ]]; then
git@github.com:PaperMC/Paper.git,4b0bc74c90582f2d52d720c795228130545cd103,Paper,8014,./Paper/scripts/upstreamCommit.sh
lines,38
function,1
function changelog() {
function changelog() {
for,0

if,6
if [ ! -z "$bukkit" ]; then if [ ! -z "$cb" ]; then if [ -z "$updated" ]; then updated="CraftBukkit"; else updated="$updated/CraftBukkit"; fi if [ ! -z "$spigot" ]; then if [ -z "$updated" ]; then updated="Spigot"; else updated="$updated/Spigot"; fi if [ ! -z "$1" ]; then
git@github.com:PaperMC/Paper.git,4b0bc74c90582f2d52d720c795228130545cd103,Paper,8014,./Paper/scripts/apatch.sh
lines,75
function,0


for,2
for i in $(find . -name \*.rej); do for i in $($gitcmd status --porcelain | awk '{print $2}'); do
if,8
if [[ $1 == "--noapplied" ]]; then if [ ! -z "$1" ]; then elif [ -z "$1" ] && [ -f .git/rebase-apply/patch ]; then if [ "$1" == "--reset" ]; then if [ -f "$i" ]; then if [ -f "$file" ] && [[ "$filedata" == *"<<<<<"* ]]; then if [[ "$errors" == *"No such file"* ]]; then if [[ "$noapply" != "1" ]] && [[ "$file" != *-applied.patch ]]; then
git@github.com:PaperMC/Paper.git,4b0bc74c90582f2d52d720c795228130545cd103,Paper,8014,./Paper/scripts/upstreamMerge.sh
lines,41
function,2
function getRef { function update {

for,0

if,3
if [ "$refHEAD" != "$refRemote" ]; then if [[ "$2" = "all" || "$2" = "a" ]] ; then if [ "$updated" == "1" ]; then
git@github.com:spring-projects/spring-security.git,975ac10f193ff81957dbead9741bbe3f73d89a48,spring-security,8002,./spring-security/scripts/release/wait-for-done.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-projects/spring-security.git,975ac10f193ff81957dbead9741bbe3f73d89a48,spring-security,8002,./spring-security/scripts/s101.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-security.git,975ac10f193ff81957dbead9741bbe3f73d89a48,spring-security,8002,./spring-security/scripts/update-dependencies.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-projects/spring-security.git,975ac10f193ff81957dbead9741bbe3f73d89a48,spring-security,8002,./spring-security/ldap/run_slapd.sh
lines,7
function,0


for,0

if,0

git@github.com:sohutv/cachecloud.git,327e40aa769db74af4b8cd4ba89b84594981804a,cachecloud,7955,./cachecloud/redis-ecs/script/redisShake-install.sh
lines,38
function,1

installRedisShake() {
for,1
echo -e "\033[41;36m please input password for user: ${username} \033[0m"
if,2
if [[ $? == 0 ]]; then if [[ $
git@github.com:sohutv/cachecloud.git,327e40aa769db74af4b8cd4ba89b84594981804a,cachecloud,7955,./cachecloud/redis-ecs/script/redis-install.sh
lines,44
function,1

installRedis() {
for,1
echo -e "\033[41;36m please input password for user: ${username} \033[0m"
if,3
if [[ $? == 0 ]]; then if [[ $ if [[ $
git@github.com:sohutv/cachecloud.git,327e40aa769db74af4b8cd4ba89b84594981804a,cachecloud,7955,./cachecloud/redis-ecs/script/ssh-keygen.sh
lines,32
function,1

createSshkey() {
for,1
echo -e "\033[41;36m please set password for user: ${username} \033[0m"
if,1
if [[ $
git@github.com:sohutv/cachecloud.git,327e40aa769db74af4b8cd4ba89b84594981804a,cachecloud,7955,./cachecloud/redis-ecs/script/cachecloud-init.sh
lines,172
function,8

initConfig() { initSysConfig() { checkExist() { createUser() { init() { installSshpass() { output() { installRedis() {
for,2
for redisVersion in ${redis_array[*]}; do echo -e "\033[41;36m please set password for user: ${username} \033[0m"
if,5
if [[ $num == 1 ]]; then if [[ ${replace} == "y" ]]; then if [[ $? == 0 ]]; then if [[ ${redisVersion} == "redis-5.0.9" ]]; then if [[ $
git@github.com:apache/shardingsphere-elasticjob.git,6f5fbd968ec12fd7d31fc0885b0cf02205e0d097,shardingsphere-elasticjob,7950,./shardingsphere-elasticjob/spring/namespace/src/test/resources/script/demo.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/shardingsphere-elasticjob.git,6f5fbd968ec12fd7d31fc0885b0cf02205e0d097,shardingsphere-elasticjob,7950,./shardingsphere-elasticjob/examples/elasticjob-example-java/src/main/resources/script/demo.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/shardingsphere-elasticjob.git,6f5fbd968ec12fd7d31fc0885b0cf02205e0d097,shardingsphere-elasticjob,7950,./shardingsphere-elasticjob/examples/elasticjob-example-spring/src/main/resources/script/demo.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/shardingsphere-elasticjob.git,6f5fbd968ec12fd7d31fc0885b0cf02205e0d097,shardingsphere-elasticjob,7950,./shardingsphere-elasticjob/docs/build.sh
lines,11
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/nullroute.sh
lines,4
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/networkloss.sh
lines,8
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/fails3.sh
lines,15
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/filldisk.sh
lines,5
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/failec2.sh
lines,15
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/networkcorruption.sh
lines,5
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/burnio.sh
lines,12
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/killprocesses.sh
lines,14
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/faildns.sh
lines,6
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/faildynamodb.sh
lines,15
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/burncpu.sh
lines,14
function,0


for,1
for i in {1..32}
if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/src/main/resources/scripts/networklatency.sh
lines,6
function,0


for,0

if,0

git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/buildViaTravis.sh
lines,23
function,0


for,1
echo -e 'Build Branch for Release => Branch ['$TRAVIS_BRANCH'] Tag ['$TRAVIS_TAG']'
if,3
if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" == "" ]; then elif [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" != "" ]; then
git@github.com:Netflix/SimianArmy.git,e8eb9f3bad23962d03db4af936abeeabd8b4071b,SimianArmy,7950,./SimianArmy/installViaTravis.sh
lines,16
function,0


for,1
echo -e 'Assemble Branch for Release => Branch ['$TRAVIS_BRANCH'] Tag ['$TRAVIS_TAG']'
if,3
if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" == "" ]; then elif [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" != "" ]; then
git@github.com:google/tsunami-security-scanner.git,65e84d562a725b7c606f48ead656121dbeba4bb7,tsunami-security-scanner,7944,./tsunami-security-scanner/quick_start.sh
lines,70
function,0


for,2
printf "\nFetching source code for Tsunami scanner ...\n" printf "\nFetching source code for Tsunami scanner plugins ...\n"
if,2
if [[ ! -d "tsunami-security-scanner" ]] ; then if [[ ! -d "tsunami-security-scanner-plugins" ]] ; then
git@github.com:JakeWharton/hugo.git,50ee96dc07cda4277cd5ee59add847251c34604e,hugo,7894,
git@github.com:HannahMitt/HomeMirror.git,566c03d3388e1ca0c818ca4be8bf8528a2f53c39,HomeMirror,7881,./HomeMirror/design/install_assets.sh
lines,7
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/validation.sh
lines,1189
function,8

addCheckstyleBundleToAntResolvers() { -i '/ivysettings/resolvers/filesystem[last()]' -t attr -n name -v local-checkstyle \ -s '/ivysettings/resolvers/filesystem[last()]' -t elem -n artifact \ -i '/ivysettings/resolvers/filesystem[last()]/artifact' -t attr -n pattern -v \ -i '/ivysettings/modules/module[last()]' -t attr -n organisation -v com.puppycrawl.tools \ -i '/ivysettings/modules/module[last()]' -t attr -n name -v checkstyle \ -i '/ivysettings/modules/module[last()]' -t attr -n resolver -v local-checkstyle \ -t -v "//pom:profile[./pom:id[contains(text(),'pitest')]]//pom:targetClasses/pom:param")) FILES_NO_CONCURRENCY=()
for,14
for item in "${list[@]}" echo 'PR for contribution repository will be merged right after this PR.' for FILE in config/*_checks.xml echo "Grep for @since $CS_RELEASE_VERSION" for file in "${files[@]}" for file in "${files[@]}" for file in "${files[@]}" for file in "${files[@]}" for file in "${files[@]}" for file in "${files[@]}" for file in "${files[@]}" for MERGE_COMMIT in $MERGE_COMMITS; do for f in $GITHUB_WORKFLOW_FILES; do for value in "${FILES_NO_CONCURRENCY[@]}"; do
if,38
if [[ $item != */\* ]] ; then if [[ $item != *\* ]] ; then if [[ -n $results ]] ; then if [[ $RESULT != 0 ]]; then false; fi if git show --summary HEAD | grep ^Merge: ; if (( $COMMITS_SINCE_MASTER > $MAX_ALLOWED )); if [ -v TRAVIS_EVENT_TYPE ] && [ "$TRAVIS_EVENT_TYPE" != "cron" ] ; then exit 0; fi if [ "$(grep "<nextVersion>" target/*-updates-report.xml | cat | wc -l)" -gt 0 ]; then if [[ ${RESULT} != 0 ]]; then false; fi if [[ $DIFF_TEXT != "" ]]; then if [[ $PULL_REQUEST =~ ^([0-9]+)$ ]]; then if [[ -z $PR_DESC ]]; then if [ ${a} != ${b} ] if [[ $RESULT != 0 ]]; then if [ "$(git log -1 | grep -E "\[maven-release-plugin\] prepare release" | cat | wc -l)" -lt 1 ] if grep -vE '(Starting audit)|(warning)|(Audit done.)' .ci-temp/output.log ; then elif grep 'warning' .ci-temp/output.log ; then if git show --summary HEAD | grep ^Merge: ; then if [ -f "$NEW_CHECK_FILE" ]; then if [[ $CS_RELEASE_VERSION != *.0 ]]; then if [[ ${ if [[ ${ if [[ ${ if [[ ${ if [[ ${ if [[ ${ if [[ $PR_NUMBER =~ ^([0-9]+)$ ]]; then if [ -z "$RESULT" ]; then if [ -z "$RESULT" ]; then if [ "$(git status | grep 'Changes not staged\|Untracked files')" ]; then if [ -n "$MERGE_COMMITS" ]; then if [[ $COMMIT =~ 'Pull if [[ $PULL_MESSAGE_NUMBER != "$PR_NUMBER" ]]; then if [[ $CI == 'true' ]]; then if [ -z "$(ls -A .ci-temp)" ]; then if ! grep -wq "concurrency:" "$f"; then if [[ ${ if [[ "$CLASSES_NO_WILDCARD_COUNT" -gt 0 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-create-issues-in-other-repos.sh
lines,31
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-publish-releasenotes-twitter.sh
lines,68
function,0


for,0

if,1
if [ -d .ci-temp/checkstyle ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-update-xdoc-with-releasenotes.sh
lines,24
function,0


for,0

if,2
if [[ -z $1 ]]; then if [ "$TARGET_VERSION" != "$CURRENT_VERSION" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/generate-website.sh
lines,21
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-close-create-milestone.sh
lines,36
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/common.sh
lines,114
function,1
function should_run_job {

for,0

if,11
if [[ $SKIP_JOB_BY_FILES != 'false' ]]; then if [[ $DEBUG == "true" ]]; then if git show --summary HEAD | grep ^Merge: ; then if [[ $DEBUG == "true" ]]; then if [[ $(git branch -a --contains "$HEAD" | grep " origin/master$" \ if [[ "$HEAD" == "$PREVIOUS_COMMIT" ]]; then if [[ $DEBUG == "true" ]]; then if [[ $(git diff --name-only "$HEAD" "$PREVIOUS_COMMIT" \ if [[ $DEBUG == "true" ]]; then if [ "$(git log -1 --format=%B | grep -E "\[maven-release-plugin\] prepare release" \ if [[ $SKIP_JOB_BY_FILES == 'false' && $SKIP_JOB_BY_COMMIT == 'false' ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/append-to-github-output.sh
lines,20
function,0


for,0

if,1
if [[ "$
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-update-github-io.sh
lines,25
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-update-github-page.sh
lines,90
function,0


for,0

if,2
if [[ -z $1 ]]; then if [ -d .ci-temp/checkstyle ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/sonar-wrapper.sh
lines,19
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/util.sh
lines,59
function,7
function checkForVariable() { function getMavenProperty { function getCheckstylePomVersion { function getCheckstylePomVersionWithoutSnapshot { function getCheckstylePomVersionWithoutSnapshotWithXmlstarlet { function checkout_from {
removeFolderWithProtectedFiles() { function checkForVariable() {
for,1
for i in 1 2 3 4 5; do git clone "$CLONE_URL" && break || sleep 15s; done
if,3
if [ ! -v "$VAR_NAME" ]; then if [ -z "$VAR_VALUE" ]; then if [ -d "$PROJECT" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/travis.sh
lines,91
function,0


for,0

if,9
if [[ $RUN_JOB == 1 ]]; then if [[ -f ${MVN_SETTINGS} ]]; then if [[ $TRAVIS_OS_NAME == 'osx' ]]; then if [[ $USE_MAVEN_REPO == 'true' && ! -d "$HOME/.m2" ]]; then if [[ $RUN_JOB == 1 ]]; then if [[ -n $CMD_AFTER_SUCCESS if [ "$(git log -1 | grep -E "\[maven-release-plugin\] prepare release" | cat | wc -l)" -lt 1 ]; if [[ $TRAVIS_REPO_SLUG == 'checkstyle/checkstyle' if [[ -d ${MVN_REPO} ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/diff-report.sh
lines,128
function,1

validate_url () {
for,0

if,7
if [[ -z "$URL" ]]; then elif [[ "$URL" == *: ]]; then elif [[ "$URL" != *"raw"* ]]; then elif ! [[ "$URL" =~ $VALID_URL_REGEX ]]; then if [ -n "$NEW_MODULE_CONFIG_LINK" ]; then if [ -n "$DIFF_CONFIG_LINK" ]; then if [ -n "$PATCH_CONFIG_LINK" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/generate-extra-site-links.sh
lines,79
function,0


for,0

if,3
if [[ -z $PR_NUMBER || -z $AWS_FOLDER_LINK ]]; then if [[ -z "$CHANGED_XDOCS_PATHS" ]]; then if [[ $CURRENT_LINE =~ id\= ]]
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/pitest.sh
lines,35
function,1
function list_profiles() {
function list_profiles() {
for,0

if,1
if [[ $(echo "$PROFILES" | grep -w -- "${1}" | cat) != "" ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/drone-io.sh
lines,24
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/pr-description.sh
lines,36
function,0


for,1
echo 'You are providing a PR for an Issue that is not approved yet,'
if,5
if [[ ! $PULL_REQUEST =~ ^([0-9]*)$ ]]; then exit 0; fi if [[ $ISSUE_NUMBER =~ ^ if [[ -z $PR_DESC ]]; then if [[ $LABEL_APRV == 0 ]]; then if [[ $RESULT == 0 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/sonar.sh
lines,29
function,0


for,0

if,1
if [ ! "$OUTPUT" -eq "0" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/fast-forward-merge.sh
lines,49
function,0


for,0

if,3
if [ $ echo "removing remote ${REPO} if present ..." echo "removing remote ${LOCAL_USER_BRANCH} if present ..."
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/test-spelling-unknown-words.sh
lines,102
function,1

printDetails() {
for,0

if,8
if [ ! -e "$dict" ]; then if [ ! -e "$word_splitter" ]; then if [ "$get_word_splitter_status" != '0 0' ]; then if [ "$word_splitter_status" != '0 0' ]; then if [ ! -e "$whitelist_path" ]; then if [ -z "$diff_output" ]; then perl -n -w -e 'next unless /^\+/; next if /^\+{3} /; s/^.//; print;') if [ -z "$new_output" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-maven-prepare.sh
lines,36
function,0


for,1
echo "src/xdocs/releasenotes.xml do not have section for $TARGET_VERSION"
if,3
if [[ -z $1 ]]; then if [ "$TARGET_VERSION" != "$CURRENT_VERSION" ]; then if [[ $(grep "<section name=\"Release $TARGET_VERSION\">" src/xdocs/releasenotes.xml \
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/codenarc.sh
lines,10
function,0


for,0

if,1
if [[ "$CODENARC_REPORT" != *"$CLEAN_CODENARC_REPORT"* ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/releasenotes-gen-xdoc-push.sh
lines,57
function,0


for,0

if,2
if [[ -z $1 ]]; then if [ -d .ci-temp/checkstyle ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-upload-all-jar.sh
lines,37
function,0


for,1
echo "Jar Published for $TARGET_VERSION"
if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/update-github-milestone.sh
lines,30
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/sonar-break-build.sh
lines,64
function,0


for,2
echo "Timeout of " + $TIMEOUT + " seconds exceeded for getting ANALYSIS_ID" echo "See sonar dashboard at '${DASHBOARD_URL}' for failures."
if,6
if [ -z "$SONAR_API_TOKEN" ]; then if [ ! -f $SONAR_RESULT ]; then if [ -z "$CE_TASK_ID" ]; then if [ "$HTTP_STATUS" -ne 200 ]; then if [ "$TIMEOUT" -gt 30 ]; then if [ "$STATUS" = "ERROR" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-maven-perform.sh
lines,28
function,0


for,0

if,1
if [[ -z $1 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/checkchmod.sh
lines,31
function,0


for,4
echo "Expected mode for non '.sh' files is 664."; for NAMEFILE in $CHMOD echo "Expected mode for '.sh' files is 755."; for NAMEFILE in $CHMOD
if,2
if [[ -n $CHMOD ]]; then if [[ -n $CHMOD ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/releasenotes-gen.sh
lines,83
function,0


for,1
echo "Build is not for Pull Request";
if,4
if [ -z "$READ_ONLY_TOKEN" ]; then if [[ $PULL_REQUEST =~ ^([0-9]+)$ ]]; then if [ -d .ci-temp/contribution ]; then if [ -d .ci-temp/checkstyle ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/eclipse-compiler-javac.sh
lines,96
function,0


for,0

if,5
if [ -z "$1" ]; then if [ ! -f "$ECJ_PATH" ]; then if [ "${OPTIONS_DIFF}" != "" ] ; then if [[ $EXIT_CODE != 0 ]]; then if [[ $EXIT_CODE != 0 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/no-exception-test.sh
lines,228
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/set-milestone-on-referenced-issue.sh
lines,69
function,1
function setMilestoneOnIssue {

for,1
for ISSUE_NUMBER in $ISSUE_NUMBERS; do
if,4
if [[ -z $1 ]]; then if [ -z "$COMMIT_MESSAGES" ]; then if [ -z "$ISSUE_NUMBERS" ]; then if [ "$MILESTONE_NUMBER" == "null" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-copy-github-io-to-sourceforge.sh
lines,96
function,0


for,3
echo "Creating shell for $SF_USER@shell.sourceforge.net" echo "Using shell for $SF_USER@shell.sourceforge.net" echo "Creating .htaccess for dtds redirection"
if,3
if [[ -z $RELEASE ]]; then echo "Creating .ci-temp if it does not exist" if [[ -z "$PREV_RELEASE" ]]
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/release-create-maven-settings-xml.sh
lines,38
function,1

replace() {
for,0

if,2
if [ -f "$SETTING" ]; then if ! cmp -s "$TEMP_SETTING" "$SETTING"; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/idea-inspection.sh
lines,75
function,0


for,1
for i in {1..100}; do echo -n "
if,5
if [[ -z $IDEA_PATH ]]; then if [ -z "$IDEA_PATH" ]; then if [[ $IDEA_OUTPUT == "Already running" ]]; then if [[ $PROBLEM_COUNT -gt 0 ]] && [[ "$CIRCLECI" == "true" ]]; then elif [[ $PROBLEM_COUNT -gt 0 ]]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/bump-license-year.sh
lines,19
function,0


for,0

if,0

git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/bump-version.sh
lines,69
function,1
function assertNumberIsIncrementedByOne {

for,0

if,9
if [[ -z $1 ]]; then if ! [[ "$NEW_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then if [ "$NEW_VERSION" == "$CURRENT_VERSION" ]; then if [ "$DIFFERENCE" -ne 1 ]; then if [ "$CURRENT_VERSION_FIRST_NUMBER" != "$NEW_VERSION_FIRST_NUMBER" ]; then if [ "$NEW_VERSION_SECOND_NUMBER" -ne 0 ] || [ "$NEW_VERSION_THIRD_NUMBER" -ne 0 ]; then elif [ "$CURRENT_VERSION_SECOND_NUMBER" != "$NEW_VERSION_SECOND_NUMBER" ]; then if [ "$NEW_VERSION_THIRD_NUMBER" -ne 0 ]; then elif [ "$CURRENT_VERSION_THIRD_NUMBER" != "$NEW_VERSION_THIRD_NUMBER" ]; then
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/run-link-check-plugin.sh
lines,41
function,0


for,0

if,2
if [[ $OPTION == "--skip-external" ]]; then if [[ $RESULT != 0 ]]; then false; fi
git@github.com:checkstyle/checkstyle.git,777878cc4cb7ce34b330852cc86b9eb18a4a1b57,checkstyle,7877,./checkstyle/.ci/no-old-refs.sh
lines,76
function,0


for,2
for MENTIONED_ISSUES_GREP_OUTPUT_LINE in $(cat $MENTIONED_ISSUES_GREP_OUTPUT); do for LINKED_ISSUE in $(cat "$LINKED_ISSUES"); do
if,6
if [ -n "$PR_HEAD_REPO_NAME" ]; then if [ "$STATE" = "closed" ]; then if [ -n "$LINKED_ISSUES" ]; then if [ "$LINKED_ISSUE" = "$GITHUB_HOST/$ISSUE" ]; then if [ -f "$CLOSED_ISSUES" ]; then if [ -f "$LINKED_ISSUES_MENTIONED" ]; then
git@github.com:ChrisRM/material-theme-jetbrains.git,4b3683f00cf2e0000a627ff05d80f38748f0baaa,material-theme-jetbrains,7859,
git@github.com:zfile-dev/zfile.git,e5c6a1aca4070bedca2ea28dbb0cf6a7cae894f5,zfile,7835,
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/build.sh
lines,27
function,0


for,0

if,1
if [ "$1" == "base" ] ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/alidata/lib/proc.sh
lines,40
function,2

waitterm() { waittermpid() {
for,0

if,1
if ! ps -p "${PID}" >/dev/null 2>&1 ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/alidata/bin/exec_rc_local.sh
lines,10
function,0


for,0

if,2
if [ "${SKIP_EXEC_RC_LOCAL}" = "YES" ] ; then if [ "${DOCKER_DEPLOY_TYPE}" = "HOST" ] ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/alidata/bin/main.sh
lines,26
function,0


for,1
for e in $(ls /alidata/init/*) ; do
if,0

git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/alidata/init/02init-sshd.sh
lines,19
function,0


for,0

if,2
if [ -z "${SSHD_PORT}" ] ; then if [ "${USE_ADMIN_PASSAGE}" = "YES" ] ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/admin/health.sh
lines,12
function,0


for,0

if,1
if [ $CHECK_COUNT -eq 0 ]; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/admin/app.sh
lines,219
function,11
function checkStart() { function start_zookeeper() { function stop_zookeeper() { function start_manager() { function stop_manager() { function start_node() { function stop_node() { function start_mysql() { function stop_mysql() {
waitterm() { waittermpid() { function checkStart() { function start_zookeeper() { function stop_zookeeper() { function start_manager() { function stop_manager() { function start_node() { function stop_node() { function start_mysql() { function stop_mysql() {
for,0

if,9
if [ -z "${RUN_MODE}" ]; then if [ -z "${MYSQL_USER_PASSWORD}" ]; then if [ -z "${OTTER_MANAGER_MYSQL}" ]; then if ! ps -p "${PID}" >/dev/null 2>&1 ; then if [ "$ST" == "0" ]; then elif [ "$ST" == "" ]; then if [ -n "${OTTER_MANAGER_MYSQL}" ] ; then if [ -z "$(ls -A /var/lib/mysql)" ]; then echo "create database if not exists $MYSQL_DATABASE ;" >> $TEMP_FILE
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/image/admin/bin/clean_log.sh
lines,64
function,1

baseClean(){
for,0

if,9
if [ -d /tmp/hsperfdata_admin ] if [[ -d $MANAGER_DIR ]]; then if [[ $USAGE -ge 90 ]]; then if [[ $USAGE -ge 80 ]]; then if [[ $USAGE -ge 80 ]]; then if [[ -d $NODE_DIR ]]; then if [[ $USAGE -ge 90 ]]; then if [[ $USAGE -ge 80 ]]; then if [[ $USAGE -ge 80 ]]; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/docker/run.sh
lines,85
function,3
function usage() { function check_port() { function getMyIp() {
function usage() { function check_port() { function getMyIp() {
for,1
for PORT in $PORTLIST ; do
if,5
if [ -f $TL ]; then if [ -f $NC ]; then if [ "$1" == "-h" ] ; then elif [ "$1" == "help" ] ; then if [ "$exist" == "0" ]; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/manager/deployer/src/main/bin/startup.sh
lines,107
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,11
if [ -f $base/bin/otter.pid ] ; then if [ ! -d $base/logs ] ; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $TAOBAO_JAVA ] ; then if [ -f $var ] ; then if [ -f $var ] ; then if [ "$1" = "debug" ]; then if [ -n "$str" ]; then if [ -e $otter_conf -a -e $logback_configurationFile ]
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/manager/deployer/src/main/bin/stop.sh
lines,64
function,1

get_pid() {
for,0

if,7
if $cygwin; then if $linux; then if [ ! -z "$PID" ]; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$gpid" == "" ] ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/node/deployer/src/main/bin/startup.sh
lines,127
function,0


for,3
for i in $base/lib/*; echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,16
if [ -f $base/bin/otter.pid ] ; then if [ ! -d $base/logs/node ] ; then if [ -z "$ARIA2C" ]; then if [ -z "$ARIA2C" ]; then if [ -z "$ARIA2C" ]; then if [ -z "$JAVA" ] ; then if [ -z "$JAVA" ]; then if [ -f $ALIBABA_JAVA ] ; then elif [ -f $ALIBABA_JAVA ] ; then if [ -d $var ] elif [ -f $var ] ; then if [ -d $var1 -a -f $var2 ] ; then elif [ -d $var2 -a -f $var1 ] ; then if [ "$1" = "debug" ]; then if [ -n "$str" ]; then if [ -e $otterNodeIdFile -a -e $logback_configurationFile ]
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/node/deployer/src/main/bin/stop.sh
lines,65
function,1

get_pid() {
for,0

if,7
if $cygwin; then if $linux; then if [ ! -z "$PID" ]; then if [ ! -z "$PID" ]; then if [ ! -f "$pidfile" ];then if [ "$pid" == "" ] ; then if [ "$pid" == "" ] ; then
git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/lib/install.sh
lines,4
function,0


for,0

if,0

git@github.com:alibaba/otter.git,47327389943d416628d311c2287b64dc1a123fc3,otter,7825,./otter/shared/common/src/saveVersion.sh
lines,57
function,0


for,2
echo "cd to $bin_abs_path for workaround relative path" echo "cd to $current_path for continue"
if,2
if [ -d ../../../.svn ]; then elif [ -d ../../../.git ]; then
git@github.com:barteksc/AndroidPdfViewer.git,d243b39377f19c3eae41e227067da254ebbf731b,AndroidPdfViewer,7773,
git@github.com:dropwizard/metrics.git,057ad11c547b5a9df60fa0c04e3668635e55736d,metrics,7759,./metrics/prepare_docs.sh
lines,63
function,0


for,2
echo "Creating a directory for documentation" git commit -m "Add docs for Dropwizard $release_number"
if,1
echo "Please review changes and push them with if they look good"
git@github.com:aritraroy/UltimateAndroidReference.git,899e5800ab16b53a7ab2b2f6a8f6664fdfd738b5,UltimateAndroidReference,7738,
git@github.com:trello/RxLifecycle.git,0dabd1c4322ef320ebdbf2e0fbb16761580a842a,RxLifecycle,7719,
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/dev-tools/atomic_push.sh
lines,55
function,0


for,2
for BRANCH in "${@:2}" echo >&2 "Expected exactly 1 pending commit for branch '${BRANCH}' but ${PENDING_COMMITS} exist."
if,6
if [ "$ if ! git ls-remote --exit-code "${REMOTE}" > /dev/null 2>&1; then if [ "$ if ! git diff-index --quiet HEAD -- ; then if ! git show-ref --verify --quiet "refs/heads/${BRANCH}"; then if [ "${PENDING_COMMITS}" -ne 1 ]; then
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/dev-tools/signoff-check.sh
lines,32
function,0


for,1
for commitId in $commits; do
if,2
if [ -z $1 ] || [ -z $2 ] if [ $signoffStringCount -eq 0 ]; then
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/scripts/build.sh
lines,161
function,1
function usage() {
function usage() {
for,2
echo "Building OpenSearch for $PLATFORM-$DISTRIBUTION-$ARCHITECTURE" for plugin in plugins/*; do
if,2
if [ -z "$VERSION" ]; then if [ -d "$plugin" ] && [ "examples" != "$PLUGIN_NAME" ]; then
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/addprinc.sh
lines,75
function,0


for,1
echo ' password If provided then will set password for user else it will provision user with keytab'
if,3
if [[ $ if [ -f $USER_KTAB ] && [ -z "$PASSWD" ]; then if [ -z "$PASSWD" ]; then
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/hdfs.sh
lines,22
function,0


for,0

if,0

git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/peppa.sh
lines,13
function,0


for,0

if,0

git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/test/fixtures/krb5kdc-fixture/src/main/resources/provision/installkdc.sh
lines,110
function,0


for,0

if,0

git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/distribution/docker/src/docker/bin/docker-entrypoint.sh
lines,83
function,1

run_as_other_user_if_needed() {
for,0

if,10
if [[ "$(id -u)" == "0" ]]; then if [[ "$1" != "opensearchwrapper" ]]; then if [[ "$(id -u)" == "0" && $(basename "$1") == "opensearch" ]]; then if [[ -f bin/opensearch-users ]]; then if [[ -n "$ELASTIC_PASSWORD" ]]; then if ! (run_as_other_user_if_needed opensearch-keystore has-passwd --silent) ; then if ! (run_as_other_user_if_needed opensearch-keystore list | grep -q '^bootstrap.password$'); then if ! (run_as_other_user_if_needed echo "$KEYSTORE_PASSWORD" \ if [[ "$(id -u)" == "0" ]]; then if [[ -n "$TAKE_FILE_OWNERSHIP" ]]; then
git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/distribution/docker/docker-test-entrypoint.sh
lines,6
function,0


for,0

if,0

git@github.com:opensearch-project/OpenSearch.git,41a12e28fff58c7262bfeb725c8a31e5ffa266f3,OpenSearch,7660,./OpenSearch/qa/remote-clusters/docker-test-entrypoint.sh
lines,7
function,0


for,0

if,0

git@github.com:davemorrissey/subsampling-scale-image-view.git,173e421fdbfa971fe8db2d943c1bd758ce679d24,subsampling-scale-image-view,7643,
git@github.com:Tencent/Hippy.git,0f6a9a95b9f767d57ed1347162d282bdbb273c50,Hippy,7606,./Hippy/framework/voltron/VoltronCore/build_voltroncore.sh
lines,52
function,0


for,0

if,3
if [ -e ${BUILD_DIR} ] if [ -e ${IOS_FRAMEWORK} ] if [ -e ${MACOS_FRAMEWORK} ]
git@github.com:Tencent/Hippy.git,0f6a9a95b9f767d57ed1347162d282bdbb273c50,Hippy,7606,./Hippy/xcodeinitscript.sh
lines,73
function,0


for,0

if,4
if [[ ! `command -v cmake` ]]; then if [[ ${1} ]]; then if [[ "v8" == ${2} ]]; then elif [[ "custom" == ${2} ]]; then
git@github.com:facebook/litho.git,808d3bd1dcf5868605579eee0df9efe1b4148e45,litho,7600,./litho/scripts/android-setup.sh
lines,82
function,4
function download() { function installsdk() { function getAndroidSDK { function installAndroidSDK {
function download() { function installsdk() {
for,0

if,4
if env | grep -q ^ANDROID_HOME= if hash curl 2>/dev/null; then elif hash wget 2>/dev/null; then if [[ ! -z "$HTTPS_PROXY" ]]; then
git@github.com:facebook/litho.git,808d3bd1dcf5868605579eee0df9efe1b4148e45,litho,7600,./litho/scripts/codemod-state-update-methods.sh
lines,54
function,0


for,2
echo "! No matches for $file." echo "! Failed match for $m"
if,3
if [[ -z $all_specs ]]; then if ! matches=$(grep -A 1 "@OnUpdateState\b" "$file" | grep void) || [[ -z $matches ]]; then if [[ $m =~ static\ (<[a-zA-Z0-9\ ]+>\ )?void\ ([a-zA-Z0-9]+)\( ]]; then
git@github.com:facebook/litho.git,808d3bd1dcf5868605579eee0df9efe1b4148e45,litho,7600,./litho/scripts/local-deploy.sh
lines,60
function,0


for,3
for file in **/build/libs/*.jar; do for file in **/build/outputs/**/*-release.aar; do for file in $TMPDIR/**/maven-metadata-local.xml*; do
if,0

git@github.com:facebook/litho.git,808d3bd1dcf5868605579eee0df9efe1b4148e45,litho,7600,./litho/litho-intellij-plugin/buildPlugin.sh
lines,53
function,0


for,1
for filename in ./*.jar; do
if,0

git@github.com:facebook/litho.git,808d3bd1dcf5868605579eee0df9efe1b4148e45,litho,7600,./litho/litho-intellij-plugin/testPlugin.sh
lines,20
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/docker/docker-compose-start.sh
lines,0
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/docker/docker-build.sh
lines,2
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/docker/docker-start.sh
lines,0
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/docker/test/start.sh
lines,0
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/docker/test/stop.sh
lines,0
function,0


for,0

if,0

git@github.com:chat2db/Chat2DB.git,803cafea725bf6d800018e448db2ba83115dc0ab,Chat2DB,7599,./Chat2DB/document/git/git.sh
lines,6
function,0


for,0

if,0

git@github.com:kaushikgopal/RxJava-Android-Samples.git,b84865252c203498c1f0a2fa0f751f3c9127a781,RxJava-Android-Samples,7558,
git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/vjmxcli/src/main/assembly/vjmxcli.sh
lines,70
function,1

GET_JDK_VERSION() {
for,1
for line in $lines; do
if,9
if [ -z "$JAVA_HOME" ] ; then if [ ! -d "$JAVA_HOME" ] ; then if [[ -n $(type -p java) ]] elif [[ (-n "$JAVA_HOME") && (-x "$JAVA_HOME/bin/java") ]] if [[ -z $java_cmd ]] if [[ (-z $result) && ($line = *"version \""*) ]] if [[ $ver = "1."* ]] if [[ $JDK_VERSION -le 8 ]]; then if [ ! -f "$TOOLSJAR" ] ; then
git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/vjdump/vjdump.sh
lines,199
function,2

USAGE() START()
for,0

if,21
if [ $ if [[ x"$PID" == x ]]; then if [ -z "$JAVA_HOME" ] ; then if [ ! -f "$JAVA_HOME/bin/jstack" ] ; then if [[ $? != 0 ]]; then if [[ $? == 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $NEED_HEAP_DUMP == 1 ]]; then if [[ $? != 0 ]]; then if [[ x"$GCLOG" == x ]]; then if [[ $? != 0 ]]; then if [[ $CLOSE_COMPRESS == 1 ]]; then if [ -x "$(command -v zip)" ]; then if [[ $? != 0 ]]; then if [[ $NEED_HEAP_DUMP == 1 ]]; then if [ -x "$(command -v zip)" ]; then if [[ $? != 0 ]]; then
git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/docs/standard/merge.sh
lines,18
function,0


for,0

if,0

git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/vjstar/src/main/script/jvm-options/jvm-options.sh
lines,161
function,0


for,0

if,4
if [[ "$JAVA_VERSION" < "1.8" ]]; then if [ -d /dev/shm/ ]; then if [ -f ${GC_LOG_FILE} ]; then if [[ "$JAVA_VERSION" < "1.8" ]]; then
git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/vjmap/src/main/assembly/vjmap.sh
lines,33
function,0


for,0

if,5
if [ -z "$JAVA_HOME" ] ; then if [ ! -d "$JAVA_HOME" ] ; then if [ ! -f "$SAJDI_PATH" ] ; then if [ ! -f "$TOOLS_PATH" ] ; then echo -e "\033[31mWARNING!! STW(Stop-The-World) will be performed on your Java process, if this is NOT wanted, type 'Ctrl+C' to exit. \033[0m"
git@github.com:vipshop/vjtools.git,2f780edd504e7474b77f54665370a6a8361e3f55,vjtools,7547,./vjtools/vjtop/src/main/assembly/vjtop.sh
lines,69
function,1

GET_JDK_VERSION() {
for,1
for line in $lines; do
if,9
if [ -z "$JAVA_HOME" ] ; then if [ ! -d "$JAVA_HOME" ] ; then if [[ -n $(type -p java) ]] elif [[ (-n "$JAVA_HOME") && (-x "$JAVA_HOME/bin/java") ]] if [[ -z $java_cmd ]] if [[ (-z $result) && ($line = *"version \""*) ]] if [[ $ver = "1."* ]] if [[ $JDK_VERSION -le 8 ]]; then if [ ! -f "$TOOLSJAR" ] ; then
git@github.com:xiaojieonly/Ehviewer_CN_SXJ.git,5bbde4c06e961596f7ba2c5d473f1bf3c658f053,Ehviewer_CN_SXJ,7536,./Ehviewer_CN_SXJ/flutter_eh/.ios/Flutter/flutter_export_environment.sh
lines,13
function,0


for,0

if,0

git@github.com:LawnchairLauncher/lawnchair.git,d97aaa35c22d0a256bbdf8d220ae5b8b626b9669,lawnchair,7536,
git@github.com:gedoor/MyBookshelf.git,bb5a99058f387dc08d727cfe1418d294a53a9f48,MyBookshelf,7468,
git@github.com:koush/AndroidAsync.git,12f9e20443db5c8e79e7e4d43d9e2b3f4230266b,AndroidAsync,7447,
git@github.com:lecho/hellocharts-android.git,c41419c9afa097452dee823c7eba0e5136aa96bd,hellocharts-android,7413,
git@github.com:wildfirechat/im-server.git,aa1161131ddb7002809c8ac798d544d8ff57555e,im-server,7407,./im-server/build.sh
lines,3
function,0


for,0

if,0

git@github.com:wildfirechat/im-server.git,aa1161131ddb7002809c8ac798d544d8ff57555e,im-server,7407,./im-server/distribution/src/main/scripts/wildfirechat.sh
lines,99
function,0


for,0

if,2
if expr "$link" : '/.*' > /dev/null; then if [ -f "${JAVA_HOME}/bin/java" ]; then
git@github.com:wildfirechat/im-server.git,aa1161131ddb7002809c8ac798d544d8ff57555e,im-server,7407,./im-server/distribution/src/main/scripts/stop.sh
lines,25
function,0


for,1
for i in {1..30}
if,2
if [ -z $pid ]; then if [ -z $pid ]; then
git@github.com:wildfirechat/im-server.git,aa1161131ddb7002809c8ac798d544d8ff57555e,im-server,7407,./im-server/distribution/src/main/rpm/uninstall.sh
lines,16
function,0


for,0

if,4
if [ -d /var/lib/im-server/h2db ]; then echo "IM embed db file not deleted in path /var/lib/im-server/h2db, if you don't need it anymore, please remove it manually" if [ -d /var/lib/im-server/media ]; then echo "IM embed media files not deleted in path /var/lib/im-server/media, if you don't need it anymore, please remove it manually"
git@github.com:wildfirechat/im-server.git,aa1161131ddb7002809c8ac798d544d8ff57555e,im-server,7407,./im-server/distribution/src/main/rpm/install.sh
lines,27
function,0


for,0

if,2
if [ ! -d /etc/im-server ]; then if [ ! -d /var/log/im-server ]; then
git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/extras/proxycert.sh
lines,41
function,0


for,0

if,1
if [ -r ${KEYSTORE} ]
git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/extras/schematic.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/shutdown.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/heapdump.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/threaddump.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/create-rmi-keystore.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/mirror-server.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/jmeter.sh
lines,110
function,0


for,0

if,13
if expr "$link" : '/.*' > /dev/null; then if [ -z "$JAVA_HOME" -a -z "$JRE_HOME" ]; then if [ "`uname`" = "Darwin" ]; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ "x$JRE_HOME" = "x" ]; then if [ -x /usr/bin/java ]; then if [ -z "$JAVA_HOME" -a -z "$JRE_HOME" ]; then if [ -z "$JAVA_HOME" -a "$1" = "debug" ]; then if [ -z "$JRE_HOME" ]; then if [ -z "$JAVA_HOME" ]; then if [ "$CURRENT_VERSION" -gt "$MINIMAL_VERSION" ]; then
git@github.com:apache/jmeter.git,91d8aea7c42b10c68767e2f0a2a955389477f03f,jmeter,7401,./jmeter/bin/stoptest.sh
lines,25
function,0


for,0

if,0

git@github.com:flyway/flyway.git,4888d9c06425c3e63b7f36fd49cb29ec45db71f4,flyway,7397,
git@github.com:goldze/MVVMHabit.git,ab2bf079815e260501e2f42b10c1b67329b1de26,MVVMHabit,7390,
git@github.com:google/android-classyshark.git,78ddba71b0d869cc6283f8cdbb2061b6e57a3781,android-classyshark,7377,
git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/.github/workflows/scripts/check_ci_status.sh
lines,13
function,0


for,0

if,1
if [ -z $1 ] ; then
git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/core/src/test/resources/health-wait-strategy-dockerfile/write_file_and_loop.sh
lines,8
function,0


for,0

if,0

git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/core/src/test/resources/compose-dockerfile/passthrough.sh
lines,5
function,0


for,0

if,0

git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/core/testlib/create_fakejar.sh
lines,4
function,0


for,0

if,0

git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/modules/redpanda/src/main/resources/testcontainers/entrypoint-tc.sh
lines,7
function,0


for,0

if,0

git@github.com:testcontainers/testcontainers-java.git,e9d540f94cd05be10ef5a863a659b99c298d18c7,testcontainers-java,7369,./testcontainers-java/modules/mongodb/src/main/resources/sharding.sh
lines,68
function,3
function retry() { function initReplSet() {
function retry() { function initReplSet() { mongosh --quiet --port $PORT --eval 'rs.initiate();'
for,0

if,4
if [ $COUNT == 5 ] if [ $? -ne 0 ] if [ $retVal -ne 0 -a $COUNT -ne 5 ] if [ $? -ne 0 ]
git@github.com:karatelabs/karate.git,b936233b5c5e58dbe945d9df8aa3b68208006909,karate,7356,./karate/build-docker.sh
lines,45
function,0


for,0

if,0

git@github.com:karatelabs/karate.git,b936233b5c5e58dbe945d9df8aa3b68208006909,karate,7356,./karate/karate-docker/karate-chrome/entrypoint.sh
lines,21
function,0


for,0

if,2
if [ -z "$KARATE_JOBURL" ] if [ -z "$KARATE_SOCAT_START" ]
git@github.com:karatelabs/karate.git,b936233b5c5e58dbe945d9df8aa3b68208006909,karate,7356,./karate/karate-docker/karate-firefox/build.sh
lines,6
function,0


for,0

if,0

git@github.com:karatelabs/karate.git,b936233b5c5e58dbe945d9df8aa3b68208006909,karate,7356,./karate/karate-docker/karate-firefox/entrypoint.sh
lines,21
function,0


for,0

if,2
if [ -z "$KARATE_JOBURL" ] if [ -z "$KARATE_SOCAT_START" ]
git@github.com:karatelabs/karate.git,b936233b5c5e58dbe945d9df8aa3b68208006909,karate,7356,./karate/karate-docker/karate-firefox/install.sh
lines,8
function,0


for,0

if,0

git@github.com:square/dagger.git,0fa73e0ee07015f191c25b1f3fdf7048321d1610,dagger,7312,./dagger/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:square/dagger.git,0fa73e0ee07015f191c25b1f3fdf7048321d1610,dagger,7312,./dagger/deploy_website.sh
lines,40
function,0


for,0

if,0

git@github.com:kevin-wayne/algs4.git,a9c8fcf2d2f6dfa9da404dc6d951c34f245a3aee,algs4,7303,
git@github.com:leolin310148/ShortcutBadger.git,6d4ce808b0a1abe0ac31dc93d46a78ebecdebfbe,ShortcutBadger,7295,
git@github.com:Bearded-Hen/Android-Bootstrap.git,b3d62cc1847e26d420c53c92665a4fe1e6ee7ecf,Android-Bootstrap,7276,
git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/update-wiki.sh
lines,16
function,0


for,0

if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/prepare-release.sh
lines,87
function,0


for,0

if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/pre-release.sh
lines,25
function,0


for,0

if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/prepare-javadocs.sh
lines,14
function,0


for,0

if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/update-v1-readme.sh
lines,19
function,0


for,0

if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/publish-javadocs.sh
lines,16
function,0


for,1
git commit -m "apidocs for release ${SC_RELEASE_TAG}"
if,0

git@github.com:swagger-api/swagger-core.git,03c81437aef15a9b1aad0dc07c8e8dadc988d730,swagger-core,7265,./swagger-core/CI/post-release.sh
lines,52
function,0


for,0

if,0

git@github.com:dyc87112/SpringCloud-Learning.git,fb2079c338db95e2285d15e0cc36fce56c788e41,SpringCloud-Learning,7256,
git@github.com:pedant/sweet-alert-dialog.git,770bb183fb4fc7311b60392b470c508a0a4df16e,sweet-alert-dialog,7256,
git@github.com:li-xiaojun/XPopup.git,41bc304577fa716cc29eed8c14879edf80c85897,XPopup,7256,
git@github.com:crazycodeboy/TakePhoto.git,31a222705b52aae685369823ece42b7740a7aa63,TakePhoto,7229,
git@github.com:google/agera.git,04045ccbf41ac5fc6806724127b33cbe0dda372c,agera,7229,
git@github.com:cymcsg/UltimateRecyclerView.git,eccdbd953869612d758bc1e7e65068c71d3f0f12,UltimateRecyclerView,7227,
git@github.com:yuanguangxin/LeetCode.git,f58a68dcb18ba5382256e95275dac863c5fd8e1e,LeetCode,7187,
git@github.com:Qihoo360/RePlugin.git,a71dba29ed433b1e2accdab8656cee6c1d613b3f,RePlugin,7182,./RePlugin/deploy.sh
lines,66
function,5

__gradle_exec(){ if [[ -x gradlew ]];then ./gradlew ${@}; else gradle ${@}; fi; } __rp_deploy_project(){ rp_revert_AppConstant(){ rp_deploy(){ rp_test(){
for,2
for p in ${TARGET_PROJECTS}; do __rp_deploy_project ${RP_BASE_DIR}/${p}; done for p in ${projects}; do
if,1
__gradle_exec(){ if [[ -x gradlew ]];then ./gradlew ${@}; else gradle ${@}; fi; }
git@github.com:geeeeeeeeek/WeChatLuckyMoney.git,54a5201dfba6819f476a61e0e8096f13e3037ed9,WeChatLuckyMoney,7168,
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/run_rc_validation.sh
lines,916
function,2
function clean_up(){ function set_bashrc(){
function clean_up(){ function set_bashrc(){ FAILED=()
for,29
echo "repo URL for this RC: ${REPO_URL}" for i in "${RC_VALIDATE_CONFIGS[@]}"; do echo "[Confirmation Required] Would you like to check published Java artifacts (if you've completed this step for this RC previously, you can safely skip this)? [y|N]" for i in "${artifacts[@]}" for i in "${FAILED[@]}" final Docker tags for several candidate Docker images. This should be safe to do for py_version in "${PYTHON_VERSIONS_TO_VALIDATE[@]}" echo "* Please wait for at least 5 mins to let results get populated." echo "* Sleeping for 5 mins" echo "* Please wait for at least 10 mins to let Dataflow job be launched and results get populated." echo "* Sleeping for 10 mins" echo "* Please wait for at least 25 mins to let results get populated." echo "* Sleeping for 25mins" echo "* Please wait for at least 30 mins to let results get populated." echo "* Sleeping for 30 mins" echo "====================Generating Docker tags for multi-language quickstart tests===============" for py_version in "${PYTHON_VERSIONS_TO_VALIDATE[@]}" for py_version in "${PYTHON_VERSIONS_TO_VALIDATE[@]}" for item in ${input_data[*]} echo "Sleeping 10 seconds for the expansion service to start up." for py_version in "${PYTHON_VERSIONS_TO_VALIDATE[@]}" echo "Sleeping 10 seconds for the job server and the expansion service to start up." echo "* Please wait for 10 mins to let a Kafka cluster be launched on GKE." echo "* Sleeping for 10 mins" for py_version in "${PYTHON_VERSIONS_TO_VALIDATE[@]}" echo "* Please wait for at least 20 mins to let Dataflow job be launched and results get populated." echo "* Sleeping for 20 mins" echo "* Please wait for at least 20 mins to let Dataflow job be launched and results get populated." echo "* Sleeping for 20 mins"
if,46
if [[ -f ~/.m2/$BACKUP_M2 ]]; then if [[ -f ~/$BACKUP_BASHRC ]]; then if [[ -n `which gcloud` ]]; then if [[ -n ${KAFKA_CLUSTER_NAME} ]]; then if [[ -n ${SQL_TAXI_TOPIC} ]]; then if [[ $confirmation != "y" ]]; then echo "[Confirmation Required] Would you like to check published Java artifacts (if you've completed this step for this RC previously, you can safely skip this)? [y|N]" if [[ $confirmation == "y" ]]; then if [ ${ if [ ${ if [[ -z ${GITHUB_TOKEN} ]]; then if [[ -d ${LOCAL_BEAM_DIR} ]]; then if [[ -z `which hub` ]]; then if [[ "${INSTALL_HUB}" = true ]]; then if [[ -z `which gcloud` ]]; then if [[ "${INSTALL_GCLOUD}" = true ]]; then if [[ ! -z "${USER_SERVICE_ACCOUNT_EMAIL}" ]]; then if [[ -z `which gnome-terminal` ]]; then if [[ "$INSTALL_GNOME_TERMINAL" = true ]]; then if [[ -z `which kubectl` ]]; then if [[ "$INSTALL_KUBECTL" = true ]]; then if [[ ("$python_xlang_quickstart" = true) \ if [[ $confirmation != "y" ]]; then if [[ "$python_quickstart_mobile_game" = true && ! -z `which hub` ]]; then if [[ ("$python_leaderboard_direct" = true \ if [[ ! -f apache-beam-${RELEASE_VER}.zip ]]; then if [[ ! -d .m2 ]]; then if [[ -f ~/.m2/settings.xml ]]; then if [[ "$python_leaderboard_direct" = true ]]; then if [[ "$python_leaderboard_dataflow" = true ]]; then if [[ "$python_gamestats_direct" = true ]]; then if [[ "$python_gamestats_dataflow" = true ]]; then if [[ ("$python_xlang_quickstart" = true) \ if [[ ("$python_xlang_quickstart" = true) \ if [[ ! -f apache-beam-${RELEASE_VER}.zip ]]; then if cmp --silent -- $PYTHON_MULTILANG_QUICKSTART_EXPECTED_OUTPUT_FILE_NAME $PYTHON_MULTILANG_QUICKSTART_SORTED_OUTPUT_FILE_NAME; then if [[ ("$java_xlang_quickstart" = true) \ if [[ ! -f apache-beam-${RELEASE_VER}.zip ]]; then if [[ $java_xlang_quickstart_status -eq 0 ]]; then if [[ ("$python_xlang_kafka_taxi_dataflow" = true if [[ ! -f apache-beam-${RELEASE_VER}.zip ]]; then if [[ "$python_xlang_kafka_taxi_dataflow" = true ]]; then if [[ "$python_xlang_kafka_taxi_dataflow" = true ]]; then if ! grep -q "passenger_count" <<< "$test_output"; then if [[ "$python_xlang_sql_taxi_dataflow" = true ]]; then if ! grep -q "ride_status" <<< "$test_output"; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/preparation_before_release.sh
lines,107
function,0


for,0

if,6
if [[ $confirmation = "y" ]]; then if [[ $confirmation != "y" ]]; then if [[ -d ${LOCAL_SVN_DIR} ]]; then if [[ $commit_confirmation = "y" ]]; then if [[ $pmc_permission != "y" ]]; then if [[ $commit_confirmation = "y" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/deploy_release_candidate_pypi.sh
lines,175
function,2
function usage() { function clean_up(){
function usage() { function clean_up(){
for,4
echo "will download artifacts for ${RC_TAG} built by github actions" echo "------Checking Hash Value for apache-beam-${RELEASE}rc${RC_NUMBER}.zip-----" for artifact in *.whl; do echo "----------Checking Hash Value for ${artifact} wheel-----------"
if,8
if [[ -z "$RELEASE" ]] ; then if [[ -z "$RC_NUMBER" ]] ; then if [[ -z "$USER_GITHUB_ID" ]] ; then if [[ $confirmation = "y" ]]; then if [[ $confirmation != "y" ]]; then if [[ -d ${LOCAL_CLONE_DIR} ]]; then if [[ $confirmation != "y" ]]; then if [[ "$DEPLOY" == yes ]] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/publish_docker_images.sh
lines,68
function,0

KNOWN_IMAGES=()
for,2
echo "We are using ${RC_VERSION} to push docker images for ${RELEASE}." for IMAGE in "${KNOWN_IMAGES[@]}"; do
if,2
if docker pull "${IMAGE}:${RELEASE}${RC_VERSION}" 2>/dev/null ; then if [[ $confirmation = "y" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/choose_rc_commit.sh
lines,147
function,1
function usage() {
function usage() {
for,1
git commit -m "Set version for ${RELEASE} RC${RC}"
if,8
if [[ -z "$RELEASE" ]] ; then if [[ -z "$RC" ]] ; then if [[ -z "$COMMIT" ]] ; then if [[ "$CLONE" == yes ]] ; then if git rev-parse "$RC_TAG" >/dev/null 2>&1; then if [[ "$OVERWRITE" == yes ]]; then echo "Tag $RC_TAG already exists. Either delete it manually or run with --overwrite. Do not overwrite if an RC has been built and shared!" if [[ "$PUSH_TAG" == yes ]] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/verify_release_build.sh
lines,152
function,1
function clean_up(){
function clean_up(){
for,2
for i in "${RELEASE_BUILD_CONFIGS[@]}"; do echo "Error: unsupported architecture for Hub"
if,7
if [[ $confirmation != "y" ]]; then if [[ -z ${GITHUB_TOKEN} ]]; then if [[ "$(uname)" == "Linux" ]]; then elif [[ "$(uname)" == "Darwin" ]]; then if [[ -z `which hub` ]]; then if [[ "${INSTALL_HUB}" = true ]]; then if [[ ! -z `which hub` ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/deploy_pypi.sh
lines,62
function,1
function clean_up(){
function clean_up(){
for,0

if,3
if [[ $confirmation = "y" ]]; then if [[ -d ${LOCAL_CLONE_DIR} ]]; then if [[ $confirmation != "y" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/build_release_candidate.sh
lines,422
function,2
function usage() { function wipe_local_clone_dir() {
function usage() { function wipe_local_clone_dir() {
for,10
echo 'Please provide Java 11 home. Required to build sdks/java/container/agent for Java 11+ containers.' echo "----Creating Hash Value for ${SOURCE_RELEASE_ZIP}----" svn commit --no-auth-cache -m "Staging Java artifacts for Apache Beam ${RELEASE} RC${RC_NUM}" echo "------Checking Hash Value for apache-beam-${RELEASE}.zip-----" for artifact in *.whl; do echo "----------Checking Hash Value for ${artifact} wheel-----------" for artifact in *.whl; do svn commit --no-auth-cache -m "Staging Python artifacts for Apache Beam ${RELEASE} RC${RC_NUM}" echo "==============Creating PR for Updating Website===============" git commit -m "Update beam-site for release ${RELEASE}." -m "Content generated from commit ${RELEASE_COMMIT}."
if,23
if [[ "$JAVA_HOME" ]]; then if [[ ! `echo $version | sed "s/1\.8\..*/1.8/"` == "1.8" ]]; then if [[ -d ${LOCAL_CLONE_DIR} ]]; then if [[ -z "$RELEASE" ]] ; then if [[ -z "$RC_NUM" ]] ; then if [[ -z "$RC_NUM" ]] ; then if [[ -z "$USER_GITHUB_ID" ]] ; then if [[ -z "$JAVA11_HOME" ]] ; then if [[ -z "$SIGNING_KEY" ]] ; then if [[ $confirmation != "y" ]]; then if [[ $confirmation = "y" ]]; then if [[ -d ${LOCAL_JAVA_STAGING_DIR} ]]; then if (svn ls "${SOURCE_RELEASE_ZIP}"); then if [[ $confirmation != "y" ]]; then if [[ $confirmation = "y" ]]; then if [[ -d "${LOCAL_PYTHON_STAGING_DIR}" ]]; then if [[ $confirmation != "y" ]]; then if [[ $confirmation = "y" ]]; then if [[ $confirmation = "y" ]]; then if [[ -d ${LOCAL_WEBSITE_UPDATE_DIR} ]]; then if ! hash hub 2> /dev/null; then if [[ $confirmation = "y" ]]; then if hash hub 2> /dev/null; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/scripts/set_version.sh
lines,101
function,1
function usage() {
function usage() {
for,0

if,4
if [[ -z "$TARGET_VERSION" ]] ; then if [[ -z $TARGET_VERSION ]] ; then if [[ -z "$IS_SNAPSHOT_VERSION" ]] ; then if [[ "$GIT_ADD" == yes ]] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/python-release/run_release_candidate_python_quickstart.sh
lines,241
function,7
function complete() { function verify_hash() { function verify_wordcount_direct() { function verify_wordcount_dataflow() { function verify_streaming_wordcount_direct() { function verify_streaming_wordcount_dataflow() { function run_release_candidate_python_quickstart(){
function complete() { function verify_hash() { function verify_wordcount_direct() { function verify_wordcount_dataflow() { function verify_streaming_wordcount_direct() { function verify_streaming_wordcount_dataflow() { function run_release_candidate_python_quickstart(){
for,0

if,3
if [[ "$hash_check" != "OK" ]] if ls wordcount_direct.txt* 1> /dev/null 2>&1; then if [[ $gcs_pull_result != *$wordcount_output_in_gcs* ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/python-release/python_release_automation.sh
lines,28
function,0


for,1
for version in 3.8 3.9 3.10 3.11
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/python-release/run_release_candidate_python_mobile_gaming.sh
lines,177
function,6
function complete() { function verify_userscore_direct() { function verify_userscore_dataflow() { function verify_hourlyteamscore_direct() { function verify_hourlyteamscore_dataflow() { function run_release_candidate_python_mobile_gaming() {
function complete() { function verify_userscore_direct() { function verify_userscore_dataflow() { function verify_hourlyteamscore_direct() { function verify_hourlyteamscore_dataflow() { function run_release_candidate_python_mobile_gaming() {
for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/src/main/python-release/python_release_automation_utils.sh
lines,366
function,17
function print_separator() { function update_gcloud() { function get_version() { function download_files() { function get_sdk_name() { function get_sha512_name() { function get_asc_name() { function install_sdk() { function run_pubsub_publish(){ function run_pubsub_pull() { function create_pubsub() { function cleanup_pubsub() { function verify_streaming_result() { function verify_user_score() { function verify_hourly_team_score() { function cleanup_hourly_team_score() {
function print_separator() { function update_gcloud() { function get_version() { function download_files() { function get_sdk_name() { function get_sha512_name() { function get_asc_name() { function install_sdk() { function run_pubsub_publish(){ function run_pubsub_pull() { function create_pubsub() { function cleanup_pubsub() { function verify_streaming_result() { function verify_user_score() { function verify_hourly_team_score() { function cleanup_hourly_team_score() {
for,2
echo "Unable to determine a Beam wheel for interpreter version $2." for word in ${words[@]}; do
if,20
if [[ $version = *".dev"* ]]; then if [[ $1 = *"wheel"* ]]; then if [[ $2 == "python3.7" ]]; then elif [[ $2 == "python3.8" ]]; then elif [[ $2 == "python3.9" ]]; then elif [[ $2 == "python3.10" ]]; then if [[ $1 = *"wheel"* ]]; then if [[ $1 = *"wheel"* ]]; then if [[ $1 = *"wheel"* ]]; then if [[ "$gcloud_version" < "189" ]]; then if [[ $pull_result = *"$should_see"* ]]; then if [[ $retry > 0 ]]; then if [[ $1 = "DataflowRunner" ]]; then if [[ $1 = *"dataflow"* ]]; then if [[ $actual_output_files != *$expected_output_file_name* ]] if [[ $1 = *"dataflow"* ]]; then if [[ $retry > 0 ]]; then if [[ $bq_pull_result = *"$should_see"* ]]; then if [[ $retry > 0 ]]; then if [[ $bq_ls_result = *"${HOURLY_TEAM_SCORE_TABLE_PREFIX}_${runner}"* ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/release/go-licenses/get-licenses.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/dev-support/docker/bashcolors.sh
lines,91
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/dev-support/docker/beam_env_checks.sh
lines,121
function,4
function showWelcome { function showAbort { function failIfUserIsRoot { function warnIfLowMemory {

for,0

if,2
if [ "$(id -u)" -eq "0" ]; if [[ $((INSTALLED_MEMORY)) -lt $((MINIMAL_MEMORY)) ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/local-env-setup.sh
lines,148
function,2

darwin_install_pip3_packages() { install_go_packages(){
for,3
export GOPATH=${PWD}/sdks/go/examples/.gogradle/project_gopath && echo "GOPATH was set for this session to '$GOPATH'. Make sure to add this path to your ~/.bashrc file after the execution of this script." for ver in 3.8 3.9 3.10 3.11 3; do for ver in 3.8 3.9 3.10 3.11; do
if,13
if [ $gopathExists -ne 0 ]; then if [ "$kernelname" = "Linux" ]; then if [ $python3Exists -eq 0 -a $pip3Exists -eq 0 ]; then if [ $goExists -eq 0 ]; then elif [ "$kernelname" = "Darwin" ]; then if [ $brewExists -ne 0 ]; then if brew ls --versions openjdk@8 > /dev/null; then if brew ls --versions python@$ver > /dev/null; then if [ ! $(type -P python$ver) > /dev/null 2>&1 ]; then if [ $python3Exists -eq 0 -a $pip3Exists -eq 0 ]; then if [ $toxExists -eq 0 ]; then if [ $dockerExists -eq 0 ]; then if [ $goExists -eq 0 ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/go/run_with_go_version.sh
lines,99
function,0


for,0

if,2
if ! command -v go &> /dev/null if [ -z "$GOCMD" ] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/go/prepare_go_version.sh
lines,88
function,0


for,3
echo "go could not be found. This script requires a go installation > 1.16 to bootstrap using specific go versions. See http://go.dev/doc/install for options." echo "System Go installation at `which go` is `go version`, is older than the minimum required for hermetic, reproducible Beam builds. Want $MINGOVERSION. See http://go.dev/doc/install for installation instructions."; echo "prepare_go_version requires the --version flag. See https://go.dev/dl/ for available versions."
if,2
if ! command -v go &> /dev/null if (echo "min version $MINGOVERSION os/arch"; go version) | sort -Vk3 -s |tail -1 | grep -q min;
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/go/scripts/genproto.sh
lines,159
function,3
function insert_license_header() { function gen_go_sdk_protos() { function gen_beam_model_protos() {
function insert_license_header() { function gen_go_sdk_protos() { declare -a INCLUDES=() function gen_beam_model_protos() { declare -a INCLUDES=()
for,5
// distributed with this work for additional information // See the License for the specific language governing permissions and for package in "${TO_INC[@]}" for package in "${TO_GEN[@]}" for package in "${TO_GEN[@]}"
if,7
if [[ -z "$(which protoc)" ]]; then if [[ -z $SCRIPT_DIR ]]; then if [[ -z "$SDK_PATH" ]]; then if [[ -z "$PROJECT_ROOT" ]]; then if [[ -z "$(which go)" ]]; then if [[ -z "$GOBIN" ]]; then if [[ $1 == "model" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/go/test/run_validatesrunner_tests.sh
lines,467
function,3

exit_background_processes () { print(s.getsockname()[1]) s.close()
for,1
echo "Using container $JAVA_CONTAINER for cross-language java transforms"
if,31
if [[ ! -z "$JOBSERVER_PID" ]]; then if [[ ! -z "$TEST_EXPANSION_PID" ]]; then if [[ ! -z "$IO_EXPANSION_PID" ]]; then if [[ ! -z "$SCHEMAIO_EXPANSION_PID" ]]; then if [[ ! -z "$DEBEZIUMIO_EXPANSION_PID" ]]; then if [[ "$RUNNER" == "flink" || "$RUNNER" == "spark" || "$RUNNER" == "samza" || "$RUNNER" == "portable" || "$RUNNER" == "prism" ]]; then if [[ -z "$ENDPOINT" ]]; then if [[ "$RUNNER" == "flink" ]]; then elif [[ "$RUNNER" == "samza" ]]; then elif [[ "$RUNNER" == "spark" ]]; then elif [[ "$RUNNER" == "portable" ]]; then elif [[ "$RUNNER" == "prism" ]]; then if [[ "$RUNNER" != "direct" ]]; then if [[ -z "$TEST_EXPANSION_ADDR" && -n "$TEST_EXPANSION_JAR" ]]; then if [[ -z "$IO_EXPANSION_ADDR" && -n "$IO_EXPANSION_JAR" ]]; then if [[ -z "$SCHEMAIO_EXPANSION_ADDR" && -n "$SCHEMAIO_EXPANSION_JAR" ]]; then if [[ -z "$DEBEZIUMIO_EXPANSION_ADDR" && -n "$DEBEZIUMIO_EXPANSION_JAR" ]]; then if [[ "$RUNNER" == "flink" || "$RUNNER" == "spark" || "$RUNNER" == "samza" ]]; then if [[ "$RUNNER" == "dataflow" ]]; then if [[ "$gcloud_ver" < "186" ]] if [[ "$USER" == "jenkins" ]]; then if [[ -n "$TEST_EXPANSION_ADDR" || -n "$IO_EXPANSION_ADDR" || -n "$SCHEMAIO_EXPANSION_ADDR" || -n "$DEBEZIUMIO_EXPANSION_ADDR" ]]; then if [[ -z "$SDK_OVERRIDES" ]]; then if [[ -n "$TEST_EXPANSION_ADDR" ]]; then if [[ -n "$IO_EXPANSION_ADDR" ]]; then if [[ -n "$SCHEMAIO_EXPANSION_ADDR" ]]; then if [[ -n "$DEBEZIUMIO_EXPANSION_ADDR" ]]; then if [[ -n "$SDK_OVERRIDES" ]]; then if [[ "$RUNNER" == "dataflow" ]]; then if [[ "$USER" == "jenkins" ]]; then if [[ -n "$TEST_EXPANSION_ADDR" || -n "$IO_EXPANSION_ADDR" || -n "$SCHEMAIO_EXPANSION_ADDR" || -n "$DEBEZIUMIO_EXPANSION_ADDR" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/maven-archetypes/examples/generate-sources.sh
lines,105
function,0


for,0

if,1
if [ -f "$SAMPLE_FILE" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/container/license_scripts/license_script.sh
lines,67
function,0


for,0

if,2
if [ -d "$DOWNLOAD_DIR" ]; then rm -rf "$DOWNLOAD_DIR" ; fi if [ -d "$DEST_DIR" ]; then rm -rf "$DEST_DIR"; fi
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/build-tools/beam-linkage-check.sh
lines,140
function,2
function cleanup() { function runLinkageCheck () {
function cleanup() { function runLinkageCheck () {
for,5
for ARTIFACT_LIST in $ARTIFACT_LISTS; do echo "`date`:" "Running linkage check (${MODE}) for ${ARTIFACT_LIST}" echo "Establishing baseline linkage for $(git rev-parse --abbrev-ref $BASELINE_REF)" echo "Checking linkage for $(git rev-parse --abbrev-ref $PROPOSED_REF)" echo "There's new linkage errors. See above for details."
if,11
if [ -z "$ARTIFACT_LISTS" ]; then if [ -z "$BASELINE_REF" ] || [ -z "$PROPOSED_REF" ] || [ -z "$ARTIFACT_LISTS" ] ; then if [ ! -d buildSrc ]; then if [ "$BASELINE_REF" = "$PROPOSED_REF" ]; then if [ ! -z "$(git diff)" ]; then if [ "$MODE" = "baseline" ]; then elif [ "$MODE" = "validate" ]; then if [ ! -r "${BASELINE_FILE}" ]; then if [ "$MODE" = "baseline" ] && [ ! -r "${BASELINE_FILE}" ]; then elif [ "$MODE" = "validate" ]; then if [ "${ACCUMULATED_RESULT}" = "0" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/io/elasticsearch-tests/elasticsearch-tests-7/src/test/contrib/create_elk_container.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/io/elasticsearch-tests/elasticsearch-tests-6/src/test/contrib/create_elk_container.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/java/io/elasticsearch-tests/elasticsearch-tests-5/src/test/contrib/create_elk_container.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/typescript/src/apache_beam/proto/gen_protos.sh
lines,59
function,1

run() {
for,1
for ts_file in glob.glob("org/apache/beam/model/*/v1/*.ts"):
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/typescript/build.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/apache_beam/testing/benchmarks/chicago_taxi/run_chicago.sh
lines,200
function,0


for,0

if,3
if [[ -z "$1" ]]; then if [[ -z "$2" ]]; then if [[ "$RUNNER" == "PortableRunner" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/apache_beam/io/hdfs_integration_test/hdfs_integration_test.sh
lines,71
function,1
function finally {

for,2
printf "\n\tpython_version: [required] Python version used for container build and run tests." printf " Use 'python:3.8' for Python3.8."
if,2
if [[ $ if [ -z "${BUILD_TAG:-}" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/apache_beam/io/azure/integration_test/azure_integration_test.sh
lines,79
function,1
function finally {

for,2
printf "\n\tpython_version: [required] Python version used for container build and run tests." printf " Use 'python:3.8' for Python3.8."
if,2
if [[ $ if [ -z "${BUILD_TAG:-}" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_pylint_2to3.sh
lines,77
function,1

usage(){ echo "Usage: $0 [MODULE|--help]
for,3
for file in "${EXCLUDED_GENERATED_FILES[@]}"; do echo "Skipping lint for generated files: $FILES_TO_IGNORE" echo "Running pylint --py3k for modules $( printf "%s " "${MODULE}" ):"
if,4
if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then if test $ if test -z "$FILES_TO_IGNORE"
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_integration_test.sh
lines,287
function,0


for,0

if,11
if [[ "$JENKINS_HOME" != "" && "$SUITE" == "" ]]; then if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then if [[ -z $PIPELINE_OPTS ]]; then if [[ $(find ${SDK_LOCATION} 2> /dev/null) ]]; then if [[ -z $REQUIREMENTS_FILE ]]; then if [[ "$STREAMING" = true ]]; then if [[ "$ARCH" == "ARM" ]]; then if [[ ! -z "$KMS_KEY_NAME" ]]; then if [[ ! -z "$DATAFLOW_ENDPOINT" ]]; then if [ -z "$COLLECT_MARKERS" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_tox.sh
lines,79
function,0


for,0

if,8
if [[ $ if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then if [[ "$JENKINS_HOME" != "" ]]; then if [[ -f "$1" ]]; then if [[ ! -z "$SDK_LOCATION" ]]; then if [[ $ if [[ $exit_code == 245 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_pytest.sh
lines,62
function,0


for,0

if,4
if [[ $pytest_args =~ "-m" ]] || [[ $posargs =~ "-m" ]]; then if [[ $status1 == 5 && $status2 == 5 ]]; then if [[ $status1 != 0 && $status1 != 5 ]]; then if [[ $status2 != 0 && $status2 != 5 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_whitespacelint.sh
lines,59
function,0


for,1
for file in "${failed_files[@]}"; do
if,3
if ! test -f "$file"; then if ! whitespacelint "$file"; then if [ ${
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_transform_service.sh
lines,90
function,0


for,5
--group_id [unique id for stop services later] --start [command to start the transform service for the given group_id] --stop [command to stop the transform service for the given group_id] echo "Starting the transform service for project $GROUP_ID at port $EXTERNAL_PORT for Beam version $BEAM_VERSION_DOCKER transform service startup jar is $TRANSFORM_SERVICE_LAUNCHER_JAR" echo "Stopping the transform service for project $GROUP_ID at port $EXTERNAL_PORT for Beam version $BEAM_VERSION_DOCKER transform service startup jar is $TRANSFORM_SERVICE_LAUNCHER_JAR"
if,2
if [ -n "$GROUP_ID" ]; then if [[ -d ${TRANSFORM_SERVICE_TEMP_DIR} ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_tox_cleanup.sh
lines,41
function,0


for,2
for dir in apache_beam target/build; do for ext in pyc c so; do
if,3
if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then if [ -d "${dir}" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_jest.sh
lines,49
function,0


for,1
for dir in $known_test_dirs; do
if,1
if ! command -v node; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/pytest_validates_runner.sh
lines,38
function,0


for,0

if,1
if [[ $
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_pylint.sh
lines,127
function,2

usage(){ echo "Usage: $0 [MODULE|--help] echo -e "\nThe following files are missing a call to unittest.main():"
for,5
for file in "${EXCLUDED_GENERATED_FILES[@]}"; do echo -e "Skipping lint for files:\n${FILES_TO_IGNORE}" for file in "${ISORT_EXCLUDED[@]}"; do for file in "${EXCLUDED_GENERATED_FILES[@]}"; do for FILE in ${TESTS_MISSING_MAIN}; do
if,5
if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then if test $ if test -z "$FILES_TO_IGNORE" if [ -n "${TESTS_MISSING_MAIN}" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/setup_nodejs.sh
lines,33
function,0


for,0

if,3
if ! command -v node; then if command -v apt-get; then elif command -v brew; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_job_server.sh
lines,130
function,0


for,3
--group_id [unique id for stop services later] --job_port [port for job endpoint, default 8099] --artifact_port [port for artifact service, default 8098]
if,8
if [ -n "$GROUP_ID" ]; then if [[ $CHECK_FLOCK -eq 0 ]]; then if ! flock -n 200; then if [ -f "$pid" ]; then if kill -0 $mypid >/dev/null 2>&1; then if [ -f "$pid" ]; then if kill -0 $stop_pid >/dev/null 2>&1; then if [[ $CHECK_FLOCK -eq 0 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/generate_pydoc.sh
lines,285
function,2

html_theme_path = [sphinx_rtd_theme.get_html_theme_path()] 'apache_beam.typehints.typehints.validate_composite_type_param()',
for,3
nitpick_ignore += [('py:class', iden) for iden in ignore_identifiers] nitpick_ignore += [('py:obj', iden) for iden in ignore_identifiers] nitpick_ignore += [('py:exc', iden) for iden in ignore_references]
if,2
if [[ $PWD != *sdks/python* ]]; then if [[ $PWD != *sdks/python ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_snapshot_publish.sh
lines,42
function,0


for,1
for file in "apache-beam-$VERSION*.zip"; do
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_expansion_services.sh
lines,154
function,0


for,1
--group_id [unique id for stop services later]
if,9
if [ -n "$GROUP_ID" ]; then if [[ $CHECK_FLOCK -eq 0 ]]; then if ! flock -n 200; then if [ -f "$pid" ]; then if kill -0 $mypid >/dev/null 2>&1; then if kill -0 $mypid >/dev/null 2>&1; then if [ -f "$pid" ]; then if kill -0 $stop_pid >/dev/null 2>&1; then if [[ $CHECK_FLOCK -eq 0 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/scripts/run_eslint.sh
lines,50
function,0


for,1
for dir in $known_test_dirs; do
if,1
if ! command -v node; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/container/run_validatescontainer.sh
lines,145
function,1
function cleanup_container {

for,4
printf "\n\tpython_version: [required] Python version used for container build and run tests." printf "\n\tcpu_architecture: [optional] CPU architecture used for container build and run tests, default as x86." for image in $(docker images --format '{{.Repository}}:{{.Tag}}' | grep $PREBUILD_SDK_CONTAINER_REGISTRY_PATH) for digest in $(gcloud container images list-tags $PREBUILD_SDK_CONTAINER_REGISTRY_PATH/beam_python_prebuilt_sdk --format="get(digest)")
if,4
if [[ $ if [[ "$ARCH" == "x86" ]]; then elif [[ "$ARCH" == "ARM" ]]; then if [[ "$ARCH" == "x86" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/sdks/python/container/run_generate_requirements.sh
lines,116
function,0


for,3
echo "Please install a python${PY_VERSION} interpreter. See s.apache.org/beam-python-dev-wiki for Python installation tips." echo "Your python${PY_VERSION} installation does not have a required venv module. See s.apache.org/beam-python-dev-wiki for Python installation tips." echo "Checking for broken dependencies:"
if,4
if [[ $ if ! python"$PY_VERSION" --version > /dev/null 2>&1 ; then if ! python"$PY_VERSION" -m venv --help > /dev/null 2>&1 ; then if grep -q "tensorflow==" "$REQUIREMENTS_FILE"; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/scripts/ci/release/comment_pr_trigger_phrases.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/scripts/ci/ci_check_are_gcp_variables_set.sh
lines,43
function,1
function check_vars() {
function check_vars() {
for,1
for var in "$@"; do
if,2
if [ -n "${!var}" ]; then if ! check_vars "GCP_PROJECT_ID" "GCP_REGION" "GCP_SA_EMAIL" "GCP_SA_KEY" "GCP_TESTING_BUCKET" "GCP_PYTHON_WHEELS_BUCKET"; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/scripts/ci/ci_check_git_branch.sh
lines,37
function,1
function is_in_remote() {
function is_in_remote() {
for,0

if,2
if [[ -z ${existed_in_remote} ]]; then if ! is_in_remote "$1"; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/env_setup.sh
lines,34
function,0


for,0

if,2
if [ "$kernelname" = "Linux" ]; then elif [ "$kernelname" = "Darwin" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/new_scio_project.sh
lines,26
function,0


for,0

if,1
if [ -d /opt/sbt-template/scio ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/go/setup_sdk.sh
lines,48
function,0


for,0

if,1
if [ "$SDK_TAG" == "$SDK_TAG_LOCAL" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/go/entrypoint.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/java/entrypoint.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/scio/entrypoint.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/python/entrypoint.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/router/datastore/entrypoint.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/backend/containers/router/entrypoint.sh
lines,32
function,0


for,0

if,3
if [ -n "$APPLY_MIGRATIONS" ]; then if [ -z "$SDK_CONFIG" ]; then if [ -n "$DATASTORE_NAMESPACE" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/frontend/playground_components/tools/generate_build_metadata.sh
lines,37
function,0


for,1
// The copy of this file stored in the repository is for development purpose
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/cloudbuild_playground_deploy.sh
lines,50
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/playground_ci_examples.sh
lines,246
function,1
function LogOutput ()
function LogOutput ()
for,17
for ARGUMENT in "$@" LogOutput "Docker tag for containers: $DOCKERTAG" LogOutput "Looking for changes that require CI validation for [$SDKS] SDKs" for sdk in $SDKS LogOutput "------------------Starting checker.py for SDK_${sdk^^}------------------" LogOutput "Checker found changed examples for SDK_${sdk^^} or changes in allowlist: $ALLOWLIST" LogOutput "Checker did not find any changed examples for SDK_${sdk^^}" LogOutput "No changes require validation for SDK_${sdk^^}" LogOutput "Build failed for apache/beam_python3.10_sdk:$DOCKERTAG" LogOutput "Buidling a container for $sdk runner" LogOutput "Container build failed for $sdk runner" LogOutput "Starting container for $sdk runner" LogOutput "Example validation for $sdk SDK successfully completed" LogOutput "Example validation for $sdk SDK failed" LogOutput "Stopping container for $sdk runner" for sdk in $SDKS LogOutput "At least one of the checks has failed for $sdk SDK"
if,12
if [ -z "$PATH" ]; then if [ -z "$HOME" ]; then if [ "$tag_name" ] if [ $? -ne 0 ]; then if [ $checker_status -eq 0 ] elif [ $checker_status -eq 11 ] if [[ $example_has_changed != "True" ]] if [ "$sdk" == "python" ] if [ $? -ne 0 ] if [ $? -ne 0 ] if [ $? -eq 0 ] if [ "$result" != "True" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/cloudbuild_playground_ci_examples.sh
lines,90
function,0


for,2
echo "Search for CILOG keyword to find valuable logs entries" curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${PAT}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/apache/beam/statuses/${PR_COMMIT} -d '{"state":"pending","target_url":null,"description":"Examples validation (CI) for current commit is in progress","context":"GCP Cloud Build CI/CD"}'
if,3
if [[ "${BASE_REF}" != "master" ]]; then if [[ ${PR_TYPE} == @(opened|synchronize) ]]; then if [ $ci_script_status -eq 0 ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/playground_cd_examples.sh
lines,186
function,1
function LogOutput ()
function LogOutput ()
for,13
for ARGUMENT in "$@" LogOutput "Looking for files changed by the merge commit $MERGE_COMMIT" for sdk in $SDKS LogOutput "FORCE_CD is true. Example deployment for SDK_${sdk^^} is forced" LogOutput "------------------Starting checker.py for SDK_${sdk^^}------------------" LogOutput "Checker found changed examples for SDK_${sdk^^}" LogOutput "Checker did not find any changed examples for SDK_${sdk^^}" LogOutput "No changes require validation for SDK_${sdk^^}" LogOutput "Running ci_cd.py for SDK $sdk" LogOutput "Examples for $sdk SDK have been successfully deployed." LogOutput "Examples for $sdk SDK were not deployed. Please see the logs." for sdk in $SDKS LogOutput "At least one of the checks has failed for $sdk SDK"
if,13
if [[ -z "${DNS_NAME}" ]]; then if [[ -z "${DATASTORE_NAMESPACE}" ]]; then if [[ -z "${MERGE_COMMIT}" ]]; then if [[ "${FORCE_CD}" != "false" && "${FORCE_CD}" != "true" ]]; then if [ -z "$PATH" ]; then if [ -z "$HOME" ]; then if [ $? -ne 0 ]; then if [ "$FORCE_CD" = "true" ]; then if [ $checker_status -eq 0 ] elif [ $checker_status -eq 11 ] if [[ $example_has_changed != "true" ]] if [ $? -eq 0 ]; then if [ "$result" != "true" ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/cloudbuild_playground_cd_examples.sh
lines,85
function,0


for,2
echo "Search for CDLOG keyword to find valuable logs entries" echo "CDLOG $(date --utc '+%D %T') PR in $PR_URL for the COMMIT $MERGE_COMMIT is not in closed state or not merged into the Apache/Beam master repo."
if,4
if [[ -z "$DNS_NAME" || -z "$DATASTORE_NAMESPACE" ]]; then if [[ ${TARGET_PR_REPO_BRANCH} != "apache:master" ]]; then if [[ ${PR_TYPE} != "closed" ]] || [[ ${MERGE_STATUS} != "true" ]]; if [ $cd_script_status -eq 0 ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/playground/infrastructure/cloudbuild/cloudbuild_playground_infra.sh
lines,74
function,0


for,0

if,4
if [ $checkBucket -eq 200 ]; then elif [ $checkBucket -eq 404 ]; then if [ $? -eq 0 ] elif [ $checkBucket -eq 401 ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.github/gh-actions-self-hosted-runners/self-hosted-linux/docker/entrypoint.sh
lines,58
function,1

remove() {
for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.github/gh-actions-self-hosted-runners/self-hosted-linux/kubernetes/delete-k8s-deployment.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.github/gh-actions-self-hosted-runners/self-hosted-linux/kubernetes/run-k8s-deployment.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/start-build-env.sh
lines,138
function,0


for,1
for d in "${PWD}" "${HOME}/.m2"; do
if,9
if [ ! -x "$(command -v docker)" ] ; then if [ "$(uname -s)" = "Darwin" ]; then if (dscl . -read /Groups/docker 2>/dev/null); then if [ "$(uname -s)" = "Linux" ]; then if command -v selinuxenabled >/dev/null && selinuxenabled; then if [ "${DCKR_MAJ}" -eq 1 ] && [ "${DCKR_MIN}" -ge 7 ] || if [ "$ctx" != svirt_sandbox_file_t ] && [ "$ctx" != container_file_t ]; then if [ -S /var/run/docker.sock ]; if [ $
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/learning/tour-of-beam/cloudbuild/scripts/tob_deploy_infra_backend.sh
lines,90
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/learning/tour-of-beam/cloudbuild/scripts/tob_lm_cd.sh
lines,42
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/learning/tour-of-beam/backend/integration_tests/emulators/datastore/start-datastore.sh
lines,61
function,0


for,0

if,2
if [[ -z "${DATASTORE_PROJECT_ID}" ]]; then if [[ -z "${DATASTORE_LISTEN_ADDRESS}" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/learning/tour-of-beam/backend/integration_tests/local.sh
lines,71
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/website/www/check-links.sh
lines,154
function,4
function redraw_progress_bar { function check_absolute_links { function report_absolute_links { function handle_urls {
prod_exception_links=() staging_exception_links=() invalid_links=()
for,4
for ((j=0; j < progress; j++)) ; do echo -n '='; done for ((j=progress; j < barsize ; j++)) ; do echo -n ' '; done for external_link in "${external_links[@]}"; for external_link in "${external_links[@]}"
if,9
if [[ "$processed_external_link" == "$exception_link" ]]; if [[ $checked_word != "releases" ]]; then if [[ ${ if ! command -v lynx; then if [[ ! -f "${DIST_DIR}/index.html" ]]; then if [ $status -ne 0 ] ; then if [[ $curl_result =~ (error: )([0-9]{3}) ]]; then if [[ $verified_list =~ "$external_link" ]]; then if [[ ${
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/website/www/build_code_samples.sh
lines,43
function,0


for,1
for uri in "${code_sample_uris[@]}"
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/dataproc/cleanup.sh
lines,67
function,2
function deleteFilteredClusters(){ function filterClusters(){
function deleteFilteredClusters(){ function filterClusters(){
for,4
for cluster in ${toDeleteList[@]};do echo "Searching for leaked dataproc resources ... " for cluster in ${clustersList[@]}; do for name in ${generatedResources[@]}; do
if,3
if [ ${ if [[ $elapsedHours -ge 2 ]]; then if [[ "$cluster" == *"$name"* ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/dataproc/flink_cluster.sh
lines,162
function,8
function upload_init_actions() { function get_leader() { function start_job_server() { function start_tunnel() { function create_cluster() { function create() { function restart() { function delete() {
function upload_init_actions() { function get_leader() { function start_job_server() { function start_tunnel() { function create_cluster() { function create() { function restart() { function delete() {
for,2
for app in ${application_ids[*]}; local jobmanager_rpc_port=`echo $job_server_config | python -c "import sys, json; print([e['value'] for e in json.load(sys.stdin) if e['key'] == u'$key'][0])"`
if,2
if [ $i != 1 ]; then local jobmanager_rpc_port=`echo $job_server_config | python -c "import sys, json; print([e['value'] for e in json.load(sys.stdin) if e['key'] == u'$key'][0])"`
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/dataproc/init-actions/flink.sh
lines,217
function,8
function err() { function retry_command() { function update_apt_get() { function install_apt_get() { function install_flink_snapshot() { function configure_flink() { function start_flink_master() { function main() {
function err() { function retry_command() { function update_apt_get() { function install_apt_get() { function install_flink_snapshot() { function configure_flink() { function start_flink_master() { function main() {
for,1
for ((i = 0; i < 10; i++)); do
if,5
if eval "$cmd"; then if [[ ! -z "${hadoop_url}" ]]; then if ${start_yarn_session} ; then if /usr/share/google/get_metadata_value \ if [[ "${role}" == 'Master' ]] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/dataproc/init-actions/beam.sh
lines,64
function,3
function pull_images() { function pull_job_server() { function main() {
function pull_images() { function pull_job_server() { function main() {
for,1
for image in $beam_images_to_pull
if,2
if [[ -n "$job_server_location" ]] ; then if [[ "${role}" == 'Master' ]] ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/dataproc/init-actions/docker.sh
lines,103
function,7
function is_master() { function get_docker_gpg() { function update_apt_get() { function install_docker() { function configure_gcr() { function configure_docker() { function main() {
function is_master() { function get_docker_gpg() { function update_apt_get() { function install_docker() { function configure_gcr() { function configure_docker() { function main() {
for,1
for ((i = 0; i < 10; i++)) ; do
if,3
if [[ "$role" == 'Master' ]] ; then if apt-get update; then if is_master ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/influxdb/setup.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/influxdb/teardown.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/show-health.sh
lines,33
function,0


for,1
echo "Waiting for the Elasticsearch service to come up ........"
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/data-load.sh
lines,33
function,0


for,1
echo "Waiting for the Elasticsearch service to come up ........"
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/SmallITCluster/setup.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/SmallITCluster/teardown.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/LargeProductionCluster/setup.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/LargeProductionCluster/teardown.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/elasticsearch/data-load-setup.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/singlestore/wait-for-pod-with-label.sh
lines,48
function,0


for,2
echo "Waiting for the Pod $(podName) ..." echo "Timed out waiting for the Pod $(podName)"
if,1
if (( SECONDS > timeout ))
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/singlestore/wait-for.sh
lines,48
function,0


for,2
echo "Waiting for the $(resource) ..." echo "Timed out waiting for the $(resource)"
if,1
if (( SECONDS > timeout ))
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/kafka-cluster/setup-cluster.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/LargeITCluster/setup-all.sh
lines,54
function,0


for,2
echo "Waiting for the hadoop service to come up ........" for pod in "${datanodes_pods[@]}"; do
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/LargeITCluster/setup.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/LargeITCluster/teardown.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/LargeITCluster/teardown-all.sh
lines,30
function,0


for,0

if,1
if grep "$external_ip\\|$hadoop_master_pod_name" /etc/hosts ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/SmallITCluster/setup-all.sh
lines,41
function,0


for,1
echo "Waiting for the Hadoop service to come up ........"
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/SmallITCluster/setup.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/SmallITCluster/teardown.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hadoop/SmallITCluster/teardown-all.sh
lines,30
function,0


for,0

if,1
if grep "$external_ip\\|$hadoop_master_pod_name" /etc/hosts ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hbase/SmallITCluster/setup-all.sh
lines,40
function,0


for,1
echo "Waiting for the HBase service to come up ........"
if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hbase/SmallITCluster/setup.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hbase/SmallITCluster/teardown.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/hbase/SmallITCluster/teardown-all.sh
lines,29
function,0


for,0

if,1
if grep "${external_ip}\\|${hbase_master_pod_name}" /etc/hosts ; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/kubernetes.sh
lines,133
function,8
function retry() { function apply() { function delete() { function createNamespace() { function deleteNamespace() { function loadBalancerIP() { function getAvailablePort() { function waitForJob(){
function retry() { function apply() { function delete() { function createNamespace() { function deleteNamespace() { function loadBalancerIP() { function getAvailablePort() { function waitForJob(){
for,3
for ((i = 1; i <= max_retries; i++)); do for i in $(seq $lowRangePort $highRangePort); echo "Waiting for job completion..."
if,5
if [[ ${status} == 0 ]] && [[ -n ${output} ]]; then if [[ $i == "${max_retries}" ]]; then go-template='{{range .items}}{{range.spec.ports}}{{if .nodePort}}{{.nodePort}}{{\"\n\"}}{{end}}{{end}}{{end}}'" if [ "$i" = "$usedPort" ]; then if $used; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/LargeITCluster/setup.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/LargeITCluster/teardown.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/LargeITCluster/data-load.sh
lines,122
function,1
function delete_service {

for,3
echo "Waiting for Cassandra pods to be in ready state" echo "Waiting for temporary pod to be in ready state" echo "Waiting for the Cassandra service to come up ........"
if,3
if [ "$(kubectl get svc -o=name | grep cassandra-temp)" ]; then keyspace_creation_command="drop keyspace if exists ycsb;create keyspace ycsb WITH REPLICATION = {\ table_creation_command="use ycsb;drop table if exists usertable;create table usertable (\
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/LargeITCluster/show_health.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/SmallITCluster/setup.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/SmallITCluster/teardown.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/SmallITCluster/data-load.sh
lines,86
function,0


for,2
echo "Waiting for Cassandra pod to be in ready state" echo "Waiting for the Cassandra service to come up ........"
if,2
keyspace_creation_command="drop keyspace if exists ycsb;create keyspace ycsb WITH REPLICATION = {\ table_creation_command="use ycsb;drop table if exists usertable;create table usertable (\
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/SmallITCluster/show_health.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/kubernetes/cassandra/data-load-setup.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/metrics/build_and_publish_containers.sh
lines,51
function,0


for,0

if,2
if [ -z "${PROJECT_ID}" ]; then if [ "$DO_PUSH" = true ]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/tools/python_installer.sh
lines,92
function,7

pyenv_dep(){ pyenv_install(){ pyenv_post_install(){ pyenv_versions_install(){ python_versions_setglobally(){ clean(){ python_installer(){
for,1
for version in "${arr[@]}"; do
if,4
if [[ -d "$HOME"/.pyenv/ ]]; then if [[ -e "$HOME"/pyenv_installer.sh ]]; then if ! < "$HOME"/.bashrc grep -q " echo 'if which pyenv > /dev/null; then'
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/tools/stale_dataflow_prebuilt_image_cleaner.sh
lines,92
function,0


for,4
for repository in ${REPOSITORIES[@]}; do for image_name in ${IMAGE_NAMES[@]}; do for current in ${STALE_IMAGES_CURRENT[@]}; do for current in $RETRY_DELETE; do
if,4
if [ -n "$IMAGE_NAME" ]; then if [ -n "$LATEST_IN_TIME" ]; then if [ "$LATEST_IN_TIME" != "$current" ]; then if [[ ${STALE_IMAGES} ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/tools/stale_k8s_workload_cleaner.sh
lines,49
function,1
function should_teardown() {
function should_teardown() {
for,0

if,4
if [[ $1 =~ ^([0-9]+)([a-z]) ]]; then if [ $time_unit == y ] || [ $time_unit == d ]; then elif [ $time_unit == h ] && [ $time_scale -ge 8 ]; then if [[ $NAME =~ ^beam-.+test ]] && should_teardown $AGE; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/tools/stale_dataflow_jobs_cleaner.sh
lines,36
function,0


for,0

if,1
if [[ ${STALE_JOBS} ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/.test-infra/tools/stale_bq_datasets_cleaner.sh
lines,58
function,0


for,2
for dataset in ${BQ_DATASETS[@]}; do for template in ${CLEANUP_DATASET_TEMPLATES[@]}; do
if,4
if [[ $dataset =~ $template ]]; then if [[ $GRACE_PERIOD -gt $LAST_MODIFIED ]]; then if bq --project_id=$PROJECT rm -r -f $dataset; then if [[ failed_calls -ne 0 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/runners/spark/job-server/container/spark-job-server.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/runners/google-cloud-dataflow-java/scripts/cleanup_untagged_gcr_images.sh
lines,33
function,0


for,0

if,1
if [[ ! -z "${digest}" ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/runners/portability/test_flink_uber_jar.sh
lines,169
function,5

print(s.getsockname()[1]) s.close() pipeline_options = PipelineOptions() result = pipeline.run() result.wait_until_finish()
for,0

if,3
if pipeline_options.view_as(SetupOptions).save_main_session: if [[ "$SAVE_MAIN_SESSION" -eq 0 ]]; then if [[ "$TEST_EXIT_CODE" -eq 0 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/runners/portability/test_pipeline_jar.sh
lines,137
function,3

pipeline_options = PipelineOptions() result = pipeline.run() result.wait_until_finish()
for,1
echo "Checking for Docker image ${PYTHON_CONTAINER_IMAGE}"
if,3
if [[ "$RUNNER" = "FlinkRunner" ]]; then if [[ "$TEST_EXIT_CODE" -eq 0 ]]; then if [[ "$TEST_EXIT_CODE" -eq 0 ]]; then
git@github.com:apache/beam.git,7632d48c3bdcf2309e8e4d43bb282e6ba38072c8,beam,7159,./beam/runners/flink/job-server-container/flink-job-server.sh
lines,29
function,0


for,0

if,0

git@github.com:abel533/Mapper.git,5e31029b2df157afe9031fe183f6d7795ac2aa19,Mapper,7157,
git@github.com:JakeWharton/ActionBarSherlock.git,2c71339e756bcc0b1424c4525680549ba3a2dc97,ActionBarSherlock,7129,./ActionBarSherlock/deploy_website.sh
lines,35
function,0


for,0

if,0

git@github.com:Tencent/Shadow.git,a7de6d13e342009cd368c95477e23d24d6997ebe,Shadow,7127,./Shadow/projects/test/gradle-plugin-agp-compat-test/test.sh
lines,57
function,2
function setGradleVersion() { function testUnderAGPVersion() {
function setGradleVersion() { function testUnderAGPVersion() {
for,0

if,1
if [ "$DISABLE_TENCENT_MAVEN_MIRROR" = true ] ; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/deployment/vagrant/custom_motd.sh
lines,1
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/deployment/vagrant/bootstrap.sh
lines,48
function,0


for,0

if,1
if [ ! -e "~/.firstboot" ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/databases/postgres/config.sh
lines,1
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/wrk/concurrency.sh
lines,35
function,0


for,2
for c in $levels echo " Concurrency: $c for $name"
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/wrk/pipeline.sh
lines,35
function,0


for,2
for c in $levels echo " Concurrency: $c for $name"
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/wrk/query.sh
lines,35
function,0


for,2
for c in $levels echo " Queries: $c for $name"
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/continuous/tfb-shutdown.sh
lines,33
function,1

docker_clean() {
for,0

if,1
if [[ $FREE -lt 52428800 ]]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/toolset/continuous/tfb-startup.sh
lines,54
function,0


for,0

if,2
echo "removing old tfb directory if necessary" if [ -d "$TFB_REPOPARENT/$TFB_REPONAME" ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Pascal/mormot/setup_and_build.sh
lines,85
function,3

err_report() { script_successful(){ script_aborted() {
for,0

if,1
if [[ $TARGET == win* ]]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/suil/scripts/build.sh
lines,11
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/suil/scripts/download-framework.sh
lines,22
function,0


for,0

if,1
if [ -n "${SUIL_VERSION_TAG}" ] ; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-profiled-install.sh
lines,43
function,0


for,0

if,1
if [ "$
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/run_ffead.sh
lines,279
function,0


for,6
for i in $(seq 0 $(($(nproc --all)-1))); do for i in $(seq 0 $(($(nproc --all)-1))); do for i in $(seq 0 $(($(nproc --all)-1))); do for i in $(seq 0 $(($(nproc --all)-1))); do for i in $(seq 0 $(($(nproc --all)-1))); do for i in $(seq 0 $(($(nproc --all)-1))); do
if,45
if [ "$2" = "nginx" ] if [ "$3" = "mysql" ] || [ "$3" = "postgresql" ] if [ "$3" = "mongo" ] elif [ "$3" = "mongo-raw" ] elif [ "$3" = "mysql" ] elif [ "$3" = "postgresql" ] elif [ "$3" = "postgresql-raw" ] elif [ "$3" = "postgresql-raw-async" ] elif [ "$3" = "postgresql-raw-async-qw" ] if [ "$5" = "batch" ] if [ "$3" != "postgresql-raw-async-qw" ] if [ "$4" = "memory" ] elif [ "$4" = "redis" ] elif [ "$4" = "memcached" ] if [ ! -d tmp ]; then if [ "$2" = "apache" ] elif [ "$2" = "nginx" ] if [ "$2" = "emb" ] if [ "$3" = "postgresql-raw-async-qw" ] elif [ "$2" = "lithium" ] elif [ "$2" = "cinatra" ] elif [ "$2" = "drogon" ] elif [ "$2" = "apache" ] if [ "$3" = "mysql" ] || [ "$3" = "postgresql" ] elif [ "$2" = "nginx" ] if [ "$3" = "mysql" ] || [ "$3" = "postgresql" ] elif [ "$2" = "libreactor" ] elif [ "$2" = "h2o" ] elif [ "$2" = "crystal-http" ] elif [ "$2" = "crystal-h2o" ] elif [ "$2" = "julia-http" ] elif [ "$2" = "swift-nio" ] elif [ "$2" = "d-hunt" ] elif [ "$2" = "rust-actix" ] elif [ "$2" = "rust-hyper" ] elif [ "$2" = "rust-thruster" ] elif [ "$2" = "rust-rocket" ] elif [ "$2" = "go-fasthttp" ] elif [ "$2" = "go-gnet" ] elif [ "$2" = "v-vweb" ] elif [ "$2" = "v-picov" ] elif [ "$2" = "java-firenio" ] elif [ "$2" = "java-rapidoid" ] elif [ "$2" = "java-wizzardo-http" ] elif [ "$2" = "seastar" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-dependencies.sh
lines,79
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-async-profiled-install.sh
lines,44
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-sql-raw-v-picov-profiled.sh
lines,38
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-framework.sh
lines,212
function,0


for,0

if,6
if [ ! -d "ffead-cpp-6.0-bin" ] if [ "$COUNTER" = 120 ] if [ "$COUNTER" = 120 ] if [ ! -d "ffead-cpp-6.0-bin" ] if [ "$COUNTER" = 120 ] if [ "$COUNTER" = 120 ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install-mimalloc-snmalloc.sh
lines,18
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-v-picov-profiled-install.sh
lines,31
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/server.sh
lines,32
function,0


for,0

if,2
if [ "$IS_OS_DARWIN" != "" ]; then if [ ! -d tmp ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-profiled-util.sh
lines,80
function,0


for,0

if,5
if [ "$1" = "batch-old" ] if [ "$1" = "batch" ] if [ "$2" = "clang" ] if [ "$3" = "async" ] if [ "$4" = "pool" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-async-profiled-install-clang-dbg.sh
lines,23
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-httpd.sh
lines,91
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-nginx.sh
lines,8
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-backends.sh
lines,126
function,0


for,0

if,8
if [ "$CURR_TYPE" = "lithium" ] if [ "$CURR_TYPE" = "cinatra" ] if [ "$CURR_TYPE" = "drogon" ] if [ "$CURR_TYPE" = "nghttp2" ] if [ "$CURR_TYPE" = "mongols" ] if [ "$CURR_TYPE" = "uv-cpp" ] if [ "$CURR_TYPE" = "CppServer" ] if [ "$CURR_TYPE" = "lsquic" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/install_ffead-cpp-sql-raw-profiled.sh
lines,101
function,0


for,1
echo "Waiting for ffead-cpp to launch on port 8080..."
if,6
if [ "$1" = "async" ] elif [ "$1" = "async-qw" ] if [ "$COUNTER" = 600 ] if [ "$COUNTER" = 120 ] if [ "$1" = "async" ] if [ "$1" = "async-qw" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-profiled-install-clang.sh
lines,48
function,0


for,0

if,1
if [ "$
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/ffead-cpp/sql-async-profiled-install-clang.sh
lines,49
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/lithium/compile-batch.sh
lines,29
function,0


for,1
echo "ERROR: Only Postgres has pipelining support for now."
if,3
if [ "$COMMIT" = "" ]; then if [ $DB_FLAG = "TFB_MYSQL" ]; then elif [ $DB_FLAG = "TFB_PGSQL" ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/lithium/compile.sh
lines,31
function,0


for,0

if,4
if [ "$COMMIT" = "" ]; then if [ $DB_FLAG = "TFB_MYSQL" ]; then elif [ $DB_FLAG = "TFB_PGSQL" ]; then if [ $COMPILER = "clang++" ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/lithium/compile_libpq.sh
lines,24
function,0


for,0

if,1
if [ "$1" = "batchmode_patch" ]; then
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C++/cutelyst/build.sh
lines,32
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Vala/vsgi/run.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Vala/valum/run.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/micronaut/run_benchmark.sh
lines,17
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/quarkus/run_quarkus.sh
lines,37
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/proteus/run.sh
lines,14
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/t-io/startup.sh
lines,12
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/activeweb/scripts/instrument.sh
lines,1
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Java/bayou/setup.sh
lines,7
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/V/pico.v/run.sh
lines,7
function,0


for,1
for i in $(seq 0 $(($(nproc --all)-1))); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Dart/start/nginx-conf.sh
lines,39
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Dart/start/start-servers.sh
lines,12
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Dart/stream/nginx-conf.sh
lines,39
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Dart/stream/start-servers.sh
lines,12
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/spiral/php/install-composer.sh
lines,16
function,0


for,0

if,1
if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/imi/run-workerman.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/imi/run-swoole.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/ubiquity/deploy/roadrunner/envwrapper.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/ubiquity/deploy/run/install-composer.sh
lines,17
function,0


for,0

if,1
if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/PHP/lumen/deploy/swoole/install-composer.sh
lines,16
function,0


for,0

if,1
if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Julia/Http.jl/run.sh
lines,7
function,0


for,1
for i in $(seq 0 $(($(nproc --all)-1))); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Julia/Jewelia/run.sh
lines,5
function,0


for,1
for i in $(seq 0 $(($(nproc --all)-1)));
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Fortran/fortran.io/run.sh
lines,5
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/C/facil.io/setup-common.sh
lines,39
function,0


for,0

if,4
if [[ (! -d facil_app) || (-n "${FIO_EDGE}") ]] ; then if [ -e facil_app ] ; then if [[ -z "${FIO_EDGE}" ]]; then if [ $? -ne 0 ]; then echo "Couldn't extract tar."; exit 1; fi
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/kemal/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/raze/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/h2o.cr/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/grip/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/amber/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/spider-gazelle/run.sh
lines,5
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/onyx/run.sh
lines,5
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/lucky/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/crystal/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Crystal/toro/run.sh
lines,7
function,0


for,1
for i in $(seq 1 $(nproc --all)); do
if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/JavaScript/hapi/build-nginx-conf.sh
lines,13
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/JavaScript/hapi/start-servers.sh
lines,10
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Scala/snunit/config.sh
lines,26
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/OCaml/opium/start-servers.sh
lines,10
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Python/fastapi/nginx-unit-config.sh
lines,26
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Python/fastapi/nginx-unit-config-orjson.sh
lines,26
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Ruby/rails/run-with-redis.sh
lines,3
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/config/java_tune.sh
lines,18
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Ruby/rack-sequel/config/java_tune.sh
lines,18
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Ruby/roda-sequel/config/java_tune.sh
lines,18
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Rust/axum/run.sh
lines,2
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Haskell/wizzardo-inline/set-java-home.sh
lines,8
function,0


for,0

if,1
if [ -d $dir/include ]
git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Haskell/wizzardo-inline/env-linear.sh
lines,5
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/frameworks/Haskell/postgrest/src/entrypoint.sh
lines,5
function,0


for,0

if,0

git@github.com:TechEmpower/FrameworkBenchmarks.git,7059318d08481414c028296d85210836fdc42fb7,FrameworkBenchmarks,7119,./FrameworkBenchmarks/entrypoint.sh
lines,7
function,0


for,0

if,0

git@github.com:google/closure-compiler.git,38f2f840f50c96a823babcc2540838faa733fbf0,closure-compiler,7080,./closure-compiler/.github/ci_support/test_closure-compiler-npm.sh
lines,48
function,1
function main() {
function main() {
for,0

if,0

git@github.com:google/closure-compiler.git,38f2f840f50c96a823babcc2540838faa733fbf0,closure-compiler,7080,./closure-compiler/test/com/google/javascript/jscomp/runtime_tests/utils/build.sh
lines,91
function,1

compileRuntimeTests(){
for,1
for file in $@; do
if,2
if [ -z $1 ]; then if [ ! -f "$LOCAL_COMPILER" ]; then
git@github.com:google/closure-compiler.git,38f2f840f50c96a823babcc2540838faa733fbf0,closure-compiler,7080,./closure-compiler/build_test.sh
lines,25
function,0


for,0

if,0

git@github.com:ogaclejapan/SmartTabLayout.git,712e81a92f1e12a3c33dcbda03d813e0162e8589,SmartTabLayout,7045,
git@github.com:Exrick/xmall.git,19e7917d5ed3bd2a2421a3a246ad494c133ba94c,xmall,6995,
git@github.com:lenve/VBlog.git,abc45a9366c00ce81f00f1e1f336f5a053c1dc54,VBlog,6992,
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/res/graal/graal-measure.sh
lines,57
function,0


for,0

if,2
if expr "$link" : '/.*' > /dev/null; then if [[ "$RESPONSE" == 'OK: http://localhost:8080/[1]' ]]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/res/graal/build-tomcat-native-image.sh
lines,61
function,0


for,0

if,1
if expr "$link" : '/.*' > /dev/null; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/shutdown.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/version.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/configtest.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/tool-wrapper.sh
lines,132
function,0


for,0

if,8
if expr "$link" : '/.*' > /dev/null; then if [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then if $cygwin; then if $os400; then if $os400; then if [ -r "$CATALINA_HOME"/bin/setclasspath.sh ]; then if [ ! -z "$CLASSPATH" ] ; then if $cygwin; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/startup.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/migrate.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/setclasspath.sh
lines,105
function,0


for,0

if,19
if [ -z "$JAVA_HOME" ] && [ -z "$JRE_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ "x$JRE_HOME" = "x" ]; then if [ -x /usr/bin/java ]; then if [ -z "$JAVA_HOME" ] && [ -z "$JRE_HOME" ]; then if [ -z "$JAVA_HOME" ] && [ "$1" = "debug" ]; then if [ "$1" = "debug" ] ; then if [ "$os400" = "true" ]; then if [ ! -x "$JAVA_HOME"/bin/java ] || [ ! -x "$JAVA_HOME"/bin/javac ]; then if [ ! -x "$JAVA_HOME"/bin/java ] || [ ! -x "$JAVA_HOME"/bin/jdb ] || [ ! -x "$JAVA_HOME"/bin/javac ]; then if [ -z "$JRE_HOME" ]; then if [ ! -x "$JAVA_HOME"/bin/java ]; then if [ ! -x "$JRE_HOME"/bin/java ]; then if [ -z "$_RUNJAVA" ]; then if [ "$os400" != "true" ]; then if [ -z "$_RUNJDB" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/digest.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/ciphers.sh
lines,60
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRGDIR"/"$EXECUTABLE" ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/catalina.sh
lines,590
function,0


for,4
echo " stop Stop Catalina, waiting up to 5 seconds for the process to end" echo " stop n Stop Catalina, waiting up to n seconds for the process to end" echo " configtest Run a basic syntax check on server.xml - check exit code for result" echo "Note: Waiting for the process to end and use of the -force option require that \$CATALINA_PID is defined"
if,79
if expr "$link" : '/.*' > /dev/null; then if [ -r "$CATALINA_BASE/bin/setenv.sh" ]; then elif [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then if $cygwin; then if $os400; then if $os400; then if [ -r "$CATALINA_HOME"/bin/setclasspath.sh ]; then if [ ! -z "$CLASSPATH" ] ; then if [ -z "$CATALINA_OUT" ] ; then if [ -z "$CATALINA_TMPDIR" ] ; then if [ -r "$CATALINA_BASE/bin/tomcat-juli.jar" ] ; then if [ -t 0 ]; then if $cygwin; then if [ -z "$JSSE_OPTS" ] ; then if [ -z "$CATALINA_LOGGING_CONFIG" ]; then if [ -r "$CATALINA_BASE"/conf/logging.properties ]; then if [ -z "$LOGGING_MANAGER" ]; then if [ -z "$UMASK" ]; then if [ -z "$USE_NOHUP" ]; then if $hpux; then if [ "$USE_NOHUP" = "true" ]; then if [ $have_tty -eq 1 ]; then if [ "$1" = "debug" ] ; then if [ ! -z "$CATALINA_PID" ]; then if [ "$1" = "jpda" ] ; then if [ -z "$JPDA_TRANSPORT" ]; then if [ -z "$JPDA_ADDRESS" ]; then if [ -z "$JPDA_SUSPEND" ]; then if [ -z "$JPDA_OPTS" ]; then if [ "$1" = "debug" ] ; then if $os400; then elif [ "$1" = "run" ]; then elif [ "$1" = "start" ] ; then if [ ! -z "$CATALINA_PID" ]; then if [ -f "$CATALINA_PID" ]; then if [ -s "$CATALINA_PID" ]; then if [ -r "$CATALINA_PID" ]; then if [ $? -eq 0 ] ; then if [ $? != 0 ]; then if [ -w "$CATALINA_PID" ]; then if [ $? != 0 ]; then if [ ! -w "$CATALINA_PID" ]; then if [ -z "$CATALINA_OUT_CMD" ] ; then if [ ! -e "$CATALINA_OUT" ]; then if ! mkfifo "$CATALINA_OUT"; then elif [ ! -p "$CATALINA_OUT" ]; then if [ ! -z "$CATALINA_PID" ]; then elif [ "$1" = "stop" ] ; then if [ ! -z "$1" ]; then if [ $? -gt 0 ]; then if [ "$1" = "-force" ]; then if [ ! -z "$CATALINA_PID" ]; then if [ -f "$CATALINA_PID" ]; then if [ -s "$CATALINA_PID" ]; then if [ $? -gt 0 ]; then if [ $? != 0 ]; then if [ ! -z "$CATALINA_PID" ]; then if [ ! -z "$CATALINA_PID" ]; then if [ -f "$CATALINA_PID" ]; then if [ $? -gt 0 ]; then if [ $? != 0 ]; then if [ -w "$CATALINA_PID" ]; then if [ $SLEEP -gt 0 ]; then if [ $SLEEP -eq 0 ]; then if [ $FORCE -eq 0 ]; then if [ $FORCE -eq 1 ]; then if [ -z "$CATALINA_PID" ]; then if [ -f "$CATALINA_PID" ]; then if [ $? -gt 0 ]; then if [ $? != 0 ]; then if [ -w "$CATALINA_PID" ]; then if [ $KILL_SLEEP_INTERVAL -gt 0 ]; then if [ $KILL_SLEEP_INTERVAL -lt 0 ]; then elif [ "$1" = "configtest" ] ; then if [ $result -ne 0 ]; then elif [ "$1" = "version" ] ; then if $os400; then echo " stop -force Stop Catalina, wait up to 5 seconds and then use kill -KILL if still running" echo " stop n -force Stop Catalina, wait up to n seconds and then use kill -KILL if still running"
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/daemon.sh
lines,270
function,0


for,0

if,16
if expr "$link" : '/.*' > /dev/null; then if [ -z "$JAVA_HOME" ]; then if expr "$link" : '/.*' > /dev/null; then if [ -z "$JSVC" ]; then if [ ! -x "$JSVC" ]; then if [ -r "$CATALINA_BASE/bin/setenv.sh" ]; then elif [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then if [ -r "$CATALINA_BASE/bin/tomcat-juli.jar" ] ; then if [ -z "$CATALINA_LOGGING_CONFIG" ]; then if [ -r "$CATALINA_BASE/conf/logging.properties" ]; then if [ "$cygwin" = "false" ]; then if [ "$?" -eq 0 ]; then if [ "$darwin" = "true" ] && [ "$MAX_FD_LIMIT" = "unlimited" ]; then if [ "$?" -ne 0 ]; then if [ -z "$UMASK" ]; then if [ "$?" = 0 ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/bin/makebase.sh
lines,115
function,0


for,1
for dir in bin conf lib logs temp webapps work;
if,4
if expr "$link" : '/.*' > /dev/null; then if [ -z "$BASE_TGT" ]; then if [ -d "$BASE_TGT" ]; then if [ "$COPY_WEBAPPS" = true ]; then
git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/modules/openssl-foreign/addlicense.sh
lines,22
function,0


for,1
for generated in src/main/java/org/apache/tomcat/util/openssl/*.java; do
if,0

git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/modules/openssl-java21/addlicense.sh
lines,22
function,0


for,1
for generated in src/main/java/org/apache/tomcat/util/openssl/*.java; do
if,0

git@github.com:apache/tomcat.git,be535eefeda3754344092da6f30bb9bedacb582d,tomcat,6959,./tomcat/modules/openssl-java17/addlicense.sh
lines,22
function,0


for,1
for generated in src/main/java/org/apache/tomcat/util/openssl/*.java; do
if,0

git@github.com:software-mansion/react-native-svg.git,f9c7d8a807c8dc5b21e8ac0358a9bf7a820a1f61,react-native-svg,6952,
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/utilities/pentaho-importer-utility/assemblies/utility/src/main/resources/importer-utility.sh
lines,2
function,0


for,0

if,0

git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/translator.sh
lines,175
function,0


for,2
for f in `find $BASEDIR/lib -type f -name "*.jar"` `find $BASEDIR/lib -type f -name "*.zip"` for f in `find $LIBPATH -name '*.jar'`
if,2
if [ -z "$KETTLE_HOME" ]; then if [ "$LIBPATH" != "NONE" ]
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/client/src/main/resources-addon/uninstall-hadoop-addon.sh
lines,42
function,0


for,0

if,6
if [ -e $PWD/classes/kettle-lifecycle-listeners.xml ];then mv $PWD/classes/kettle-lifecycle-listeners.xml $INSTALLEDDIR/classes/kettle-lifecycle-listeners.xml; fi if [ -e $PWD/classes/kettle-registry-extensions.xml ];then mv $PWD/classes/kettle-registry-extensions.xml $INSTALLEDDIR/classes/kettle-registry-extensions.xml; fi if [ -e $PWD/drivers ];then mv $PWD/drivers $INSTALLEDDIR/drivers ; fi if [ -e $PWD/system ];then mv $PWD/system $INSTALLEDDIR/system ; fi if [ -e $PWD/samples/jobs/hadoop ];then mv $PWD/samples/jobs/hadoop $INSTALLEDDIR/samples/jobs/ ; fi if [ -e $PWD/plugins/pentaho-big-data-plugin ];then mv $PWD/plugins/pentaho-big-data-plugin $INSTALLEDDIR/plugins/ ; fi
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/core/static/src/main/resources-filtered/pan.sh
lines,38
function,0


for,0

if,1
if [ "$1" = "-x" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/core/static/src/main/resources-filtered/spoon.sh
lines,292
function,1

inputtoexitstatus() {
for,0

if,11
if [ -z "$IS_YARN" ]; then if [ -z "$IS_KITCHEN" ]; then if $($_PENTAHO_JAVA -version 2>&1 | grep "64-Bit" > /dev/null ) if $($_PENTAHO_JAVA -version 2>&1 | grep "version \"1\.8\..*" > /dev/null ) if [ -f /sbin/ldconfig ]; then if [ -z "$HASWEBKITGTK" ] && [ "1" != "$SKIP_WEBKITGTK_CHECK" ]; then if $($_PENTAHO_JAVA -version 2>&1 | grep "64-Bit" > /dev/null ) if $($_PENTAHO_JAVA -version 2>&1 | grep "version \"1\.8\..*" > /dev/null ) if [ ! -z "$_PENTAHO_JAVA_HOME" ]; then if [ -z "$PENTAHO_DI_JAVA_OPTIONS" ]; then if [ -n "${FILTER_GTK_WARNINGS}" ] ; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/core/static/src/main/resources-filtered/kitchen.sh
lines,40
function,0


for,0

if,1
if [ "$1" = "-x" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/core/static/src/main/resources-filtered/set-pentaho-env.sh
lines,118
function,1

setPentahoEnv() {
for,0

if,11
if [ -n "$PENTAHO_JAVA" ]; then if [ -n "$1" ] && [ -d "$1" ] && [ -x "$1"/bin/$__LAUNCHER ]; then elif [ -n "$PENTAHO_JAVA_HOME" ]; then elif [ -x "$DIR/jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/java/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../java/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../../jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../../java/bin/$__LAUNCHER" ]; then elif [ -n "$JAVA_HOME" ]; then elif [ -n "$JRE_HOME" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/encr.sh
lines,30
function,0


for,0

if,0

git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/purge-utility.sh
lines,35
function,0


for,0

if,0

git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/carte.sh
lines,46
function,0


for,0

if,2
if [ ! "x$JAAS_LOGIN_MODULE_CONFIG" = "x" -a ! "x$JAAS_LOGIN_MODULE_NAME" = "x" ]; then if [ "${darwin}" = "true" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/pan.sh
lines,38
function,0


for,0

if,1
if [ "$1" = "-x" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/SpoonDebug.sh
lines,61
function,0


for,0

if,1
if [ "$SPOON_REDIRECT" != "1" ] ; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/spoon.sh
lines,293
function,1

inputtoexitstatus() {
for,0

if,11
if [ -z "$IS_YARN" ]; then if [ -z "$IS_KITCHEN" ]; then if $($_PENTAHO_JAVA -version 2>&1 | grep "64-Bit" > /dev/null ) if $($_PENTAHO_JAVA -version 2>&1 | grep "version \"1\.8\..*" > /dev/null ) if [ -f /sbin/ldconfig ]; then if [ -z "$HASWEBKITGTK" ] && [ "1" != "$SKIP_WEBKITGTK_CHECK" ]; then if $($_PENTAHO_JAVA -version 2>&1 | grep "64-Bit" > /dev/null ) if $($_PENTAHO_JAVA -version 2>&1 | grep "version \"1\.8\..*" > /dev/null ) if [ ! -z "$_PENTAHO_JAVA_HOME" ]; then if [ -z "$PENTAHO_DI_JAVA_OPTIONS" ]; then if [ -n "${FILTER_GTK_WARNINGS}" ] ; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/kitchen.sh
lines,40
function,0


for,0

if,1
if [ "$1" = "-x" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/yarn.sh
lines,45
function,0


for,0

if,3
if [ ! -z "$KETTLE_HOME" ] if [[ ! "$KETTLE_HOME" = /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]] if [ ! -d "$KETTLE_HOME" ]
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/import.sh
lines,35
function,0


for,0

if,1
if [ "$1" = "-x" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/set-pentaho-env.sh
lines,119
function,1

setPentahoEnv() {
for,0

if,11
if [ -n "$PENTAHO_JAVA" ]; then if [ -n "$1" ] && [ -d "$1" ] && [ -x "$1"/bin/$__LAUNCHER ]; then elif [ -n "$PENTAHO_JAVA_HOME" ]; then elif [ -x "$DIR/jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/java/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../java/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../../jre/bin/$__LAUNCHER" ]; then elif [ -x "$DIR/../../java/bin/$__LAUNCHER" ]; then elif [ -n "$JAVA_HOME" ]; then elif [ -n "$JRE_HOME" ]; then
git@github.com:pentaho/pentaho-kettle.git,de5f83d2d09e3ba2440252e64ce9cedcf35c4703,pentaho-kettle,6939,./pentaho-kettle/assemblies/static/src/main/resources-filtered/runSamples.sh
lines,33
function,0


for,0

if,0

git@github.com:bytedeco/javacv.git,b42450be42460977e6492af0b668cac34373e949,javacv,6922,
git@github.com:NLPchina/elasticsearch-sql.git,640ebe53a2b60a523a95abc3eb07710bf0a0b81d,elasticsearch-sql,6920,./elasticsearch-sql/src/_site/vendor/codemirror/bin/authors.sh
lines,6
function,0


for,0

if,0

git@github.com:provectus/kafka-ui.git,53a6553765a806eda9905c43bfcfe09da6812035,kafka-ui,6913,./kafka-ui/documentation/compose/scripts/update_run.sh
lines,10
function,0


for,0

if,0

git@github.com:provectus/kafka-ui.git,53a6553765a806eda9905c43bfcfe09da6812035,kafka-ui,6913,./kafka-ui/documentation/compose/scripts/create_cluster_id.sh
lines,0
function,0


for,0

if,0

git@github.com:provectus/kafka-ui.git,53a6553765a806eda9905c43bfcfe09da6812035,kafka-ui,6913,./kafka-ui/documentation/compose/scripts/update_run_cluster.sh
lines,10
function,0


for,0

if,0

git@github.com:provectus/kafka-ui.git,53a6553765a806eda9905c43bfcfe09da6812035,kafka-ui,6913,./kafka-ui/documentation/compose/connectors/start.sh
lines,9
function,0


for,1
for filename in /connectors/*.json; do
if,0

git@github.com:provectus/kafka-ui.git,53a6553765a806eda9905c43bfcfe09da6812035,kafka-ui,6913,./kafka-ui/documentation/compose/ssl/generate_certs.sh
lines,176
function,1
function file_exists_and_exit() {
function file_exists_and_exit() {
for,2
echo "times for multiple keystores." echo "self-signed certificate. Again, this keystore can only be used for one broker or"
if,6
if [ -e "$KEYSTORE_WORKING_DIRECTORY" ]; then if [ -e "$CA_CERT_FILE" ]; then if [ -e "$KEYSTORE_SIGN_REQUEST" ]; then if [ -e "$KEYSTORE_SIGN_REQUEST_SRL" ]; then if [ -e "$KEYSTORE_SIGNED_CERT" ]; then if [ -e "$TRUSTSTORE_WORKING_DIRECTORY" ]; then
git@github.com:gocd/gocd.git,99a1713fe5a145e0d29b610f27e9acc60a31af3e,gocd,6906,./gocd/scripts/clean-workingdir.sh
lines,10
function,0


for,0

if,0

git@github.com:gocd/gocd.git,99a1713fe5a145e0d29b610f27e9acc60a31af3e,gocd,6906,./gocd/buildSrc/src/main/resources/gocd-docker-agent/run-docker-daemon.sh
lines,31
function,0


for,0

if,1
if ! docker stats --no-stream; then
git@github.com:gocd/gocd.git,99a1713fe5a145e0d29b610f27e9acc60a31af3e,gocd,6906,./gocd/buildSrc/src/main/resources/gocd-docker-agent/docker-entrypoint.sh
lines,171
function,7
function stringToArgsArray() {
yell() { echo "$0: $*" >&2; } die() { yell "$*"; exit 111; } try() { echo "$ $*" 1>&2; "$@" || die "cannot $*"; } function stringToArgsArray() { setup_autoregister_properties_file_for_elastic_agent() { setup_autoregister_properties_file_for_normal_agent() { setup_autoregister_properties_file() {
for,5
for each_dir in "${agent_data_dirs[@]}"; do for each_dir in "${wrapper_dirs[@]}"; do for file in /docker-entrypoint.d/*; do for array_index in "${!AGENT_BOOTSTRAPPER_ARGS[@]}" for array_index in "${!AGENT_BOOTSTRAPPER_JVM_ARGS[@]}"
if,11
if [ -n "$GO_EA_SERVER_URL" ]; then if [ -e /run-docker-daemon.sh ]; then if [[ $ if [ "$1" = "${AGENT_WORK_DIR}/bin/go-agent" ]; then if [ ! -e "${VOLUME_DIR}/${each_dir}" ]; then if [ ! -e "${AGENT_WORK_DIR}/${each_dir}" ]; then if [ ! -e "${AGENT_WORK_DIR}/${each_dir}" ]; then if [ ! -e "${AGENT_WORK_DIR}/config/agent-bootstrapper-logback-include.xml" ]; then if [ ! -e "${AGENT_WORK_DIR}/config/agent-launcher-logback-include.xml" ]; then if [ ! -e "${AGENT_WORK_DIR}/config/agent-logback-include.xml" ]; then if [ -f "$file" ] && [ -x "$file" ]; then
git@github.com:gocd/gocd.git,99a1713fe5a145e0d29b610f27e9acc60a31af3e,gocd,6906,./gocd/buildSrc/src/main/resources/gocd-docker-server/docker-entrypoint.sh
lines,105
function,4
function stringToArgsArray() {
yell() { echo "$0: $*" >&2; } die() { yell "$*"; exit 111; } try() { echo "$ $*" 1>&2; "$@" || die "cannot $*"; } function stringToArgsArray() {
for,4
for each_dir in "${server_data_dirs[@]}"; do for each_dir in "${wrapper_dirs[@]}"; do for file in /docker-entrypoint.d/*; do for array_index in "${!GOCD_SERVER_JVM_OPTS[@]}"
if,7
if [[ $ if [ "$1" = "${SERVER_WORK_DIR}/bin/go-server" ]; then if [ ! -e "${VOLUME_DIR}/${each_dir}" ]; then if [ ! -e "${SERVER_WORK_DIR}/${each_dir}" ]; then if [ ! -e "${SERVER_WORK_DIR}/${each_dir}" ]; then if [ ! -e "${SERVER_WORK_DIR}/config/logback-include.xml" ]; then if [ -f "$file" ] && [ -x "$file" ]; then
git@github.com:naman14/Timber.git,b53a7d54682e100acaefb41cd181b40f5db59f64,Timber,6898,
git@github.com:hongyangAndroid/okhttputils.git,11fdc3c7368e481cc182e79188973418bc5d0939,okhttputils,6875,
git@github.com:DroidPluginTeam/DroidPlugin.git,c6ebf652e0f73aa0e5746766e117e51efaf41dbd,DroidPlugin,6826,
git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/release.sh
lines,80
function,0


for,1
git commit -m "add javadoc for $new_version"
if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/perf-test/tps-ThreadLocal.sh
lines,9
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/perf-test/memoryleak-ThreadLocal.sh
lines,9
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/perf-test/tps-TransmittableThreadLocal.sh
lines,9
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/perf-test/memoryleak-TransmittableThreadLocal.sh
lines,9
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/run-agent-demo.sh
lines,12
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/integration-test.sh
lines,100
function,0


for,4
for jdk_version in "${JDK_VERSIONS[@]}"; do cu::blue_echo 'Run unit test under ttl agent, include check for ExecutorService, ForkJoinPool, Timer/TimerTask' cu::blue_echo 'Run unit test under ttl agent, and turn on the disable inheritable for thread pool enhancement' cu::blue_echo 'Run agent check for Timer/TimerTask, explicit "ttl.agent.enable.timer.task"'
if,2
if [ "${CI:-}" = true ]; then if [ "$jdk_version" = "$default_build_jdk_version" ]; then
git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/bump-ttl-version.sh
lines,16
function,0


for,0

if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/codecov.sh
lines,23
function,0


for,0

if,1
if [ "${1:-}" = "-s" ]; then
git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/scripts/check-japi-compliance.sh
lines,33
function,0


for,1
for base_version in 2.5.0 2.6.0 2.7.0 2.10.2; do
if,1
if [ ! -f "$base_jar" ]; then
git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/ttl-integrations/sample-ttl-agent-extension-transformlet/scripts/integration-test.sh
lines,18
function,0


for,1
for jv in 8 11; do
if,0

git@github.com:alibaba/transmittable-thread-local.git,ee938da0504c7d30e5339a353c9d038ec19a8512,transmittable-thread-local,6809,./transmittable-thread-local/ttl-integrations/sample-ttl-agent-extension-transformlet/scripts/run.sh
lines,41
function,1

mvn_ttl_lib() {
for,0

if,2
if [ "${1:-}" != "skipClean" ]; then if [ ! -f "$ttl_agent_path" ]; then
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/build-and-push-all-images-with-latest.sh
lines,7
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/build-and-push-all-images.sh
lines,7
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/remove-all-images.sh
lines,3
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/stop-remove-containers.sh
lines,3
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/rest-loadbalancer-postgres.sh
lines,52
function,0


for,0

if,9
if [ -z "$1" ] if [ $1 == start ] if [ $STATUS -eq 0 ] elif [ $1 == stop ] if [ $STATUS -eq 0 ] elif [ $1 == info ] elif [ $1 == scale ] if [ -z "$2" ] if [ $STATUS -eq 0 ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/base-image/build.sh
lines,8
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/base-image/wait-for-something.sh
lines,16
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/base-image/push.sh
lines,8
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/build-all-images.sh
lines,10
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docker/rest-postgres.sh
lines,36
function,0


for,0

if,6
if [ -z "$1" ] if [ $1 == start ] if [ $STATUS -eq 0 ] elif [ $1 == stop ] if [ $STATUS -eq 0 ] elif [ $1 == info ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/deploy-rest-tomcat.sh
lines,16
function,0


for,0

if,1
if [ $STATUS -eq 0 ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/start-rest.sh
lines,12
function,0


for,0

if,1
if [ $STATUS -eq 0 ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/run-compatibility-tests.sh
lines,30
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/start-dev-tomcat-no-jrebel.sh
lines,27
function,0


for,0

if,1
if [[ -z "$TOMCAT_HOME" ]]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/i18n/compare-i18n-files.sh
lines,43
function,0


for,0

if,2
if [ -z "$1" ]; then if [ $? -ne 0 ]; then
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/run-flowable5-tests.sh
lines,133
function,0


for,0

if,11
if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ] if [ $STATUS -ne 0 ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/build-all.sh
lines,1
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/build-default-modules.sh
lines,5
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/build-form.sh
lines,5
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/common.sh
lines,11
function,0


for,0

if,1
if [ -f $FILE ]; then
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/build-dmn.sh
lines,5
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/build-idm.sh
lines,5
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/crdb/build-content.sh
lines,5
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/scripts/start-dev-tomcat.sh
lines,27
function,0


for,0

if,1
if [[ -z "$TOMCAT_HOME" ]]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docs/docusaurus/docs/assets/static/javadocs-5/javadoc.sh
lines,0
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docs/public-api/tools/flowable-slate/generate.sh
lines,40
function,0


for,1
for apiName in {"content","decision","form","process"}; do
if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/docs/public-api/tools/flowable-slate/generate-oas.sh
lines,40
function,0


for,1
for apiName in {"content","decision","form","process"}; do
if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/.github/actions/scripts/prepare-mssql.sh
lines,17
function,0


for,0

if,1
if [ $? -ne 0 ]
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/.github/actions/scripts/install-jdk.sh
lines,317
function,14
function initialize() { function usage() { function script_exit() { function say() { function verbose() { function parse_options() { function determine_latest_jdk() { function perform_sanity_checks() { function determine_url() { function prepare_variables() { function print_variables() { function download_and_extract_and_set_target() { function main() {
function initialize() { function usage() { function script_exit() { script_exit 'Invalid arguments passed to script_exit()!' 2 function say() { function verbose() { function parse_options() { function determine_latest_jdk() { function perform_sanity_checks() { function determine_url() { function prepare_variables() { function print_variables() { function download_and_extract_and_set_target() { function main() {
for,1
script_exit "Couldn't determine a download url for ${feature}-${license} on ${os}" 1
if,24
if [[ $ if [[ $ if [[ ${silent} != true ]]; then if [[ ${verbose} == true ]]; then if [[ ${curl_result} -ge 400 ]]; then if [[ ${feature} == '?' ]] || [[ ${feature} == 'ea' ]]; then if [[ ${feature} -lt 9 ]] || [[ ${feature} -gt ${latest_jdk} ]]; then if [[ -d "$target" ]]; then if [[ -z ${url} ]]; then if [[ ${os} == '?' ]]; then if [[ "$OSTYPE" == "darwin"* ]]; then if [[ ${url} == '?' ]]; then local quiet='--quiet'; if [[ ${verbose} == true ]]; then quiet=''; fi if [[ ${os} == 'windows-x64' ]]; then if [[ ${target} == '?' ]]; then if [[ "$OSTYPE" != "darwin"* ]]; then if [[ "$OSTYPE" != "darwin"* ]]; then if [[ ${verbose} == true ]]; then if [[ ${cacerts} == true ]]; then if [[ -f "${directory}" ]]; then if [[ ${silent} == false ]]; then print_variables; fi if [[ ${dry} == true ]]; then exit 0; fi if [[ ${silent} == false ]]; then java -Xmx100m -version; fi if [[ ${emit_java_home} == true ]]; then echo "${JAVA_HOME}"; fi
git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/qa/ci/run-test-db-standalone.sh
lines,3
function,0


for,0

if,0

git@github.com:flowable/flowable-engine.git,40877480df4947e068b0c959193f76ad46079dd7,flowable-engine,6803,./flowable-engine/modules/flowable-app-rest/src/main/jib/flowable-entrypoint.sh
lines,11
function,0


for,0

if,0

git@github.com:twowaits/SDE-Interview-Questions.git,664d5e6929d1a744fb6b22dcd0050d98ccfa79d6,SDE-Interview-Questions,6762,
git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/graylog2-web-interface/travis/graylog2-server.sh
lines,19
function,0


for,0

if,0

git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/graylog2-web-interface/dev/lintChanges.sh
lines,11
function,0


for,0

if,0

git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/.github/scripts/web-code-quality.sh
lines,37
function,0


for,0

if,0

git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/data-node/src/test/resources/org/graylog/datanode/management/test-script.sh
lines,19
function,0


for,0

if,1
if [ $
git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/data-node/bin/graylog-datanode.sh
lines,53
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -f "$DATANODE_JVM_OPTIONS_FILE" ]; then if [ -z "$JAVA_CMD" ]; then if [ -d "$DATANODE_ROOT/jvm" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java_cmd" ]; then
git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/graylog2-server/src/test/resources/org/graylog/testing/graylognode/docker-entrypoint.sh
lines,15
function,0


for,0

if,0

git@github.com:Graylog2/graylog2-server.git,4c74d900f846a6249266c913188cc61bd9e7696f,graylog2-server,6760,./graylog2-server/misc/vagrant_winlogbeat/download.sh
lines,5
function,0


for,0

if,0

git@github.com:frohoff/ysoserial.git,2874a69f6127fd3b3f078461741910423a6b1376,ysoserial,6753,
git@github.com:real-logic/aeron.git,ab7530dc9b744ad99e3e910ce089e850a54bee88,aeron,6717,./aeron/run-ci-tests.sh
lines,33
function,0


for,1
for option in "$@"
if,1
if [ -z "$AERON_GITHUB_PAT" ]
git@github.com:real-logic/aeron.git,ab7530dc9b744ad99e3e910ce089e850a54bee88,aeron,6717,./aeron/aeron-samples/scripts/show_thread_affinity.sh
lines,17
function,0


for,1
for pid in $(pgrep "${pname}"); do
if,1
if [[ ${line} != *"SPID"* ]]; then
git@github.com:react-native-video/react-native-video.git,0bfbda66e40a017745584007efe30db95f0f399e,react-native-video,6699,./react-native-video/examples/video-caching/update.sh
lines,5
function,0


for,0

if,0

git@github.com:NanoHttpd/nanohttpd.git,efb2ebf85a2b06f7c508aba9eaad5377e3a01e81,nanohttpd,6688,
git@github.com:hongyangAndroid/AndroidAutoLayout.git,d0045f33d2a944bebbc07ab3d54a1c19b9d2963b,AndroidAutoLayout,6685,
git@github.com:Angel-ML/angel.git,e53cd11be56e2aeff89ef443ae61248fa8c4a724,angel,6682,./angel/angel-ps/core/src/main/java/com/tencent/angel/kubernetesmanager/scripts/entrypoint.sh
lines,79
function,0


for,1
echo "Container ENTRYPOINT failed to add passwd entry for anonymous UID"
if,3
if [ -z "$uidentry" ] ; then if [ -w /etc/passwd ] ; then if [ -n "$ANGEL_EXTRA_CLASSPATH" ]; then
git@github.com:Angel-ML/angel.git,e53cd11be56e2aeff89ef443ae61248fa8c4a724,angel,6682,./angel/docker-build.sh
lines,7
function,0


for,0

if,0

git@github.com:Angel-ML/angel.git,e53cd11be56e2aeff89ef443ae61248fa8c4a724,angel,6682,./angel/spark-on-angel/bin/spark-on-angel-env.sh
lines,50
function,0


for,2
for f in `echo $dist_jar | awk -F, '{for(i=1; i<=NF; i++){ print $i}}'`; do for f in `echo $local_jar | awk -F, '{for(i=1; i<=NF; i++){ print $i}}'`; do
if,2
if [ "$SONA_ANGEL_JARS" ]; then if [ "$SONA_SPARK_JARS" ]; then
git@github.com:zo0r/react-native-push-notification.git,fcf40a05175bb79fb5fdfe2ac31bb797bc5008bc,react-native-push-notification,6647,
git@github.com:Meituan-Dianping/walle.git,f78edcf1117a0aa858a3d04bb24d86bf9ad51bb2,walle,6642,./walle/publish.sh
lines,21
function,0


for,1
for file in $(find . -name 'README.md'); do
if,0

git@github.com:yanzhenjie/AndPermission.git,00bedd6a3a939ce6dab22885723699025c63377b,AndPermission,6608,
git@github.com:markzhai/AndroidPerformanceMonitor.git,ed688391cdf95742892ce61494736667cf5baf08,AndroidPerformanceMonitor,6578,
git@github.com:google/error-prone.git,747227a8c8f6ee91c7a57859e4402e5aeca921c5,error-prone,6569,./error-prone/util/generate-latest-docs.sh
lines,52
function,0


for,0

if,1
if git commit -m "Latest docs on successful build $GITHUB_RUN_NUMBER auto-pushed to gh-pages"; then
git@github.com:zouzg/mybatis-generator-gui.git,dde137711ac11e0a0ebc95be1d07a850b1365bf9,mybatis-generator-gui,6538,
git@github.com:rest-assured/rest-assured.git,718ad4b684656547a4561c1bbbbcfbec409efadf,rest-assured,6522,./rest-assured/deploy_bintray.sh
lines,27
function,0


for,3
echo "Couldn't find any files to deploy for version $version." for file in ${files_to_deploy} for file in ${files_to_deploy}
if,2
if [[ -z "$files_to_deploy" ]] if [[ $REPLY =~ ^[Yy]$ ]]
git@github.com:rest-assured/rest-assured.git,718ad4b684656547a4561c1bbbbcfbec409efadf,rest-assured,6522,./rest-assured/generate_javadoc.sh
lines,13
function,0


for,3
echo "Generating Javadoc for version ${version}." for project_name in ${project_names[*]} echo "Generating for ${project_name}"
if,0

git@github.com:rest-assured/rest-assured.git,718ad4b684656547a4561c1bbbbcfbec409efadf,rest-assured,6522,./rest-assured/mvn_release.sh
lines,9
function,0


for,0

if,0

git@github.com:rest-assured/rest-assured.git,718ad4b684656547a4561c1bbbbcfbec409efadf,rest-assured,6522,./rest-assured/update_wiki.sh
lines,34
function,1

updateFiles() {
for,3
for file in ${filesToUpdate} git commit -am "Updating docs for version ${newVersion}" && git push && echo "Changes pushed.." && echo "Changes not committed, do \"cd ${folderName} && git commit -am \"Updating docs for version ${newVersion}\" && git push\" when ready"
if,2
if [[ -z "$filesToUpdate" ]] if [[ $REPLY =~ ^[Yy]$ ]]; then
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/dev-tools/rc/download-rc-directory.sh
lines,26
function,0


for,0

if,1
if [ "${TARGET_URL}" == "" ];
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/dev-tools/rc/verify-release-file.sh
lines,50
function,0


for,0

if,3
if [ "${TARGET_FILE}" == "" ]; if [ $? -eq 0 ]; if [ $? -eq 0 ];
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/dev-tools/gitact/gitact-install.sh
lines,51
function,0


for,2
echo "Looking for unapproved licenses" for rat in $(find . -name rat.txt)
if,2
if [[ "$BUILD_RET_VAL" != "0" ]]; if [[ "$BUILD_RET_VAL" != "0" ]];
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/dev-tools/gitact/gitact-script.sh
lines,60
function,0


for,2
for dir in $(find . -type d -and -wholename \*/target/\*-reports) echo "Looking for errors in ${dir}"
if,6
if [ "$2" == "Integration-Test" ] elif [ "$2" == "Check-Updated-License-Files" ] elif [ "$2" == "Client" ] elif [ "$2" == "Server" ] elif [ "$2" == "Core" ] elif [ "$2" == "External" ]
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/dev-tools/collect_license_files.sh
lines,57
function,0


for,1
for i in $(find -L "${SRC}" -name "*.jar")
if,1
if [ "${SRC}" = "-h" ]; then
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/conf/storm-env.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/storm-core/src/resources/compile-worker-launcher.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/integration-test/config/common.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/integration-test/config/install-storm.sh
lines,39
function,0


for,0

if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/integration-test/run-it.sh
lines,104
function,3
function die() { function list_storm_processes() { function start_storm_process() {
function die() { function list_storm_processes() { function start_storm_process() {
for,1
for i in {1..20} ; do
if,5
if [ "$(uname -m)" != aarch64 ]; then if [[ "${USER}" == "vagrant" ]]; then if [[ "${JDK_VERSION}" -ne "11" ]] if [[ "${USER}" == "github" ]]; then if [[ "$TRAVIS_JDK_VERSION" == "openjdk11" ]] || [[ "${JDK_VERSION}" == "11" ]]
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/storm-client/src/genthrift.sh
lines,34
function,0


for,2
for file in gen-javabean/org/apache/storm/generated/* ; do for file in gen-py/storm/* ; do
if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/aws-bin/init.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/external/storm-blobstore-migration/listLocal.sh
lines,26
function,0


for,0

if,1
if [ -n "$JAAS_CONF" ]; then
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/external/storm-blobstore-migration/migrate.sh
lines,28
function,0


for,0

if,1
if [ -n "$JAAS_CONF" ]; then
git@github.com:apache/storm.git,964ca2666aef2f8459dde010046de05dd661f770,storm,6483,./storm/external/storm-blobstore-migration/listHDFS.sh
lines,26
function,0


for,0

if,1
if [ -n "$JAAS_CONF" ]; then
git@github.com:guardianproject/haven.git,1e070fb21bff3e7886fa8faf05863794bd0a28d1,haven,6481,
git@github.com:mapstruct/mapstruct.git,c59eca2a77a02ea97ab0b87c8a90c48266e106dc,mapstruct,6444,
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-starter/src/main/bin/seatunnel-cluster.sh
lines,116
function,0


for,1
for i in "$@"
if,13
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -z $HAZELCAST_CONFIG ]; then if [ -z $SEATUNNEL_CONFIG ]; then if test ${JvmOption} ;then if [[ "${i}" == *"JvmOption"* ]]; then elif [[ "${i}" == "-d" || "${i}" == "--daemon" ]]; then elif [[ "${i}" == "-h" || "${i}" == "--help" ]]; then if [ -e "${CONF_DIR}/log4j2.properties" ]; then if [[ ! $line == \ if [[ $DAEMON == true && $HELP == false ]]; then if [[ ! -d ${APP_DIR}/logs ]]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-starter/src/main/bin/stop-seatunnel-cluster.sh
lines,58
function,0


for,0

if,4
if [ $ if test -z $CLUSTER_NAME;then if test -z $RES;then if test -z $RES;then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-starter/src/main/bin/seatunnel.sh
lines,110
function,0


for,1
for i in "$@"
if,11
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -z $HAZELCAST_CLIENT_CONFIG ]; then if [ -z $HAZELCAST_CONFIG ]; then if [ -z $SEATUNNEL_CONFIG ]; then if test ${JvmOption} ;then if [[ "${i}" == *"JvmOption"* ]]; then if [ -e "${CONF_DIR}/log4j2_client.properties" ]; then if [[ $args == *" -m local"* || $args == *" --master local"* || $args == *" -e local"* || $args == *" --deploy-mode local"* ]]; then if [[ ! $line == \
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-spark-starter/seatunnel-spark-3-starter/src/main/bin/start-seatunnel-spark-3-connector-v2.sh
lines,74
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -e "${CONF_DIR}/log4j2.properties" ]; then if [ ${EXIT_CODE} -eq 234 ]; then elif [ ${EXIT_CODE} -eq 0 ]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-spark-starter/seatunnel-spark-2-starter/src/main/bin/start-seatunnel-spark-2-connector-v2.sh
lines,74
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -e "${CONF_DIR}/log4j2.properties" ]; then if [ ${EXIT_CODE} -eq 234 ]; then elif [ ${EXIT_CODE} -eq 0 ]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-flink-starter/seatunnel-flink-15-starter/src/main/bin/start-seatunnel-flink-15-connector-v2.sh
lines,74
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -e "${CONF_DIR}/log4j2.properties" ]; then if [ ${EXIT_CODE} -eq 234 ]; then elif [ ${EXIT_CODE} -eq 0 ]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-core/seatunnel-flink-starter/seatunnel-flink-13-starter/src/main/bin/start-seatunnel-flink-13-connector-v2.sh
lines,74
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -f "${CONF_DIR}/seatunnel-env.sh" ]; then if [ $ if [ -e "${CONF_DIR}/log4j2.properties" ]; then if [ ${EXIT_CODE} -eq 234 ]; then elif [ ${EXIT_CODE} -eq 0 ]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/generate_client_protocol.sh
lines,57
function,0


for,0

if,3
if [ -z "$PYTHON" ]; then if [ -z "$PIP3" ]; then if [ -z "$GIT" ]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/config/seatunnel-env.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/bin/install-plugin.sh
lines,54
function,0


for,0

if,3
if [ -n "$1" ]; then if [ ! -d ${SEATUNNEL_HOME}/connectors ]; if [ "$first_char" != "-" ] && [ "$first_char" != "
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/seatunnel-e2e/seatunnel-connector-v2-e2e/connector-pulsar-e2e/src/test/resources/pulsar/start_canal_connector.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/tools/documents/sync.sh
lines,129
function,4
function rebuild_dirs() { function rm_exists_files() { function replace_images_path(){ function prepare_docs() {
function rebuild_dirs() { function rm_exists_files() { function replace_images_path(){ function prepare_docs() {
for,3
for dir in "$@"; do for file in "$@"; do for file_path in "${replace_dir}"/*; do
if,5
if [ -d "${dir}" ]; then if [ -f "${file}" ]; then if test -f "${file_path}"; then if [ "${file_path if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/tools/spotless_check/pre-commit.sh
lines,24
function,0


for,0

if,1
if ./mvnw spotless:check; then
git@github.com:apache/seatunnel.git,d98f18227252b0ffc765c26609c1a100f7908f07,seatunnel,6434,./seatunnel/tools/dependencies/checkLicense.sh
lines,45
function,0


for,0

if,1
if [ -d "/tmp/seatunnel-dependencies" ]; then
git@github.com:mrniko/netty-socketio.git,9b5c06e74d38121fa437695fe1d644efb3ce13a6,netty-socketio,6424,
git@github.com:vinc3m1/RoundedImageView.git,37ab3227182b5feac8bce29e91de3b0cee34474b,RoundedImageView,6413,
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/bin/shutdown.sh
lines,16
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/bin/startup.sh
lines,82
function,1

error_exit ()
for,0

if,9
if [ -z "$JAVA_HOME" ]; then if [ "Darwin" = "$(uname -s)" ]; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/bin/init_es_template.sh
lines,1036
function,0


for,1
for i in {0..6};
if,1
if [ "$?" != "0" ];then
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/km-dist/docker/manager/es_template_create.sh
lines,724
function,0


for,1
for i in {0..6};
if,1
if [ "$?" != "0" ];then
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/km-dist/docker/manager/ks-start.sh
lines,7
function,0


for,0

if,0

git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/km-dist/docker/mysql/init.sh
lines,6
function,0


for,0

if,1
if [ "$MYSQL_DATABASE" ]; then
git@github.com:didi/KnowStreaming.git,95158813b974e6ee0120a12e29a12d51f8c61ab8,KnowStreaming,6411,./KnowStreaming/km-dist/helm/charts/elasticsearch/examples/default/rolling_upgrade.sh
lines,19
function,0


for,0

if,1
if curl --fail 'http://localhost:8001/api/v1/proxy/namespaces/default/services/elasticsearch-master:9200/_search' ; then
git@github.com:processing/processing.git,459853d0dcdf1e1648b1049d3fdbb4bf233fded8,processing,6402,./processing/build/linux/uninstall.sh
lines,6
function,0


for,0

if,0

git@github.com:processing/processing.git,459853d0dcdf1e1648b1049d3fdbb4bf233fded8,processing,6402,./processing/build/linux/install.sh
lines,252
function,7

xdg_install_f() { simple_install_f() { xdg_uninstall_f() { simple_uninstall_f() { updatedbs_f() { xdg_exists_f() { display_help_f() {
for,5
printf "icons and file associations for the current user.\n" printf "Removing desktop shortcut and menu item for Processing..." printf "Adding desktop shortcut, menu item and file associations for Processing..." printf "Removing desktop shortcut and menu item for Processing..." printf "Adding desktop shortcut and menu item for Processing..."
if,20
if [ -f "${XDG_CONFIG_HOME:-${HOME}/.config}/user-dirs.dirs" ]; then if [ -d "${XDG_DESKTOP_DIR}" ]; then if [ -f "${HOME}/.local/share/applications/processing.desktop" ]; then if [ -f "${HOME}/.local/share/applications/processing-processingide.desktop" ]; then if [ -f "${HOME}/.local/share/applications/${RESOURCE_NAME}.desktop" ]; then if [ -f "${HOME}/.local/share/metainfo/${RESOURCE_NAME}.appdata.xml" ]; then if [ -f "${XDG_DESKTOP_DIR}/processing.desktop" ]; then if [ -f "${XDG_DESKTOP_DIR}/${RESOURCE_NAME}.desktop" ]; then if [ -d "${HOME}/.local/share/applications" ]; then if command -v update-desktop-database > /dev/null; then if [ -d "${HOME}/.local/share/mime" ]; then if command -v update-mime-database > /dev/null; then if ! command -v xdg-icon-resource > /dev/null; then return 1; fi if ! command -v xdg-desktop-menu > /dev/null; then return 1; fi if ! command -v xdg-desktop-icon > /dev/null; then return 1; fi if ! command -v xdg-mime > /dev/null; then return 1; fi if ! xdg_exists_f; then if xdg_exists_f; then if [ ${UNINSTALL} = true ]; then if [ ${UNINSTALL} = true ]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/libexec/alluxio-config.sh
lines,150
function,0


for,0

if,15
if [[ -e "${ALLUXIO_CONF_DIR}/alluxio-env.sh" ]]; then if [[ -z "${JAVA}" ]]; then if [[ -n "${JAVA_HOME}" ]] && [[ -x "${JAVA_HOME}/bin/java" ]]; then elif [[ -n "$(which java 2>/dev/null)" ]]; then if [[ ${JAVA_MAJORMINOR} != 001008 && ${JAVA_MAJOR} != 011 ]]; then if [[ -n "${ALLUXIO_HOME}" ]]; then if [[ ${ALLUXIO_JAVA_OPTS} == *alluxio.conf.dir* ]]; then if [[ ${ALLUXIO_JAVA_OPTS} == *alluxio.logs.dir* ]]; then if [[ ${ALLUXIO_JAVA_OPTS} == *alluxio.user.logs.dir* ]]; then if [[ -n "${ALLUXIO_RAM_FOLDER}" ]]; then if [[ -n "${ALLUXIO_MASTER_HOSTNAME}" ]]; then if [[ -n "${ALLUXIO_MASTER_MOUNT_TABLE_ROOT_UFS}" ]]; then elif [[ -n "${ALLUXIO_UNDERFS_ADDRESS}" ]]; then if [[ -n "${ALLUXIO_WORKER_MEMORY_SIZE}" ]]; then if [[ -n "${ALLUXIO_WORKER_RAMDISK_SIZE}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/docker/entrypoint.sh
lines,289
function,11
function printUsage { function writeConf { function formatMasterIfSpecified { function formatWorkerIfSpecified { function mountAlluxioFSWithFuseOption { function mountFuseWithUFS { function forward_signal { function setup_signals { function setup_for_dynamic_non_root { function set_ram_folder_if_needed { function main {
processes=()
for,4
for key in "${!ALLUXIO_ENV_VARS[@]}"; do ALLUXIO_ENV_MAP[${ALLUXIO_ENV_VARS[$key]}]="$key"; done for keyvaluepair in $(env); do for i in {1..31}; do for proc in "${processes[@]}"; do
if,20
if [ ! -f "conf/alluxio-env.sh" ]; then if [[ -n "${ALLUXIO_ENV_MAP[${key}]}" ]]; then if [ -f "$LOG4J_FILE_TEMPLATE" ] && [ ! -f "$LOG4J_FILE" ]; then if [[ ! -z "${ALLUXIO_LOG4J_PROPERTIES}" ]]; then if [[ ! -z "${ALLUXIO_SITE_PROPERTIES}" ]]; then if [[ -n ${OPTIONS} && ${OPTIONS} != ${NO_FORMAT} ]]; then if [[ ${OPTIONS} != ${NO_FORMAT} ]]; then if [[ -n ${OPTIONS} && ${OPTIONS} != ${NO_FORMAT} ]]; then if [[ ${OPTIONS} != ${NO_FORMAT} ]]; then if [ "${signal}" -eq "2" ]; then if [ -n "${proc}" ]; then if [[ ${ALLUXIO_USERNAME} != "root" ]] && [[ ${ALLUXIO_GROUP} != "root" ]] && \ if [ "$alp" == "1" ];then if [[ -n "${ALLUXIO_RAM_FOLDER}" ]]; then if [[ "$1" == "worker" || "$1" == "worker-only" ]]; then if [[ "${tier_alias}" != "MEM" ]]; then if [[ "${full_worker_opts}" != *"alluxio.worker.tieredstore.level0.dirs.path"* ]]; then if [[ "$ if [ -z "${processes}" ]; then if [ "${
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/docker/hms/initialize.sh
lines,63
function,0


for,2
<description>JDBC connect string for a JDBC metastore</description> <description>Driver class name for a JDBC metastore</description>
if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/docker/hms/entrypoint.sh
lines,23
function,1
function main {

for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/dataproc/build.sh
lines,30
function,0


for,0

if,2
if [[ -n ${ALLUXIO_DOWNLOAD_URL} ]]; then if [[ -z $(grep "readonly ALLUXIO_DOWNLOAD_URL=" "${DIR}/${SCRIPT}") ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/dataproc/alluxio-dataproc.sh
lines,404
function,13

append_alluxio_property() { get_alluxio_property() { doas() { download_file() { get_default_mem_size() { expose_alluxio_client_jar() { configure_alluxio_systemd_services() { configure_alluxio_root_mount() { configure_alluxio_storage() { bootstrap_alluxio() { configure_alluxio() { start_alluxio() { main() {
for,4
for mount_point in "${mounts[@]}"; do for file in "${files_to_be_downloaded[@]}"; do for property in "${conf[@]}"; do for path in "${paths[@]}"; do
if,26
if [[ "$ if grep -qe "^\s*${property}=" ${ALLUXIO_SITE_PROPERTIES} 2> /dev/null; then if [[ "$ if [[ "$ if [[ "$ if [[ "${uri}" == s3://* ]]; then elif [[ "${uri}" == gs://* ]]; then if [[ "${ROLE}" == "Master" ]]; then if [[ "${ROLE}" == "Master" ]]; then if [[ "${root_ufs_uri}" == "LOCAL" ]]; then if [[ "${root_ufs_uri}" = hdfs://* ]]; then if [[ "${hdfs_version}" ]]; then if [[ -f "${ALLUXIO_HOME}/conf/core-site.xml" ]]; then if [[ -f "${ALLUXIO_HOME}/conf/hdfs-site.xml" ]]; then if [[ "${ssd_capacity_usage}" ]]; then if [[ "${ssd_capacity_usage}" -lt 1 || "${ssd_capacity_usage}" -gt 100 ]]; then if [ "${dd}" -eq 0 ]; then if [[ "${ if [[ "${use_mem}" ]]; then if [ -n "${ALLUXIO_DOWNLOAD_PATH}" ]; then if [ "${ if [ -n "${ALLUXIO_LICENSE_BASE64}" ]; then if [[ "${site_properties}" ]]; then if [[ "${ROLE}" == "Master" ]]; then if [[ "${sync_list}" ]]; then if [[ $(get_alluxio_property alluxio.worker.tieredstore.level0.alias) == "MEM" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/emr/build.sh
lines,30
function,0


for,0

if,2
if [[ -n ${ALLUXIO_DOWNLOAD_URL} ]]; then if [[ -z $(grep "readonly ALLUXIO_DOWNLOAD_URL=" ${DIR}/${SCRIPT}) ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/emr/alluxio-emr.sh
lines,751
function,17

download_file() { doas() { set_alluxio_property() { get_default_mem_size() { get_aws_region() { register_backup_on_shutdown() { emr_install_alluxio() { wait_for_hadoop() { configure_nvme() { download_user_files() { expose_alluxio_client_jar() { set_custom_alluxio_properties() { configure_alluxio_worker_storage_properties() { configure_alluxio_general_properties() { configure_alluxio_hdfs_root_mount() { main() { print_help() {
for,12
echo "Found pid for ${hadoop_process_name}: ${hdfs_pid}" for mount_point in "${mounts[@]}"; do for file in "${files_to_be_downloaded[@]}"; do for property in "${conf[@]}"; do be uploaded. This option is not recommended for production Active sync will be enabled for the given paths. UFS -n Automatically configure NVMe storage for Alluxio workers at for i in "${input_args[@]}"; do echo "Waiting for processes to start before starting script" for plugindir in "${ALLUXIO_HOME}"/client/presto/plugins/prestodb*; do for plugindir in "${ALLUXIO_HOME}"/client/presto/plugins/prestodb*; do for path in "${paths[@]}"; do
if,51
if [[ "$ if [[ "${uri}" == s3://* ]]; then elif [[ "${uri}" == gs://* ]]; then if [[ "$ if [[ "$ if grep -qe "^\s*${property}=" ${ALLUXIO_SITE_PROPERTIES} 2> /dev/null; then if [[ "$ if [[ "$ if [[ "${release}" == *-* ]]; then if [[ "$ if [[ "${is_master}" == "true" ]]; then if [[ "${pid}" != "" ]]; then if [[ "$ if [[ "${ if [[ "$ if [ "${ if [[ "$ if [[ "${delimited_properties}" ]]; then if [[ "$ if [[ "${nvme_capacity_usage}" ]]; then if [[ "${use_mem}" == "true" ]]; then if [[ "$ if [[ "$ if [[ "${root_ufs_uri}" = hdfs://* ]]; then if [[ "$ if [[ -f "${ALLUXIO_HOME}/conf/core-site.xml" ]]; then if [[ -f "${ALLUXIO_HOME}/conf/hdfs-site.xml" ]]; then By default, if the environment this script executes in does not already contain nothing will be installed over it, even if -d is specified. Alluxio tarball and install Alluxio at ${ALLUXIO_HOME} if an if [[ "$ if [[ "${nvme_capacity_usage}" ]]; then if [[ "${nvme_capacity_usage}" -lt 1 || "${nvme_capacity_usage}" -gt 100 ]]; then if [[ -z "${alluxio_tarball}" ]]; then if [[ "${root_ufs_uri}" = hdfs://* ]] && [[ -z "${hdfs_version}" ]]; then if [[ ${execute_synchronous} == "false" ]]; then if [[ ! -d "${ALLUXIO_HOME}" ]]; then if [[ ! -d "${ALLUXIO_HOME}" ]]; then if [[ "${ if [[ "${is_master}" == "true" ]]; then if [[ "${root_ufs_uri}" == "LOCAL" ]]; then if [[ "${emr_major}" -eq 5 && "${emr_minor}" -ge 28 && "${emr_minor}" -lt 30 ]]; then if [ -d "$plugindir" ]; then if [ "${emr_major}" -ge 6 ] || [[ "${emr_major}" -eq 5 && "${emr_minor}" -ge 30 ]]; then if [ -d "$plugindir" ]; then if [[ "${client_only}" != "true" ]]; then if [[ ${is_master} = "true" ]]; then if [[ "${restore_from_backup_uri}" ]]; then if [[ "${backup_uri}" ]]; then if [[ "${sync_list}" ]]; then if [[ "${use_mem}" == "true" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/integration/tools/ratis-shell/install-ratis-shell.sh
lines,29
function,0


for,0

if,1
if [ -z "$VERSION" ]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/docs/resources/intellij/update.sh
lines,42
function,0


for,2
for x in "${UNPACK_DIR}/codestyles/*.xml"; do for x in "${UNPACK_DIR}/options/*.xml"; do
if,2
if [[ $ if [[ ! -d "${UNPACK_DIR}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/docs/resources/intellij/import.sh
lines,14
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/docs/link_checker.sh
lines,5
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/github/run_tests.sh
lines,59
function,0


for,0

if,4
if [ -z "${ALLUXIO_FORK_COUNT}" ]; then if [ -n "${ALLUXIO_GIT_CLEAN}" ]; then if [ -n "${ALLUXIO_MVN_PROJECT_LIST}" ]; then if [ -n "${ALLUXIO_MVN_TESTS}" ]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/github/run_docker.sh
lines,84
function,1
function main {

for,0

if,9
if [ -z "${ALLUXIO_DOCKER_ID}" ]; then if [ -z "${ALLUXIO_DOCKER_M2}" ]; then if [ -z "${ALLUXIO_DOCKER_IMAGE}" ]; then if [ -z "${ALLUXIO_DOCKER_NO_TTY}" ]; then if [ -n "${ALLUXIO_DOCKER_FORK_COUNT}" ]; then if [ -n "${ALLUXIO_DOCKER_GIT_CLEAN}" ]; then if [ -n "${ALLUXIO_DOCKER_MVN_PROJECT_LIST}" ]; then if [ -n "${ALLUXIO_DOCKER_MVN_TESTS}" ]; then if [ -n "${ALLUXIO_CHECKSTYLE}" ]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/github/run_checks.sh
lines,37
function,0


for,0

if,1
if [ -n "${ALLUXIO_GIT_CLEAN}" ]
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/scripts/build-artifact.sh
lines,21
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/scripts/update-versions.sh
lines,130
function,7
function update_dataproc() { function update_emr() { function update_poms() { function update_readme() { function update_docs() { function update_dockerfiles() { function main() {
function update_dataproc() { function update_emr() { function update_poms() { function update_readme() { function update_docs() { function update_dockerfiles() { function main() {
for,0

if,4
if [[ "${current_branch}" != "main" ]]; then if [[ "${2}" =~ ${major_version_regex} ]]; then if [[ "$ if [[ "${skip_maven}" == "false" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/scripts/watch-metrics.sh
lines,188
function,1
function main() {
function main() { function cleanup() {
for,4
USAGE="This script is used as a convenience method for monitoring & periodically capturing the HTTP JSON sink for Alluxio metrics. echo "ERROR: Must provide non-empty strings for arguments" for key in `echo "${filter}" | jq -r '. | join(" ")'`; do
if,9
if ! command -v nslookup > /dev/null 2>&1; then if ! command -v jq > /dev/null 2>&1; then if [[ -z "${host}" || -z "${port}" ]]; then if [[ ${port} -le 0 ]]; then if [[ ${time_step} -le 0 ]]; then if [[ ! ( -z ${diffs} ) ]]; then if [[ ! ( -z "${metrics_filename}" ) ]]; then if [[ ! ( -z "${filter}" ) ]]; then if [[ ! ( -z $select_keys ) ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/scripts/check-docs.sh
lines,28
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/scripts/generate-backcompat-journal.sh
lines,17
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dev/intellij/install-runconfig.sh
lines,20
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/build/cli/build-cli.sh
lines,72
function,1

main() {
for,3
-a Build executables for all OS and architecture combinations for val in "${OS_ARCH_TUPLES[@]}"; do echo "Building executable for ${tuple[0]} ${tuple[1]}"
if,3
if ! command -v go > /dev/null; then if [[ ! ${go_version} =~ ^go\ version\ go1\.(1[5-9]|[2-9][0-9]) ]]; then if [[ ${build_all} == "false" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/build/style/check_no_windows_line_endings.sh
lines,27
function,0


for,0

if,4
if [[ $? -ne 0 ]]; then if [[ ! -z "${WINDOWS_FILES}" ]]; then if [[ ! -z "${UPPER_CURLY_FILES}" ]]; then if [[ ! -z "${LOWER_CURLY_FILES}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/build/version/write_version.sh
lines,4
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/build/lib/copy_jars.sh
lines,64
function,0


for,2
for INCLUDED in "${INCLUDED_NAMES[@]}"; do for EXCLUDED in "${EXCLUDED_NAMES[@]}"; do
if,2
if [[ "${LIB_JAR_NAME}" == "${INCLUDED}" ]]; then if [[ "${LIB_JAR_NAME}" == "${EXCLUDED}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-start.sh
lines,27
function,0

startArgs=()
for,1
for arg in "$@"; do
if,1
if [[ "${arg}" != -* ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-mount-bash.sh
lines,264
function,15
function init_env() { function check_space_linux() { function mount_ramfs_linux() { function umount_ramfs_linux() { function check_space_freebsd() { function mount_ramfs_freebsd() { function umount_ramfs_freebsd() { function mount_ramfs_mac() { function umount_ramfs_mac() { function mount_ramfs_local_all() { function mount_ramfs_local() { function umount_ramfs_local_all() { function umount_ramfs_local() { function run_local() { function main {
function init_env() { function check_space_linux() { function mount_ramfs_linux() { function umount_ramfs_linux() { function check_space_freebsd() { function mount_ramfs_freebsd() { function umount_ramfs_freebsd() { function mount_ramfs_mac() { function umount_ramfs_mac() { function mount_ramfs_local_all() { function mount_ramfs_local() { function umount_ramfs_local_all() { function umount_ramfs_local() { function run_local() {
for,2
for RAMDISKPATH in "${RAMDISKARRAY[@]}" for RAMDISKPATH in "${RAMDISKARRAY[@]}"
if,25
if [[ ${total_mem} -lt ${RAMDISK_SIZE} ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if mount | grep -E "(^|[[:space:]])${TIER_PATH}($|[[:space:]])" > /dev/null; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ ${total_mem} -lt ${RAMDISK_SIZE} ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if mount | grep -E "(^|[[:space:]])${TIER_PATH}($|[[:space:]])" > /dev/null; then if [[ ${USE_SUDO} == true ]]; then if [[ $? -ne 0 ]]; then if [[ -n "${device}" ]]; then if [[ $(uname -a) == Darwin* ]]; then elif [[ $(uname -a) == FreeBSD* ]]; then if [[ $(uname -a) == Darwin* ]]; then if [[ ${TIER_ALIAS} != "MEM" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-stop-bash.sh
lines,240
function,12

generate_kill_command() { generate_cluster_kill_command() { stop_job_master() { stop_job_masters() { stop_job_worker() { stop_job_workers() { stop_master() { stop_masters() { stop_proxy() { stop_proxies() { stop_worker() { stop_workers() {
for,1
for dir in "${RAMDISKARRAY[@]}"; do
if,14
-s processes won't be forcibly killed even if operation is timeout. if [[ "${soft_kill}" = true ]]; then if [[ "${script_type}" = "master" ]]; then elif [[ "${script_type}" = "worker" ]]; then if [[ "${soft_kill}" = true ]]; then if [[ ! -z "${cache}" ]]; then if [[ -d "${cache}" ]]; then elif [[ -e "${cache}" ]]; then if [[ ${?} -ne 0 ]]; then if [[ ! -e "${dir}" ]]; then if [[ ! -d "${dir}" ]]; then if [[ ${?} -ne 0 ]]; then if [[ ${?} -ne 0 ]]; then if [[ -n ${cache} ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-masters-bash.sh
lines,64
function,0


for,4
for master in ${HOSTLIST[@]}; do echo "Waiting for tasks to finish..." for ((i=0; i< ${ echo "There are task failures, look at ${ALLUXIO_TASK_LOG} for details." >&2
if,4
if [[ $ if [[ ${JOURNAL_TYPE} == "EMBEDDED" ]]; then if [[ ${ret_code} -ne 0 ]]; then if [[ ${has_error} -eq 0 ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-start-bash.sh
lines,470
function,19

ensure_dirs() { get_env() { is_ram_folder_mounted() { do_mount() { stop() { start_job_master() { start_job_masters() { start_job_worker() { start_job_workers() { start_master() { start_masters() { start_proxy() { start_proxies() { start_worker() { start_workers() { get_offline_worker() { get_offline_workers() { start_monitor() { main() {
for,8
-c cache populate the worker ramcache(s) for each worker node from the -w wait for processes to end before returning. for fs in ${mounted_fs}; do for tier_path in "${RAMDISKARRAY[@]}" for (( c = 1; c < ${nworkers}; c++ )); do for dir in "${RAMDISKARRAY[@]}"; do for worker in $(echo ${workers}); do for local_address in ${local_addresses[*]}
if,40
Mount \tMount the configured RamFS if it is not already mounted. SudoMount\tMount the configured RamFS using sudo if it is not already mounted. NoMount is assumed if MOPT is not specified. if [[ ! -d "${ALLUXIO_LOGS_DIR}" ]]; then if [[ $(uname -s) == Darwin ]]; then if [[ "${1}" == "${fs}" || "${1}" =~ ^"${fs}"\/.* ]]; then if [[ ${tier_alias} != "MEM" ]]; then if [[ $? -eq 0 ]]; then if [[ "$1" == "-f" ]]; then if [[ "$1" == "-f" ]]; then elif [[ `${LAUNCHER} ${BIN}/alluxio-bash getConf ${ALLUXIO_MASTER_JAVA_OPTS} alluxio.master.journal.type` == "EMBEDDED" ]]; then if [ -f "${JOURNAL_DIR}" ]; then elif [ ! -e "${JOURNAL_DIR}" ]; then if [ ${MOUNT_FAILED} -ne 0 ] ; then if [[ ! -z "${cache}" ]] ; then if [[ ! -e "${cache}" ]] ; then if [[ ! -d "${cache}" ]] ; then if [[ -z $(ls -a "${cache}" ) ]]; then if [[ ! -e "${dir}" ]]; then if [[ ! -d "${dir}" ]]; then if [[ ! -e "${cache}/${dir}" ]]; then if [[ ! -d "${cache}/${dir}" ]]; then if [[ ${?} -ne 0 ]]; then if [[ -n ${cache} ]]; then if [[ ${run} -eq 0 ]]; then if [[ ${i} -gt 0 ]]; then if [[ ${run} -eq 0 ]]; then if [[ -z "${run}" ]]; then if [[ -z "${ACTION}" ]]; then if [[ -z "${MOPT}" ]]; then elif [[ "${MOPT}" == "-f" ]]; then if [[ ! "${async}" ]]; then if [[ "${killonstart}" != "no" ]]; then if [[ -n ${master_hostname} ]]; then if [[ $(uname -a) != Darwin* ]]; then if [[ ${local_address} == ${master_hostname} ]]; then if [[ ${is_master_set_and_local} != true ]]; then if [[ "${FORMAT}" == "-f" ]]; then if [[ "${wait}" ]]; then if [[ ! "${async}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-workers-bash.sh
lines,59
function,0


for,4
for worker in ${HOSTLIST[@]}; do echo "Waiting for tasks to finish..." for ((i=0; i< ${ echo "There are task failures, look at ${ALLUXIO_TASK_LOG} for details."
if,3
if [[ $ if [[ ${ret_code} -ne 0 ]]; then if [[ ${has_error} -eq 0 ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-stop.sh
lines,17
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-mount.sh
lines,16
function,0


for,0

if,0

git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-monitor-bash.sh
lines,323
function,9

get_env() { prepare_monitor() { print_node_logs() { run_monitor() { get_nodes() { run_on_node() { run_monitors() { batch_run_on_nodes() { main() {
for,11
all \tStart monitors for all master and worker nodes. local \tStart monitors for local master and worker processes. masters \tStart monitors for all masters nodes. workers \tStart monitors for all workers nodes. job_masters \tStart monitors for all job_master nodes. job_workers \tStart monitors for all job_worker nodes. proxies \tStart monitors for all proxies nodes. [host1,host2,...] is a comma separated list of host to monitor, if not given the default config for the target is used. for node_log in "${node_logs[@]}"; do echo -e "${CYAN}--- Printing the log tail for ${node_log}${NC}" for node in $nodes; do
if,17
if [[ "$-" == alluxio output.txt outputbashcleaned.txt ]]; then [host1,host2,...] is a comma separated list of host to monitor, if not given the default config for the target is used. if [[ -f "${node_log}" ]]; then if [[ lines_count -gt 0 ]]; then if [[ "${mode}" == "-L" ]]; then if [[ $? -ne 0 ]]; then echo -e "${WHITE}---${NC} ${RED}[ FAILED ]${NC} The ${CYAN}${node_type}${NC} @ ${PURPLE}$(hostname -f)${NC} is not serving requests after 120s. Please check if the process is running and the logs/ if necessary.${NC}" if [[ -z "${nodes}" ]]; then if [[ ! -f ${job_masters} ]]; then job_masters=${ALLUXIO_CONF_DIR}/masters; fi if [[ ! -f ${job_workers} ]]; then job_workers=${ALLUXIO_CONF_DIR}/workers; fi if [[ "${node_type}" == "master" ]]; then if [[ $? -ne 0 ]]; then if [[ ${JOURNAL_TYPE} == "EMBEDDED" ]]; then if [[ ${HA_ENABLED} == "true" ]]; then if [ $(( $taskCount % $batchCount )) == 0 ]; then wait; fi; if [[ $ if [[ ! -z "${HOSTS}" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/bin/alluxio-common-bash.sh
lines,75
function,4
function get_alluxio_property() { function get_ramdisk_array() { function ssh_command() {
function get_alluxio_property() { echo "No property provided to get_alluxio_property()" function get_ramdisk_array() { RAMDISKARRAY=() function ssh_command() {
for,2
echo "Failed to fetch value for Alluxio property key: ${property_key}" for i in "${!patharray[@]}"; do
if,5
if [[ "$-" == alluxio output.txt outputbashcleaned.txt ]]; then if [[ -z ${property_key} ]]; then if [[ ${?} -ne 0 ]]; then if [[ -z "${dir}" ]]; then if [[ $host != "localhost" && $host != "127.0.0.1" ]]; then
git@github.com:Alluxio/alluxio.git,47b766779d266a5af58e2480463c5babc906ccf5,alluxio,6392,./alluxio/dora/integration/tools/benchmark/pytorch/run-test.sh
lines,27
function,0


for,0

if,1
if [[ ${WORLD_SIZE} -eq 1 ]]; then
git@github.com:smuyyh/BookReader.git,fceb08925ca3cb4f39fbcd246cc330c02004438c,BookReader,6388,
git@github.com:zendesk/android-floating-action-button.git,639063555c5416e0d38980f38a34130494a30fc5,android-floating-action-button,6375,
git@github.com:Team-xManager/xManager.git,91781fae5af57e46caadcfb2368ddc4af689932b,xManager,6374,
git@github.com:NLPchina/ansj_seg.git,50787ca2c7031d2a18c5393a97d1a54432790785,ansj_seg,6364,
git@github.com:MinecraftForge/MinecraftForge.git,347c480bdc1c59666b4528865b4c031fb22bc132,MinecraftForge,6364,./MinecraftForge/server_files/run.sh
lines,6
function,0


for,0

if,0

git@github.com:alibaba/jvm-sandbox.git,c01c28ab5d7d97a64071a2aca261804c47a5347e,jvm-sandbox,6322,./jvm-sandbox/bin/sandbox-release.sh
lines,6
function,0


for,0

if,0

git@github.com:alibaba/jvm-sandbox.git,c01c28ab5d7d97a64071a2aca261804c47a5347e,jvm-sandbox,6322,./jvm-sandbox/bin/install-local.sh
lines,97
function,3
function usage() { function main() {
exit_on_err() function usage() { function main() {
for,0

if,1
if [[ -z ${SANDBOX_INSTALL_PREFIX} ]]; then
git@github.com:alibaba/jvm-sandbox.git,c01c28ab5d7d97a64071a2aca261804c47a5347e,jvm-sandbox,6322,./jvm-sandbox/bin/sandbox.sh
lines,424
function,9
function usage() { function attach_jvm() { function sandbox_curl() { function sandbox_curl_with_exit() { function sandbox_debug_curl() { function main() {
exit_on_err() { function usage() { check_permission() { reset_for_env() { function attach_jvm() { function sandbox_curl() { function sandbox_curl_with_exit() { function sandbox_debug_curl() { function main() {
for,0

if,10
if module froze & unload occur error, ignore this error force froze & unload. if module reload occur error, ignore this module. if module jar file was append, load the newest module. if module jar file was changed, reload the newest module. if module jar file was removed. remove the modules. if module froze & unload occur error, ignore this error force froze & unload. if module reload occur error, ignore this module. if [[ "$host" == "0.0.0.0" ]]; then if [[ ${OP_CONNECT_ONLY} ]]; then if [[ -n ${OP_DEBUG} ]]; then
git@github.com:alibaba/jvm-sandbox.git,c01c28ab5d7d97a64071a2aca261804c47a5347e,jvm-sandbox,6322,./jvm-sandbox/bin/set-version.sh
lines,23
function,0


for,0

if,0

git@github.com:alibaba/jvm-sandbox.git,c01c28ab5d7d97a64071a2aca261804c47a5347e,jvm-sandbox,6322,./jvm-sandbox/bin/sandbox-packages.sh
lines,68
function,1

exit_on_err()
for,0

if,0

git@github.com:koush/ion.git,2e48671fb865e993f714b5ffed16e82aed6d04fb,ion,6298,
git@github.com:beemdevelopment/Aegis.git,e1f4696115d475730437b00979fa16252b58ed1a,Aegis,6267,
git@github.com:h2pl/JavaTutorial.git,183bf66bea9599a14c8598d6df28fcad26248d35,JavaTutorial,6228,
git@github.com:wxiaoqi/Spring-Cloud-Platform.git,9aad4353f9f5eb2b12bb4e7479cf9d78cdfdbc44,Spring-Cloud-Platform,6224,./Spring-Cloud-Platform/ace-modules/ace-admin/src/main/docker/wait-for-it.sh
lines,177
function,4

echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } usage() wait_for() wait_for_wrapper()
for,4
Timeout in seconds, zero for no timeout echoerr "$cmdname: waiting $TIMEOUT seconds for $HOST:$PORT" echoerr "$cmdname: waiting for $HOST:$PORT without a timeout" echoerr "$cmdname: timeout occurred after waiting $TIMEOUT seconds for $HOST:$PORT"
if,16
echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } -s | --strict Only execute subcommand if the test succeeds if [[ $TIMEOUT -gt 0 ]]; then if [[ $ISBUSY -eq 1 ]]; then if [[ $result -eq 0 ]]; then if [[ $QUIET -eq 1 ]]; then if [[ $RESULT -ne 0 ]]; then if [[ $HOST == "" ]]; then break; fi if [[ $PORT == "" ]]; then break; fi if [[ $TIMEOUT == "" ]]; then break; fi if [[ "$HOST" == "" || "$PORT" == "" ]]; then if [[ $TIMEOUT_PATH =~ "busybox" ]]; then if [[ $CHILD -gt 0 ]]; then if [[ $TIMEOUT -gt 0 ]]; then if [[ $CLI != "" ]]; then if [[ $RESULT -ne 0 && $STRICT -eq 1 ]]; then
git@github.com:wxiaoqi/Spring-Cloud-Platform.git,9aad4353f9f5eb2b12bb4e7479cf9d78cdfdbc44,Spring-Cloud-Platform,6224,./Spring-Cloud-Platform/ace-infrastructure/ace-nacos/nacos/bin/shutdown.sh
lines,25
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:wxiaoqi/Spring-Cloud-Platform.git,9aad4353f9f5eb2b12bb4e7479cf9d78cdfdbc44,Spring-Cloud-Platform,6224,./Spring-Cloud-Platform/ace-infrastructure/ace-nacos/nacos/bin/startup.sh
lines,91
function,1

error_exit ()
for,0

if,5
if [[ "${MODE}" == "standalone" ]]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [[ "${MODE}" == "standalone" ]]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:sshahine/JFoenix.git,a1be87d91d578e7799bc308b3b1bbe1d742a020d,JFoenix,6170,
git@github.com:AsyncHttpClient/async-http-client.git,2d1b227be35321f11f9b2a081625f6fff15bebc7,async-http-client,6166,
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/zeppelin-jupyter-interpreter/src/main/resources/grpc/generate_rpc.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/zeppelin-zengine/src/test/resources/bin/interpreter_timeout.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/zeppelin-zengine/src/test/resources/bin/interpreter_invalid.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/submarine/1.0.0/zeppelin-cpu-submarine-interpreter/build.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/submarine/1.0.0/zeppelin-gpu-submarine-interpreter/build.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/submarine/1.0.0/zeppelin-cpu-tensorflow_1.13.1-hadoop_3.1.2/build.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/submarine/1.0.0/zeppelin-gpu-tensorflow_1.13.1-hadoop_3.1.2/build.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/spark-cluster-managers/spark_yarn_cluster/entrypoint.sh
lines,60
function,0


for,1
cd $HADOOP_PREFIX/share/hadoop/common ; for cp in ${ACP//,/ }; do echo == $cp; curl -LO $cp ; done; cd -
if,1
if [[ "$CMD" == "-d" ]];
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/spark-cluster-managers/spark_mesos/entrypoint.sh
lines,50
function,0


for,0

if,1
if [[ "$CMD" == "-d" ]];
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/docker/spark-cluster-managers/spark_standalone/entrypoint.sh
lines,31
function,0


for,0

if,1
if [[ "$CMD" == "-d" ]];
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/scripts/vagrant/zeppelin-dev/show-instructions.sh
lines,41
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/submarine/src/test/resources/DefaultExecutorTest.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/testing/downloadSpark.sh
lines,84
function,1

download_with_retry() {
for,1
echo "3 download attempts for ${url} failed"
if,5
if [[ "$ if [[ "$?" -ne 0 ]]; then if [[ ! -d "${SPARK_HOME}" ]]; then if [[ ! -f "${SPARK_ARCHIVE}.tgz" ]]; then if ! tar zxf "${SPARK_ARCHIVE}.tgz" ; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/testing/downloadLivy.sh
lines,82
function,1

download_with_retry() {
for,1
echo "3 download attempts for ${url} failed"
if,5
if [[ "$ if [[ "$?" -ne 0 ]]; then if [[ ! -d "${LIVY_HOME}" ]]; then if [[ ! -f "${LIVY_ARCHIVE}.tar.gz" ]]; then if ! unzip "${LIVY_ARCHIVE}.zip" ; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/common_release.sh
lines,65
function,2
function git_clone() {
usage() { function git_clone() {
for,0

if,4
if [[ -z "${TAR}" ]]; then if [[ -z "${SHASUM}" ]]; then if [[ -z "${WORKING_DIR}" ]]; then if [[ $? -ne 0 ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/create_release.sh
lines,108
function,2
function make_source_package() { function make_binary_release() {
function make_source_package() { function make_binary_release() {
for,1
for var in GPG_PASSPHRASE; do
if,3
if [[ $ if [[ -z "${!var}" ]]; then if [[ $? -ne 0 ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/travis/travis-install.sh
lines,31
function,0


for,0

if,1
if [[ "$BUILD_RET_VAL" != "0" ]];
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/tag_release.sh
lines,50
function,0


for,1
for var in CURRENT_VERSION RELEASE_VERSION NEXT_DEV_VERSION RC_TAG GIT_BRANCH; do
if,1
if [[ -z "${!var}" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/change_scala_version.sh
lines,75
function,3

usage() { check_scala_version() { sed_i() {
for,1
for i in ${VALID_VERSIONS[*]}; do [ $i = "$1" ] && return 0; done
if,2
if [[ ($ if [ "${TO_VERSION}" = "2.11" ]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/publish_release.sh
lines,182
function,4
function cleanup() { function curl_error() { function publish_snapshot_to_maven() { function publish_to_maven() {
function cleanup() { function curl_error() { function publish_snapshot_to_maven() { function publish_to_maven() {
for,3
for var in GPG_PASSPHRASE ASF_USERID ASF_PASSWORD; do for file in $(find . -type f); do for file in $(find . -type f); do
if,8
if [[ $ if [[ -z "${!var}" ]]; then if [[ $RELEASE_VERSION == *"SNAPSHOT"* ]]; then if [[ $ret -ne 0 ]]; then if [[ ! $RELEASE_VERSION == *"SNAPSHOT"* ]]; then if [[ -z "${staged_repo_id}" ]]; then if [[ $? -ne 0 ]]; then if [[ "${DO_SNAPSHOT}" == 'yes' ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/dev/change_zeppelin_version.sh
lines,83
function,3

usage() { is_dev_version() { is_maintenance_version() {
for,0

if,6
if [[ $ if [[ "$1" == *"SNAPSHOT" ]]; then if [[ "${version}" == *"SNAPSHOT" ]]; then if [[ "${version}" == *".0" ]]; then if is_dev_version "${FROM_VERSION}" || ! is_dev_version "${TO_VERSION}"; then if is_dev_version "${FROM_VERSION}" && is_maintenance_version "${TO_VERSION}" \
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/zeppelin-interpreter/src/main/thrift/genthrift.sh
lines,29
function,0


for,1
for file in gen-java/org/apache/zeppelin/interpreter/thrift/* ; do
if,0

git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/zeppelin-daemon.sh
lines,280
function,9
function initialize_default_directories() { function wait_for_zeppelin_to_die() { function wait_zeppelin_is_up_for_ci() { function print_log_for_ci() { function check_if_process_is_alive() { function upstart() { function start() { function stop() { function find_zeppelin_process() {
function initialize_default_directories() { function wait_for_zeppelin_to_die() { function wait_zeppelin_is_up_for_ci() { function print_log_for_ci() { function check_if_process_is_alive() { function upstart() { function start() { function stop() { function find_zeppelin_process() {
for,0

if,27
if [[ "$1" == "--config" ]]; then if [[ ! -d "${conf_dir}" ]]; then if [ -L ${BASH_SOURCE-$0} ]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-interpreter/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-zengine/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-server/target/classes" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]] && [[ -d "${HADOOP_CONF_DIR}" ]]; then if [[ "${USE_HADOOP}" != "false" ]]; then if [[ -z "${HADOOP_CONF_DIR}" ]]; then echo "Please specify HADOOP_CONF_DIR if USE_HADOOP is true" if ! [ -x "$(command -v hadoop)" ]; then if [[ "${ZEPPELIN_NICENESS}" = "" ]]; then if [[ ! -d "${ZEPPELIN_LOG_DIR}" ]]; then if [[ ! -d "${ZEPPELIN_PID_DIR}" ]]; then if kill -0 ${pid} > /dev/null 2>&1; then if [[ forceKill -ne 0 ]]; then if [[ "${CI}" == "true" ]]; then if [[ $? -ne 0 ]]; then if [[ "${CI}" == "true" ]]; then if ! kill -0 ${pid} >/dev/null 2>&1; then if [[ -f "${ZEPPELIN_PID}" ]]; then if kill -0 ${pid} >/dev/null 2>&1; then if [[ -z "${pid}" ]]; then if [[ ! -f "${ZEPPELIN_PID}" ]]; then if [[ -z "${pid}" ]]; then if [[ -f "${ZEPPELIN_PID}" ]]; then if ! kill -0 ${pid} > /dev/null 2>&1; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/common.sh
lines,176
function,7
function check_java_version() { function addEachJarInDir(){ function addEachJarInDirRecursive(){ function addEachJarInDirRecursiveForIntp(){ function addJarInDir(){ function addJarInDirForIntp() { function getZeppelinVersion(){
function check_java_version() { function addEachJarInDir(){ function addEachJarInDirRecursive(){ function addEachJarInDirRecursiveForIntp(){ function addJarInDir(){ function addJarInDirForIntp() { function getZeppelinVersion(){
for,3
for jar in "${1}"/*.jar ; do for jar in "${1}"/**/*.jar ; do for jar in "${1}"/*.jar; do
if,27
if [ -L "${BASH_SOURCE-$0}" ]; then if [[ -z "${ZEPPELIN_HOME}" ]]; then if [[ -z "${ZEPPELIN_CONF_DIR}" ]]; then if [[ -z "${ZEPPELIN_LOG_DIR}" ]]; then if [[ -z "$ZEPPELIN_PID_DIR" ]]; then if [[ -z "${ZEPPELIN_WAR}" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-web/dist" ]]; then if [[ -z "${ZEPPELIN_ANGULAR_WAR}" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-web/dist" ]]; then if [[ -f "${ZEPPELIN_CONF_DIR}/zeppelin-env.sh" ]]; then if [[ -n "${JAVA_HOME+x}" ]]; then if [ "$JVM_VERSION" = "1" ]; then if [ "$JVM_VERSION" -lt 8 ] || { [ "$JVM_VERSION" -eq 8 ] && [ "${jvmver if [[ -d "${1}" ]]; then if [[ -d "${1}" ]]; then if [[ -d "${1}" ]]; then if [[ -d "${1}" ]]; then if [[ -d "${1}" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-server/target/classes" ]]; then if [[ -z "${ZEPPELIN_ENCODING}" ]]; then if [[ -z "${ZEPPELIN_MEM}" ]]; then if [[ ( -z "${ZEPPELIN_INTP_MEM}" ) && ( "${ZEPPELIN_INTERPRETER_LAUNCHER}" != "yarn" ) ]]; then if [[ -n "${ZEPPELIN_IN_DOCKER}" ]]; then if [[ -n "${ZEPPELIN_IN_DOCKER}" ]]; then elif [[ -z "${ZEPPELIN_SPARK_YARN_CLUSTER}" ]]; then if [[ -n "${JAVA_HOME}" ]]; then if [[ -z "$ZEPPELIN_INTERPRETER_REMOTE_RUNNER" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/stop-interpreter.sh
lines,47
function,0


for,0

if,2
if [[ -d "${ZEPPELIN_HOME}/zeppelin-zengine/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-interpreter/target/classes" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/zeppelin-systemd-service.sh
lines,113
function,4
function enable_systemd_service() function disable_systemd_service() function check_user() function check_systemctl()
function enable_systemd_service() function disable_systemd_service() function check_user() function check_systemctl()
for,0

if,3
if [[ $(id -u) -ne 0 ]]; then if [[ $? -ne 0 ]]; then Please install systemd if you want to use this script."
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/zeppelin.sh
lines,142
function,1
function usage() {
function usage() { POSITIONAL=()
for,1
echo "Container ENTRYPOINT failed to add passwd entry for anonymous UID"
if,14
if [ -f /proc/self/cgroup ] && [ -n "$(command -v getent)" ]; then if awk -F: '/cpu/ && $3 ~ /^\/$/{ c=1 } END { exit c }' /proc/self/cgroup; then if [ -z "$uidentry" ] ; then if [ -w /etc/passwd ] ; then if [ "$1" == "--version" ] || [ "$1" == "-v" ]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-interpreter/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-zengine/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-server/target/classes" ]]; then if [[ "${USE_HADOOP}" != "false" ]]; then if [[ -z "${HADOOP_CONF_DIR}" ]]; then echo "Please specify HADOOP_CONF_DIR if USE_HADOOP is true" if ! [ -x "$(command -v hadoop)" ]; then if [[ ! -d "${ZEPPELIN_LOG_DIR}" ]]; then if [[ ! -d "${ZEPPELIN_PID_DIR}" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/interpreter.sh
lines,278
function,2
function usage() { function downloadInterpreterLibraries() {
function usage() { function downloadInterpreterLibraries() {
for,1
echo "Container ENTRYPOINT failed to add passwd entry for anonymous UID"
if,37
if [ -f /proc/self/cgroup ] && [ -n "$(command -v getent)" ]; then if awk -F: '/cpu/ && $3 ~ /^\/$/{ c=1 } END { exit c }' /proc/self/cgroup; then if [ -z "$uidentry" ] ; then if [ -w /etc/passwd ] ; then if [ -z "${PORT}" ] || [ -z "${INTERPRETER_DIR}" ]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-interpreter/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-zengine/target/test-classes" ]]; then if [[ "${INTERPRETER_ID}" != "flink" ]]; then if [[ "${ZEPPELIN_INTERPRETER_LAUNCHER}" == "yarn" ]]; then if [[ -z "$ZEPPELIN_IMPERSONATE_CMD" ]]; then if [[ "${INTERPRETER_ID}" != "spark" || "$ZEPPELIN_IMPERSONATE_SPARK_PROXY_USER" == "false" ]]; then if [[ -n "$ZEPPELIN_IMPERSONATE_USER" ]]; then if [[ ! -d "${ZEPPELIN_LOG_DIR}" ]]; then if [[ "${INTERPRETER_ID}" == "spark" ]]; then if [[ -n "${ZEPPELIN_SERVER_KERBEROS_KEYTAB}" ]] && [[ -n "${ZEPPELIN_SERVER_KERBEROS_PRINCIPAL}" ]]; then if [[ -n "${SPARK_HOME}" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]] && [[ -d "${HADOOP_CONF_DIR}" ]]; then if [[ -n "${HADOOP_HOME}" ]] && [[ -z "${HADOOP_CONF_DIR}" ]]; then if [[ -d "${HADOOP_HOME}/etc/hadoop" ]]; then elif [[ -d "/etc/hadoop/conf" ]]; then elif [[ "${INTERPRETER_ID}" == "hbase" ]]; then if [[ -n "${HBASE_CONF_DIR}" ]]; then elif [[ -n "${HBASE_HOME}" ]]; then elif [[ "${INTERPRETER_ID}" == "flink" ]]; then if [[ -n "${HADOOP_CONF_DIR}" ]] && [[ -d "${HADOOP_CONF_DIR}" ]]; then if [[ -n "$flink_hadoop_shaded_jar" ]]; then if [[ ! ( -x "$(command -v hadoop)" ) && ( "${ZEPPELIN_INTERPRETER_LAUNCHER}" != "yarn" ) ]]; then if [[ -n "${HADOOP_HOME}" ]] && [[ -z "${HADOOP_CONF_DIR}" ]]; then if [[ -d "${HADOOP_HOME}/etc/hadoop" ]]; then elif [[ -d "/etc/hadoop/conf" ]]; then if [[ -n "$ZEPPELIN_IMPERSONATE_USER" ]]; then if [[ "${INTERPRETER_ID}" != "spark" || "$ZEPPELIN_IMPERSONATE_SPARK_PROXY_USER" == "false" ]]; then if [[ -n "${suid}" || -z "${SPARK_SUBMIT}" ]]; then if [[ -f "${ZEPPELIN_CONF_DIR}/zeppelin-env.sh" ]]; then if [[ -n "${SPARK_SUBMIT}" ]]; then if [[ "${ZEPPELIN_SPARK_YARN_CLUSTER}" == "true" ]]; then elif [[ -n "${ZEPPELIN_FLINK_APPLICATION_MODE}" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/functions.sh
lines,173
function,11

echo_success_msg() { echo_failure_msg() { echo_passed_msg() { echo_warning_msg() { echo_info_msg() { success_msg() { information_msg() { failure_msg() { passed_msg() { warning_msg() { action_msg() {
for,0

if,4
if [ -f /etc/sysconfig/i18n -a -z "${NOLOCALE:-}" -a -z "${LANGSH_SOURCED:-}" ]; then if [[ -z "${BOOTUP:-}" ]]; then if [[ -f /etc/sysconfig/init ]]; then if [[ "$CONSOLETYPE" = "serial" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/bin/install-interpreter.sh
lines,46
function,0


for,0

if,2
if [[ -d "${ZEPPELIN_HOME}/zeppelin-zengine/target/classes" ]]; then if [[ -d "${ZEPPELIN_HOME}/zeppelin-interpreter/target/classes" ]]; then
git@github.com:apache/zeppelin.git,96802412854942b5b1de57dd638f6a4addc3786e,zeppelin,6163,./zeppelin/shell/src/main/resources/download-libpty.sh
lines,67
function,0


for,0

if,0

git@github.com:aa112901/remusic.git,63d2e0ec42dad97cdfc1af9416d1460ddf33a4a8,remusic,6140,
git@github.com:ikew0ng/SwipeBackLayout.git,7c6b0ac424813266cec57db86d65a7c9d9ff5fa6,SwipeBackLayout,6130,
git@github.com:gzu-liyujiang/AndroidPicker.git,0a9c88357aba8e6aebeebd002e427ce128feaaa1,AndroidPicker,6117,
git@github.com:ityouknow/spring-cloud-examples.git,34df652f2233d6780bbbb6467ec184e87fe20a93,spring-cloud-examples,6115,
git@github.com:wasabeef/richeditor-android.git,ce152b910a59c66863baa68b007ac67e6b9de671,richeditor-android,6098,
git@github.com:joelittlejohn/jsonschema2pojo.git,72050f6b94d46d51d7c93c51e35383cdf5fc733f,jsonschema2pojo,6052,./jsonschema2pojo/jsonschema2pojo-cli/src/main/scripts/jsonschema2pojo.sh
lines,21
function,0


for,0

if,0

git@github.com:daimajia/NumberProgressBar.git,c63171bd053adcf287659e16440bd6efd834a795,NumberProgressBar,6049,
git@github.com:pedrovgs/EffectiveAndroidUI.git,8544d91c73cf4954892c7abd0151e6f636429860,EffectiveAndroidUI,6027,
git@github.com:JesusFreke/smali.git,2771eae0a11f07bd892732232e6ee4e32437230d,smali,6023,
git@github.com:rey5137/material.git,b06373bf1dca194811c6e5374f5380cf04cfc859,material,6020,
git@github.com:google/physical-web.git,12604319e99b6d6dff451fc5a58a13a271f1dc7a,physical-web,6018,./physical-web/travis/build.sh
lines,17
function,0


for,0

if,0

git@github.com:google/physical-web.git,12604319e99b6d6dff451fc5a58a13a271f1dc7a,physical-web,6018,./physical-web/ios/scripts/update-build.sh
lines,8
function,0


for,0

if,0

git@github.com:google/physical-web.git,12604319e99b6d6dff451fc5a58a13a271f1dc7a,physical-web,6018,./physical-web/ios/scripts/make-dev.sh
lines,5
function,0


for,0

if,0

git@github.com:singwhatiwanna/dynamic-load-apk.git,bbd3bfa84c3a26cc89615a7539aef3ac4e9491e5,dynamic-load-apk,6000,
git@github.com:macrozheng/springcloud-learning.git,26c48aac745b2823af024bb6baff39b75df635fb,springcloud-learning,5992,
git@github.com:lightbend/config.git,d279841c425e70645feacbdc03e41b3b022ad1f9,config,5991,
git@github.com:microg/GmsCore.git,94e9d701be8176cdbc5464d4bc578678080e2d53,GmsCore,5988,
git@github.com:amitshekhariitbhu/from-java-to-kotlin.git,4dec95fdc03c219faaebc960134e783f7dbebc90,from-java-to-kotlin,5970,
git@github.com:wyouflf/xUtils3.git,c8e6fd6623e916ceb22ad37cd9cef2e5344ffc70,xUtils3,5966,
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/sysroot_path.sh
lines,57
function,0


for,0

if,5
if [ $ if [[ "$OSTYPE" != "darwin"* ]]; then if [ ! -d "${XCODE_ROOT}" ]; then if [ "x${SDK_PATH}" = "x" ]; then if [ "x${SDK_PATH}" = "x" ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/gen_coverage_report.sh
lines,78
function,0


for,0

if,1
if [ $(basename $(pwd)) != "jre_emul" ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/build_distribution.sh
lines,94
function,0


for,0

if,9
if [ $(basename $(pwd)) != "j2objc" ]; then if [ $ if [ ${ERR} -ne 0 ]; then if [ ${ERR} -ne 0 ]; then if [ ${ERR} -ne 0 ]; then if [[ ! $REPLY =~ ^[Yy]$ ]] if [ ${ERR} -ne 0 ]; then if [ ${ERR} -ne 0 ]; then if [[ ! $REPLY =~ ^[Yy]$ ]]
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/j2objcc.sh
lines,110
function,0


for,0

if,12
if [ -L "$0" ]; then if [ "x${PUBLIC_HEADERS_FOLDER_PATH}" != "x" ]; then elif [ -d ${DIR}/include ]; then if [ "x${IPHONEOS_DEPLOYMENT_TARGET}" = "x" ]; then -x) if [ "$2" == "objective-c++" ]; then OBJ_CPP="yes"; fi; shift ;; if [[ x"$LANG_STANDARD" == "x" ]]; then if [[ "$OBJC_CPP" == "yes" ]]; then if [[ "$USE_ARC" == "yes" ]]; then if [[ $RAW_ARGS =~ .*-l(\ )*jre_emul\ . .. ]]; then if [[ "$DO_LINK" == "yes" ]]; then if [[ "$SYSROOT_PATH" == "none" || "$SYSROOT_PATH" == *"MacOSX"* ]]; then if [[ "$EMUL_LIB" == "-ljre_core" ]]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/gen_xcframework.sh
lines,45
function,0


for,0

if,2
if [ $ if [ ! -d "${FRAMEWORK_HEADERS_DIR}" ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/javac_no_deprecated_warnings.sh
lines,19
function,0


for,0

if,0

git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/list_framework_libraries.sh
lines,48
function,0


for,2
for platform in $FAT_PLATFORMS for platform in $SINGLE_PLATFORMS
if,3
if [ $ if [ -f $library ]; then if [ -f $library ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/scripts/j2objc.sh
lines,102
function,0

J2OBJC_ARGS=() JAVA_ARGS=()
for,1
for version in ${SUPPORTED_JAVA_VERSIONS[@]}; do
if,10
if [ -L "$0" ]; then if [ -e "${DIR}"/j2objc.jar ]; then if [ $ if [ -x "/usr/libexec/java_home" ]; then if [ -z "${JAVA_HOME}" ]; then if [ $? -eq 0 ]; then if [ "${JAVA_VERSION}" = "0" ]; then if [ x${USE_SYSTEM_BOOT_PATH} == x ]; then if [ $? -ne 0 ]; then if [ ${PARSING_JAVA_ARGS} -eq 0 ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/cycle_finder/src/main/bin/cycle_finder.sh
lines,32
function,0


for,0

if,2
if [ -L "$0" ]; then if [ $
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/tree_shaker/src/main/bin/tree_shaker.sh
lines,52
function,0

JAVA_ARGS=$()
for,1
for arg in "${JAVA_ARGS[@]}"; do
if,4
if [ -L "$0" ]; then if [ $ if [ ${SOURCEPATH_SET} -eq 1 ]; then if [ ${MAX_MEMORY_SET} -eq 0 ]; then
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/protobuf/runtime/update_metadata.sh
lines,47
function,1
function update_file {

for,0

if,3
if [ $ if ! diff -q $objc_source $result_source; then if [ ! -w $objc_source ]; then p4 edit $objc_source; fi
git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/jre_emul/build_subset_frameworks.sh
lines,38
function,0


for,1
for mk in \
if,0

git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/jre_emul/gen_all_tests.sh
lines,31
function,0


for,1
for (i = 1; i < ARGC; i++) {
if,0

git@github.com:google/j2objc.git,ba9e2fb50fa141dc4edfec0edd564bbbfa816b12,j2objc,5952,./j2objc/jre_emul/update_metadata.sh
lines,54
function,1
function update_file {

for,0

if,2
if ! diff -q $objc_source $result_source; then if [ ! -w $objc_source ]; then p4 edit $objc_source; fi
git@github.com:graphql-java/graphql-java.git,42870f311b3b16d76325d0c430e43ed0151eb37c,graphql-java,5934,
git@github.com:junit-team/junit5.git,766561f5884600ee91c1845c647c8ce21c7c38da,junit5,5913,./junit5/gradle/scripts/checkBuildReproducibility.sh
lines,23
function,1
function calculate_checksums() {
function calculate_checksums() {
for,0

if,0

git@github.com:prolificinteractive/material-calendarview.git,04fae8175fd034d0a7131f8cb253cae883a88aa2,material-calendarview,5887,
git@github.com:PowerJob/PowerJob.git,9b7c237cf09d155a10438cddce9c801f83ac6bd2,PowerJob,5875,./PowerJob/others/script/wait-for-it.sh
lines,182
function,4

echoerr() { if [[ $WAITFORIT_QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } usage() wait_for() wait_for_wrapper()
for,4
Timeout in seconds, zero for no timeout echoerr "$WAITFORIT_cmdname: waiting $WAITFORIT_TIMEOUT seconds for $WAITFORIT_HOST:$WAITFORIT_PORT" echoerr "$WAITFORIT_cmdname: waiting for $WAITFORIT_HOST:$WAITFORIT_PORT without a timeout" echoerr "$WAITFORIT_cmdname: timeout occurred after waiting $WAITFORIT_TIMEOUT seconds for $WAITFORIT_HOST:$WAITFORIT_PORT"
if,17
echoerr() { if [[ $WAITFORIT_QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } -s | --strict Only execute subcommand if the test succeeds if [[ $WAITFORIT_TIMEOUT -gt 0 ]]; then if [[ $WAITFORIT_ISBUSY -eq 1 ]]; then if [[ $WAITFORIT_result -eq 0 ]]; then if [[ $WAITFORIT_QUIET -eq 1 ]]; then if [[ $WAITFORIT_RESULT -ne 0 ]]; then if [[ $WAITFORIT_HOST == "" ]]; then break; fi if [[ $WAITFORIT_PORT == "" ]]; then break; fi if [[ $WAITFORIT_TIMEOUT == "" ]]; then break; fi if [[ "$WAITFORIT_HOST" == "" || "$WAITFORIT_PORT" == "" ]]; then if [[ $WAITFORIT_TIMEOUT_PATH =~ "busybox" ]]; then if timeout &>/dev/stdout | grep -q -e '-t '; then if [[ $WAITFORIT_CHILD -gt 0 ]]; then if [[ $WAITFORIT_TIMEOUT -gt 0 ]]; then if [[ $WAITFORIT_CLI != "" ]]; then if [[ $WAITFORIT_RESULT -ne 0 && $WAITFORIT_STRICT -eq 1 ]]; then
git@github.com:PowerJob/PowerJob.git,9b7c237cf09d155a10438cddce9c801f83ac6bd2,PowerJob,5875,./PowerJob/others/script/jenkins_auto_build.sh
lines,54
function,0


for,0

if,0

git@github.com:PowerJob/PowerJob.git,9b7c237cf09d155a10438cddce9c801f83ac6bd2,PowerJob,5875,./PowerJob/others/dev/build_test_env.sh
lines,18
function,0


for,0

if,0

git@github.com:PowerJob/PowerJob.git,9b7c237cf09d155a10438cddce9c801f83ac6bd2,PowerJob,5875,./PowerJob/others/dev/publish_docker.sh
lines,123
function,0


for,0

if,5
if [ "$needmvn" = "y" ] || [ "$needmvn" = "Y" ]; then if [ "$rebuild" = "y" ] || [ "$rebuild" = "Y" ]; then if [ "$needrelease" = "y" ] || [ "$needrelease" = "Y" ]; then if [ "$needrelease" = "y" ] || [ "$needrelease" = "Y" ]; then if [ "$startup" = "y" ] || [ "$startup" = "Y" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-demo/motan-demo-client/src/main/bin/start.sh
lines,15
function,0


for,0

if,1
if [ -n "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-demo/motan-demo-client/src/main/bin/stop.sh
lines,19
function,0


for,1
for PID in $PIDS ;
if,1
if [ -z "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-demo/motan-demo-server/src/main/bin/start.sh
lines,16
function,0


for,0

if,1
if [ -n "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-demo/motan-demo-server/src/main/bin/stop.sh
lines,19
function,0


for,1
for PID in $PIDS ;
if,1
if [ -z "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-benchmark/motan-benchmark-server/src/main/bin/start.sh
lines,19
function,0


for,0

if,1
if [ -n "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-benchmark/motan-benchmark-server/src/main/bin/stop.sh
lines,20
function,0


for,1
for PID in ${PIDS};
if,1
if [ -z "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-benchmark/motan-benchmark-client/src/main/bin/start.sh
lines,19
function,0


for,0

if,1
if [ -n "$PIDS" ]; then
git@github.com:weibocom/motan.git,c12d26537e7ce85393007a1de62c642867c7516d,motan,5856,./motan/motan-benchmark/motan-benchmark-client/src/main/bin/stop.sh
lines,20
function,0


for,1
for PID in ${PIDS};
if,1
if [ -z "$PIDS" ]; then
git@github.com:springfox/springfox.git,ab5868471cdbaf54dac01af12933fe0437cf2b01,springfox,5852,./springfox/release.sh
lines,9
function,0


for,0

if,0

git@github.com:fuzhengwei/itstack-demo-design.git,67b2e004766a1252726afb81517d9db84ba06476,itstack-demo-design,5837,
git@github.com:quartz-scheduler/quartz.git,a5c4d27e963f51097f9b2777489d310a88897ca4,quartz,5827,
git@github.com:haifengl/smile.git,381da70a2de1eb9b899e4a390c8994e92876d11d,smile,5822,./smile/build.sh
lines,99
function,1

check_error() {
for,0

if,2
if [ $retval -ne 0 ]; then if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:haifengl/smile.git,381da70a2de1eb9b899e4a390c8994e92876d11d,smile,5822,./smile/smile.sh
lines,5
function,0


for,0

if,0

git@github.com:haifengl/smile.git,381da70a2de1eb9b899e4a390c8994e92876d11d,smile,5822,./smile/shell/src/universal/bin/jshell.sh
lines,100
function,5

realpath () { get_jshell_cmd() { get_classpath() { execRunner () { run() {
for,2
for index in "${!JARS[@]}" ; do [[ ${JARS[index]} =~ .*(lihaoyi|scala).* ]] && unset -v 'JARS[$index]' ; done for arg; do
if,5
if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then if [[ -n "$bundled_jvm" ]]; then elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/jshell" ]]; then if printf "%s\n" "$arg" | grep -q ' '; then if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:haifengl/smile.git,381da70a2de1eb9b899e4a390c8994e92876d11d,smile,5822,./smile/shell/src/universal/bin/jupyterlab.sh
lines,142
function,4

Help() { realpath () { install_almond() { conda_auto_env() {
for,0

if,10
if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then if [[ "x$CHECK_CYGWIN" == "x" ]]; then if [ ! -x ./coursier ] if [ -e "$1/environment.yml" ]; then if [[ $PATH != *$SMILE_ENV* ]]; then if [ $? -eq 0 ]; then if ! type "conda" > /dev/null; then if [ "$updateSmileEnv" == true ] if [ "$removeSmileEnv" == true ] if [ "$installBeakerX" == true ]
git@github.com:haifengl/smile.git,381da70a2de1eb9b899e4a390c8994e92876d11d,smile,5822,./smile/shell/src/universal/bin/kotlin.sh
lines,90
function,5

realpath () { get_kotlin_cmd() { get_classpath() { execRunner () { run() {
for,2
for index in "${!JARS[@]}" ; do [[ ${JARS[index]} =~ .*(lihaoyi|scala).* ]] && unset -v 'JARS[$index]' ; done for arg; do
if,3
if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then if [[ -n "$KOTLIN_HOME" ]] && [[ -x "$KOTLIN_HOME/bin/kotlinc-jvm" ]]; then if printf "%s\n" "$arg" | grep -q ' '; then
git@github.com:micronaut-projects/micronaut-core.git,d14081567aff5f35c9a767b64c89eb87c34770fa,micronaut-core,5816,./micronaut-core/setup.sh
lines,0
function,0


for,0

if,0

git@github.com:liyifeng1994/ssm.git,f3f90d79e50410c2f661ff309dd022322bdbc7cf,ssm,5815,
git@github.com:lets-blade/blade.git,ecf15b06647a1640036933219c5dabeaf75335f0,blade,5806,
git@github.com:Nightonke/BoomMenu.git,e20b5ea52d67679968c6950b40fb7430f574cb71,BoomMenu,5797,
git@github.com:Devlight/InfiniteCycleViewPager.git,1038d36cec95c06c3b9b71223c319af7994b9d24,InfiniteCycleViewPager,5770,
git@github.com:JakeWharton/DiskLruCache.git,3e016356cfc7e5f9644a7a732fe0223e9742e024,DiskLruCache,5766,./DiskLruCache/deploy_javadoc.sh
lines,41
function,0


for,0

if,0

git@github.com:JakeWharton/DiskLruCache.git,3e016356cfc7e5f9644a7a732fe0223e9742e024,DiskLruCache,5766,./DiskLruCache/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:raphw/byte-buddy.git,880027cf43266dcea0feeec5d200188db98baedf,byte-buddy,5760,./byte-buddy/.mvn/mvn-collect.sh
lines,1
function,0


for,0

if,0

git@github.com:springside/springside4.git,8950746bb53ce209b4cb5d2d1706712e9c6a0efc,springside4,5744,./springside4/examples/boot-api/start.sh
lines,10
function,0


for,0

if,0

git@github.com:springside/springside4.git,8950746bb53ce209b4cb5d2d1706712e9c6a0efc,springside4,5744,./springside4/examples/boot-api/refresh-db.sh
lines,4
function,0


for,1
echo "cleanup the production/qa db,just for demo"
if,0

git@github.com:springside/springside4.git,8950746bb53ce209b4cb5d2d1706712e9c6a0efc,springside4,5744,./springside4/support/h2/h2-console.sh
lines,5
function,0


for,0

if,0

git@github.com:springside/springside4.git,8950746bb53ce209b4cb5d2d1706712e9c6a0efc,springside4,5744,./springside4/quick-start.sh
lines,21
function,0


for,0

if,1
if [ $? -ne 0 ];then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/build-resources.sh
lines,33
function,0


for,1
for project in "${projects[@]}"
if,0

git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/build-android.sh
lines,310
function,14
function usage() {
function usage() { build_platform() { NATIVE_ARTIFACTS=() NATIVE_ARTIFACTS=() build_android_res() { build_android_ext() { build_android_classes() { build_tzdata() { build_prop() { build_android_all_jar() { cp_android_all_jar() { build_android_src_jar() { build_android_doc_jar() { build_signed_packages() { cp_android_all_jar() { mavenize() {
for,6
echo "Robolectric: No match for version: ${ANDROID_VERSION}" for artifact in "${ARTIFACTS[@]}"; do for artifact in "${NATIVE_ARTIFACTS[@]}"; do for sourceSubDir in "${SOURCES[@]}"; do for ext in ".jar" "-javadoc.jar" "-sources.jar" ".pom"; do echo "Robolectric: Creating bundle for Sonatype upload..."
if,18
if [[ $ if [[ ! -d $buildRoot ]]; then if [[ -z "${SIGNING_PASSWORD}" ]]; then if [[ "${ANDROID_VERSION}" == "4.1.2_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "4.2.2_r1.2" ]]; then elif [[ "${ANDROID_VERSION}" == "4.3_r2" ]]; then elif [[ "${ANDROID_VERSION}" == "4.4_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "5.0.2_r3" ]]; then elif [[ "${ANDROID_VERSION}" == "5.1.1_r9" ]]; then elif [[ "${ANDROID_VERSION}" == "6.0.1_r3" ]]; then elif [[ "${ANDROID_VERSION}" == "7.0.0_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "7.1.0_r7" ]]; then elif [[ "${ANDROID_VERSION}" == "8.0.0_r4" ]]; then if [ ! -d out/target/common/obj/JAVA_LIBRARIES ]; then if [[ -f ${src}/classes.jar ]]; then if [[ -f $jarPath ]]; then if [[ ! -d "${4}" ]]; then if [[ "${ANDROID_VERSION}" == "8.0.0_r4" ]]; then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/sync-android.sh
lines,101
function,3
function usage() {
function usage() { sync_source() { build_source() {
for,1
echo "Robolectric: No match for version: ${ANDROID_VERSION}"
if,11
if [[ $ if [[ "${ANDROID_VERSION}" == "4.1.2_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "4.2.2_r1.2" ]]; then elif [[ "${ANDROID_VERSION}" == "4.3_r2" ]]; then elif [[ "${ANDROID_VERSION}" == "4.4_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "5.0.2_r3" ]]; then elif [[ "${ANDROID_VERSION}" == "5.1.1_r9" ]]; then elif [[ "${ANDROID_VERSION}" == "6.0.1_r3" ]]; then elif [[ "${ANDROID_VERSION}" == "7.0.0_r1" ]]; then elif [[ "${ANDROID_VERSION}" == "7.1.0_r7" ]]; then elif [[ "${ANDROID_VERSION}" == "8.0.0_r4" ]]; then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/deploy-android.sh
lines,65
function,2
function usage() {
function usage() { mavenize() {
for,0

if,1
if [[ $
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/deploy-snapshot.sh
lines,12
function,0


for,0

if,1
if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_BRANCH}" = "master" ] && [ "${TRAVIS_JDK_VERSION}" = "oraclejdk8" ]; then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/update-cpp.sh
lines,68
function,2
function showDiffs2() { function showDiffs() {
function showDiffs2() { function showDiffs() {
for,1
for file in "$files"; do
if,5
if [[ -z "$curSha" ]]; then if [[ -z "$thisSha" ]]; then if [ "x$curSha" != "x$thisSha" ]; then if [ $? -eq 0 ]; then if [ -z "$files" ]; then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/scripts/install-android-prebuilt.sh
lines,92
function,4
function usage() {
function usage() { generate_empty_javadoc() { build_signed_packages() { mavenize() {
for,2
for ext in ".jar" "-javadoc.jar" "-sources.jar" ".pom"; do echo "Robolectric: Creating bundle for Sonatype upload..."
if,2
if [[ $ if [[ -z "${signingPassphrase}" ]]; then
git@github.com:robolectric/robolectric.git,702a30491dca6ae45c884c46da2321611b0def68,robolectric,5710,./robolectric/resources/build-resources.sh
lines,17
function,0


for,0

if,0

git@github.com:dmytrodanylyk/circular-progress-button.git,240dab6f6cc3d5f453976e57658c0567f9503e8c,circular-progress-button,5686,
git@github.com:k0shk0sh/FastHub.git,fb7053da2079b624d6129ef81370a9d5774bcb9a,FastHub,5683,
git@github.com:JakeWharton/u2020.git,af670f964a4750707d98cda31cfa95244eb3ec07,u2020,5682,./u2020/scripts/strip-image-metadata.sh
lines,8
function,0


for,0

if,0

git@github.com:changmingxie/tcc-transaction.git,d21a3d748c477fb14a175d5d05e54ef82cf68de6,tcc-transaction,5671,./tcc-transaction/tcc-transaction-distribution/server/bin/shutdown.sh
lines,16
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:changmingxie/tcc-transaction.git,d21a3d748c477fb14a175d5d05e54ef82cf68de6,tcc-transaction,5671,./tcc-transaction/tcc-transaction-distribution/server/bin/startup.sh
lines,99
function,1

error_exit ()
for,0

if,10
if [ -z "$JAVA_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then if [[ "$JAVA_OPT_EXT_FIX" == "" ]]; then
git@github.com:changmingxie/tcc-transaction.git,d21a3d748c477fb14a175d5d05e54ef82cf68de6,tcc-transaction,5671,./tcc-transaction/tcc-transaction-distribution/dashboard/bin/shutdown.sh
lines,16
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:changmingxie/tcc-transaction.git,d21a3d748c477fb14a175d5d05e54ef82cf68de6,tcc-transaction,5671,./tcc-transaction/tcc-transaction-distribution/dashboard/bin/startup.sh
lines,99
function,1

error_exit ()
for,0

if,10
if [ -z "$JAVA_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then if [[ "$JAVA_OPT_EXT_FIX" == "" ]]; then
git@github.com:jpush/aurora-imui.git,fb74b79288d38b8817ca24abced7bb4bc9b18c4b,aurora-imui,5667,
git@github.com:jOOQ/jOOQ.git,fb351a48f2c78e5b8e67fe55d454c49e7120dd75,jOOQ,5652,
git@github.com:confluentinc/ksql.git,05a3ad59348c7d809a14c79c81816d9b1e7bc0d5,ksql,5645,
git@github.com:daimajia/AndroidImageSlider.git,e318cabdef668de985efdcc45ca304e2ac6f58b5,AndroidImageSlider,5642,
git@github.com:amitshekhariitbhu/Fast-Android-Networking.git,fb26f4bd399786735ece070c289fd0c7d831ed9c,Fast-Android-Networking,5602,
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/extensions/python/src/main/resources/jet_to_python_init.sh
lines,17
function,0


for,0

if,1
if [[ -f init.sh ]]; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/extensions/python/src/main/resources/jet_to_python_main.sh
lines,9
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/extensions/python/src/main/resources/jet_to_python_cleanup.sh
lines,9
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/hazelcast-coverage-report/dependencies-list.sh
lines,5
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/azure/scripts/verify_mancenter.sh
lines,24
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 30`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/azure/scripts/start_azure_hazelcast_management_center.sh
lines,33
function,0


for,0

if,1
if wget -q "$MANCENTER_JAR_URL"; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/azure/scripts/verify_member_count.sh
lines,24
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 10`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/azure/scripts/start_azure_hazelcast_member.sh
lines,9
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/aws/scripts/start_aws_hazelcast_management_center.sh
lines,33
function,0


for,0

if,1
if wget -q "$MANCENTER_JAR_URL"; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/aws/scripts/verify_mancenter.sh
lines,23
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 6`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/aws/scripts/start_aws_hazelcast_member.sh
lines,9
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/aws/scripts/verify_member_count.sh
lines,24
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 10`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/gcp/scripts/verify_mancenter.sh
lines,24
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 30`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/gcp/scripts/start_gcp_hazelcast_member.sh
lines,9
function,0


for,0

if,0

git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/gcp/scripts/verify_member_count.sh
lines,24
function,1

verify_hazelcast_cluster_size() {
for,1
for i in `seq 1 10`; do
if,1
if [ "$MEMBER_COUNT" == "$EXPECTED_SIZE" ] ; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/.github/terraform/gcp/scripts/start_gcp_hazelcast_management_center.sh
lines,33
function,0


for,0

if,1
if wget -q "$MANCENTER_JAR_URL"; then
git@github.com:hazelcast/hazelcast.git,e5e13fd39481356229d55cf24437189101f25f64,hazelcast,5581,./hazelcast/distribution/src/bin-regular/common.sh
lines,120
function,1
function readJvmOptionsFile {

for,0

if,17
if [ -z "$SCRIPT_DIR" ]; then if [ "$JAVA_HOME" ]; then if [ -z "$JAVA" ]; then if [ "$(command -v cygpath)" != "" ]; then if [ "x$MIN_HEAP_SIZE" != "x" ]; then if [ "x$MAX_HEAP_SIZE" != "x" ]; then if [ "$JAVA_VERSION" -ge "9" ]; then if [[ "$VM_NAME" =~ "OpenJ9" ]]; then if [ -n "${CLASSPATH_DEFAULT}" ]; then if [ -n "${CYGPATH}" ]; then if [ -n "${CLASSPATH}" ]; then if [ -n "${CYGPATH}" ]; then if [ -n "${CLASSPATH}" ]; then if [ -n "${CLASSPATH_DEFAULT}" ]; then if [ -n "${JAVA_OPTS}" ]; then if [[ "$line" =~ ^ if [ -n "${CYGPATH}" ]; then
git@github.com:huanghongxun/HMCL.git,54188bf8f211baec994e81c2d2a9e8a5d318d1ee,HMCL,5581,./HMCL/HMCL/src/main/resources/assets/HMCLauncher.sh
lines,191
function,0


for,4
echo "You can visit the https://docs.hmcl.net/help.html page for help." 1>&2 echo "You can visit the https://docs.hmcl.net/help.html page for help." 1>&2 echo "You can visit the https://docs.hmcl.net/help.html page for help." 1>&2 echo "You can visit the https://docs.hmcl.net/help.html page for help." 1>&2
if,19
if [ -z "${LANG if [ "$_HMCL_OS" == "windows" ]; then if [ -n "${HMCL_JAVA_OPTS+x}" ]; then if [ -n "${HMCL_JAVA_HOME+x}" ]; then if [ -x "$HMCL_JAVA_HOME/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ "$_HMCL_USE_CHINESE" == true ]; then if [ -x "$_HMCL_DIR/jre-x64/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$_HMCL_DIR/jre-x86/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$_HMCL_DIR/jre-x86/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$_HMCL_DIR/jre-arm64/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$_HMCL_DIR/jre-arm32/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$_HMCL_DIR/jre-loongarch64/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -f "$JAVA_HOME/bin/$_HMCL_JAVA_EXE_NAME" ]; then if [ -x "$(command -v $_HMCL_JAVA_EXE_NAME)" ]; then if [[ "$_HMCL_OS" == "unknown" || "$_HMCL_ARCH" == "unknown" ]]; then if [ "$_HMCL_USE_CHINESE" == true ]; then if [[ "$_HMCL_ARCH" == "loongarch64" ]]; then if [ "$_HMCL_USE_CHINESE" == true ]; then if [ "$_HMCL_USE_CHINESE" == true ]; then
git@github.com:nhaarman/ListViewAnimations.git,23617960178fb5af3099c07996569cc305a40945,ListViewAnimations,5580,
git@github.com:knightliao/disconf.git,872e69c71bc34ad6f3d6bead1bb1f96a5e9cfdb4,disconf,5571,./disconf/disconf-web/html/build.sh
lines,19
function,0


for,0

if,1
if [ -d "output" ]; then
git@github.com:knightliao/disconf.git,872e69c71bc34ad6f3d6bead1bb1f96a5e9cfdb4,disconf,5571,./disconf/disconf-web/html/tools/gen_html.sh
lines,1
function,0


for,0

if,0

git@github.com:knightliao/disconf.git,872e69c71bc34ad6f3d6bead1bb1f96a5e9cfdb4,disconf,5571,./disconf/disconf-web/deploy/build_java.sh
lines,44
function,0


for,0

if,3
if [ $ if [ "$1" == "rd" ];then if [ -d "output" ]; then
git@github.com:knightliao/disconf.git,872e69c71bc34ad6f3d6bead1bb1f96a5e9cfdb4,disconf,5571,./disconf/disconf-web/deploy/deploy.sh
lines,119
function,0


for,1
echo "It's going to Generate the output for war"
if,4
if [ "$ONLINE_CONFIG_PATH" = "" ]; then if [ "$WAR_ROOT_PATH" = "" ]; then if [ -d "src/main/online-resources" ]; then if [ ${
git@github.com:knightliao/disconf.git,872e69c71bc34ad6f3d6bead1bb1f96a5e9cfdb4,disconf,5571,./disconf/docs/myMake.sh
lines,25
function,0


for,1
for md_item in ${md_list}
if,1
if [ -f ${target_file} ]
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/docker_db.sh
lines,898
function,19

mysql() { mysql_8_0() { mysql_8_1() { mariadb() { mariadb_10_4() { mariadb_10_9() { mariadb_11_1() { postgresql() { postgresql_12() { postgresql_13() { postgresql_14() { postgresql_15() { edb() { edb_12() { edb_14() { edb_15() { db2() { db2_11_5() { db2_10_5() { db2_spatial() { mssql() { mssql_2017() { mssql_2022() { sybase() { sybase_check() { oracle_setup() { oracle_free_setup() { disable_userland_proxy() { oracle_atps() { oracle_db19c() { oracle_db21c() { oracle_db23c() { oracle() { oracle_21() { oracle_23() { hana() { cockroachdb() { cockroachdb_23_1() { cockroachdb_22_2() { tidb() { tidb_5_1() {
for,28
if [[ $OUTPUT == *"ready for connections"* ]]; then echo "Waiting for MySQL to start..." if [[ $OUTPUT == *"ready for connections"* ]]; then echo "Waiting for MySQL to start..." if [[ $OUTPUT == *"ready for connections"* ]]; then echo "Waiting for MariaDB to start..." if [[ $OUTPUT == *"ready for connections"* ]]; then echo "Waiting for MariaDB to start..." if [[ $OUTPUT == *"ready for connections"* ]]; then echo "Waiting for MariaDB to start..." echo "Waiting for DB2 to start..." echo "Waiting for DB2 to start..." echo "Waiting for DB2 to start..." echo "Waiting for SQL Server to start..." echo "Waiting for SQL Server to start..." echo "Waiting for Sybase to start..." exec sp_dboption $SYBASE_DB, 'full logging for select into', true exec sp_dboption $SYBASE_DB, 'full logging for alter table', true echo "Waiting for Oracle to start..." !echo Enabling OOB for Listener... echo "Waiting for Oracle Free to start..." !echo Enabling OOB for Listener... echo "Waiting for HANA to start..." echo "Waiting for CockroachDB to start..." echo "Enabling experimental box2d operators and some optimized settings for running the tests" echo "Waiting for CockroachDB to start..." echo "Enabling experimental box2d operators and some optimized settings for running the tests" echo "Waiting for TiDB to start..."
if,24
if command -v podman > /dev/null; then if command -v sudo > /dev/null; then if [[ $OUTPUT == *"ready for connections"* ]]; then if [ "$n" -ge 5 ]; then if [[ $OUTPUT == *"ready for connections"* ]]; then if [ "$n" -ge 5 ]; then if [[ $OUTPUT == *"ready for connections"* ]]; then if [ "$n" -ge 5 ]; then if [[ $OUTPUT == *"ready for connections"* ]]; then if [ "$n" -ge 5 ]; then if [[ $OUTPUT == *"ready for connections"* ]]; then if [ "$n" -ge 5 ]; then if [ "$n" -ge 5 ]; then if [ "$n" -ge 5 ]; then if (( $START_STATUS > 0 )); then if (( $j == 30 )); then if command -v podman > /dev/null; then if command -v podman > /dev/null; then if [[ "$HEALTCHECK_PATH" == "{{.State.Health.Status}}" ]]; then if [[ ! -f /etc/docker/daemon.json ]]; then elif ! grep -q userland-proxy /etc/docker/daemon.json; then if [[ $OUTPUT == *"server is running"* ]]; then if [ "$n" -ge 5 ]; then if [ -z ${1} ]; then
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/edb/docker-entrypoint.sh
lines,347
function,14

file_env() { _is_sourced() { docker_create_db_directories() { docker_init_database_dir() { docker_verify_minimum_env() { docker_process_init_files() { docker_process_sql() { docker_setup_db() { docker_setup_env() { pg_setup_hba_conf() { docker_temp_server_start() { docker_temp_server_stop() { _pg_want_help() { _main() {
for,5
for wrapper in {/usr,}/lib{/*,}/libnss_wrapper.so; do You must specify POSTGRES_PASSWORD to a non-empty value for the for f; do for arg; do echo 'PostgreSQL init process complete; ready for start up.'
if,27
if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then if [ "${!var:-}" ]; then elif [ "${!fileVar:-}" ]; then if [ -n "${POSTGRES_INITDB_WALDIR:-}" ]; then if [ "$user" = '0' ]; then if [ "$user" = '0' ]; then if ! getent passwd "$uid" &> /dev/null; then if [ -s "$wrapper" ]; then if [ -n "${POSTGRES_INITDB_WALDIR:-}" ]; then if [[ "${LD_PRELOAD:-}" == */libnss_wrapper.so ]]; then if [ "${ This will not work if used via PGPASSWORD with "psql". if [ -z "$POSTGRES_PASSWORD" ] && [ 'trust' != "$POSTGRES_HOST_AUTH_METHOD" ]; then if [ 'trust' = "$POSTGRES_HOST_AUTH_METHOD" ]; then a password, even if POSTGRES_PASSWORD is set. See PostgreSQL if [ -x "$f" ]; then if [ -n "$POSTGRES_DB" ]; then if [ -z "$dbAlreadyExists" ]; then if [ -s "$PGDATA/PG_VERSION" ]; then if [ "$1" = 'postgres' ]; then if [ 'trust' = "$POSTGRES_HOST_AUTH_METHOD" ]; then if [ "$1" = 'postgres' ]; then if [ "${1:0:1}" = '-' ]; then if [ "$1" = 'postgres' ] && ! _pg_want_help "$@"; then if [ "$(id -u)" = '0' ]; then if [ -z "$DATABASE_ALREADY_EXISTS" ]; then if ! _is_sourced; then
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/.github/ci-prerequisites.sh
lines,7
function,0


for,0

if,0

git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/hibernate-spatial/scripts/build-docker-db2.sh
lines,78
function,0


for,0

if,0

git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/hibernate-spatial/matrix-test.sh
lines,14
function,0


for,0

if,1
if [[ -n $@ ]]; then
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/ci/build.sh
lines,85
function,1
function logAndExec() {
function logAndExec() {
for,0

if,23
if [ "$RDBMS" == "h2" ]; then elif [ "$RDBMS" == "hsqldb" ] || [ "$RDBMS" == "hsqldb_2_6" ]; then elif [ "$RDBMS" == "derby" ]; then elif [ "$RDBMS" == "mysql" ] || [ "$RDBMS" == "mysql_5_7" ]; then elif [ "$RDBMS" == "mariadb" ] || [ "$RDBMS" == "mariadb_10_3" ]; then elif [ "$RDBMS" == "postgresql" ] || [ "$RDBMS" == "postgresql_11" ]; then elif [ "$RDBMS" == "edb" ] || [ "$RDBMS" == "edb_11" ]; then elif [ "$RDBMS" == "oracle" ]; then elif [ "$RDBMS" == "oracle_xe" ]; then elif [ "$RDBMS" == "oracle_atps" ]; then elif [ "$RDBMS" == "oracle_db19c" ]; then elif [ "$RDBMS" == "oracle_db21c" ]; then elif [ "$RDBMS" == "oracle_db23c" ]; then elif [ "$RDBMS" == "oracle_11_2" ]; then elif [ "$RDBMS" == "db2" ]; then elif [ "$RDBMS" == "db2_10_5" ]; then elif [ "$RDBMS" == "mssql" ] || [ "$RDBMS" == "mssql_2017" ]; then elif [ "$RDBMS" == "sybase" ]; then elif [ "$RDBMS" == "sybase_jconn" ]; then elif [ "$RDBMS" == "tidb" ]; then elif [ "$RDBMS" == "hana_cloud" ]; then elif [ "$RDBMS" == "cockroachdb" ]; then if [ -n "$goal" ]; then
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/ci/build-github.sh
lines,6
function,0


for,0

if,0

git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/ci/database-start.sh
lines,32
function,0


for,0

if,14
if [ "$RDBMS" == 'mysql' ]; then elif [ "$RDBMS" == 'mariadb' ]; then elif [ "$RDBMS" == 'postgresql' ]; then elif [ "$RDBMS" == 'edb' ]; then elif [ "$RDBMS" == 'db2' ]; then elif [ "$RDBMS" == 'oracle' ]; then elif [ "$RDBMS" == 'oracle_atps' ]; then elif [ "$RDBMS" == 'oracle_db19c' ]; then elif [ "$RDBMS" == 'oracle_db21c' ]; then elif [ "$RDBMS" == 'oracle_db23c' ]; then elif [ "$RDBMS" == 'mssql' ]; then elif [ "$RDBMS" == 'sybase' ]; then elif [ "$RDBMS" == 'cockroachdb' ]; then elif [ "$RDBMS" == 'hana' ]; then
git@github.com:hibernate/hibernate-orm.git,40261547bd84458095654e90fe0b5396730cd884,hibernate-orm,5564,./hibernate-orm/ci/before-cache.sh
lines,6
function,0


for,0

if,0

git@github.com:hanks-zyh/HTextView.git,93d8d0d6f3ae09a84c75e3e10ec7a04d318cbbcc,HTextView,5544,
git@github.com:emilsjolander/StickyListHeaders.git,cec8d6a6ddfc29c530df5864794a5a0a2d2f3675,StickyListHeaders,5518,
git@github.com:yanzhenjie/SwipeRecyclerView.git,69aa14d05da09beaeb880240c62f7de6f4f1bb39,SwipeRecyclerView,5510,
git@github.com:journeyapps/zxing-android-embedded.git,d09b7c76c3124fbfbd096a65d60b1997f37ff90f,zxing-android-embedded,5507,
git@github.com:alibaba/freeline.git,818e5de64f630a4c506499d7208b761061cb9d1f,freeline,5495,
git@github.com:crazycodeboy/react-native-splash-screen.git,b47197626804a742b8569cad50d5e0ed92fc765c,react-native-splash-screen,5492,
git@github.com:sockeqwe/mosby.git,c234625fdfb46ce7fe2a0695a6272953db20865f,mosby,5488,./mosby/deploy_javadoc.sh
lines,65
function,0


for,1
for i in "${MODULES[@]}"
if,0

git@github.com:sockeqwe/mosby.git,c234625fdfb46ce7fe2a0695a6272953db20865f,mosby,5488,./mosby/.buildscript/swarmer/swarmer_start.sh
lines,23
function,0


for,0

if,0

git@github.com:sockeqwe/mosby.git,c234625fdfb46ce7fe2a0695a6272953db20865f,mosby,5488,./mosby/.buildscript/swarmer/swarmer_stop.sh
lines,5
function,0


for,0

if,0

git@github.com:sockeqwe/mosby.git,c234625fdfb46ce7fe2a0695a6272953db20865f,mosby,5488,./mosby/.buildscript/deploy_snapshot.sh
lines,31
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/be/cn_entrypoint.sh
lines,194
function,8

log_stderr() update_conf_from_configmap() show_compute_nodes(){ parse_confval_from_cn_conf() collect_env_info() add_self() drop_my_self() exit_clean()
for,1
for conffile in `ls $CONFIGMAP_MOUNT_PATH`
if,16
if [[ "x$CONFIGMAP_MOUNT_PATH" == "x" ]] ; then if ! test -d $CONFIGMAP_MOUNT_PATH ; then if test -e $tgt ; then if [[ "x$heartbeat_port" != "x" ]] ; then if [[ "x$HOST_TYPE" == "xIP" ]] ; then if [[ "x$KUBE_STARROCKS_MULTI_WAREHOUSE" != "x" ]] ; then if echo "$memlist" | grep -q -w "$MY_SELF" &>/dev/null ; then if [[ $expire -le $now ]] ; then if [[ $ret -eq 0 ]] ; then if [[ "x$selfinfo" == "x" ]] ; then if ! test -f $pidfile ; then if [[ "x$pid" == "x" ]] ; then if ps -p $pid &>/dev/null ; then if [[ "x$svc_name" == "x" ]] ; then if [[ "x$LOG_CONSOLE" == "x1" ]] ; then if [[ $ret -ne 0 && "x$LOG_CONSOLE" != "x1" ]] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/be/be_entrypoint.sh
lines,126
function,6

log_stderr() update_conf_from_configmap() show_backends(){ parse_confval_from_cn_conf() collect_env_info() add_self()
for,1
for conffile in `ls $CONFIGMAP_MOUNT_PATH`
if,10
if [[ "x$CONFIGMAP_MOUNT_PATH" == "x" ]] ; then if ! test -d $CONFIGMAP_MOUNT_PATH ; then if test -e $tgt ; then if [[ "x$heartbeat_port" != "x" ]] ; then if [[ "x$HOST_TYPE" == "xIP" ]] ; then if echo "$memlist" | grep -q -w "$MY_SELF" &>/dev/null ; then if [[ $expire -le $now ]] ; then if [[ "x$svc_name" == "x" ]] ; then if [[ "x$LOG_CONSOLE" == "x1" ]] ; then if [[ $ret -ne 0 && "x$LOG_CONSOLE" != "x1" ]] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/be/cn_prestop.sh
lines,7
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/be/be_prestop.sh
lines,7
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/fe/fe_prestop.sh
lines,4
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/fe/fe_entrypoint.sh
lines,263
function,9

log_stderr() parse_confval_from_fe_conf() collect_env_info() show_frontends() probe_leader_for_pod0() probe_leader_for_podX() probe_leader() update_conf_from_configmap() start_fe_no_meta() start_fe_with_meta()
for,1
for conffile in `ls $CONFIGMAP_MOUNT_PATH`
if,25
if [[ "x$POD_IP" == "x" ]] ; then if [[ "x$POD_FQDN" == "x" ]] ; then if [[ "x$HOST_TYPE" == "xFQDN" ]] ; then if [[ "x$edit_log_port" != "x" ]] ; then if [[ "x$query_port" != "x" ]] ; then if [[ "x$leader" != "x" ]] ; then if [[ "x$memlist" != "x" ]] ; then if $has_member ; then if [[ $expire -le $now ]] ; then if $has_member ; then if [[ "x$leader" != "x" ]] ; then if [[ $expire -le $now ]] ; then if [[ "$POD_INDEX" -eq 0 ]] ; then if [[ "x$CONFIGMAP_MOUNT_PATH" == "x" ]] ; then if ! test -d $CONFIGMAP_MOUNT_PATH ; then if test -e $tgt ; then if [[ "x$HOST_TYPE" != "x" ]] ; then if [[ "x$FE_LEADER" != "x" ]] ; then if show_frontends $svc | grep -q -w "$MYSELF" &>/dev/null ; then if [[ $expire -le $now ]] ; then if [[ "x$LOG_CONSOLE" == "x1" ]] ; then if [[ "x$HOST_TYPE" != "x" ]] ; then if [[ "x$LOG_CONSOLE" == "x1" ]] ; then if [[ "x$svc_name" == "x" ]] ; then if [[ -f "/opt/starrocks/fe/meta/image/ROLE" ]];then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/allin1/services/director/run.sh
lines,248
function,16

log_stderr() loginfo() logwarn() logerror() hang_and_die() fe_mysql_port() be_heartbeat_service_port() broker_ipc_port() check_fe_fqdn_mismatch() check_fe_liveness() generate_my_cnf() exec_sql() exec_sql_with_column() exec_sql_with_retry() check_and_add_be() check_and_add_broker()
for,1
loginfo "wait a few seconds for BE and Broker's heartbeat ..."
if,15
if [ -f $FE_HOME/meta/image/ROLE ] ; then if [ "$previous_name" == "127.0.0.1" ] ; then if [[ "$previous_name" != "$current_name" ]] ; then loginfo "checking if FE service query port:$fequeryport alive or not ..." if nc -z -4 -w 5 $MYHOST $fequeryport ; then if [ $ret -eq 0 ] ; then if [[ $errcode = '1045' || $errcode = '1064' ]] ; then loginfo "check if need to add BE into FE service ..." if [ $ret -ne 0 ] ; then if echo "$result" | grep -q $MYHOST &>/dev/null ; then loginfo "check if need to add BROKER into FE service ..." if [ $ret -ne 0 ] ; then if echo "$result" | grep -q $MYHOST &>/dev/null ; then loginfo "checking if need to perform auto registring Backend and Broker ..." if [ $bad -gt 0 ] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/docker/dockerfiles/allin1/entrypoint.sh
lines,56
function,3

get_fe_http_port() update_feproxy_config() setup_priority_networks()
for,0

if,1
if [ -f $SR_HOME/../banner.txt ] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/run-be-ut.sh
lines,269
function,1

usage() {
for,2
for i in `sed 's/ //g' $STARROCKS_HOME/conf/be_test.conf | egrep "^[[:upper:]]([[:upper:]]|_|[[:digit:]])*="`; do for test_bin in $test_files
if,24
if [ $? != 0 ] ; then if [ ${HELP} -eq 1 ]; then if [[ -z ${USE_SSE4_2} ]]; then if [[ -z ${USE_AVX2} ]]; then if [[ -z ${USE_AVX512} ]]; then if [ ${CLEAN} -eq 1 ]; then if [ ! -d ${CMAKE_BUILD_DIR} ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then elif [[ -z ${WITH_CACHELIB} ]]; then if [ "${USE_STAROS}" == "ON" ]; then if [ -z "$STARLET_INSTALL_DIR" ] ; then if [[ -z ${WITH_STARCACHE} ]]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ "$JAVA_HOME" = "" ]; then if [[ $java_version -gt 8 ]]; then elif [[ -d "$JAVA_HOME/jre" ]]; then if [ "${WITH_CACHELIB}" == "ON" ]; then if [ $WITH_AWS = "OFF" ]; then if [ -d ${STARROCKS_TEST_BINARY_DIR}/util/test_data ]; then if [[ $TEST_MODULE == '.*' || $TEST_MODULE == 'starrocks_test' ]]; then if [ ${DRY_RUN} -eq 0 ]; then if [ -x "${GTEST_PARALLEL}" ]; then if [ ${DRY_RUN} -eq 0 ]; then if [ -z $RUN_FILE ] || [ $file_name == $RUN_FILE ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/build.sh
lines,522
function,2

usage() { check_tool()
for,1
for tool in protoc thrift
if,53
if [ -z $BUILD_TYPE ]; then if [ -z $STARROCKS_VERSION ]; then if [ ! -z $tag_name ]; then elif [ ! -z $branch_name ]; then if [ -z $STARROCKS_COMMIT_HASH ] ; then if [[ $OSTYPE == darwin* ]] ; then if [[ ! -f ${STARROCKS_THIRDPARTY}/installed/llvm/include/llvm/InitializePasses.h ]]; then if [ $? != 0 ] ; then if [[ -z ${USE_AVX2} ]]; then if [[ -z ${USE_AVX512} ]]; then if [[ -z ${USE_SSE4_2} ]]; then if [ -e /proc/cpuinfo ] ; then if [[ -z $(grep -o 'avx[^ ]*' /proc/cpuinfo) ]]; then if [[ -z $(grep -o 'avx512' /proc/cpuinfo) ]]; then if [[ -z $(grep -o 'sse[^ ]*' /proc/cpuinfo) ]]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then elif [[ -z ${WITH_CACHELIB} ]]; then if [[ "${WITH_CACHELIB}" == "ON" && ! -f ${STARROCKS_THIRDPARTY}/installed/cachelib/lib/libcachelib_allocator.a ]]; then if [[ -z ${ENABLE_QUERY_DEBUG_TRACE} ]]; then if [[ -z ${ENABLE_FAULT_INJECTION} ]]; then if [ $ elif [[ $OPTS =~ "-j" ]] && [ $ if [[ ${HELP} -eq 1 ]]; then if [ ${CLEAN} -eq 1 -a ${BUILD_BE} -eq 0 -a ${BUILD_FE} -eq 0 -a ${BUILD_SPARK_DPP} -eq 0 ]; then if [ -e $STARROCKS_THIRDPARTY/installed/bin/$toolname ] ; then if which $toolname &>/dev/null ; then if ! check_tool $tool ; then if [ ${CLEAN} -eq 1 ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ ${BUILD_BE} -eq 1 ] ; then if ! ${CMAKE_CMD} --version; then if [ "${WITH_GCOV}" = "ON" ]; then if [ ${CLEAN} -eq 1 ]; then if [ "${USE_STAROS}" == "ON" ]; then if [ -z "$STARLET_INSTALL_DIR" ] ; then if [[ -z ${WITH_STARCACHE} ]]; then if [[ "${WITH_STARCACHE}" == "ON" && ! -f ${STARROCKS_THIRDPARTY}/installed/starcache/lib/libstarcache.a ]]; then if [ "${WITH_CLANG_TIDY}" == "ON" ];then if [ ${BUILD_JAVA_EXT} = "ON" ]; then if [ ${CLEAN} -eq 1 ]; then if [ ${BUILD_FE} -eq 1 -o ${BUILD_SPARK_DPP} -eq 1 ]; then if [ ${BUILD_SPARK_DPP} -eq 1 ]; then if [ ${BUILD_FE} -eq 1 ]; then if [ ${FE_MODULES}x != ""x ]; then if [ ${CLEAN} -eq 1 ]; then if [ ${BUILD_FE} -eq 1 -o ${BUILD_SPARK_DPP} -eq 1 ]; then if [ ${BUILD_FE} -eq 1 ]; then elif [ ${BUILD_SPARK_DPP} -eq 1 ]; then if [ ${BUILD_BE} -eq 1 ]; then if [ "${BUILD_TYPE}" == "ASAN" ]; then if [ "${ibuildtype}" == "release" ] ; then if [ "${WITH_CACHELIB}" == "ON" ]; then if [[ ! -z ${STARROCKS_POST_BUILD_HOOK} ]]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/be/src/formats/orc/apache-orc/build.sh
lines,37
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/be/src/formats/orc/apache-orc/c++/libs/libhdfspp/pull_hdfs.sh
lines,32
function,0


for,0

if,3
if [ -z "$1" ]; then if [ ! -d "$1" ]; then if [ ! -d "$1/hadoop-hdfs-project" ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/be/src/formats/orc/apache-orc/run-test.sh
lines,4
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/conf/hadoop_env.sh
lines,35
function,0


for,0

if,3
if [ -z "${HADOOP_USER_NAME}" ] if [ -z "${USER}" ] if [ ${HADOOP_CONF_DIR}"X" != "X" ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/vars-x86_64.sh
lines,58
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/build-thirdparty.sh
lines,1295
function,61

check_prerequest() { check_if_source_exist() { check_if_archieve_exist() { build_libevent() { build_openssl() { build_thrift() { build_llvm() { LLVM_TARGETS_TO_INSTALL=() build_protobuf() { build_gflags() { build_glog() { build_gtest() { build_rapidjson() { build_simdjson() { build_snappy() { build_gperftools() { build_zlib() { build_lz4() { build_lzo2() { build_bzip() { build_curl() { build_re2() { build_boost() { build_leveldb() { build_brpc() { build_rocksdb() { build_kerberos() { build_sasl() { build_librdkafka() { build_pulsar() { build_flatbuffers() { build_brotli() { build_arrow() { build_s2() { build_bitshuffle() { build_croaringbitmap() { build_orc() { build_cctz() { build_fmt() { build_ryu() { build_breakpad() { build_hadoop() { build_jdk() { build_ragel() { build_hyperscan() { build_mariadb() { build_aliyun_jindosdk() { build_gcs_connector() { build_aws_cpp_sdk() { build_vpack() { build_opentelemetry() { build_jemalloc() { build_benchmark() { build_fast_float() { build_cachelib() { build_starcache() { build_streamvbyte() { build_jansson() { build_avro_c() { build_serdes() { build_datasketches() { build_async_profiler() { build_fiu() { build_libdeflate() { restore_compile_flags() { strip_binary() {
for,2
for target in ${LLVM_TARGETS_TO_BUILD[@]}; do for arch in $arches ; do
if,32
if [[ -f ${STARROCKS_HOME}/env.sh ]]; then if [[ ! -f ${TP_DIR}/download-thirdparty.sh ]]; then if [ ! -f ${TP_DIR}/vars.sh ]; then if [[ ! -z ${STARROCKS_GCC_HOME} ]]; then if ! $CMD; then if [[ "${MACHINE_TYPE}" == "arm64" ]]; then if [ -z $1 ]; then echo "dir should specified to check if exist." if [ ! -d $TP_SOURCE_DIR/$1 ];then if [ -z $1 ]; then echo "archieve should specified to check if exist." if [ ! -f $TP_SOURCE_DIR/$1 ];then if [ ! -f configure ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ ! -f configure ]; then if [ -f compiler/cpp/thrifty.hh ];then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ "${LLVM_TARGET}" == "X86" ]; then elif [ "${LLVM_TARGET}" == "AArch64" ]; then if [ -f $TP_INSTALL_DIR/lib64/libsnappy.a ]; then if [ ! -f configure ]; then if [ -f $TP_INSTALL_DIR/lib/libbrpc.a ]; then if [ -f ./zstd_ep-install/lib64/libzstd.a ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ "$arch" == "avx2" ]; then elif [ "$arch" == "avx512" ]; then if [ "$arch" == "avx2" ]; then elif [ "$arch" == "avx512" ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [[ `cat /proc/cpuinfo |grep avx|wc -l` == "0" ]]; then if [[ $MACHINE_TYPE == "aarch64" ]] ; then if [[ "${MACHINE_TYPE}" != "aarch64" ]]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/starlet-artifacts-version.sh
lines,12
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/vars-aarch64.sh
lines,58
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/download-thirdparty.sh
lines,502
function,2

md5sum_func() { download_func() {
for,6
echo "Error: No download url specified for $FILENAME" echo "Error: No dest dir specified for $FILENAME" for attemp in 1 2; do for TP_ARCH in ${TP_ARCHIVES[*]} for TP_ARCH in ${TP_ARCHIVES[*]} for TP_ARCH in ${TP_ARCHIVES[*]}
if,60
if [[ -z "${STARROCKS_HOME}" ]]; then if [[ -f ${STARROCKS_HOME}/custom_env.sh ]]; then if [[ -z "${TP_DIR}" ]]; then if [ ! -f ${TP_DIR}/vars.sh ]; then if ! command -v ${md5sum_bin} >/dev/null 2>&1; then if [ "$md5sum_bin" == "" ]; then if [ "$md5" != "$MD5SUM $DESC_DIR/$FILENAME" ]; then if [ -z "$FILENAME" ]; then if [ -z "$DOWNLOAD_URL" ]; then if [ -z "$DESC_DIR" ]; then if [ -r "$DESC_DIR/$FILENAME" ]; then if md5sum_func $FILENAME $DESC_DIR $MD5SUM; then if [ "$?"x == "0"x ]; then if md5sum_func $FILENAME $DESC_DIR $MD5SUM; then if [ $SUCCESS -ne 1 ]; then if test "x$REPOSITORY_URL" = x; then if [ "$?"x == "0"x ]; then if [ "$?x" == "0x" ]; then if [ "$?x" == "0x" ]; then if [ ! -r $TP_SOURCE_DIR/${!NAME} ]; then if [ -z "${!SOURCE}" ]; then if [ ! -d $TP_SOURCE_DIR/${!SOURCE} ]; then if [[ "${!NAME}" =~ $SUFFIX_TGZ ]]; then if ! $TAR_CMD xzf "$TP_SOURCE_DIR/${!NAME}" -C $TP_SOURCE_DIR/tmp_dir; then elif [[ "${!NAME}" =~ $SUFFIX_XZ ]]; then if ! $TAR_CMD xJf "$TP_SOURCE_DIR/${!NAME}" -C $TP_SOURCE_DIR/tmp_dir; then elif [[ "${!NAME}" =~ $SUFFIX_ZIP ]]; then if ! $UNZIP_CMD "$TP_SOURCE_DIR/${!NAME}" -d $TP_SOURCE_DIR/tmp_dir; then elif [[ "${!NAME}" =~ $SUFFIX_BZ2 ]]; then if ! $TAR_CMD jxvf "$TP_SOURCE_DIR/${!NAME}" -C $TP_SOURCE_DIR/tmp_dir; then if [ ! -f $PATCHED_MARK ] && [ $GLOG_SOURCE == "glog-0.3.3" ]; then if [ ! -f $PATCHED_MARK ] && [ $GLOG_SOURCE == "glog-0.4.0" ]; then if [ ! -f $PATCHED_MARK ]; then if [ ! -f $PATCHED_MARK ]; then if [ ! -f $PATCHED_MARK ] && [ $LZ4_SOURCE == "lz4-1.7.5" ]; then if [ ! -f $PATCHED_MARK ] && [ $BRPC_SOURCE == "brpc-0.9.5" ]; then if [ ! -f $PATCHED_MARK ] && [ $BRPC_SOURCE == "brpc-0.9.7" ]; then if [ ! -f $PATCHED_MARK ] && [ $BRPC_SOURCE == "brpc-1.3.0" ]; then if [ ! -f $PATCHED_MARK ]; then if [ ! -f $PATCHED_MARK ]; then if [ ! -f $PATCHED_MARK ]; then if [ ! -f $PATCHED_MARK ] && [ $PROTOBUF_SOURCE == "protobuf-3.5.1" ]; then if [ ! -f $PATCHED_MARK ] && [ $GPERFTOOLS_SOURCE = "gperftools-gperftools-2.7" ]; then if [ ! -f $PATCHED_MARK ] && [ $LIBRDKAFKA_SOURCE = "librdkafka-2.0.2" ]; then if [ ! -f $PATCHED_MARK ] && [ $CROARINGBITMAP_SOURCE = "CRoaring-0.2.60" ]; then if [ ! -f $PATCHED_MARK ] && [ $PULSAR_SOURCE = "pulsar-client-cpp-3.3.0" ]; then if [ ! -f $PATCHED_MARK ] && [ $MARIADB_SOURCE = "mariadb-connector-c-3.2.5" ]; then if [ ! -f $PATCHED_MARK ] && [ $AWS_SDK_CPP_SOURCE = "aws-sdk-cpp-1.9.179" ]; then if [ ! -f prefetch_crt_dep_ok ]; then if [ ! -f $PATCHED_MARK ] && [ $AWS_SDK_CPP_SOURCE = "aws-sdk-cpp-1.10.36" ]; then if [ ! -f prefetch_crt_dep_ok ]; then if [ ! -f $PATCHED_MARK ] && [ $JEMALLOC_SOURCE = "jemalloc-5.3.0" ]; then if [ ! -f $PATCHED_MARK ] && [ $STREAMVBYTE_SOURCE = "streamvbyte-0.5.1" ]; then if [ ! -f $PATCHED_MARK ] && [ $HYPERSCAN_SOURCE = "hyperscan-5.4.0" ]; then if [ ! -f $PATCHED_MARK ] && [ $VPACK_SOURCE = "velocypack-XYZ1.0" ]; then if [ ! -f $PATCHED_MARK ] && [ $AVRO_SOURCE = "avro-release-1.10.2" ]; then if [ ! -f $PATCHED_MARK ] && [ $SERDES_SOURCE = "libserdes-7.3.1" ]; then if [ ! -f $PATCHED_MARK ] && [ $SASL_SOURCE = "cyrus-sasl-2.1.28" ]; then if [[ -d $TP_SOURCE_DIR/$ARROW_SOURCE ]] ; then if [ ! -f $PATCHED_MARK ] && [ $ARROW_SOURCE = "arrow-apache-arrow-5.0.0" ] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/vars-ubuntu22-x86_64.sh
lines,34
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/vars-ubuntu22-aarch64.sh
lines,28
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/minidump/gen_stack_trace.sh
lines,18
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/minidump/gen_minidump_symbols.sh
lines,36
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/thirdparty/vars.sh
lines,417
function,0


for,0

if,5
if [[ $(uname) == "Darwin" ]]; then if [[ "${MACHINE_TYPE}" == "arm64" ]]; then if [ ! -f ${TP_DIR}/${VARS_TARGET} ]; then if [ -f /etc/lsb-release ]; then if [[ $DISTRIB_ID = "Ubuntu" && $DISTRIB_RELEASE =~ 22.* && -f ${TP_DIR}/vars-ubuntu22-${MACHINE_TYPE}.sh ]]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/test/sql/test_profile/T/test_profile_non_default_variables.sh
lines,44
function,1
function test_non_default_variables() {
function test_non_default_variables() {
for,0

if,1
if grep -q "pipeline_dop: 0 -> 2" <<< "${analyze_output}"; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/test/sql/test_profile/T/test_profile_analysis.sh
lines,42
function,1
function test_explain_analyze() {
function test_explain_analyze() {
for,0

if,1
if grep -q "Summary" <<< "${analyze_output}"; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/env.sh
lines,118
function,0


for,0

if,18
if [[ -z ${STARROCKS_HOME} ]]; then if [[ -f ${STARROCKS_HOME}/custom_env.sh ]]; then if [[ -z ${STARROCKS_THIRDPARTY} ]]; then if [[ -z ${CACHELIB_DIR} ]]; then if [[ -z ${PYTHON} ]]; then if ! ${PYTHON} --version; then if ! ${PYTHON} --version; then if ! ${PYTHON} --version; then if [[ -z ${STARROCKS_GCC_HOME} ]]; then if [[ ! "$(printf '%s\n' "$required_ver" "$gcc_ver" | sort -V | head -n1)" = "$required_ver" ]]; then if [[ -z ${JAVA_HOME} ]]; then if [[ -z ${JAVA_HOME} ]]; then if ! command -v $JAVA_HOME/bin/java &> /dev/null; then if [[ $JAVA_VER -lt 18 ]]; then if [[ ! -z ${CUSTOM_MVN} ]]; then if ! ${MVN_CMD} --version; then if [[ ! -z ${CUSTOM_CMAKE} ]]; then if ninja --version 2>/dev/null; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/build-support/clang-format.sh
lines,37
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/build-support/check-format.sh
lines,37
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/show_be_version.sh
lines,36
function,0


for,0

if,2
if [ "$JAVA_HOME" = "" ]; then if [[ $java_version -gt 8 ]]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/common.sh
lines,138
function,7

jdk_version() { jvm_arch() { export_env_from_conf() { export_shared_envvars() { export_cachelib_lib_path() { update_submodules() detect_jvm_xmx() {
for,1
for line in $lines; do
if,9
if [[ -z $java_cmd ]] if [[ (-z $result) && ($line = *"version \""*) ]] if [[ $ver = "1."* ]] if [[ $envline == *"="* ]]; then if [[ "$FE_ENABLE_AUTO_JVM_XMX_DETECT" != "true" ]]; then if [[ ! -f "/.dockerenv" ]]; then if grep -q cgroup2 /proc/filesystems &>/dev/null; then if [[ ! "$MEM_LIMIT" =~ ^[0-9]+$ ]]; then if [[ -z "$FE_JVM_XMX_PERCENTAGE" ]]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/start_be.sh
lines,24
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/meta_tool.sh
lines,25
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/start_cn.sh
lines,24
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/start_backend.sh
lines,205
function,0


for,0

if,23
if [ ${RUN_BE} -eq 1 ] ; then if [ ${RUN_CN} -eq 1 ]; then if [ $? -ne 0 ]; then if [[ -z "$JEMALLOC_CONF" ]]; then if [ -e $STARROCKS_HOME/conf/hadoop_env.sh ]; then if [[ "${MACHINE_TYPE}" == "aarch64" ]]; then if [ "$JAVA_HOME" = "" ]; then if [[ $java_version -gt 8 ]]; then elif [[ -d "$JAVA_HOME/jre" ]]; then if [[ "$JAVA_VERSION" -gt 8 ]]; then if [ -n "$JAVA_OPTS_FOR_JDK_9_AND_LATER" ]; then if [[ "${RUN_NUMA}" -ne "-1" ]]; then if [ ! -d $LOG_DIR ]; then if [ ! -d $UDF_RUNTIME_DIR ]; then if [ ! -z ${UDF_RUNTIME_DIR} ]; then if [ ${RUN_BE} -eq 1 ]; then if [ ${RUN_CN} -eq 1 ]; then if [ -f $pidfile ]; then if kill -0 $(cat $pidfile) > /dev/null 2>&1; then if [[ $(ulimit -n) -lt 60000 ]]; then if [ ${RUN_CN} -eq 1 ]; then if [ ${RUN_LOG_CONSOLE} -eq 1 ] ; then if [ ${RUN_DAEMON} -eq 1 ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/stop_be.sh
lines,89
function,1

usage() {
for,1
for arg in "$@"
if,4
if [ -f $pidfile ]; then if [ "starrocks_be"x != "$pidcomm"x ]; then if kill -0 $pid >/dev/null 2>&1; then if [ $? -ne 0 ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/stop_fe.sh
lines,59
function,0


for,0

if,5
if [ -f $pidfile ]; then if [ "java" != "$pidcomm" ]; then if kill $pid > /dev/null 2>&1; then if ps -p $pid > /dev/null; then if [ -f $pidfile ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/start_fe.sh
lines,210
function,0


for,3
echo "JAVA_OPTS_FOR_JDK_11 is not set in fe.conf, use default java options for jdk11 to start fe process: $default_java_opts_for_jdk11" echo "Tips: current JDK version is $JAVA_VERSION, JDK 11 or 17 is highly recommended for better GC performance(lower version JDK may not be supported in the future)" for f in $STARROCKS_HOME/lib/*.jar; do
if,21
if [ -e $STARROCKS_HOME/conf/hadoop_env.sh ]; then if [[ -z ${JAVA_HOME} ]]; then if command -v javac &> /dev/null; then if [ ! -f "$JAVA_HOME/bin/javac" ]; then if [[ "$JAVA_VERSION" -gt 8 ]]; then if [[ "$JAVA_VERSION" -lt 11 ]]; then if [ -n "$JAVA_OPTS_FOR_JDK_11" ]; then elif [ -n "$JAVA_OPTS_FOR_JDK_9" ]; then if [ -z "$DATE" ] ; then if [[ "$JAVA_VERSION" -lt 11 ]]; then if [ ${ENABLE_DEBUGGER} -eq 1 ]; then if [[ "$JAVA_VERSION" -gt 8 ]]; then if [ ! -d $LOG_DIR ]; then if [ -f $pidfile ]; then if kill -0 `cat $pidfile` > /dev/null 2>&1; then if [ ! -f /bin/limit ]; then if [ x"$HELPER" != x"" ]; then if [ x"$HOST_TYPE" != x"" ]; then if [ ${RUN_LOG_CONSOLE} -eq 1 ] ; then if [ ! -w $STARROCKS_HOME/conf/fe.conf ] ; then if [ ${RUN_DAEMON} -eq 1 ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/show_fe_version.sh
lines,47
function,0


for,1
for f in $STARROCKS_HOME/lib/*.jar; do
if,3
if [ "$JAVA_HOME" = "" ]; then if [ -f $PID_DIR/fe.pid ]; then if [ -f $PID_DIR/fe.pid.bak ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/bin/stop_cn.sh
lines,94
function,1

usage() {
for,1
for arg in "$@"
if,4
if [ -f $pidfile ]; then if [ "starrocks_be"x != "$pidcomm"x ]; then if kill -0 $pid; then if kill -${sig} $pid > /dev/null 2>&1; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/tools/stream_load/stream-load-import.sh
lines,35
function,0


for,1
for i in "$*";
if,1
if [ "$JAVA_HOME" = "" ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/tools/restore_tablet_tool.sh
lines,101
function,2

usage() { restore_tablet() {
for,1
for line in $lines
if,2
if [ $? != 0 ] ; then if [ $BATCH_MODE = true ] ; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/run-fe-ut.sh
lines,148
function,1

usage() {
for,0

if,11
if [ $? != 0 ] ; then if [ ${HELP} -eq 1 ]; then if [ -z "${FE_UT_PARALLEL}" ]; then if [ -d "./mocked" ]; then if [ -d "./ut_ports" ]; then if [[ ${DUMPCASE} -ne 1 ]]; then if [[ $FILTER_TEST != "" ]];then if [ ${COVERAGE} -eq 1 ]; then elif [ ${DUMPCASE} -eq 1 ]; then if [ $DRY_RUN -eq 0 ]; then if [ ${RUN_SPECIFIED_TEST} -eq 1 ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/fs_brokers/apache_hdfs_broker/build.sh
lines,57
function,0


for,0

if,0

git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/fs_brokers/apache_hdfs_broker/bin/start_broker.sh
lines,88
function,0


for,1
for f in $BROKER_HOME/lib/*.jar; do
if,6
if [ "$JAVA_HOME" = "" ]; then if [[ $envline == *"="* ]]; then if [ -f $pidfile ]; then if kill -0 `cat $pidfile` > /dev/null 2>&1; then if [ ! -d $BROKER_LOG_DIR ]; then if [ ${RUN_DAEMON} -eq 1 ]; then
git@github.com:StarRocks/starrocks.git,09554bac895400ffb19e043b7c85c82478a382b4,starrocks,5469,./starrocks/fs_brokers/apache_hdfs_broker/bin/stop_broker.sh
lines,48
function,0


for,0

if,4
if [[ $envline == *"="* ]]; then if [ -f $pidfile ]; then if [ "java" != "$pidcomm" ]; then if kill -9 $pid > /dev/null 2>&1; then
git@github.com:gephi/gephi.git,a42603fd0cb2c209f96c79481dcc1f7195058822,gephi,5459,./gephi/.github/workflows/release/add-key.sh
lines,19
function,0


for,0

if,0

git@github.com:gephi/gephi.git,a42603fd0cb2c209f96c79481dcc1f7195058822,gephi,5459,./gephi/.github/workflows/release/remove-key.sh
lines,3
function,0


for,0

if,0

git@github.com:gephi/gephi.git,a42603fd0cb2c209f96c79481dcc1f7195058822,gephi,5459,./gephi/modules/application/src/main/app-resources/codesign.sh
lines,68
function,3
function codesignDir { function codesignJarsInDir { function codesignFile {

for,1
for dir in "${1}/Contents/Resources/gephi/gephi/modules/ext" ; do
if,1
if [ $? -eq 0 ]
git@github.com:dm77/barcodescanner.git,d036996c8a6f36a68843ffe539c834c28944b2d5,barcodescanner,5454,
git@github.com:wasabeef/Blurry.git,d53d019cffb630452be88215781ac4c410c543f2,Blurry,5453,
git@github.com:facebookarchive/rebound.git,65f155c6cf4e7594da636b2ab5215067e24da6ae,rebound,5444,
git@github.com:auth0/java-jwt.git,a6fa0b4d338386e7f0650b714444633420af0515,java-jwt,5438,
git@github.com:Genymobile/gnirehtet.git,1eb2e58bc91e268dba62561d11e3bebd9b100883,gnirehtet,5435,
git@github.com:apache/dubbo-spring-boot-project.git,feb1783a182370e4bfacd903f4bd90f94ff1a550,dubbo-spring-boot-project,5400,
git@github.com:Nepxion/Discovery.git,142b4d6a411a9f2e8730b0ceb613f87848b77e8d,Discovery,5391,
git@github.com:Evernote/android-job.git,adec0ae13d20e43b4d5dfce7e9eed7a07f98ae78,android-job,5390,
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/cli/src/main/resources/completion-for-dependency-check.sh
lines,150
function,1

_odc_completions() COMPREPLY=()
for,0

if,1
if [[ "$cur" == -* ]] ; then
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/prepare-release.sh
lines,17
function,0


for,0

if,0

git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/build-docker.sh
lines,18
function,0


for,0

if,2
if [ -f "$FILE" ]; then if [[ ! $VERSION = *"SNAPSHOT"* ]]; then
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/sha256_cli.sh
lines,7
function,0


for,0

if,0

git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/publish-docker.sh
lines,25
function,0


for,0

if,3
if [[ $VERSION = *"SNAPSHOT"* ]]; then if [[ "$?" -ne 0 ]] ; then if [[ "$?" -ne 0 ]] ; then
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/list-changes.sh
lines,2
function,0


for,0

if,0

git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/release_stats.sh
lines,2
function,0


for,0

if,0

git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/docker-pullcount.sh
lines,2
function,0


for,0

if,0

git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/shell-docker.sh
lines,48
function,0


for,0

if,5
if [ ! -d "$SCAN_TARGET" ]; then if [ ! -d "$DATA_DIRECTORY" ]; then if [ ! -d "$REPORT_DIRECTORY" ]; then if [ ! -d "$CACHE_DIRECTORY" ]; then if [ -f "$HOME/OWASP-Dependency-Check/reports/dependency-check-report.json" ]; then
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/core/src/main/resources/schema/pom/generateBindings.sh
lines,10
function,0


for,0

if,1
if [ -n "$JAVA_HOME" ]
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/coverity_scan.sh
lines,11
function,0


for,0

if,1
if [ $TRAVIS_BRANCH = "master" ] && [ $TRAVIS_EVENT_TYPE = "cron" ] ; then
git@github.com:jeremylong/DependencyCheck.git,778185bce378591be6e0b4642d4d4ab5cbb10510,DependencyCheck,5376,./DependencyCheck/test-docker.sh
lines,79
function,0


for,0

if,9
if [ ! -d "$SCAN_TARGET" ]; then if [ -f "$HOME/OWASP-Dependency-Check/reports/dependency-check-report.json" ]; then if [ -f "$HOME/OWASP-Dependency-Check/reports/odc.log" ]; then if [ ! -d "$DATA_DIRECTORY" ]; then if [ ! -d "$REPORT_DIRECTORY" ]; then if [ ! -d "$CACHE_DIRECTORY" ]; then if [ -f "$HOME/OWASP-Dependency-Check/reports/dependency-check-report.json" ]; then if [ -f "$HOME/OWASP-Dependency-Check/reports/odc.log" ]; then if [[ "$?" -eq 0 ]] ; then
git@github.com:jgilfelt/SystemBarTint.git,daa0796a488b5480ef808aa6363d300675b4af83,SystemBarTint,5373,
git@github.com:alipay/SoloPi.git,ac684afdb1eb654dc27a2710e3c1e5ac25a9c43d,SoloPi,5369,
git@github.com:AriaLyy/Aria.git,aa292e4389e11a87dd96a63f8566ebccccdc067c,Aria,5366,
git@github.com:vavr-io/vavr.git,26181f14b9629ceb729a73795d3854363c7dce0e,vavr,5362,./vavr/update-copyright.sh
lines,14
function,0


for,0

if,0

git@github.com:wuhaoyu1990/MagicCamera.git,ecbb4418b658f8e41d4c7805fbd67caf02bd07f5,MagicCamera,5345,
git@github.com:XRecyclerView/XRecyclerView.git,881c18e09b3db3f04d3c420596b1ef1ec4535e45,XRecyclerView,5334,
git@github.com:commonsguy/cw-omnibus.git,f2ffeb687d002f4a41b52a6ef5bb2580eb6a4ed6,cw-omnibus,5318,
git@github.com:motianhuo/wechat.git,70d0fca84415be30e790a36263e9cae3a31a38eb,wechat,5316,
git@github.com:evant/gradle-retrolambda.git,e286096796ddc39f1b24c9c00834978536247656,gradle-retrolambda,5315,./gradle-retrolambda/test.sh
lines,9
function,0


for,0

if,0

git@github.com:KeepSafe/TapTargetView.git,e08def0b4188c365ec7dfdafaeb292efbc5a3f29,TapTargetView,5283,
git@github.com:h6ah4i/android-advancedrecyclerview.git,5213b003748cc2010d73d8c6c3193deb2bbf023e,android-advancedrecyclerview,5281,
git@github.com:danikula/AndroidVideoCache.git,fe52f3c84abba5f5dd1913cd70d8f3e3cfa3d0c3,AndroidVideoCache,5275,
git@github.com:yixia/VitamioBundle.git,77bd421e6ae874943291867edde0a371fe09fb0c,VitamioBundle,5267,
git@github.com:facebookarchive/shimmer-android.git,32b784bd9811588b4e18c4a613fdfa8ce384cd84,shimmer-android,5258,
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/hbase-config.sh
lines,136
function,0


for,0

if,13
if expr "$link" : '.*/.*' > /dev/null; then if [ -z "$HBASE_HOME" ]; then if [ "--config" = "$1" ] elif [ "--hosts" = "$1" ] if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_THRIFT_JMX_OPTS" ]; then if [ -z "$HBASE_THRIFT_OPTS" ]; then if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_REST_JMX_OPTS" ]; then if [ -z "$HBASE_REST_OPTS" ]; then if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then if [ -z "$HBASE_REGIONSERVER_UID" ]; then if [ "$HBASE_REGIONSERVER_MLOCK" = "true" ]; then if [ ! -f "$MLOCK_AGENT" ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/master-backup.sh
lines,74
function,0


for,1
for hmaster in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_BACKUP_MASTERS" = "" ]; then if [ -f $HOSTLIST ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/graceful_stop.sh
lines,165
function,2
function usage {
log() {
for,0

if,19
echo " e|failfast Set -e so exit immediately if any command exits with non-zero status" if [ $ if [ $ if [ "$failfast" != "" ]; then log "Set failfast, will exit immediately if any command exits with non-zero status" if [ "$localhostname" == "$hostname" ]; then if [ "$thrift" != "" ]; then if [ "$local" ]; then if [ "$rest" != "" ]; then if [ "$local" ]; then if [ "$local" ]; then if [ "$restart" != "" ]; then if [ "$local" ]; then if [ "$thrift" != "" ]; then if [ "$local" ]; then if [ "$rest" != "" ]; then if [ "$local" ]; then if [ "$reload" != "" ]; then if [ $HBASE_BALANCER_STATE != "false" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/hbase-common.sh
lines,41
function,1

waitForProcessEnd() {
for,0

if,2
if [ $(( `date +%s` - $processedAt )) -gt ${HBASE_STOP_TIMEOUT:-1200} ]; then if kill -0 $pidKilled > /dev/null 2>&1; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/regionservers.sh
lines,78
function,0


for,1
for regionserver in `cat "$HOSTLIST"`; do
if,6
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_REGIONSERVERS" = "" ]; then if [ "$regionservers" = "localhost" ]; then if ${HBASE_SLAVE_PARALLEL:-true}; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/hbase-daemons.sh
lines,53
function,0


for,0

if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/rolling-restart.sh
lines,174
function,1
function usage() {
function usage() {
for,4
echo -n "Waiting for Master ZNode ${zmaster} to expire" echo "Wait a minute for master to come up join cluster" echo -n "Waiting for ${zunassigned} to empty" for rs in $online_regionservers
if,12
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]; then if [ $RR_RS -ne 1 ] || [ $RR_MASTER -ne 1 ]; then echo Cant do selective rolling restart if not running distributed if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ $RR_MASTER -eq 1 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ "$zunassigned" == "null" ]; then zunassigned="region-in-transition"; fi if test 0 -eq ${unassigned} if [ $RR_RS -eq 1 ]; then if [ $RR_GRACEFUL -eq 1 ]; then if [ "$zkrs" == "null" ]; then zkrs="rs"; fi
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/start-hbase.sh
lines,61
function,0


for,0

if,3
if [ $errCode -ne 0 ] if [ "$1" = "autorestart" ] if [ "$distMode" == 'false' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/test/process_based_cluster.sh
lines,110
function,4

print_usage() { show_processes() { cmd_specified() { list_pid_files() {
for,1
for F in `list_pid_files`; do
if,6
if [ "$CMD_SPECIFIED" ]; then if [ $ if [ "$IS_KILL" ]; then elif [ "$IS_SHOW" ]; then if [ -n "$PID" ]; then if [ -n "$PIDS" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/local-regionservers.sh
lines,58
function,1

run_regionserver () {
for,1
for i in $*
if,2
if [ $ if [[ "$i" =~ ^[0-9]+$ ]]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/hbase-cleanup.sh
lines,147
function,6

check_for_znodes() { execute_zk_command() { execute_hdfs_command() { execute_clean_acls() { clean_up() { check_znode_exists() {
for,0

if,9
if [ $ if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$hrootdir" == "null" ]; then hrootdir="file:///tmp/hbase-${USER}/hbase"; fi if [ "$zchild" == "null" ]; then zchild="rs"; fi if [ "$zchild" == "null" ]; then zchild="backup-masters"; fi if [ "$znodes" != "" ]; then if [ $? -ne 0 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ $? -ne 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/zookeepers.sh
lines,59
function,0


for,1
for zookeeper in $hosts; do
if,4
if [ $ if [ "$HBASE_MANAGES_ZK" = "" ]; then if [ "$HBASE_MANAGES_ZK" = "true" ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/stop-hbase.sh
lines,65
function,0


for,0

if,3
if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$distMode" == 'true' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/local-master-backup.sh
lines,60
function,1

run_master () {
for,1
for i in $*
if,2
if [ $ if [[ "$i" =~ ^[0-9]+$ ]]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-10/src/test/bin/hbase-daemon.sh
lines,284
function,4

hbase_rotate_log () cleanZNode() { check_before_start(){ wait_until_done ()
for,0

if,27
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ -f $HBASE_ZNODE_FILE ]; then if [ "$command" = "master" ]; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ $cnt -gt 1 ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -z "${HBASE_ROOT_LOGGER}" ]; then if [ -z "${HBASE_SECURITY_LOGGER}" ]; then if [ -n "$SERVER_GC_OPTS" ]; then if [ -n "$CLIENT_GC_OPTS" ]; then if [ "$HBASE_NICENESS" = "" ]; then if [ ! -f "$HBASE_START_FILE" ]; then if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$zkrunning" == "null" ]; then zkrunning="running"; fi if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ $limitDate -gt $curDate ]; then if [ -f $pid ]; then if kill -0 $pidToKill > /dev/null 2>&1; then if [ $sp -gt 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/hbase-config.sh
lines,120
function,0


for,1
for candidate in \
if,8
if expr "$link" : '.*/.*' > /dev/null; then if [ -z "$HBASE_HOME" ]; then if [ "--config" = "$1" ] elif [ "--hosts" = "$1" ] if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then if [ -z "$JAVA_HOME" ]; then if [ -e $candidate/bin/java ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/master-backup.sh
lines,76
function,0


for,1
for hmaster in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_BACKUP_MASTERS" = "" ]; then if [ -f $HOSTLIST ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/graceful_stop.sh
lines,110
function,1
function usage {

for,0

if,10
if [ $ if [ $ echo "Disabling balancer! (if required)" if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$restart" != "" ]; then if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$reload" != "" ]; then if [ $HBASE_BALANCER_STATE != "false" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/regionservers.sh
lines,75
function,0


for,1
for regionserver in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_REGIONSERVERS" = "" ]; then if ${HBASE_SLAVE_PARALLEL:-true}; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/hbase-daemons.sh
lines,55
function,0


for,0

if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/rolling-restart.sh
lines,165
function,1
function usage() {
function usage() {
for,5
for x in "$@" ; do echo -n "Waiting for Master ZNode ${zmaster} to expire" echo "Wait a minute for master to come up join cluster" echo -n "Waiting for ${zunassigned} to empty" for rs in $online_regionservers
if,12
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]; then if [ $RR_RS -ne 1 ] || [ $RR_MASTER -ne 1 ]; then echo Cant do selective rolling restart if not running distributed if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ $RR_MASTER -eq 1 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ "$zunassigned" == "null" ]; then zunassigned="unassigned"; fi if test 0 -eq ${unassigned} if [ $RR_RS -eq 1 ]; then if [ $RR_GRACEFUL -eq 1 ]; then if [ "$zkrs" == "null" ]; then zkrs="rs"; fi
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/start-hbase.sh
lines,55
function,0


for,0

if,2
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/local-regionservers.sh
lines,54
function,1

run_regionserver () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/zookeepers.sh
lines,61
function,0


for,1
for zookeeper in $hosts; do
if,4
if [ $ if [ "$HBASE_MANAGES_ZK" = "" ]; then if [ "$HBASE_MANAGES_ZK" = "true" ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/stop-hbase.sh
lines,73
function,0


for,0

if,3
if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$distMode" == 'true' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/local-master-backup.sh
lines,55
function,1

run_master () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-094/src/test/bin/hbase-daemon.sh
lines,205
function,2

hbase_rotate_log () wait_until_done ()
for,0

if,17
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ $cnt -gt 1 ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -n "$SERVER_GC_OPTS" ]; then if [ -n "$CLIENT_GC_OPTS" ]; then if [ "$HBASE_NICENESS" = "" ]; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ $sp -gt 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/hbase-config.sh
lines,155
function,0


for,1
for candidate in \
if,15
if expr "$link" : '.*/.*' > /dev/null; then if [ -z "$HBASE_HOME" ]; then if [ "--config" = "$1" ] elif [ "--hosts" = "$1" ] if [[ -n "$HBASE_JMX_OPTS" && -z "$HBASE_THRIFT_JMX_OPTS" ]]; then if [ -z "$HBASE_THRIFT_OPTS" ]; then if [[ -n "$HBASE_JMX_OPTS" && -z "$HBASE_REST_JMX_OPTS" ]]; then if [ -z "$HBASE_REST_OPTS" ]; then if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then if [ -z "$HBASE_REGIONSERVER_UID" ]; then if [ "$HBASE_REGIONSERVER_MLOCK" = "true" ]; then if [ ! -f "$MLOCK_AGENT" ]; then if [ -z "$JAVA_HOME" ]; then if [ -e $candidate/bin/java ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/master-backup.sh
lines,76
function,0


for,1
for hmaster in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_BACKUP_MASTERS" = "" ]; then if [ -f $HOSTLIST ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/graceful_stop.sh
lines,134
function,2
function usage {
log() {
for,0

if,12
echo " e|failfast Set -e so exit immediately if any command exits with non-zero status" if [ $ if [ $ if [ "$failfast" != "" ]; then log "Set failfast, will exit immediately if any command exits with non-zero status" if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$restart" != "" ]; then if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$reload" != "" ]; then if [ $HBASE_BALANCER_STATE != "false" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/hbase-common.sh
lines,41
function,1

waitForProcessEnd() {
for,0

if,2
if [ $(( `date +%s` - $processedAt )) -gt ${HBASE_STOP_TIMEOUT:-1200} ]; then if kill -0 $pidKilled > /dev/null 2>&1; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/regionservers.sh
lines,75
function,0


for,1
for regionserver in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_REGIONSERVERS" = "" ]; then if ${HBASE_SLAVE_PARALLEL:-true}; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/hbase-daemons.sh
lines,55
function,0


for,0

if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/rolling-restart.sh
lines,165
function,1
function usage() {
function usage() {
for,5
for x in "$@" ; do echo -n "Waiting for Master ZNode ${zmaster} to expire" echo "Wait a minute for master to come up join cluster" echo -n "Waiting for ${zunassigned} to empty" for rs in $online_regionservers
if,12
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]; then if [ $RR_RS -ne 1 ] || [ $RR_MASTER -ne 1 ]; then echo Cant do selective rolling restart if not running distributed if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ $RR_MASTER -eq 1 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ "$zunassigned" == "null" ]; then zunassigned="region-in-transition"; fi if test 0 -eq ${unassigned} if [ $RR_RS -eq 1 ]; then if [ $RR_GRACEFUL -eq 1 ]; then if [ "$zkrs" == "null" ]; then zkrs="rs"; fi
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/start-hbase.sh
lines,63
function,0


for,0

if,3
if [ $errCode -ne 0 ] if [ "$1" = "autorestart" ] if [ "$distMode" == 'false' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/test/process_based_cluster.sh
lines,110
function,4

print_usage() { show_processes() { cmd_specified() { list_pid_files() {
for,1
for F in `list_pid_files`; do
if,6
if [ "$CMD_SPECIFIED" ]; then if [ $ if [ "$IS_KILL" ]; then elif [ "$IS_SHOW" ]; then if [ -n "$PID" ]; then if [ -n "$PIDS" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/local-regionservers.sh
lines,56
function,1

run_regionserver () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/hbase-cleanup.sh
lines,139
function,5

check_for_znodes() { execute_zk_command() { execute_hdfs_command() { clean_up() { check_znode_exists() {
for,0

if,9
if [ $ if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$hrootdir" == "null" ]; then hrootdir="file:///tmp/hbase-${USER}/hbase"; fi if [ "$zchild" == "null" ]; then zchild="rs"; fi if [ "$zchild" == "null" ]; then zchild="backup-masters"; fi if [ "$znodes" != "" ]; then if [ $? -ne 0 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ $? -ne 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/zookeepers.sh
lines,61
function,0


for,1
for zookeeper in $hosts; do
if,4
if [ $ if [ "$HBASE_MANAGES_ZK" = "" ]; then if [ "$HBASE_MANAGES_ZK" = "true" ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/stop-hbase.sh
lines,67
function,0


for,0

if,3
if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$distMode" == 'true' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/local-master-backup.sh
lines,57
function,1

run_master () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-096/src/test/bin/hbase-daemon.sh
lines,279
function,4

hbase_rotate_log () cleanZNode() { check_before_start(){ wait_until_done ()
for,0

if,25
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ -f $HBASE_ZNODE_FILE ]; then if [ "$command" = "master" ]; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ $cnt -gt 1 ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -n "$SERVER_GC_OPTS" ]; then if [ -n "$CLIENT_GC_OPTS" ]; then if [ "$HBASE_NICENESS" = "" ]; then if [ ! -f "$HBASE_START_FILE" ]; then if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$zshutdown" == "null" ]; then zshutdown="shutdown"; fi if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ $limitDate -gt $curDate ]; then if [ -f $pid ]; then if kill -0 $pidToKill > /dev/null 2>&1; then if [ $sp -gt 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/common/test/conf/hbase-env.sh
lines,98
function,0


for,1
for jar in ./target/test-lib/*.jar; do
if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/hbase-config.sh
lines,155
function,0


for,1
for candidate in \
if,15
if expr "$link" : '.*/.*' > /dev/null; then if [ -z "$HBASE_HOME" ]; then if [ "--config" = "$1" ] elif [ "--hosts" = "$1" ] if [[ -n "$HBASE_JMX_OPTS" && -z "$HBASE_THRIFT_JMX_OPTS" ]]; then if [ -z "$HBASE_THRIFT_OPTS" ]; then if [[ -n "$HBASE_JMX_OPTS" && -z "$HBASE_REST_JMX_OPTS" ]]; then if [ -z "$HBASE_REST_OPTS" ]; then if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then if [ -z "$HBASE_REGIONSERVER_UID" ]; then if [ "$HBASE_REGIONSERVER_MLOCK" = "true" ]; then if [ ! -f "$MLOCK_AGENT" ]; then if [ -z "$JAVA_HOME" ]; then if [ -e $candidate/bin/java ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/master-backup.sh
lines,76
function,0


for,1
for hmaster in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_BACKUP_MASTERS" = "" ]; then if [ -f $HOSTLIST ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/graceful_stop.sh
lines,134
function,2
function usage {
log() {
for,0

if,12
echo " e|failfast Set -e so exit immediately if any command exits with non-zero status" if [ $ if [ $ if [ "$failfast" != "" ]; then log "Set failfast, will exit immediately if any command exits with non-zero status" if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$restart" != "" ]; then if [ "$thrift" != "" ]; then if [ "$rest" != "" ]; then if [ "$reload" != "" ]; then if [ $HBASE_BALANCER_STATE != "false" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/hbase-common.sh
lines,41
function,1

waitForProcessEnd() {
for,0

if,2
if [ $(( `date +%s` - $processedAt )) -gt ${HBASE_STOP_TIMEOUT:-1200} ]; then if kill -0 $pidKilled > /dev/null 2>&1; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/regionservers.sh
lines,75
function,0


for,1
for regionserver in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_REGIONSERVERS" = "" ]; then if ${HBASE_SLAVE_PARALLEL:-true}; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/hbase-daemons.sh
lines,55
function,0


for,0

if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/rolling-restart.sh
lines,165
function,1
function usage() {
function usage() {
for,5
for x in "$@" ; do echo -n "Waiting for Master ZNode ${zmaster} to expire" echo "Wait a minute for master to come up join cluster" echo -n "Waiting for ${zunassigned} to empty" for rs in $online_regionservers
if,12
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]; then if [ $RR_RS -ne 1 ] || [ $RR_MASTER -ne 1 ]; then echo Cant do selective rolling restart if not running distributed if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ $RR_MASTER -eq 1 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ "$zunassigned" == "null" ]; then zunassigned="region-in-transition"; fi if test 0 -eq ${unassigned} if [ $RR_RS -eq 1 ]; then if [ $RR_GRACEFUL -eq 1 ]; then if [ "$zkrs" == "null" ]; then zkrs="rs"; fi
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/start-hbase.sh
lines,63
function,0


for,0

if,3
if [ $errCode -ne 0 ] if [ "$1" = "autorestart" ] if [ "$distMode" == 'false' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/test/process_based_cluster.sh
lines,110
function,4

print_usage() { show_processes() { cmd_specified() { list_pid_files() {
for,1
for F in `list_pid_files`; do
if,6
if [ "$CMD_SPECIFIED" ]; then if [ $ if [ "$IS_KILL" ]; then elif [ "$IS_SHOW" ]; then if [ -n "$PID" ]; then if [ -n "$PIDS" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/local-regionservers.sh
lines,56
function,1

run_regionserver () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/hbase-cleanup.sh
lines,139
function,5

check_for_znodes() { execute_zk_command() { execute_hdfs_command() { clean_up() { check_znode_exists() {
for,0

if,9
if [ $ if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$hrootdir" == "null" ]; then hrootdir="file:///tmp/hbase-${USER}/hbase"; fi if [ "$zchild" == "null" ]; then zchild="rs"; fi if [ "$zchild" == "null" ]; then zchild="backup-masters"; fi if [ "$znodes" != "" ]; then if [ $? -ne 0 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ $? -ne 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/zookeepers.sh
lines,61
function,0


for,1
for zookeeper in $hosts; do
if,4
if [ $ if [ "$HBASE_MANAGES_ZK" = "" ]; then if [ "$HBASE_MANAGES_ZK" = "true" ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/stop-hbase.sh
lines,67
function,0


for,0

if,3
if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$distMode" == 'true' ]
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/local-master-backup.sh
lines,57
function,1

run_master () {
for,1
for i in $*
if,1
if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-hbase-parent/titan-hbase-098/src/test/bin/hbase-daemon.sh
lines,279
function,4

hbase_rotate_log () cleanZNode() { check_before_start(){ wait_until_done ()
for,0

if,25
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ -f $HBASE_ZNODE_FILE ]; then if [ "$command" = "master" ]; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ $cnt -gt 1 ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -n "$SERVER_GC_OPTS" ]; then if [ -n "$CLIENT_GC_OPTS" ]; then if [ "$HBASE_NICENESS" = "" ]; then if [ ! -f "$HBASE_START_FILE" ]; then if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$zshutdown" == "null" ]; then zshutdown="shutdown"; fi if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ $limitDate -gt $curDate ]; then if [ -f $pid ]; then if kill -0 $pidToKill > /dev/null 2>&1; then if [ $sp -gt 0 ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-es/src/test/bin/elasticsearch.in.sh
lines,64
function,0


for,0

if,7
if [ "x$ES_MIN_MEM" = "x" ]; then if [ "x$ES_MAX_MEM" = "x" ]; then if [ "x$ES_HEAP_SIZE" != "x" ]; then if [ "x$ES_HEAP_NEWSIZE" != "x" ]; then if [ "x$ES_DIRECT_SIZE" != "x" ]; then if [ "x$ES_USE_IPV4" != "x" ]; then if [ "x$ES_USE_GC_LOGGING" != "x" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-cassandra/config/cassandra/cassandra-env.sh
lines,124
function,1

calculate_heap_size()
for,0

if,2
if [ "x$MAX_HEAP_SIZE" = "x" ]; then if [ "`uname`" = "Linux" ] ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-cassandra/config/cassandra/cassandra.in.sh
lines,46
function,0


for,1
for jar in $CASSANDRA_HOME/lib/*.jar; do
if,2
if [ "x$CASSANDRA_HOME" = "x" ]; then if [ "x$CASSANDRA_CONF" = "x" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/release/release.sh
lines,100
function,1

require_yes() {
for,1
echo "Expected one hit for $pattern in $POM_FILE, but found $hitcount. Exiting."
if,4
if [ "$line" != y ]; then if [ 1 -ne $hitcount ]; then if [ "$line" != "n" ]; then if echo "$compat" | grep '<titan\.compatible\.versions[ ]*/>' >/dev/null; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/release/commit-compat-version.sh
lines,47
function,0


for,1
echo "already contains an entry for version ${SCM_TAG} (${COMPAT_CONFIG})."
if,1
if grep "^${SCM_TAG},${COMPAT_CONFIG}," "$COMPAT_MANIFEST" >/dev/null ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/release/gh-pages-update.sh
lines,106
function,0


for,2
git commit -m "Page updates for $GIT_TAG" for release version $GIT_TAG on branch gh-pages.
if,4
if [ -z "${GIT_DIR:-}" -o -z "${GIT_TAG:-}" ]; then if [ -z "${1:-}" ]; then if [ $? -ne 0 ]; then if [ "y" != "$answer" ] ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/release/rewrite-tag.sh
lines,38
function,0


for,1
echo 'Could not resolve symbolic ref for HEAD -- detached?'
if,2
if [ $? -eq 0 ] ; then if [ -n "$OLD_HEAD" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/conf/cassandra/cassandra-env.sh
lines,309
function,2

calculate_heap_sizes() startswith() { [ "${1
for,0

if,14
if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "8192" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ "$JVM_VERSION" \< "1.7" ] ; then if [ "$JVM_VERSION" \< "1.8" ] && [ "$JVM_PATCH_VERSION" \< "25" ] ; then if [ "x$MAX_HEAP_SIZE" = "x" ] && [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "x$MAX_HEAP_SIZE" = "x" ] || [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "x$MALLOC_ARENA_MAX" = "x" ] if [ "x$CASSANDRA_HEAPDUMP_DIR" != "x" ]; then if { [ "$JVM_VERSION" \> "1.7" ] && [ "$JVM_VERSION" \< "1.8.0" ] && [ "$JVM_PATCH_VERSION" -ge "60" ]; } || [ "$JVM_VERSION" \> "1.8" ] ; then if [ "$JVM_ARCH" = "64-Bit" ] ; then if [ "$LOCAL_JMX" = "yes" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/gremlin-server.sh
lines,67
function,0


for,0

if,4
if [ "$JAVA_HOME" = "" ] ; then if [ "$JAVA_OPTIONS" = "" ] ; then if [ "$1" = "-i" ]; then if [ $
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/elasticsearch.in.sh
lines,66
function,0


for,0

if,7
if [ "x$ES_MIN_MEM" = "x" ]; then if [ "x$ES_MAX_MEM" = "x" ]; then if [ "x$ES_HEAP_SIZE" != "x" ]; then if [ "x$ES_HEAP_NEWSIZE" != "x" ]; then if [ "x$ES_DIRECT_SIZE" != "x" ]; then if [ "x$ES_USE_IPV4" != "x" ]; then if [ "x$ES_USE_GC_LOGGING" != "x" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/titan.sh
lines,271
function,12

abs_path() { wait_for_cassandra() { wait_for_startup() { wait_for_shutdown() { start() { stop() { kill_class() { status_class() { status() { clean() { usage() { find_verb() {
for,4
for maybejps in jps "${JAVA_HOME}/bin/jps"; do echo "See $BIN/../log/cassandra.log for Cassandra log output." >&2 echo "See $BIN/../log/elasticsearch.log for Elasticsearch log output." >&2 echo "See $BIN/../log/gremlin-server.log for Gremlin-Server log output." >&2
if,17
if [ $? -eq 0 ]; then if [ -z "$JPS" ]; then if [ $? -eq 0 -a 'running' = "$status_thrift" ]; then if [ $? -eq 0 ]; then if [ $? -eq 1 ]; then if [ -n "$VERBOSE" ]; then if [ -n "$VERBOSE" ]; then if [ -n "$VERBOSE" ]; then if [ -z "$p" ]; then if [ -n "$p" ]; then if [ "$response" != "y" -a "$response" != "Y" ]; then if cd "$BIN"/../db 2>/dev/null; then if cd "$BIN"/../log; then if [ "$1" = 'start' -o \ if find_verb ${!OPTIND}; then elif getopts 'c:v' option; then if [ -n "$COMMAND" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/checkconfig.sh
lines,104
function,1

abs_path() {
for,0

if,14
if [ -n "${HADOOP_PREFIX:-}" ]; then if [ -d "$HADOOP_PREFIX"/etc/hadoop ]; then elif [ -d "$HADOOP_PREFIX"/conf ]; then elif [ -n "${HADOOP_CONF_DIR:-}" ]; then elif [ -n "${HADOOP_CONF:-}" ]; then elif [ -n "${HADOOP_HOME:-}" ]; then if [ -d "$HADOOP_HOME"/etc/hadoop ]; then elif [ -d "$HADOOP_HOME"/conf ]; then if [ -z "${JAVA_HOME:-}" ]; then if [ -z "${GREMLIN_LOG_LEVEL:-}" -o "${GREMLIN_MR_LOG_LEVEL:-}" ]; then if [ -z "${SCRIPT_DEBUG:-}" ]; then if [ "$GREMLIN_LOG_LEVEL" = "TRACE" -o \ if [ -z "${JAVA_OPTIONS:-}" ]; then if [ -n "$SCRIPT_DEBUG" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/cassandra.in.sh
lines,72
function,1

abs_path() {
for,1
for jar in "$CASSANDRA_HOME"/lib/*.jar; do
if,1
if [ $jar != slf4j-log4j12* ] ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/gremlin.sh
lines,114
function,0


for,0

if,8
if [ -z "${JAVA_HOME:-}" ]; then if [ -z "${GREMLIN_LOG_LEVEL:-}" ]; then if [ -z "${SCRIPT_DEBUG:-}" ]; then if [ "$GREMLIN_LOG_LEVEL" = "TRACE" -o \ if [ -z "${HADOOP_GREMLIN_LIBS:-}" ]; then if [ -z "${JAVA_OPTIONS:-}" ]; then if [ "$PROFILING_ENABLED" = true ]; then if [ -n "$SCRIPT_DEBUG" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/assembly/static/bin/checksocket.sh
lines,24
function,1

abs_path() {
for,0

if,1
if [ -n "$JAVA_HOME" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/etc/config.sh
lines,36
function,0


for,0

if,2
if [ ! -e "$M2_REPO" ]; then elif [ -L "$M2_REPO" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/payload/etc/titan/titan-env.sh
lines,251
function,2

calculate_heap_sizes() startswith() { [ "${1
for,0

if,11
if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "8192" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ "x$MAX_HEAP_SIZE" = "x" ] && [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "x$MAX_HEAP_SIZE" = "x" ] || [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "$JVM_VENDOR" != "OpenJDK" -o "$JVM_VERSION" \> "1.6.0" ] \ if [ "x$TITAN_HEAPDUMP_DIR" != "x" ]; then if [ "`uname`" = "Linux" ] ; then if [ "$JVM_VERSION" \> "1.7" ] && [ "$JVM_ARCH" = "64-Bit" ] ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/payload/usr/share/titan/titan.in.sh
lines,35
function,0


for,1
for jar in "$TITAN_HOME"/lib/*.jar; do
if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/payload/usr/bin/rexster-console.sh
lines,22
function,0


for,0

if,2
if [ "$JAVA_HOME" = "" ] ; then if [ "$JAVA_OPTIONS" = "" ] ; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/payload/usr/bin/gremlin.sh
lines,63
function,0


for,0

if,6
if [ -z "${JAVA_HOME:-}" ]; then if [ -z "${GREMLIN_LOG_LEVEL:-}" ]; then if [ -z "${SCRIPT_DEBUG:-}" ]; then if [ "$GREMLIN_LOG_LEVEL" = "TRACE" -o \ if [ -z "${JAVA_OPTIONS:-}" ]; then if [ -n "$SCRIPT_DEBUG" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/install-payload.sh
lines,17
function,0


for,0

if,2
if [ -z "${1:-}" ]; then echo " The directory is created if it does not exist"
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/partition-jars.sh
lines,114
function,1

mvn_deps() {
for,5
for m in $MODULES; do for m in $MODULES; do for m in $MODULES main; do for m in $MODULES main; do for j in `cat $DEP_DIR/dep-part-$m.txt | sed -r 's/(.+):(.+)/\2/'`; do
if,1
if [ 'main' = $m ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/install-jars.sh
lines,27
function,0


for,0

if,2
if [ -z "${1:-}" ]; then echo " The directory is created if it does not exist"
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/build-all.sh
lines,9
function,0


for,0

if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/quick-setup-for-redhat.sh
lines,49
function,0


for,3
for u in 'http://packages.elasticsearch.org/GPG-KEY-elasticsearch' \ name=DataStax Repo for Apache Cassandra name=Elasticsearch repository for 1.0.x packages
if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/update-local-repos.sh
lines,23
function,0


for,0

if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/clean.sh
lines,16
function,0


for,0

if,1
if [ -e "$DEP_DIR" ]; then
git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/pkgcommon/bin/quick-setup-for-debian.sh
lines,31
function,0


for,1
for u in 'http://packages.elasticsearch.org/GPG-KEY-elasticsearch' \
if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/redhat/build.sh
lines,25
function,0


for,0

if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/debian/build.sh
lines,11
function,0


for,0

if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/static/debian/generate-changes.sh
lines,16
function,0


for,0

if,0

git@github.com:thinkaurelius/titan.git,ee226e52415b8bf43b700afac75fa5b9767993a5,titan,5234,./titan/titan-dist/src/pkg/resources/pkgcommon/etc/version.sh
lines,37
function,0


for,0

if,2
if [ "SNAPSHOT" = "$VER_QUALIFIER" ]; then if [ "SNAPSHOT" = "${VER_QUALIFIER}" ]; then
git@github.com:Clans/FloatingActionButton.git,d3feaadabb8e4780e8bca330f4f67b94f21e1796,FloatingActionButton,5231,
git@github.com:LandGrey/SpringBootVulExploit.git,0fdbb4409fc0acc74c787f5003166c7182fff9df,SpringBootVulExploit,5223,
git@github.com:Yalantis/Side-Menu.Android.git,b83ed828a0c792d3f6ef08d4529e075c646a4e7c,Side-Menu.Android,5222,
git@github.com:Karumi/Dexter.git,59132a15efe50add52d43fe6c0f0d0092056c720,Dexter,5218,
git@github.com:Col-E/Recaf.git,e9765d4e02991a9dd48e67c9572a063c14552e7c,Recaf,5211,
git@github.com:AntennaPod/AntennaPod.git,e9d190da1b925a48df0e88466c3661e4d3d07cf0,AntennaPod,5191,./AntennaPod/scripts/makeRelease.sh
lines,4
function,0


for,0

if,0

git@github.com:AntennaPod/AntennaPod.git,e9d190da1b925a48df0e88466c3661e4d3d07cf0,AntennaPod,5191,./AntennaPod/.github/workflows/runEmulatorTests.sh
lines,11
function,1

runTests() {
for,0

if,0

git@github.com:socketio/socket.io-client-java.git,ad3a930e346ad54acd8e895b01418f7b936776dd,socket.io-client-java,5190,
git@github.com:square/otto.git,2a67589abd91879cf23a8c96542b59349485ec3d,otto,5182,./otto/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:square/otto.git,2a67589abd91879cf23a8c96542b59349485ec3d,otto,5182,./otto/deploy_website.sh
lines,36
function,0


for,0

if,0

git@github.com:baidu/uid-generator.git,2fcbc13d2016fcfb7648a18296951f6942215255,uid-generator,5170,
git@github.com:mybatis/generator.git,863fd081e5851dfd76928155b4d21d154ac6363c,generator,5166,
git@github.com:google/google-java-format.git,685a6c9ebd43aab9ef458379de7d3883bfee970f,google-java-format,5146,./google-java-format/util/publish-snapshot-on-commit.sh
lines,26
function,0


for,0

if,1
if [ "$TRAVIS_REPO_SLUG" == "google/google-java-format" ] && \
git@github.com:CatVodTVOfficial/TVBoxOSC.git,e8c12d2bf408feb129857e577803d918e613482f,TVBoxOSC,5144,
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/zh_CN.sh
lines,46
function,0


for,0

if,0

git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/customize.sh
lines,264
function,2

abortC() { getRandomNameExist() {
for,1
for TARGET in ${RAND_PATH}; do
if,17
if [[ ! -f /data/adb/edxp/misc_path ]]; then if [[ -e "${TARGET}/${RAND_PREFIX}${RAND_RAND}${RAND_SUFFIX}" ]]; then if [[ "${RAND_PATH_EXIST}" == true ]]; then if [[ ${BOOTMODE} == true ]]; then if [ ! -f "$TMPDIR/verify.sh" ]; then if [ "$ARCH" = "x86" ] || [ "$ARCH" = "x64" ]; then if [ "$IS64BIT" = true ]; then if [ "$IS64BIT" = true ]; then if [[ ${BOOTMODE} == true ]]; then if [[ ${BOOTMODE} == true && ${NO_MANAGER} == true ]]; then if [[ -f /data/adb/edxp/misc_path ]]; then if [[ -d /data/user_de/0/org.meowcat.edxposed.manager/conf/ ]]; then if [[ "${ARCH}" == "x86" || "${ARCH}" == "x64" ]]; then if [ "$IS64BIT" = true ]; then if [[ "${IS64BIT}" == true ]]; then if [[ -f "${RIRU_MODULES}/edxp.prop" ]]; then if [[ -e "${RIRU_MODULES}/edxp" ]]; then
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/util_functions.sh
lines,58
function,5

check_riru_version() { check_magisk_version() { require_new_android() { edxp_check_architecture() { check_android_version() {
for,0

if,5
if [ ! -f "$RIRU_PATH/api_version" ] && [ ! -f "$RIRU_PATH/api_version.new" ]; then if [ "$RIRU_API_VERSION" -lt $RIRU_MIN_API_VERSION ]; then if [[ "$MAGISK_VER_CODE" -lt 21006 ]]; then if [[ "${ARCH}" != "arm" && "${ARCH}" != "arm64" && "${ARCH}" != "x86" && "${ARCH}" != "x64" ]]; then if [[ ${API} -ge 26 ]]; then
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/post-fs-data.sh
lines,178
function,4

grep_prop() { livePatch() { loop_logcat() { start_log_cather () {
for,0

if,9
if [[ -f ${DISABLE_VERBOSE_LOG_FILE} ]]; then if [[ $? -ne 1 ]]; then if [[ ${CLEAN_OLD} == true ]]; then if [[ ${START_NEW} == false ]]; then if [[ "$(pm path org.meowcat.edxposed.manager 2>&1)" == "" ]]; then if [[ -f "/data/adb/riru/modules/edxp.prop" ]]; then if [[ ! -z "${MISC_PATH}" ]]; then if [[ -f "${BASE_PATH}/0/conf/use_sandhook" ]]; then if [[ ! -f "${BASE_PATH}/0/conf/disable_sandhook" ]]; then
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/verify.sh
lines,38
function,2

abort_verify() { extract() {
for,0

if,1
if [ $junk_paths = true ]; then
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/uninstall.sh
lines,15
function,0


for,0

if,2
if [[ -f "/data/adb/riru/modules/edxp.prop" ]]; then if [[ -f "/data/misc/riru/modules/edxp.prop" ]]; then
git@github.com:ElderDrivers/EdXposed.git,8f2308cdde0a8151a2b4b0151c58b203154a8c6f,EdXposed,5129,./EdXposed/edxp-core/template_override/service.sh
lines,7
function,0


for,0

if,1
if [[ -f "${MODDIR}/reboot_twice_flag" ]]; then
git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/shells/linux/run.sh
lines,87
function,4
function start() function stop() function restart() function status()
function start() function stop() function restart() function status()
for,0

if,6
if [ "$ACTION" = "" ]; if [ "$MODULER" = "" ]; if [ "$PROFILES" = "" ]; if [ $count != 0 ];then if [ $count != 0 ];then if [ $count != 0 ];then
git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/shells/linux/restart-authority.sh
lines,2
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/rabbitmq/start.sh
lines,13
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/mysql/start.sh
lines,12
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/nginx/start.sh
lines,12
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/mysql8/start.sh
lines,12
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/xxFileView/restart.sh
lines,5
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/nacos/start.sh
lines,15
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/redis/start.sh
lines,10
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-docs/dockerfile/MinIo/run.sh
lines,9
function,0


for,0

if,0

git@github.com:dromara/lamp-cloud.git,db458c03bc32e751a4a3f99067594fb5297fea06,lamp-cloud,5116,./lamp-cloud/01-third-party/seata/script/config-center/nacos/nacos-config.sh
lines,88
function,1
function addConfig() {
function addConfig() {
for,1
for line in $(cat $(dirname "$PWD")/config.txt | sed s/[[:space:]]//g); do
if,7
if [[ -z ${host} ]]; then if [[ -z ${port} ]]; then if [[ -z ${group} ]]; then if [[ -z ${tenant} ]]; then if [[ -z $(cat "${tempLog}") ]]; then if [[ $(cat "${tempLog}") =~ "true" ]]; then if [[ ${failCount} -eq 0 ]]; then
git@github.com:lettuce-io/lettuce-core.git,87a75e6255dd908f261a31fd60d8ef5a90a68dbc,lettuce-core,5105,./lettuce-core/src/test/bash/create_certificates.sh
lines,131
function,1
function generateKey {

for,0

if,6
if [[ -d work/ca ]] ; then if [[ -f ${TRUSTSTORE_FILE} ]] ; then if [[ -f ${KEYSTORE_FILE} ]] ; then if [ ! -x "$(which openssl)" ] ; then if [ ! -x "${KEYTOOL}" ] ; then if [ ! -x "${KEYTOOL}" ] ; then
git@github.com:careercup/ctci.git,48950f46d346cd3472aa276443f20db6830ed9e0,ctci,5102,
git@github.com:pig-mesh/pig.git,1b957e08a503e0ee66861d3e80ac9ad0022186b2,pig,5095,
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/llap-server/bin/llapDaemon.sh
lines,151
function,1

rotate_log ()
for,0

if,14
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ "${LLAP_DAEMON_CONF_DIR}" = "" ] ; then if [ -f "${LLAP_DAEMON_CONF_DIR}/llap-daemon-env.sh" ] ; then if [ "$LLAP_DAEMON_LOG_DIR" = "" ]; then if [ ! -w "$LLAP_DAEMON_LOG_DIR" ] ; then if [ "$LLAP_DAEMON_PID_DIR" = "" ]; then if [ "$LLAP_DAEMON_NICENESS" = "" ]; then if [ -f $pid ]; then if kill -0 `cat $pid` > /dev/null 2>&1; then if [ -f $pid ]; then if kill -0 $TARGET_PID > /dev/null 2>&1; then if kill -0 $TARGET_PID > /dev/null 2>&1; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/llap-server/bin/llap-daemon-env.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/llap-server/bin/runLlapDaemon.sh
lines,144
function,1
function print_usage() {
function print_usage() {
for,0

if,16
if [ $ if [ "$JAVA_VERSION" -gt "1" ]; then if [ ! -d "${LLAP_DAEMON_HOME}" ]; then if [ ! -d "${LLAP_DAEMON_CONF_DIR}" ]; then if [ ! -n "${LLAP_DAEMON_LOGGER}" ]; then if [ ! -n "${LLAP_DAEMON_LOG_LEVEL}" ]; then if [ -n "LLAP_DAEMON_USER_CLASSPATH" ]; then if [ ! -n "${LLAP_DAEMON_LOG_DIR}" ]; then if [ "$LLAP_DAEMON_LOGFILE" = "" ]; then if [ "LLAP_LOG4J2_PROPERTIES_FILE_NAME" = "" ]; then if [ "$LLAP_DAEMON_HEAPSIZE" = "" ]; then if [ -n "$LLAP_DAEMON_LD_PATH" ]; then if [ "$COMMAND" = "classpath" ] ; then elif [ "$COMMAND" = "run" ] ; then if [[ ! "$LLAP_DAEMON_OPTS" =~ \+Use[^[:space:]]+GC ]] if [ -n "$LLAP_DAEMON_TMP_DIR" ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/dev-support/smart-apply-patch.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/dev-support/test-patch.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/dev-support/yetus-wrapper.sh
lines,176
function,2
function yetus_error function yetus_abs

for,0

if,19
if [[ ! -e ${obj} ]]; then elif [[ -d ${obj} ]]; then if [[ $? = 0 ]]; then if [[ -n "${YETUS_HOME}" if [[ ! -d "${HIVE_PATCHPROCESS}" ]]; then if [[ $? != 0 ]]; then if [[ -x "${HIVE_PATCHPROCESS}/yetus-${HIVE_YETUS_VERSION}/bin/${WANTED}" ]]; then if [[ $? != 0 ]]; then if [[ -n "${CURLBIN}" ]]; then if [[ $? != 0 ]]; then if [[ -n "${GPGBIN}" ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ -x "${HIVE_PATCHPROCESS}/yetus-${HIVE_YETUS_VERSION}/bin/${WANTED}" ]]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/dev-support/hive-personality.sh
lines,102
function,2
function personality_globals function personality_modules

for,1
for module in "${CHANGED_MODULES[@]}"; do
if,4
if [[ ${repostatus} == branch if [ "${module}" == "itests" ]; then if [[ ${testtype} = findbugs ]]; then if [[ ! -d "${module}/src/java" && ! -d "${module}/src/main/java" ]]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/metastore-validation-test.sh
lines,1442
function,50

usage() { getTime() { log() { CONSOLE() { error() { info() { debug() { contains() { num_occurances() { str1="( INTEGER ())) NOT NULL )" newhash() { put() { get() { size() { firstKey() { firstValue() { containsKey() { get_referenced_tables() { delete() { is_key_like() { printSQL() { rmfs() { getStaticValue() { execute_test() { parse_schema() { is_int() { trim() { int() { limit_int() { bit() { boolean() { tinyint() { smallint() { hex() { limit_string() { string() is_throwaway() { extract_colname() { localize_colname() { extract_tablename() { insert_column_names() { extract_raw_tablename() { extract_columnsize() { sort_tabledefs() { cleanse_sql() { generate_data() { processFile() { parseAndAppend() sortAndGenerate() clearFiles() {
for,19
debug "[delete] deleting entry for $2" echo "[is_key_like] found match for $2:$matched" info "skipParsing flag enabled, skipping parsing for $SCRIPT_SRC" for i in "${!array[@]}" info "[generate_data] Generating table data for $DB_SERVER-$VERSION_CURR" for i in "${!array[@]}" for type in "${!TYPES[@]}" info "pre-loaded value for $table.$colname is $staticValue" contains "$token" "for bit data" debug "[generate_data] column type for $table.$colname is ${TYPES[type]}, mapped type=$mappedtype" debug "[generate_data] columnsize=$colsize for $table.$colname" info "[generate_data] Generating random value for column $table.$unquotedColname" info "skipParsing flag enabled, skipping parsing for $HIVE_SCHEMA_BASE" debug "Invoking the parsing routine for [$1]" debug "Sorting tables for [$1]" info "[parseAndAppend] $SQL_OUT:$SCRIPT_INSERT:$SQL_SORTED for $VERSION_CURR" info "[parseAndAppend] Files exist, skipping parsing for $VERSION_CURR" debug "sortAndGenerate for $SQL_SORTED::$SCRIPT_INSERT" info "Files exist, Skipping parsing/generation for $VERSION_CURR"
if,106
if [ $ if [ $1 != "--db" ]; then if [ ! -d "dbs/$DB_SERVER" ]; then if [[ "$LOGLEVEL" -ge 1 ]] if [[ "$CONSOLELEVEL" -ge 1 ]] if [[ "$LOGLEVEL" -ge 2 ]] if [[ "$CONSOLELEVEL" -ge 2 ]] if [[ "$LOGLEVEL" -ge 4 ]] if [[ "$CONSOLELEVEL" -ge 4 ]] if test "${string if [[ "$isContains" -eq 1 ]] if [[ "$isContains" -eq 1 ]] if [[ $FCOUNT -eq 2 ]] if [[ $FCOUNT -ne 4 ]] if [[ "$2" = "$ret" ]] if [[ ! "$1" = "f_keys" ]] if [[ "$table" != "$2" ]] if [[ "$reftable" = "$table" ]] if [[ "$tables" = "" ]] if [[ "$1" = "" ]] if [[ "$exists" -ge "1" ]] if [[ "$todo" == 1 ]] if [[ "$1" = "" ]] if [[ "$2" = "$tabvalue" ]] if [ "$3" = "--skipParsing" ]; then if [ "$3" = "--skipProcessing" ]; then if [[ -e "$1" ]] if [ ! -d "$HMS_UPGRADE_DIR/$DB_SERVER" ]; then if [ "$skipParsing" -eq "0" ]; then if [ "$skipGeneration" -eq "0" ] && [ "$skipParsing" -eq "1" ]; then if ! bash -x -e $SCRIPT_EXECUTE $1; then if [ -e $SQL_OUT ] && [ "$2" = 0 ] if [[ "$copy" =~ "^--" ]] if [[ "$CREATE_OPEN" = true ]] if [[ "$ignore" = "TRUE" ]] if [[ $FCOUNT -gt 0 ]] if [[ $FCOUNT -gt 0 ]] if [[ "$COUNTER" -gt 1 ]] elif [[ "$COUNTER" -eq 1 ]] if [[ "$copy" =~ "create table" ]]; if [ "$openCount" -eq "$closeCount" ] && [ "$openCount" -gt 0 ] if [[ "$FCOUNT" -gt 0 ]] if $(is_int "500"); if $(is_int "foo"); if $(is_int "${1}"); if [[ "$1" -lt "$limit" ]] if $(is_int "${1}"); if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then if [[ "$DB_SERVER" = "derby" ]] if [[ "$r_bit" == 1 ]] if $(is_int "${1}"); if [[ ( "$DB_SERVER" = "derby" ) && ( "$limit" -eq 1 ) ]] if [ "$(uname)" == "Darwin" ]; then elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then if $(is_int "${1}"); if [[ "$1" -lt "$limit" ]] if [[ ( "$coldef" =~ ^PRIMARY\ KEY.* ) || ( "$coldef" =~ FOREIGN\ KEY ) ]] if [[ "$DB_SERVER" = "mysql" ]] elif [[ "$DB_SERVER" = "derby" ]] if [[ "$DB_SERVER" = "derby" ]] if [[ "$DB_SERVER" = "derby" ]] if test "${1 if [[ -e $SQL_SORTED ]] && [[ "$1" = 0 ]] if [ ! -e $SQL_OUT ] if [[ ! "$references" = "" ]] if [[ "$hashsize" > 0 ]] if [[ ! "$hasKey" = true ]] if [[ "$commit" = "true" ]] if [[ -e "$SQL_OUT" ]] if [[ "$DB_SERVER" = "postgres" ]] if [[ "$DB_SERVER" = "mysql" ]] if [ -e $SCRIPT_INSERT ] && [ -e $SCRIPT_QUERY ] && [ "$1" = 0 ] if [[ -e "$QUERYALL" ]] if [[ ! -e $SQL_SORTED ]] if [[ "$table.$colname" == "MASTER_KEYS.KEY_ID" ]] if [[ ! "$staticValue" = "" ]] if [ ! "$table.$colname" = "TBLS.LINK_TARGET_ID" ] && [ ! "$table.$colname" = "PARTITIONS.LINK_TARGET_ID" ] if [[ $isContains -eq 1 ]] if [[ "$DB_SERVER" -eq "derby" ]] if [[ $isContains -eq 1 ]] if [[ ! "$fk" = "" ]] if [[ "$val" != "" ]] if [ ! "$table.$colname" = "TBLS.LINK_TARGET_ID" ] && [ ! "$table.$colname" = "PARTITIONS.LINK_TARGET_ID" ] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [[ "$val" = "" ]] if [ ! "$table.$unquotedColname" = "TBLS.LINK_TARGET_ID" ] && [ ! "$table.$unquotedColname" = "PARTITIONS.LINK_TARGET_ID" ] if [ ! -f $HIVE_SCHEMA_BASE ]; then if [ -e "$SQL_OUT" ] && [ -e "$SQL_SORTED" ] && [ "$skipParsing" -eq "1" ]; if [ -e "$SQL_SORTED" ] && [ "$skipGeneration" -eq "0" ]; if [ -e $SQL_OUT ] && [ -e $SQL_SORTED ] && [ "$skipParsing" -eq "1" ]; if [ -e "$SQL_SORTED" ] && [ "$skipParsing" -eq "1" ]; if [ -e "$SQL_SORTED" ] && [ "$skipGeneration" -eq "0" ]; if [[ -e "$SCRIPT_INSERT" ]] if test "${order if [ -e $SQL_OUT ] && [ -e $SCRIPT_INSERT ] && [ -e $SQL_SORTED ] && [ "$skipParsing" -eq "1" ] && [ "$skipGeneration" -eq "1" ]; if [ "$skipParsing" -eq "0" ]; elif [ "$skipGeneration" -eq "0" ]; if [[ $line =~ $prefix.* ]] if [[ -e $SCRIPT_INSERT ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/metastore-upgrade-test.sh
lines,163
function,3

usage() { log() { execute_test() {
for,0

if,13
if [ $ if [ $1 != "--db" ]; then if [ ! -d "dbs/$DB_SERVER" ]; then if [ ! -d "$HMS_UPGRADE_DIR/$DB_SERVER" ]; then if ! bash -e -x $SCRIPT_PREPARE; then if ! bash -e $SCRIPT_VALIDATE --db $DB_SERVER; then if ! bash -x -e $SCRIPT_EXECUTE $1; then if [ ! -f $HIVE_SCHEMA_BASE ]; then if ! execute_test $HIVE_SCHEMA_BASE; then if [[ "$success" != 0 ]]; if [ $begin_upgrade_test = "true" ] || echo upgrade-$script | grep "upgrade-$VERSION_BASE"; then if ! execute_test $HMS_UPGRADE_DIR/$DB_SERVER/upgrade-$script.$DB_SERVER.sql; then if [[ $success != 0 ]];
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/postgres/prepare.sh
lines,72
function,0


for,1
echo "Begin for OS version $OS_VERSION"
if,5
if [[ ${HTTPS_INFO[1]} == "apt-transport-https" ]] if [[ ${INSTALL_INFO[1]} == "postgresql-9.4" ]] if grep -q "deb http://apt.postgresql.org/pub/repos/apt/ $OS_VERSION-pgdg main" /etc/apt/sources.list.d/postgreSQL.list echo "drop database if exists hive_hms_testing;" > /tmp/postgresInit.sql echo "drop user if exists hiveuser;" >> /tmp/postgresInit.sql
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/postgres/validate.sh
lines,75
function,0


for,2
echo "Executing query and insert script for version : $1" echo "Check $(pwd)/$QUERY_RESULT for results of the test query"
if,6
if [[ "$name" = hive-schema* ]] if [[ -z "${SCRIPT_QUERY+x}" ]] if [[ -e "$SCRIPT_QUERY" ]] if [[ -e "$QUERY_RESULT" ]] if [[ "$failures" -ne 0 ]] if [[ -e "$SCRIPT_INSERT" ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/postgres/execute.sh
lines,29
function,0


for,1
echo "Executing script for PostgreSQL: $1"
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/mysql/prepare.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/mysql/validate.sh
lines,76
function,0


for,2
echo "Executing query and insert script for version : $1" echo "Check $(pwd)/$QUERY_RESULT for results of the test query"
if,6
if [[ "$name" = hive-schema* ]] if [[ -z "${SCRIPT_QUERY+x}" ]] if [[ -e "$SCRIPT_QUERY" ]] if [[ -e "$QUERY_RESULT" ]] if [[ "$failures" -ne 0 ]] if [[ -e "$SCRIPT_INSERT" ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/mysql/execute.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/oracle/prepare.sh
lines,92
function,0


for,0

if,3
if [[ ${HTTPS_INFO[1]} == "apt-transport-https" ]] if [[ ${INSTALL_INFO[1]} == "oracle-xe" ]] && [[ ${INSTALL_INFO[2]} == 10.2* ]] if grep -q "deb http://oss.oracle.com/debian unstable main non-free" /etc/apt/sources.list.d/oracle-xe.list
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/oracle/execute.sh
lines,31
function,0


for,1
echo "Executing script for Oracle: $1"
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/derby/prepare.sh
lines,66
function,0


for,1
echo "Begin for OS version $OS_VERSION"
if,2
if [[ ${HTTPS_INFO[1]} == "apt-transport-https" ]] if [[ ${INSTALL_INFO[1]} == "sun-javadb-core" ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/derby/validate.sh
lines,81
function,0


for,2
echo "Executing query and insert script for version : $1" echo " Check $(pwd)/$QUERY_RESULT for results of test query"
if,5
if [[ "$name" = hive-schema* ]] if [[ -z "${SCRIPT_QUERY+x}" ]] if [[ -e "$SCRIPT_QUERY" ]] if [[ "$failures" -ne 0 ]] if [[ -e "$SCRIPT_INSERT" ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/testutils/metastore/dbs/derby/execute.sh
lines,40
function,0


for,1
echo "Executing script for Derby SQL: $1"
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/standalone-metastore/metastore-server/src/main/scripts/ext/schemaTool.sh
lines,33
function,2

schemaTool() { schemaTool_help () {
for,0

if,1
if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/standalone-metastore/metastore-server/src/main/scripts/ext/smokeTest.sh
lines,33
function,2

smokeTest() { smokeTest_help () {
for,0

if,1
if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/standalone-metastore/metastore-server/src/main/scripts/ext/metastore.sh
lines,41
function,3

metastore() { metastore_help() { timestamp()
for,0

if,1
if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/standalone-metastore/metastore-server/src/main/scripts/metastore-config.sh
lines,69
function,0


for,0

if,2
if expr "$link" : '.*/.*' > /dev/null; then if [[ -z $METASTORE_HOME ]] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/standalone-metastore/metastore-common/src/main/resources/saveVersion.sh
lines,91
function,0


for,0

if,6
if [ "$revision" = "" ]; then if git rev-parse HEAD 2>/dev/null > /dev/null ; then elif [ -d .svn ]; then if [ "$branch" = "" ]; then if [ "$url" = "" ]; then if [ -x /sbin/md5 ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/packaging/src/docker/build.sh
lines,118
function,1

usage() {
for,0

if,5
if ! curl --fail -L "$HADOOP_URL" -o "$WORK_DIR/hadoop-$HADOOP_VERSION.tar.gz"; then if ! curl --fail -L "$TEZ_URL" -o "$WORK_DIR/apache-tez-$TEZ_VERSION-bin.tar.gz"; then if [ -n "$HIVE_VERSION" ]; then if ! curl --fail -L "$HIVE_URL" -o "$WORK_DIR/apache-hive-$HIVE_VERSION-bin.tar.gz"; then if ls $HIVE_TAR || mvn -f $SOURCE_DIR/pom.xml clean package -DskipTests -Pdist -Piceberg; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/packaging/src/docker/entrypoint.sh
lines,60
function,1
function initialize_hive {

for,0

if,6
if [ "$(echo "$HIVE_VER" | cut -d '.' -f1)" -lt "4" ]; then if [ $? -eq 0 ]; then if [ -d "${HIVE_CUSTOM_CONF_DIR:-}" ]; then if [[ "${SKIP_SCHEMA_INIT}" == "false" ]]; then if [ "${SERVICE_NAME}" == "hiveserver2" ]; then elif [ "${SERVICE_NAME}" == "metastore" ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/common/src/scripts/saveVersion.sh
lines,91
function,0


for,0

if,6
if [ "$revision" = "" ]; then if git rev-parse HEAD 2>/dev/null > /dev/null ; then elif [ -d .svn ]; then if [ "$branch" = "" ]; then if [ "$url" = "" ]; then if [ -x /sbin/md5 ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/metastore/scripts/start_meta_store_thrift_server.sh
lines,41
function,0


for,4
for f in /usr/local/fbprojects/hive.metastore/lib/*.jar ; do for f in /mnt/hive/stable/cluster/*.jar ; do for f in /mnt/hive/stable/cluster/lib/*.jar ; do for f in /mnt/hive/stable/lib/hive/*.jar ; do
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/packages/update-hcatalog-env.sh
lines,353
function,2

usage() { template_generator() {
for,4
--dbuser=DBUSER Database user for hcat-server to use --dbpasswd=DBPASSWORD Database password for hcat-server to use Kerberos Principal for metastore server to use for var in PREFIX; do
if,18
(used only if not specifying --install) (used only if not specifying --install) --sasl-enabled Specify if we're using Secure Hadoop Location of keytab (used only if sasl-enabled is specified) (used only if --kerneros-principal is not specified) if [ $? != 0 ] ; then if [ -z "$(eval "echo \$$var")" ]; then if [ $INSTALL == "0" ]; then if [ "${ARCH}" != "i386" ]; then if [ -z "${JAVA_HOME}" ]; then if [ -e /etc/debian_version ]; then if [ $UNINSTALL == "1" ]; then if [ "${HCAT_CONF_DIR}" != "${HCAT_PREFIX}/etc/hcatalog" ]; then if [ $INSTALL == "1" ]; then if [ "${HCAT_CONF_DIR}" != "${HCAT_PREFIX}/etc/hcatalog" ]; then if [ ! -d ${HCAT_PID_DIR} ]; then if [ -z "${JAVA_HOME}" ]; then if [ -e /etc/debian_version ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/modify_webhcat_config.sh
lines,40
function,0


for,0

if,1
if [ ${HIVE_HOME}/hcatalog/etc/webhcat/webhcat-site.xml ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/restore_webhcat_config.sh
lines,36
function,0


for,0

if,1
if [ ${CONF_BACKUP}/webhcat-site.xml ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/clean_file_system.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/start_hive_services.sh
lines,50
function,0


for,0

if,2
if [ -f ${MYSQL_CLIENT_JAR} ]; then if [ -d ${WEBHCAT_LOG_DIR} ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/restart_hive_redeploy_artifacts.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/stop_hive_services.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/env.sh
lines,67
function,0


for,0

if,6
if [ -z ${HADOOP_VERSION} ]; then if [ -z ${HIVE_VERSION} ]; then if [ -z ${PIG_VERSION} ]; then if [ -z ${TEZ_VERSION} ]; then if [ -z ${HADOOP_HOME} ]; then if [ -z ${MYSQL_CLIENT_JAR} ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/templeton/deployers/deploy_e2e_artifacts.sh
lines,70
function,0


for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/src/test/e2e/hcatalog/tools/install/install.sh
lines,213
function,1
function usage() {
function usage() {
for,7
echo " dbroot is the root directory for the mysql drivers" echo " portnum is the port for the thrift server to use, " \ echo " password is the password for the metastore db, default $passwd" echo " warehouse_directory is the HDFS directory to use for " \ echo " kerberos_principal service principal for thrift server, " \ for var in $forrest $dbroot $host $dir $hadoop_home $tarball ; do for var in $forrest $dbroot $dir $hadoop_home ; do
if,16
if [ $1 == "-D" ] ; then elif [ $1 == "-d" ] ; then elif [ $1 == "-f" ] ; then elif [ $1 == "-h" ] ; then elif [ $1 == "-K" ] ; then elif [ $1 == "-k" ] ; then elif [ $1 == "-m" ] ; then elif [ $1 == "-p" ] ; then elif [ $1 == "-P" ] ; then elif [ $1 == "-s" ] ; then elif [ $1 == "-t" ] ; then elif [ $1 == "-w" ] ; then if [ $var == "unknown" ] ; then if [ ${var:0:1} != "/" ] ; then if [ $? != "0" ] ; then if [ $? != "0" ] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/scripts/hcat_server_start.sh
lines,97
function,0


for,2
for f in ${DBROOT}/mysql-connector-java-*-bin.jar; do for f in ${ROOT}/lib/*.jar ; do
if,5
if expr "$link" : '.*/.*' > /dev/null; then if [ -s "$PID_FILE" ] if [ "${PID}x" == "x" ] ; then echo Started metastore server init, testing if initialized correctly... if ps -p $PID > /dev/null
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/scripts/hcat_server_install.sh
lines,159
function,1
function usage() {
function usage() {
for,5
for var in $dbroot $hadoop_home ; do for var in $root $dbroot $hadoop_home ; do for dir in var var/log bin etc libexec sbin share ; do for dir in bin etc libexec sbin share ; do for file in ./$dir/* ; do
if,12
if [ "${dir_check}" != "Apache HCatalog" ] ; then if [ $1 == "-r" ] || [ $1 == "--root" ] ; then elif [ $1 == "-d" ] || [ $1 == "--dbroot" ] ; then elif [ $1 == "-h" ] || [ $1 == "--hadoop" ] ; then elif [ $1 == "-p" ] || [ $1 == "--port" ] ; then if [ $var == "unknown" ] ; then if [ ${var:0:1} != "/" ] ; then if [ $root_owner != `whoami` ] ; then if [ ${root_perms:0:4} != "drwx" ] ; then if [ "${mysql_jar}x" == "x" ] ; then if [ ! -d $root/$dir ] ; then if [ "$alternate_root" == "y" ] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/scripts/hcat_server_stop.sh
lines,68
function,0


for,1
echo looking for $PID_FILE
if,4
if expr "$link" : '.*/.*' > /dev/null; then if [ -s "$PID_FILE" ] ; then if ps -p $PID > /dev/null ; then if ps -p $PID > /dev/null ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/build-support/scripts/release.sh
lines,40
function,0


for,0

if,1
if [ "${HCAT_RELEASE_VERSION}" == "" ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/build-support/scripts/test.sh
lines,62
function,1
function run_cmd() {
function run_cmd() {
for,0

if,3
if [ $? != 0 ]; then if [ "${FORREST_HOME}" == "" ]; then if [ "${HUDSON_URL}" == "https://builds.apache.org/" ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/build-support/scripts/umaskcheck.sh
lines,24
function,0


for,0

if,1
if [ `umask` != '0022' ]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/bin/common.sh
lines,41
function,1
function find_hadoop_home() {
function find_hadoop_home() {
for,0

if,3
if [ -f ${HADOOP_IN_PATH} ]; then if [ "$HADOOP_HOME" == "" ]; then if [ ! -f ${HADOOP} ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/bin/hcat-config.sh
lines,82
function,0


for,0

if,8
if [ $ if [ "--config" = "$1" ] if [ -e "${HCAT_PREFIX}/etc/hcatalog/hcat-env.sh" ]; then elif [ -e "${HCAT_PREFIX}/conf/hcat-env.sh" ]; then if [ -f "${HCAT_CONF_DIR}/hcat-env.sh" ]; then if [ -f ${HADOOP_HOME}/bin/hadoop ]; then elif [ -f ${HCAT_PREFIX}/bin/hadoop ]; then elif [ ! -f ${HADOOP_PREFIX}/bin/hadoop ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/bin/hcat_server.sh
lines,155
function,3
function print_usage() { function start_hcat() { function stop_hcat() {
function print_usage() { function start_hcat() { function stop_hcat() {
for,4
for f in ${DBROOT}/*.jar; do for f in ${HCAT_PREFIX}/share/hcatalog/lib/*.jar ; do for f in ${HCAT_PREFIX}/share/hcatalog/*.jar ; do echo looking for $PID_FILE
if,10
if [ -e "$bin/../libexec/hcat-config.sh" ]; then if [ -s "$PID_FILE" ] if [ ! -e $HIVE_SITE_XML ] if [ "${PID}x" == "x" ] ; then echo Started metastore server init, testing if initialized correctly... if ps -p $PID > /dev/null if [ -s "$PID_FILE" ] ; then if ps -p $PID > /dev/null ; then if ps -p $PID > /dev/null ; then if [ $
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/webhcat/svr/src/main/bin/webhcat_server.sh
lines,247
function,10
function real_script_name() { function usage() { function die() { function log() { function find_jar_path() { function find_classpath() { function check_pid() { function foreground_webhcat() { function start_webhcat() { function stop_webhcat() {
function real_script_name() { function usage() { function die() { function log() { function find_jar_path() { function find_classpath() { function check_pid() { function foreground_webhcat() { function start_webhcat() { function stop_webhcat() {
for,4
echo " startDebug Start the Webhcat Server listening for debugger on port 5005" for dir in "." "build" "share/webhcat/svr/lib"; do for dir in "share/webhcat/svr/" "share/webhcat/svr/lib/" "conf" ; do for jar_or_conf in $path/*; do
if,25
if readlink -f $base >/dev/null 2>&1; then if [[ "$?" != "0" || -z "$real" ]]; then if (( `ls -1 $base_dir/$dir/$WEBHCAT_JAR 2>/dev/null| wc -l ` > 1 )) ; then if (( `ls -1 $base_dir/$dir/$WEBHCAT_JAR 2>/dev/null | wc -l` == 0 )) ; then if [[ -f $jar ]]; then if [[ -d $path ]]; then if [[ -z "$classpath" ]]; then if [[ -n "$WEBHCAT_CONF_DIR" ]]; then if [[ -z "$classpath" ]]; then if [[ "$?" != "0" ]]; then if ps -p $pid > /dev/null; then if [[ -f $PID_FILE ]]; then if check_pid $pid; then if [ ! -d ${WEBHCAT_LOG_DIR} ]; then if [[ -z "${pid}" ]] ; then if check_pid $pid; then if [[ -f $PID_FILE ]]; then if check_pid $check; then if [[ -z "$pid" ]]; then if check_pid $pid; then if [[ -f "$base_dir/libexec/webhcat_config.sh" ]]; then if [[ -z "$JAR" ]]; then if [[ -z "$CLASSPATH" ]]; then if [[ -z "$HADOOP_CLASSPATH" ]]; then if [[ -z "$WEBHCAT_LOG4J" ]]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/hcatalog/webhcat/svr/src/main/bin/webhcat_config.sh
lines,131
function,1
function die() {
function die() {
for,0

if,13
if [ $ if [ "--config" = "$1" ] if [ -e "${WEBHCAT_PREFIX}/etc/webhcat/webhcat-env.sh" -o -e "${WEBHCAT_PREFIX}/etc/webhcat/webhcat-site.xml" ]; then elif [ -e "${WEBHCAT_PREFIX}/conf/webhcat-env.sh" -o -e "${WEBHCAT_PREFIX}/etc/webhcat/webhcat-site.xml" ]; then if [ -f "${WEBHCAT_CONF_DIR}/webhcat-env.sh" ]; then if [ ! -f ${HCAT_PREFIX}/bin/hcat ]; then if [ -n "$HIVE_HOME" ]; then if [ ! -f ${HIVE_HOME}/bin/hive ]; then elif [ -f ${DEFAULT_HIVE_HOME}/bin/hive ]; then if [ ! -d ${TEMPLETON_HOME}/share/webhcat ]; then if [ -f ${HADOOP_HOME}/bin/hadoop ]; then elif [ -f ${WEBHCAT_PREFIX}/bin/hadoop ]; then elif [ ! -f ${HADOOP_PREFIX}/bin/hadoop ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/fixacidkeyindex.sh
lines,32
function,2

fixacidkeyindex () { fixacidkeyindex_help () {
for,2
echo " --check-only Check acid orc file for valid acid key index and exit without fixing" echo " --recover Fix the acid key index for acid orc file if it requires fixing"
if,1
echo " --recover Fix the acid key index for acid orc file if it requires fixing"
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/schemaTool.sh
lines,29
function,2

schemaTool() { schemaTool_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/beeline.sh
lines,53
function,2

beeline () { beeline_help () {
for,0

if,4
if [[ -n "${HADOOP_CLASSPATH}" ]] if [ "$EXECUTE_WITH_JAVA" != "true" ] ; then if [ -z $CLIUSER ] ; then if [ -z $CLIUSER ] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/hplsql.sh
lines,37
function,2

hplsql () { hplsql_help () {
for,0

if,1
if [[ -n "${HADOOP_CLASSPATH}" ]]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/version.sh
lines,37
function,2

version () { version_help () {
for,0

if,1
if [ -z "$JAR" ] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/debug.sh
lines,107
function,6

does_jvm_support_ti(){ set_debug_param(){ parse_debug(){ set_debug_defaults(){ get_debug_params(){ debug_help(){
for,4
for param in ${params[1]}; do echo "port=<port_number> Port on which main JVM listens for debug connection. Default: 8000" echo "mainSuspend=<y|n> Should main JVM wait with execution for the debugger to connect. Default: y" echo "childSuspend=<y|n> Should child JVMs wait with execution for the debugger to connect. Default: n"
if,2
if [[ "$version" < "1.5" ]]; then if does_jvm_support_ti; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/hiveburninclient.sh
lines,33
function,2

hiveburninclient() { hiveburninclient_help() {
for,0

if,1
if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/strictmanagedmigration.sh
lines,26
function,2

strictmanagedmigration () { strictmanagedmigration_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/metatool.sh
lines,29
function,2

metatool () { metatool_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/lineage.sh
lines,38
function,2

lineage () { lineage_help () {
for,0

if,2
if [ ! -f ${HIVE_LIB}/hive-exec-*.jar ]; then if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/help.sh
lines,37
function,2

help() { help_help(){
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/llap.sh
lines,50
function,2

llap () { llap_help () {
for,0

if,2
if [ ! -f ${HIVE_LIB}/hive-cli-*.jar ]; then if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/util/execHiveCmd.sh
lines,47
function,1

execHiveCmd () {
for,0

if,4
if [ "$1" == "$CLI_JAR" ] || [ "$1" == "$BEELINE_JAR" ]; then if [ "$USE_DEPRECATED_CLI" == "true" ]; then if [ ! -f ${HIVE_LIB}/$JAR ]; then if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/hiveserver2.sh
lines,108
function,4

before_start() { hiveserver2() { killAndWait() { hiveserver2_help() { timestamp() {
for,1
for i in "$@"; do
if,11
if [ "$HIVESERVER2_PID_DIR" = "" ]; then if [ -f $HIVESERVER2_PID ]; then if kill -0 $(cat $HIVESERVER2_PID) >/dev/null 2>&1; then if $cygwin; then if [ "$1" = "--graceful_stop" ]; then if [ "$pid" = "" -a -f $HIVESERVER2_PID ]; then if [ "$(echo "${commands[@]}" | grep -we $i)" != "" ]; then if [ "$start_hiveserver2" == "Y" ]; then if kill -0 $pidToKill >/dev/null 2>&1; then if [ $(($(date +%s) - $processedAt)) -gt ${HIVESERVER2_STOP_TIMEOUT:-$timeout} ]; then if kill -0 $pidToKill >/dev/null 2>&1; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/cleardanglingscratchdir.sh
lines,28
function,2

cleardanglingscratchdir () { cleardanglingscratchdir_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/llapdump.sh
lines,31
function,2

llapdump () { llapdump_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/rcfilecat.sh
lines,27
function,2

rcfilecat () { rcfilecat_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/llapstatus.sh
lines,42
function,2

llapstatus () { llapstatus_help () {
for,0

if,2
if [ ! -f ${HIVE_LIB}/hive-cli-*.jar ]; then if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/replMigration.sh
lines,29
function,2

replMigration() { replMigration_help () {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/tokentool.sh
lines,67
function,2

tokentool_help () { tokentool() {
for,2
echo " -expired : Select expired tokens for deletion/listing " echo " -olderThan <time-interval> : Select tokens older than the specified time-interval for deletion/listing (e.g. 3d for 3 days, 4h for 4 hours, 5m for 5 minutes, etc.)"
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/orcfiledump.sh
lines,37
function,2

orcfiledump () { orcfiledump_help () {
for,1
echo " --rowindex (-r) <col_ids> Comma separated list of column ids for which row index should be printed"
if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/metastore.sh
lines,41
function,3

metastore() { metastore_help() { timestamp()
for,0

if,1
if $cygwin; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/cli.sh
lines,45
function,3

updateCli() { cli () { cli_help () {
for,0

if,2
if [ -z "$USE_DEPRECATED_CLI" ] || [ "$USE_DEPRECATED_CLI" != "false" ]; then if [ "$USE_DEPRECATED_CLI" == "true" ]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/ext/jar.sh
lines,47
function,2

jar () { jar_help () {
for,1
echo "Used for applications that require Hadoop and Hive classpath and environment."
if,3
if $cygwin; then if [ -z "$RUNJAR" ] ; then if [ -z "$RUNCLASS" ] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/replstats.sh
lines,138
function,0


for,0

if,15
if [ $1 = "toHive" ]; then if [ $ if [ $ if [ $ if [ $ if [[ $line == *"Hadoop job:"* ]]; then if [[ $line == *"Submitted At: "* ]]; then if [[ $line == *"Launched At: "* ]]; then if [[ $line == *"Finished At: "* ]]; then if [[ $line == *"Status: "* ]]; then if [[ $line == *"Map"* ]]; then if [[ $line != *"Map-Reduce"* ]]; then if [[ $line != *"Map Value"* ]]; then if [[ $line == *"Bytes Copied"* ]]; then if [[ $line == *"Files Copied"* ]]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/init-hive-dfs.sh
lines,107
function,0


for,2
echo "Setting writeable group rights for directory [${TMP_DIR}]" echo "Setting writeable group rights for directory [${WAREHOUSE_DIR}]"
if,6
if [ "$HELP" = "_help" ] ; then if [ -f ${HADOOP_IN_PATH} ]; then if [ "$HADOOP_HOME" == "" ]; then if [ ! -f ${HADOOP} ]; then if [ $? -ne 0 ] if [ $? -ne 0 ]
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/bin/hive-config.sh
lines,74
function,0


for,0

if,2
if expr "$link" : '.*/.*' > /dev/null; then if [[ -z $HIVE_HOME ]] ; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/itests/bin/generate-cli-splits.sh
lines,26
function,1

usage() {
for,0

if,0

git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/itests/bin/validateTestConfiguration.sh
lines,60
function,0


for,0

if,7
if [ "$state" == "out" ]; then if [[ ${ if ! [[ "$line" =~ [[:space:]][[:space:]]* ]]; then if [[ ${line: -2} == ",\\" ]]; then if ! [[ ${file: -2} == ".q" ]]; then if [[ "$test_name" = find_bash.sh output.txt outputbashcleaned.txt process_bash.py ]]; then if [[ $last_test_name > $test_name ]]; then
git@github.com:apache/hive.git,b02cef4fe943b9aba597dcdfd3b8f3d3a5efca3e,hive,5095,./hive/ql/src/test/scripts/transform_acid_grep.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/etc/scripts/release-website.sh
lines,87
function,0


for,4
for comp in ${COMPLIST[*]}; do for comp in ${COMPLIST[*]}; do echo "NOTE: Manual steps required! Check the schemas for new artifacts," echo "git commit -m \"Add XML schemas for Camel ${VERSION}\""
if,2
if [ -z "${VERSION}" -o ! -d "${DOWNLOAD}" ] if [ -d "${SITE_DIR}" ]
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/etc/scripts/release-distro.sh
lines,83
function,0


for,2
for file in *.pom *.tar.gz *.zip; do echo "Distro artifacts prepared for upload, but not yet uploaded. Verify distro then complete upload!"
if,2
if [ -z "${VERSION}" -o ! -d "${DOWNLOAD}" ] echo "Remove previous distro on same branch if necessary"
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/docs/local-build.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/.github/actions/quick-test/quick-test.sh
lines,216
function,12
function notifySuccess() { function notifyError() { function resetCounters() { function setResultValue() { function setComponentTestResults() { function setCoreTestResults() { function runTest() { function componentTest() { function coreTest() { function testComponents() { function testCore() { function main() {
function notifySuccess() { function notifyError() { function resetCounters() { function setResultValue() { function setComponentTestResults() { function setCoreTestResults() { function runTest() { function componentTest() { function coreTest() { function testComponents() { function testCore() { function main() {
for,3
echo "Searching for modified components" for component in $(echo $components); do echo "Searching for camel core changes"
if,7
if [[ $? -ne 0 ]]; then if [[ -f "$testLog" ]] ; then if [[ -d "${basedir}/${component}" ]] ; then if [[ -z "${components}" ]] ; then if [[ ${total} -eq 0 ]]; then if [[ ${total} -gt ${maxNumberOfTestableComponents} ]]; then if [[ ! -z "${core}" ]] ; then
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/.github/actions/component-test/component-test.sh
lines,62
function,1
function main() {
function main() {
for,1
for component in ${componentList}
if,5
if [[ ${commentBody} = /component-test* ]] ; then if [[ ${component} = camel-* ]] ; then if [[ -d "${componentPath}" ]] ; then if [[ "$len" -gt "0" ]] ; then if [[ ${fastBuild} = "true" ]] ; then
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/.github/actions/incremental-build/parse_errors.sh
lines,25
function,0


for,0

if,1
if [[ ! -z "$failed_summary" ]] ; then
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/.github/actions/incremental-build/incremental-build.sh
lines,154
function,3
function findProjectRoot () { function hasLabel() { function main() {
function findProjectRoot () { function hasLabel() { function main() {
for,2
echo "Searching for affected projects" for project in ${projects}
if,16
if [[ ! -e "$path/pom.xml" ]] ; then elif [[ $(dirname $path) == */src/it ]] ; then if [[ ${project} != . .. ]] ; then if [[ ${projectRoot} = "." ]] ; then elif [[ ${projectRoot} != "${lastProjectRoot}" ]] ; then if [[ ${totalAffected} = 0 ]] ; then elif [[ ${totalAffected} -gt ${maxNumberOfBuildableProjects} ]] ; then if [[ ${mode} = "build" ]] ; then if [[ ${mustBuildAll} = "1" ]] ; then if [[ ${buildAll} = "true" ]] ; then if [[ ${buildDependents} = "1" ]] ; then if [[ ${totalTestableProjects} -gt ${maxNumberOfTestableProjects} ]] ; then if [[ ${mustSkipTests} = "1" ]] ; then elif [[ ${buildAll} = "true" ]] ; then if [[ ${testDependents} = "1" ]] ; then if [[ ${totalTestableProjects} -gt ${maxNumberOfTestableProjects} ]] ; then
git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/components/fix-eip-xrefs.sh
lines,41
function,0


for,0

if,0

git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/components/camel-stomp/src/test/resources/jsse/createCertificate.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/components/camel-exec/src/test/resources/exec-test-script.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/camel.git,1b36c9909ca9dc47651513a9a3aec591d215eba3,camel,5079,./camel/components/camel-cxf/camel-cxf-spring-soap/rm.sh
lines,20
function,0


for,0

if,0

git@github.com:google/google-authenticator.git,51781910ae2bb1abf8ac51b290272f86f3651235,google-authenticator,5077,
git@github.com:Jasonchenlijian/FastBle.git,c37ee367e24a6586aee9e184b31ee21c5c208a8c,FastBle,5042,
git@github.com:razerdp/BasePopup.git,18c5afdf524dc3b7cb257fd04c6fd29277373ecf,BasePopup,5032,
git@github.com:huangyanbin/smartTable.git,fe975d333a79586261f4f265317b9d1e6f2a36fa,smartTable,5028,
git@github.com:wequick/Small.git,efac42e8c6edf51705c761f0d4fcf7ae18c36d69,Small,5025,
git@github.com:hustcc/JS-Sorting-Algorithm.git,f56cfad812d52fc56b65ab0f3bce80ceb4054c88,JS-Sorting-Algorithm,5022,
git@github.com:Trinea/android-common.git,84350f7f3346eb96408509e011a78f53004770fb,android-common,5015,
git@github.com:orhanobut/dialogplus.git,40dcdad57a797f7aa34460a0bd0e375d8a4c32a8,dialogplus,5006,
git@github.com:alibaba/UltraViewPager.git,b65233e6d63f062345229d5eef9326136bde5eed,UltraViewPager,5006,
git@github.com:youtube/api-samples.git,07263305b59a7c3275bc7e925f9ce6cabf774022,api-samples,5004,
git@github.com:lingochamp/okdownload.git,cb6e20f2484927ef81728355fad3231bb87859a9,okdownload,5003,./okdownload/publishToMavenLocal.sh
lines,2
function,0


for,0

if,0

git@github.com:lingochamp/okdownload.git,cb6e20f2484927ef81728355fad3231bb87859a9,okdownload,5003,./okdownload/deploy-snapshot.sh
lines,1
function,0


for,0

if,0

git@github.com:frogermcs/InstaMaterial.git,6a8f6261c3633a1bfc09f95754c4300f42e5da23,InstaMaterial,5002,
git@github.com:spring-attic/spring-mvc-showcase.git,71d8c7e3432b226f09092dd13a7cfe2298fdd265,spring-mvc-showcase,4991,
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/datax-executor/src/main/bin/datax-executor.sh
lines,289
function,12
function LOG(){
abs_path(){ function LOG(){ verify_java_env(){ load_env(){ usage(){ status_class(){ wait_for_startup(){ wait_for_stop(){ start_m(){ stop_m(){ shutdown_m(){ restart_m(){
for,0

if,39
if [ ! ${ENV_FILE} ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ $? -ne 0 ]; then if [[ ! -z $(echo "${line}" | grep "=") ]]; then if [ -z $(echo "${key1}" | grep -P '\s* if [ $? -ne 0 ]; then if [[ ! ${SERVICE_LOG_PATH} ]]; then if [[ ! ${SERVICE_CONF_PATH} ]]; then if [[ ! ${DATA_PATH} ]]; then if [[ ! ${JSON_PATH} ]]; then if [[ ! ${PYTHON_PATH} ]]; then if [[ ! ${SERVER_PORT} ]]; then if [[ ! ${EXECUTOR_PORT} ]]; then if [[ ! ${DATAX_ADMIN_PORT} ]]; then if [[ ! ${JAVA_OPTS} ]]; then if [[ ! ${REMOTE_DEBUG_SWITCH} ]]; then if [[ ! ${REMOTE_DEBUG_PORT} ]]; then if [ ${REMOTE_DEBUG_SWITCH} == true ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -n "$p" ]; then if [ $? -eq 0 ]; then if [ $? -eq 1 ]; then if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -z "${p}" ]; then if [ $? -eq 0 ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -z "${p}" ]; then if [ $? -eq 0 ]; then if [ ! $1 ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/datax-executor/src/main/bin/configure.sh
lines,146
function,7
function LOG(){
usage(){ function LOG(){ is_sudo_user(){ abs_path(){ check_exist(){ copy_replace(){ mkdir_p(){
for,0

if,14
if test -e "$1"; then if [ $2 == true ]; then if test -e "${CONF_PATH}/${file_name}";then if [ ${SAFE_MODE} == true ]; then if test -e "${DIR}/../conf/${file_name}";then if [ ${SAFE_MODE} == true ]; then if [ ! -d $1 ]; then if [ ${SUDO_USER} == true ]; then if [ $? == 0 ]; then if [ "x${BASE_LOG_DIR}" != "x" ]; then if [ "x${BASE_CONF_DIR}" != "x" ]; then if [ "x${BASE_DATA_DIR}" != "x" ]; then if [ "x${BASE_DATA_DIR}" != "x" ]; then if [ "x${BASE_CONF_DIR}" != "x" ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/datax-admin/src/main/bin/datax-admin.sh
lines,279
function,12
function LOG(){
abs_path(){ function LOG(){ verify_java_env(){ load_env(){ usage(){ status_class(){ wait_for_startup(){ wait_for_stop(){ start_m(){ stop_m(){ shutdown_m(){ restart_m(){
for,0

if,37
if [ ! ${ENV_FILE} ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ $? -ne 0 ]; then if [[ ! -z $(echo "${line}" | grep "=") ]]; then if [ -z $(echo "${key1}" | grep -P '\s* if [ $? -ne 0 ]; then if [[ ! ${SERVICE_LOG_PATH} ]]; then if [[ ! ${SERVICE_CONF_PATH} ]]; then if [[ ! ${DATA_PATH} ]]; then if [[ ! ${MAIL_USERNAME} ]]; then if [[ ! ${MAIL_PASSWORD} ]]; then if [[ ! ${SERVER_PORT} ]]; then if [[ ! ${JAVA_OPTS} ]]; then if [[ ! ${REMOTE_DEBUG_SWITCH} ]]; then if [[ ! ${REMOTE_DEBUG_PORT} ]]; then if [ ${REMOTE_DEBUG_SWITCH} == true ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -n "$p" ]; then if [ $? -eq 0 ]; then if [ $? -eq 1 ]; then if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -z "${p}" ]; then if [ $? -eq 0 ]; then if [ "x"${PID_FILE_PATH} != "x" ]; then if [ -f ${PID_FILE_PATH} ]; then if [ "x"${pid_in_file} != "x" ]; then if [ -z "${p}" ]; then if [ $? -eq 0 ]; then if [ ! $1 ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/datax-admin/src/main/bin/configure.sh
lines,201
function,8

usage(){ LOG(){ interact_echo(){ is_sudo_user(){ abs_path(){ check_exist(){ copy_replace(){ mkdir_p(){
for,0

if,23
if [ "${yn}x" == "Yx" ] || [ "${yn}x" == "yx" ]; then elif [ "${yn}x" == "Nx" ] || [ "${yn}x" == "nx" ]; then if test -e "$1"; then if [ $2 == true ]; then if test -e "${CONF_PATH}/${file_name}";then if [ ${SAFE_MODE} == true ]; then if test -e "${DIR}/../conf/${file_name}";then if [ ${SAFE_MODE} == true ]; then if [ ! -d $1 ]; then if [ ${SUDO_USER} == true ]; then if [ $? == 0 ]; then if [ "x${BASE_LOG_DIR}" != "x" ]; then if [ "x${BASE_CONF_DIR}" != "x" ]; then if [ "x${BASE_DATA_DIR}" != "x" ]; then if [ "x${BASE_CONF_DIR}" != "x" ]; then if [ "x${SQL_SOURCE_PATH}" != "x" ] && [ -f "${SQL_SOURCE_PATH}" ]; then if [ $? == 0 ]; then if [ $? == 0 ]; then if [ "x${HOST}" == "x" ]; then if [ "x${PORT}" == "x" ]; then elif [ ${PORT} -gt 0 ] 2>/dev/null; then if [ "x${USERNAME}" == "x" ]; then if [ "x${DATABASE}" == "x" ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/bin/start-all.sh
lines,30
function,2
function LOG(){
function LOG(){ abs_path(){
for,1
for module in ${START_MODULES[@]}
if,1
if [ $? != 0 ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/bin/start.sh
lines,84
function,5
function LOG(){
usage(){ function LOG(){ abs_path(){ interact_echo(){ start_single_module(){
for,1
LOG ERROR "Cannot find the startup script for module: [$1], please check your installation"
if,7
if [ "${yn}x" == "Yx" ] || [ "${yn}x" == "yx" ]; then elif [ "${yn}x" == "Nx" ] || [ "${yn}x" == "nx" ]; then if [ -f "${MODULE_DIR}/$1/bin/$1.sh" ]; then elif [[ $1 != ${MODULE_DEFAULT_PREFIX}* ]] && [ -f "${MODULE_DIR}/${MODULE_DEFAULT_PREFIX}$1/bin/${MODULE_DEFAULT_PREFIX}$1.sh" ]; then if [ $? == 0 ]; then if [ -z $2 ]; then if [ "x${MODULE_NAME}" == "x" ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/bin/stop.sh
lines,82
function,5
function LOG(){
usage(){ function LOG(){ abs_path(){ interact_echo(){ stop_single_module(){
for,1
LOG ERROR "Cannot find the stop script for module: [$1], please check your installation"
if,7
if [ "${yn}x" == "Yx" ] || [ "${yn}x" == "yx" ]; then elif [ "${yn}x" == "Nx" ] || [ "${yn}x" == "nx" ]; then if [ -f "${MODULE_DIR}/$1/bin/$1.sh" ]; then elif [[ $1 != ${MODULE_DEFAULT_PREFIX}* ]] && [ -f "${MODULE_DIR}/${MODULE_DEFAULT_PREFIX}$1/bin/${MODULE_DEFAULT_PREFIX}$1.sh" ]; then if [ $? == 0 ]; then if [ -z $2 ]; then if [ "x${MODULE_NAME}" == "x" ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/bin/install.sh
lines,273
function,8
function LOG(){
MODULE_LIST=() usage(){ function LOG(){ is_sudo_user(){ clean_modules(){ uncompress_packages(){ interact_echo(){ install_modules(){ scan_to_install_modules(){ MODULE_LIST_RESOLVED=()
for,9
for server in ${MODULE_LIST[@]} for pack in ${list} for server in ${PACKAGE_NAMES[@]} for server in ${MODULE_LIST[@]} for server in ${MODULE_LIST[@]} for dir in ${ls_out} for server in ${MODULE_LIST[@]} for _server in ${server_list} for server in ${MODULE_LIST}
if,28
if [ ${ if [ ${ if [ ${server} == ${pack%%.tar.gz*} ] || [ ${server} == ${pack%%.zip*} ]; then if [ ${uncompress} == true ]; then if [[ ${pack} =~ tar\.gz$ ]]; then if [ ${FORCE_INSTALL} == false ]; then if [ ${do_uncompress} == 0 ]; then elif [[ ${pack} =~ zip$ ]]; then if [ ${FORCE_INSTALL} == false ]; then if [ ${do_uncompress} == 0 ]; then if [ "${yn}x" == "Yx" ] || [ "${yn}x" == "yx" ]; then elif [ "${yn}x" == "Nx" ] || [ "${yn}x" == "nx" ]; then if [ ${FORCE_INSTALL} == false ]; then if [ $? == 0 ]; then if test -e "$1/${dir}/${CONF_FILE_PATH}"; then if [ -z $2 ]; then if [ "$split" != "" ]; if [ "`echo $2 |grep ","`" == "" ]; then if [ $? == 0 ]; then if [ ${ if [ ${SKIP_PACKAGE} == true ]; then if [ ${SKIP_PACKAGE} == true ]; then if [ ! -d ${MODULES_DIR} ]; then if [ ${SAFE_MODE} == false ]; then if [ ${MODULES_DIR} == "" ] || [ ${MODULES_DIR} == "/" ]; then if [ ${SKIP_PACKAGE} == false ]; then if [ ${ if [ ! -f ${MODULES_DIR}/${server}/${CONF_FILE_PATH} ]; then
git@github.com:WeiYe-Jing/datax-web.git,f0aac36b6f3c5c6182b8985bd0bcf1470201e92f,datax-web,4985,./datax-web/bin/stop-all.sh
lines,32
function,2
function LOG(){
function LOG(){ abs_path(){
for,1
for module in ${STOP_MODULES[@]}
if,1
if [ $? != 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase_nightly_source-artifact.sh
lines,188
function,1
function usage {

for,10
echo " --intermediate-file-dir /path/to/use Path for writing listings and diffs. must exist." echo " --unpack-temp-dir /path/to/use Path for unpacking tarball. default to" echo " --maven-m2-initial /path/to/use Path for maven artifacts while building in" echo " --maven-m2-src-build /path/to/use Path for maven artifacts while building from the" echo "passed directory for unpacking the source tarball '${unpack_dir}' must already exist." echo "passed directory for storing the initial build's maven repo '${m2_initial}' " \ echo "passed directory for storing the build from src tarball's maven repo '${m2_tarbuild}' " \ echo "Any output here are unexpected differences between the source artifact we'd make for an RC and the current branch." for artifact in "${unpack_dir}"/hbase-assembly/target/hbase-*-bin.tar.gz; do echo "Building a binary tarball from the source tarball failed. see ${working_dir}/srctarball_install.log for details."
if,16
if [ $ if [ $ if [ -z "${working_dir}" ]; then if ! working_dir="$(mktemp -d -t hbase-srctarball-test)" ; then if [ ! -d "${working_dir}" ]; then if [ -z "${unpack_dir}" ]; then if [ ! -d "${unpack_dir}" ]; then if [ -z "${m2_initial}" ]; then if [ ! -d "${m2_initial}" ]; then if [ -z "${m2_tarbuild}" ]; then if [ ! -d "${m2_tarbuild}" ]; then if [ -n "${source_clean}" ]; then if ! diff known_excluded diff_output >"${working_dir}/unexpected.diff" ; then echo "One potential source of differences is if you have an unclean working directory; you should expect to see" if mvn --threads=2 -DskipTests -Prelease --batch-mode -Dmaven.repo.local="${m2_tarbuild}" clean install \ if [ -f "${artifact}" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/zombie-detector.sh
lines,166
function,4

printUsage() { parseArgs() { find_processes () { zombies () {
for,3
echo " BUILD_ID is build id to look for in process listing" for i in $* for pid in $PIDS
if,8
if [ -z "$BUILD_ID" ]; then if [[ -z ${ZOMBIES} ]] if [[ $ZOMBIE_TESTS_COUNT != 0 ]] ; then echo "`date` Found ${ZOMBIE_TESTS_COUNT} suspicious java process(es) listed below; waiting ${wait}s to see if just slow to stop" >&2 if [[ ! -z "${PS_OUTPUT}" ]] if [[ $ZOMBIE_TESTS_COUNT != 0 ]] if [[ $JENKINS == "true" ]] ; then if [[ $RESULT != 0 ]] ; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase-vote.sh
lines,199
function,11
function download_and_import_keys() { function download_release_candidate () { function verify_signatures() { function verify_checksums() { function unzip_from_source() { function rat_test() { function build_from_source() { function run_tests() { function execute() { function print_when_exit() {
usage() { MVN_PROFILES=() MVN_PROPERTIES=() function download_and_import_keys() { function download_release_candidate () { function verify_signatures() { function verify_checksums() { function unzip_from_source() { function rat_test() { function build_from_source() { function run_tests() { function execute() { function print_when_exit() {
for,5
hbase-vote. A script for standard vote which verifies the following items -P | list of maven profiles to activate for test UT/IT, i.e. <-P runSmallTests> Defaults to runAllTests -D | list of maven properties to set for the mvn invocations, i.e. <-D hadoop.profile=3.0 -D skipTests> Defaults to unset for file in *.tar.gz; do for file in *.tar.gz; do
if,6
if [ -z "${SOURCE_URL}" ]; then 3. Other concerns if any if [ ! -d "${OUTPUT_DIR}" ]; then if [ ${ if [ -n "${SIGNING_KEY}" ]; then if ((CHECKSUM_PASSED)) && ((SIGNATURE_PASSED)) && ((RAT_CHECK_PASSED)) && ((BUILD_FROM_SOURCE_PASSED)) && ((UNIT_TEST_PASSED)) ; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase_docker.sh
lines,162
function,1

usage() {
for,5
for installation instructions. Exiting... hbase_docker. A driver script for building HBase and starting the HBase shell Binary Code License Agreement for Java SE. See www.oracle.com for more details. for file in jdk maven; do
if,11
if ! which docker &> /dev/null; then elif ! docker ps &> /dev/null; then if ! [ ${ if [ -n "${JDK_URL}" ]; then if ! wget -nv -N --header "${ORACLE_HEADER}" -P "${SCRIPT_DIRECTORY}/hbase_docker" \ if [ -n "${MAVEN_URL}" ]; then if ! wget -nv -N -P "${SCRIPT_DIRECTORY}/hbase_docker" "${MAVEN_URL}"; then if [ ${NUM_FILES} -eq 0 ]; then elif [ ${NUM_FILES} -gt 1 ]; then if [ ${FILE_CHECK_EXIT_CODE} -ne 0 ]; then if [ ${BUILD_ATTEMPTS} -ge ${MAX_BUILD_ATTEMPTS} ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/smart-apply-patch.sh
lines,96
function,1

cleanup() {
for,0

if,5
if [ -z "$PATCH_FILE" ]; then if [ "$PATCH_FILE" == "-" ]; then if $PATCH -p0 -E --dry-run < $PATCH_FILE 2>&1 > $TMP; then elif $PATCH -p1 -E --dry-run < $PATCH_FILE 2>&1 > /dev/null; then elif $PATCH -p2 -E --dry-run < $PATCH_FILE 2>&1 > /dev/null; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/adhoc_run_tests/adhoc_run_tests.sh
lines,113
function,3
function usage { function find_modules function echo_run_redirect

for,5
echo " --maven-local-repo /path/to/use Path for maven artifacts while building" for test in "${@}"; do for module in $(find_modules "${test}"); do for module in "${modules[@]}"; do for attempt in $(seq "${attempts}"); do
if,7
echo " --repeat times number of times to repeat if successful" echo " --surefire-fork-count set the fork-count. only useful if multiple " \ if [ "$ if [ -f "${path}/pom.xml" ]; then if [[ ! "${modules[*]}" =~ ${module} ]]; then if [[ -n "${hadoop_profile}" ]] ; then if [[ ! -d "${output}" ]] ; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase_nightly_yetus.sh
lines,118
function,0

YETUS_ARGS=()
for,1
for required_env in "TESTS" "PERSONALITY_FILE" "BASEDIR" "ARCHIVE_PATTERN_LIST" "OUTPUT_DIR_RELATIVE" \
if,14
if [ -z "${!required_env}" ]; then if [ ${missing_env} -gt 0 ]; then if [ -n "${JAVA_HOME}" ]; then if [[ -n "${SET_JAVA_HOME}" ]]; then if [[ -n "${EXCLUDE_TESTS_URL}" ]]; then if [[ -n "${INCLUDE_TESTS_URL}" ]]; then if [[ -n "${HADOOP_PROFILE}" ]]; then if [[ "${BRANCH_NAME}" =~ branch-2* ]]; then if [[ "${SKIP_ERRORPRONE}" = "true" ]]; then if [[ true == "${DEBUG}" ]]; then if [[ ! -d "${OUTPUT_DIR}" ]]; then if [[ -n "${ASF_NIGHTLIES_GENERAL_CHECK_BASE}" ]]; then if [[ -n "${JAVA8_HOME}" ]]; then if [[ true != "${USE_YETUS_PRERELEASE}" ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/code-coverage/run-coverage.sh
lines,78
function,2

usage() { execute() {
for,1
echo " The required parameters for publishing the coverage results to SonarQube are:"
if,1
if [ -n "$SONAR_LOGIN" ] && [ -n "$SONAR_PROJECT_KEY" ] && [ -n "$SONAR_URL" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/release-vm/provision/focal.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase-personality.sh
lines,939
function,24
function docker_do_env_adds function personality_globals function personality_parse_args function personality_modules function personality_file_tests function get_include_exclude_tests_arg function refguide_initialize function refguide_filefilter function refguide_rebuild function shadedjars_initialize function shadedjars_filefilter function shadedjars_rebuild function hadoopcheck_filefilter function hadoopcheck_parse_args function hadoopcheck_docker_support function hadoopcheck_rebuild function hbaseprotoc_initialize function hbaseprotoc_filefilter function hbaseprotoc_rebuild function hbaseanti_filefilter function hbaseanti_patchfile function spotless_filefilter function spotless_rebuild function hbase_javac_logfilter
warnings=$(${GREP} -c 'new TreeMap<byte.*()' "${patchfile}")
for,13
for k in "${DOCKER_EXTRAENVS[@]}"; do for i in "$@"; do for module in "${CHANGED_MODULES[@]}"; do for f in "${CHANGED_FILES[@]}" for module in "${MODULES[@]}"; do yetus_debug "Skipping builtin yetus checks for ${filename}. refguide test should pick it up." add_vote_table 0 refguide "${repostatus} has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect." for i in "$@"; do yetus_info "Setting Hadoop 2 versions to null on master/feature branch rules since we do not support hadoop 2 for hbase 3.x any more." for hadoopver in ${hbase_hadoop2_versions}; do yetus_info "Switching to java 8 for building against hadoop 2.x" for hadoopver in ${hbase_hadoop3_versions}; do big_console_header "Checking for known anti-patterns"
if,73
if ! declare -f "yetus_info" >/dev/null; then if [[ "JAVA_HOME" == "${k}" ]]; then if [ -n "${JAVA_HOME}" ]; then if [[ "${testtype}" == mvnsite ]]; then if [[ -n "${BUILD_THREAD}" ]]; then if [[ -n "${HADOOP_PROFILE}" ]] && [[ "${PATCH_BRANCH}" = branch-2* ]] ; then if [[ "${BUILDMODE}" == "full" ]] || \ if [[ "${testtype}" == checkstyle ]] && [[ "${MODULES[*]}" =~ hbase-checkstyle ]]; then if [[ ${testtype} == mvninstall ]]; then if [[ ${testtype} == spotbugs ]]; then if [[ "$(find "${BASEDIR}/${module}" -iname '*.java' -and -ipath '*/src/main/java/*' \ if [[ ${testtype} == compile ]] && [[ "${SKIP_ERRORPRONE}" != "true" ]]; then if [[ ${testtype} == unit ]]; then if [ -n "${BUILD_ID}" ]; then if [[ -n "${SUREFIRE_FIRST_PART_FORK_COUNT}" ]]; then if [[ -n "${SUREFIRE_SECOND_PART_FORK_COUNT}" ]]; then if [[ "${f}" =~ CommonFSUtils ]]; then if [[ ! "${MODULES[*]}" =~ hbase-server ]] && [[ ! "${MODULES[*]}" =~ \. ]]; then if [[ ${filename} =~ src/main/asciidoc ]] || if [[ ${BUILDTOOL} = maven ]]; then if [[ ${filename} =~ src/site || ${filename} =~ src/main/asciidoc ]]; then if [[ ${filename} =~ checkstyle.*\.xml ]]; then if declare -f "${BUILDTOOL}_builtin_personality_file_tests" >/dev/null; then elif declare -f builtin_personality_file_tests >/dev/null; then if [[ -n "${EXCLUDE_TESTS_URL}" ]]; then if wget "${EXCLUDE_TESTS_URL}" -O "excludes"; then if [[ -n "${excludes}" ]]; then elif [[ -n "$INCLUDE_TESTS_URL" ]]; then if wget "$INCLUDE_TESTS_URL" -O "includes"; then if [[ -n "${includes}" ]]; then if wget "${FLAKY_URL}" -O "excludes"; then if [[ -n "${excludes}" ]]; then if [[ "${PATCH_BRANCH}" = master ]]; then if [[ ${filename} =~ src/main/asciidoc ]] || if ! verify_needed_test refguide; then if [[ ${count} -gt 0 ]]; then if ! mv target/site "${PATCH_DIR}/${repostatus}-site"; then if [[ ! -f "${PATCH_DIR}/${repostatus}-site/book.html" ]]; then if [[ ! -f "${PATCH_DIR}/${repostatus}-site/${pdf_output}" ]]; then if [[ -n "${ASF_NIGHTLIES_GENERAL_CHECK_BASE}" ]]; then if [[ ${filename} =~ \.java$ ]] || [[ ${filename} =~ pom.xml$ ]]; then if ! verify_needed_test shadedjars; then if [[ -n "${HADOOP_PROFILE}" ]] && [[ "${PATCH_BRANCH}" = branch-2* ]] ; then if [[ ${count} -gt 0 ]]; then if [[ ${filename} =~ \.java$ ]] || [[ ${filename} =~ pom\.xml$ ]]; then if [[ "${repostatus}" = branch ]]; then if ! verify_needed_test hadoopcheck; then if [[ "${PATCH_BRANCH}" = branch-2.4 ]]; then if [[ "${QUICK_HADOOPCHECK}" == "true" ]]; then elif [[ "${PATCH_BRANCH}" = branch-2* ]]; then if [[ "${PATCH_BRANCH}" = branch-2.4 ]]; then if [[ "${QUICK_HADOOPCHECK}" == "true" ]]; then if [[ "${QUICK_HADOOPCHECK}" == "true" ]]; then if [[ -n "${JAVA8_HOME}" ]]; then if [[ ${count} -gt 0 ]]; then if [[ "${PATCH_BRANCH}" = branch-2* ]]; then if [[ ${count} -gt 0 ]]; then if [[ ${result} -gt 0 ]]; then if [[ -n "${hbase_hadoop3_versions}" ]]; then if [[ -n "${hbase_hadoop2_versions}" ]]; then if [[ ${filename} =~ \.proto$ ]]; then if [[ "${repostatus}" = branch ]]; then if ! verify_needed_test hbaseprotoc; then if [[ ${MODULE_STATUS[${i}]} == -1 ]]; then if [[ ${count} -gt 0 ]]; then if [[ ${result} -gt 0 ]]; then if [[ ${filename} =~ \.java$ ]]; then if [[ "${BUILDMODE}" = full ]]; then if ! verify_needed_test hbaseanti; then if [[ ${warnings} -gt 0 ]]; then if [[ ${result} -gt 0 ]]; then if ! verify_needed_test spotless; then if [[ ${count} -gt 0 ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/rebase_all_git_branches.sh
lines,207
function,5
function print_usage { function get_all_branches { function get_tracking_branches { function check_git_branch_status { function get_jira_status {
all_branches=() tracking_branches=() deleted_branches=()
for,5
for i in `git branch --list | sed -e "s/\*//g"`; do for i in `git branch -lvv | grep "\[origin/" | sed -e 's/\*//g' | awk {'print $1'}`; do for i in "${tracking_branches[@]}"; do for i in "${all_branches[@]}"; do for i in "${deleted_branches[@]}"; do
if,13
if [ "$git_dirty" -ne 0 ]; then if [ $status -ne 0 -a $status -ne 1 ]; then if [ $status -ne 0 ]; then if [ ! -d "$dir/.git/" ]; then if [ -z "$dir" ]; then if [ "$dir" = "EDIT_ME" ]; then elif [ ! -d "$DEFAULT_DIR/.git/" ]; then if [ "$status" -ne 0 ]; then if [[ "$jira_id" == HBASE-* ]]; then if [ $jira_status -eq 99 ]; then if [ $status -eq 128 ]; then if [ $? -ne 0 ]; then elif [ $status -ne 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/make_rc.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/jenkinsEnv.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/test-util.sh
lines,204
function,1

usage()
for,4
for (( i = $OPTIND; i <= $BASH_ARGC; i++ )) for (( i = 1 ; i <= $numIters; i++ )) for (( j = 0; j < $numTests; j++ )) for (( i = 0; i < ${
if,13
-H Print which tests are hanging (if any) if [[ "$0" != /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if [ ! -z $testFile ]; then if [ ! -z "$line" ]; then if [ ! -z $BASH_ARGC ]; then if [[ $numTests > 0 ]]; then if [ ${server} -eq 0 ]; then if [ ${echoUsage} -eq 1 ]; then if [ $? -ne 0 ]; then if [ ${server} -eq 0 ]; then if [ ${echoUsage} -eq 1 ]; then if [ ! -z $showSlowest ]; then if [ ! -z $showHanging ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/jenkins-scripts/cache-apache-project-artifact.sh
lines,149
function,2
function usage { function cleanup {

for,2
echo " --force for a redownload even if /path/to/download/file.tar.gz exists." echo " --working-dir /path/to/use Path for writing tempfiles. must exist."
if,17
echo " --force for a redownload even if /path/to/download/file.tar.gz exists." echo " --verify-tar-gz Only use a cached file if it can be parsed as a gzipped tarball." if [ $ if [ $ if [ -f "${target}" ] && [ -s "${target}" ] && [ -r "${target}" ] && [ "true" = "${done_if_cached}" ]; then if [ "false" = "${verify_tar_gz}" ]; then if ! tar tzf "${target}" > /dev/null 2>&1; then if [ -z "${working_dir}" ]; then if ! working_dir="$(mktemp -d -t hbase-download-apache-artifact)" ; then if [ ! -d "${working_dir}" ]; then if [ -n "${keys}" ]; then if [ "true" = "${cleanup}" ]; then if [ -n "${keys}" ]; then if [ ! -d "${working_dir}/.gpg" ]; then if ! gpg --homedir "${working_dir}/.gpg" --import "${working_dir}/KEYS" ; then if ! curl --dump-header "${working_dir}/artifact_download_headers.txt" -L --fail -o "${working_dir}/artifact" "https://www.apache.org/dyn/closer.lua?filename=${artifact}&action=download" ; then if [ -n "${keys}" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/jenkins-scripts/generate-hbase-website.sh
lines,281
function,1
function usage {

for,7
echo " --working-dir /path/to/use Path for writing logs and a local checkout of hbase-site repo." echo " --local-repo /path/for/maven/.m2 Path for putting local maven repo." echo "passed directory for storing the maven repo '${local_repo}' must already exist." echo "Got back a blank answer for the current HEAD on the remote hbase repository. failing." echo "[DEBUG] hash was found in $PUSHED commits for hbase-site repository." echo "Maven commands to build the site failed. check logs for details ${working_dir}/hbase-*-log-*.txt" for FILE in "${FILES_TO_REMOVE[@]}"; do
if,23
echo " if given must exist." echo " if given must exist." echo " --publish if given, will attempt to push results back to the hbase-site repo." if [ $ if [ $ if [ -z "${working_dir}" ]; then if ! working_dir="$(mktemp -d -t hbase-generate-website)" ; then if [ ! -d "${working_dir}" ]; then if [ -z "${local_repo}" ]; then if [ ! -d "${local_repo}" ]; then if [ -z "${JAVA_HOME}" ]; then if [ -z "${MAVEN_HOME}" ]; then if [ -z "${CURRENT_HBASE_COMMIT}" ]; then if [ "${PUSHED}" -ne 0 ]; then if [ -n "$CHANGE_ID" ]; then if mvn \ if [ $status -ne 0 ] || [ ! -d target/staging ]; then if [ -e "${FILE}" ]; then if [ ! -f index.html ]; then if [ ! -s "${working_dir}/${CURRENT_HBASE_COMMIT}.patch" ]; then if [ -n "${publish}" ]; then if git push origin asf-site; then if git push origin asf-site; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/jenkins-scripts/check-website-links.sh
lines,65
function,0


for,0

if,1
if ! grep -q 'ERROR' link_report/index.html; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/create-release/release-build.sh
lines,345
function,2
function exit_with_usage { function cleanup {

for,9
tag Prepares for release on specified git branch: Set release version, increment version for ongoing dev, and publish to Apache git repo. Used for 'tag' and 'publish' stages: RELEASE_VERSION - Version used in pom files for release (e.g. 2.1.2) Required for 'tag'; defaults for 'publish' to the version in pom at GIT_REF Used only for 'tag': YETUS_HOME - installation location for Apache Yetus Used only for 'publish': to avoid re-downloading dependencies for each stage. It is automatically set if you
if,30
publish anything to upstream source or object repositories. It defaults to "1", so if you want separately define GIT_REF if RELEASE_TAG is not actually present as a tag at publish time) to avoid re-downloading dependencies for each stage. It is automatically set if you if [[ -z "${REPO}" ]] && [[ -n "${MAVEN_LOCAL_REPO}" ]]; then if [ $ if [[ "$1" == "-h" ]]; then if [[ "$*" == *"help"* ]]; then if is_debug; then if [[ "$1" == "tag" ]]; then if [ -z "${GIT_REPO}" ]; then if [[ "${PROJECT}" == "hbase-thirdparty" ]]; then elif [[ "${PROJECT}" =~ ^hbase- ]]; then if is_tracked "CHANGES.md"; then if ! is_dry_run; then if [[ "$PROJECT" =~ ^hbase ]]; then if is_dry_run && [[ "${TAG_SAME_DRY_RUN:-}" == "true" && -d "${PROJECT}.tag" ]]; then if [ -z "${RELEASE_VERSION}" ]; then if ! hash $LSOF 2>/dev/null; then if [ -z "$package_version_name" ]; then if [[ "$PROJECT" =~ ^hbase- ]]; then if [[ "$1" == "publish-dist" ]]; then if [[ "${PROJECT}" != "hbase-thirdparty" ]]; then if [ "${PROJECT}" == "hbase" ]; then if ! is_dry_run; then if [[ "$1" == "publish-snapshot" ]]; then if ! is_dry_run; then if [[ "$1" == "publish-release" ]]; then if ! is_dry_run; then if [[ "${repo_count}" == "2" ]]; then elif [[ "${repo_count}" == "1" ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/create-release/do-release-docker.sh
lines,342
function,2
function usage { function cleanup {
JAVA_MOUNT=() GIT_REPO_MOUNT=() GPG_PROXY_MOUNT=()
for,12
-t [tag] Tag for the hbase-rm docker image to use for building (default: "latest"). -r [repo] Git repo to use for remote git operations. defaults to ASF gitbox for project. ?) error "Invalid option. Run with -h for help." ;; error "Work directory (-d) must be defined and exist. Run with -h for help." for f in "$SELF"/*; do log "Exporting public key for ${GPG_KEY}" echo "Stopping ssh tunnel for gpg-agent at PID ${id}" | tee -a cleanup.log banner "Final prep for container launch." log "Writing out environment for container." log " we should clean this up for you. If that fails the container ID is below and in " \ log "Your ssh known_hosts does not include the entries for the gpg-agent proxy container." log " we should clean this up for you. If that fails the PID is in gpg-proxy.ssh.pid"
if,22
if (( $ if [ -z "$WORKDIR" ] || [ ! -d "$WORKDIR" ]; then if [ -d "$WORKDIR/output" ]; then if [ "$ANSWER" != "y" ]; then if [ -f "${WORKDIR}/gpg-proxy.ssh.pid" ] || \ if [ "$ANSWER" != "y" ]; then if [ -f "$f" ]; then if is_debug; then if [ -f "${ENVFILE}" ]; then if [ -f "${WORKDIR}/gpg-proxy.ssh.pid" ]; then if [ -f "${WORKDIR}/gpg-proxy.cid" ]; then if [ -f "${WORKDIR}/release.cid" ]; then if [ "${HOST_OS}" == "DARWIN" ]; then if [ -n "$JAVA" ]; then if [ -n "${GIT_REPO}" ]; then if [ "${GIT_REPO}" = "${colon_remove_prefix}" ]; then elif [ "${GIT_REPO}" != "${slash_remove_prefix}" ]; then if [ "${ if [ -n "${local_path}" ]; then if [ "${HOST_OS}" == "DARWIN" ]; then if [ -s "${WORKDIR}/gpg-agent-proxy.known_hosts" ]; then if [ "$ANSWER" != "y" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/create-release/do-release.sh
lines,159
function,2
function gpg_agent_help { function should_build {

for,1
echo "Skipping tag creation for $RELEASE_TAG."
if,18
if (( $ if [ "$RUNNING_IN_DOCKER" = "1" ]; then if [ "${HOST_OS}" == "DARWIN" ]; then if [ -d "output" ]; then if ! $GPG "${GPG_ARGS[@]}" --import "$SELF/gpg.key.public" ; then if [ -n "$JAVA_HOME" ]; then if ! "${GPG}" "${GPG_ARGS[@]}" --detach --armor --sign "${gpg_test_file}" ; then if ! "${GPG}" "${GPG_ARGS[@]}" --verify "${gpg_test_file}.asc" "${gpg_test_file}" ; then if [[ -z "$RELEASE_STEP" ]]; then if [[ -z "$RELEASE_STEP" ]]; then elif [[ "$RELEASE_STEP" == *"$WHAT"* ]]; then if should_build "tag" && [ "$SKIP_TAG" = 0 ]; then if [ -z "${YETUS_HOME}" ] && [ "${RUNNING_IN_DOCKER}" != "1" ]; then if [ "$(get_host_os)" = "DARWIN" ]; then if is_dry_run; then if should_build "publish-dist"; then if should_build "publish-snapshot"; then elif should_build "publish-release"; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/create-release/release-util.sh
lines,873
function,44
function error { function read_config { function parse_version { function parse_revision { function banner { function log { function get_ctime { function run_silent { function fcreate_secure { function get_api_diff_version { function get_release_info { function is_dry_run { function is_debug { function check_get_passwords { function check_needed_vars { function init_locale { function init_xmllint { function init_java { function init_python { function init_mvn { function init_yetus { function configure_maven { function git_clone_overwrite { function start_step { function stop_step { function generate_api_report { function get_jira_name { function update_releasenotes { function kick_gpg_agent { function maven_set_version { function maven_get_version { function maven_deploy { function get_host_os() { function is_tracked() { function should_build_with_hadoop3() { function get_hadoop3_version() {
xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" - xmllint --xpath "//*[local-name()='project']/*[local-name()='properties']/*[local-name()='revision']/text()" - make_src_release() { build_release_binary() { local extra_flags=() make_binary_release() { declare -a mvn_extra_flags=() function get_host_os() { function is_tracked() { function should_build_with_hadoop3() { if ! xmllint --xpath "//*[local-name()='project']/*[local-name()='profiles']/*[local-name()='profile']/*[local-name()='id']/text()" "${pom}" \ if ! xmllint --xpath "//*[local-name()='project']/*[local-name()='profiles']/*[local-name()='profile']/*[local-name()='id']/text()" "${pom}" \ function get_hadoop3_version() {
for,12
log "Command FAILED. Check full logs for details." log "This is a dry run. If tag does not actually exist, please confirm the ref that will be built for testing." for env in "$@"; do for env in "$@"; do log "Error: xmllint is not available, we need to use it for parsing pom.xml." >&2 log "Clone will be of the gitbox repo for ${PROJECT}." error "Sorry, can't determine the Jira name for project $project" for i in "${base_name}"*-bin.tar.gz; do error "Deploy build failed, for details see log at '$mvn_log_file'." log "Deploying artifacts for hadoop3..." echo "Deploy build for hadoop3" error "Deploy build failed, for details see log at '$mvn_log_file'."
if,63
if [ -n "${GPG_KEY}" ]; then if [ -z "$RETVAL" ]; then if ! "$@" 1>"$LOG_FILE" 2>&1; then if [ "$rev" != 0 ]; then if [ "$minor" != 0 ]; then if [[ -z "${ASF_REPO}" ]]; then if [[ -z "${ASF_GITHUB_REPO}" ]]; then if [[ -z "${ASF_GITHUB_WEBUI}" ]] ; then if [ -z "$GIT_BRANCH" ]; then if [[ "${version}" == '${revision}' ]]; then if [[ ! "$version" =~ .*-SNAPSHOT ]]; then if [[ -z "${RC_COUNT}" ]]; then if [ "$REV" != 0 ]; then if git ls-remote --tags "$ASF_REPO" "$PREV_REL_TAG" | grep -q "refs/tags/${PREV_REL_TAG}$" ; then if [[ -z "${RELEASE_TAG}" ]]; then if git ls-remote --tags "$ASF_REPO" "$RELEASE_TAG" | grep -q "refs/tags/${RELEASE_TAG}$" ; then if [ "$ANSWER" != "y" ]; then if is_dry_run; then if [[ -z "${GPG_KEY}" ]]; then if ! GPG_KEY_ID=$("${GPG}" "${GPG_ARGS[@]}" --keyid-format 0xshort --list-public-key "${GPG_KEY}" | grep "\[S\]" | grep -o "0x[0-9A-F]*") || if [ "$ANSWER" = "y" ]; then if [ "$ANSWER" != "y" ]; then if [ -z "$ASF_PASSWORD" ]; then if [ -z "${!env}" ]; then if [ -z "${!env}" ]; then if ! [ -x "$(command -v xmllint)" ]; then if [ -z "$JAVA_HOME" ]; then if ! [ -x "$(command -v python3)" ]; then if [ -n "$MAVEN_HOME" ]; then elif [ "$(type -P mvn)" ]; then if [ -z "${YETUS_HOME}" ]; then if [ -z "${PROJECT}" ] || [ "${PROJECT}" != "${PROJECT if [[ -z "${GIT_REPO}" ]]; then if [ -n "${ASF_USERNAME}" ] && [ -n "${ASF_PASSWORD}" ]; then if [ -n "$HOST_GIT_REPO" ]; then if [ -z "${name}" ]; then if [ -z "${name}" ]; then if [[ -z "$jira_name" ]]; then if [ -f ${changelog} ]; then if [ -f ${releasenotes} ]; then if [ -f "${project_dir}/CHANGES.md" ]; then if [ -f "${project_dir}/RELEASENOTES.md" ]; then if [ ! -f "${changelog}" ]; then if [ ! -f "${releasenotes}" ]; then if [ -f "${project_dir}/CHANGES.md" ]; then if [ -f "${project_dir}/RELEASENOTES.md" ]; then if [[ "${version}" = *-hadoop3 ]] || [[ "${version}" = *-hadoop3-SNAPSHOT ]]; then if ls "${f_bin_prefix}"*-bin.tar.gz &>/dev/null; then if should_build_with_hadoop3 "$project/pom.xml"; then if [[ "${maven_version}" == '${revision}' ]]; then if [ "${use_revision}" = 'false' ] ; then if [[ "$deploy_type" != "snapshot" && "$deploy_type" != "release" ]]; then if [[ -z "$mvn_log_file" ]] || ! touch "$mvn_log_file"; then if [[ "$deploy_type" == "snapshot" ]] && ! [[ "$RELEASE_VERSION" =~ -SNAPSHOT$ ]]; then elif [[ "$deploy_type" == "release" ]] && [[ "$RELEASE_VERSION" =~ SNAPSHOT ]]; then if is_dry_run; then if ! "${MVN[@]}" clean deploy -DskipTests -Dcheckstyle.skip=true "${PUBLISH_PROFILES[@]}" \ if should_build_with_hadoop3 pom.xml; then if ! "${MVN[@]}" clean deploy -DskipTests -Dcheckstyle.skip=true "${PUBLISH_PROFILES[@]}" \ if [[ "${maven_version}" != '${revision}' ]]; then if ! xmllint --xpath "//*[local-name()='project']/*[local-name()='profiles']/*[local-name()='profile']/*[local-name()='id']/text()" "${pom}" \ if ! xmllint --xpath "//*[local-name()='project']/*[local-name()='profiles']/*[local-name()='profile']/*[local-name()='id']/text()" "${pom}" \ if [[ "${version}" =~ -SNAPSHOT$ ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbasetests.sh
lines,428
function,3
function createListDeadProcess { function cleanProcess { function countClasses {

for,11
for pId in $sonProcess for pId in $listDeadProcess echo "Stack for $pId before kill:" echo "kill sent, waiting for 30 seconds" echo "Stack for $pId before kill -9:" echo "kill sent, waiting for 2 seconds" echo "There are still $sonProcess for process $id left." for arg in "$@" for testFile in $testsList for testClass in `echo $longList | sed 's/,/ /g'` for testClass in `echo $fullRunList | sed 's/,/ /g'`
if,27
if [ "$pgid" == "$id" ] echo "$pId survived, I will kill if it's a java process. 'ps' says:" if [ "$name" == "java" ] if (test $son -gt 0) if (test ${ if [ $arg == "runAllTests" ] if [ $arg == "replayFailed" ] if [ $arg == "nonParallelMaven" ] if (test $isFlaky -eq 0) if (test $isMedium -eq 0) if (test $isLarge -eq 0) if (test $isSmall -eq 0) if (test $isStrange -gt 0) if (test $isSmall -gt 0) if (test $isMedium -gt 0) if (test $isLarge -gt 0) if (test $runAllTests -eq 1) if (test $nextList -eq 1) if (test $parallelMaven -gt 0) echo "Medium and large (if selected) tests executed after $exeTime minutes" if (test $runAllTests -eq 1 && test ${ if (test $runAllTests -eq 1) if [ -s $reportFile ]; if (test $isError -gt 0) if [ -s $reportFile ]; if (test ${ if (test $replayFailed -gt 0)
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/make_patch.sh
lines,164
function,0


for,1
for i in {99..1}; do
if,16
if [ ! "${branch}" ]; then if [ "${git_dirty}" -ne 0 ]; then if [ ! "${tracking_branch}" ]; then if [ "${status}" -eq 128 ]; then elif [ "${status}" -eq 0 ]; then if [ ! "${patch_dir}" ]; then if [ ! -d "${patch_dir}" ]; then if [[ "${tracking_branch}" != "origin/master" \ if [[ "${patch_version}" == "" ]]; then if [[ "${status}" -eq 0 ]]; then elif [[ "${status}" -ge 1 ]]; then if [ 0 -lt "${versionfiles}" ]; then if [ -n "${addendum}" ]; then if [ "${version}" -ge 1 ]; then if [ "${status}" -eq 0 ]; then if [ "$local_commits" -gt 1 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/gather_machine_environment.sh
lines,56
function,1
function usage {

for,0

if,2
if [ "$ if [ ! -d "${output}" ] || [ ! -w "${output}" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/jenkins_precommit_github_yetus.sh
lines,159
function,0


for,1
for required_env in "${required_envs[@]}"; do
if,14
if [[ "true" = "${DEBUG}" ]]; then if [ -z "${!required_env}" ]; then if [ ${missing_env} -gt 0 ]; then if [[ "true" = "${DEBUG}" ]]; then if [ -n "${JAVA_HOME}" ]; then if [[ "${SKIP_ERRORPRONE}" = "true" ]]; then if [[ -n "${HADOOP_PROFILE}" ]]; then if [[ "${BRANCH_NAME}" =~ branch-2* ]]; then if [[ -n "${EXCLUDE_TESTS_URL}" ]]; then if [[ -n "${ASF_NIGHTLIES_GENERAL_CHECK_BASE}" ]]; then if [[ -n "${BUILD_THREAD}" ]]; then if [[ -n "${SUREFIRE_FIRST_PART_FORK_COUNT}" ]]; then if [[ -n "${SUREFIRE_SECOND_PART_FORK_COUNT}" ]]; then if [[ -n "${JAVA8_HOME}" ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/dev-support/hbase_nightly_pseudo-distributed-test.sh
lines,537
function,17
function usage { function redirect_and_run { function cleanup {
Configuration hbase = HBaseConfiguration.create(); Configuration hadoop = new Configuration(); final List<String> regions = new LinkedList<>(); try (Admin admin = connection.getAdmin()) { final ClusterMetrics cluster = admin.getClusterMetrics(); System.out.println(String.format("\tCluster reports version %s, ave load %f, region count %d", cluster.getHBaseVersion(), cluster.getAverageLoad(), cluster.getRegionCount())); for (ServerMetrics server : cluster.getLiveServerMetrics().values()) { for (RegionMetrics region : server.getRegionMetrics().values()) { regions.add(region.getNameAsString()); out.writeInt(regions.size()); out.hsync(); final List<Put> puts = new LinkedList<>(); final int count = in.readInt(); builder.clear(); final byte[] row = Bytes.toBytes(in.readUTF()); put.add(builder.build());
for,18
echo " --working-dir /path/to/use Path for writing configs and logs. must exist." echo " --hadoop-client-classpath /path/to/some.jar:/path/to/another.jar classpath for hadoop jars." echo " --hbase-client-install /path/to/unpacked/client/tarball if given we'll look here for hbase client jars instead of the bin-install" echo "passed directory for unpacking the source tarball '${zk_data_dir}' must already exist." for entry in $(echo "${hadoop_jars}" | tr ':' '\n'); do echo "Writing out configuration for HBase." find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py distributed with this work for additional information find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py See the License for the specific language governing permissions and printf '\twaiting for Hadoop to finish starting up.\n' echo "time out waiting for Hadoop to startup" >&2 for f in "${working_dir}"/hbase-conf/*-site.xml; do printf '\tretry waiting for hbase to come up.\n' echo "Importing TSV via shaded client artifact for HBase - MapReduce integration." echo "Hadoop client jars not given; getting them from 'hadoop classpath' for the example." for (ServerMetrics server : cluster.getLiveServerMetrics().values()) { for (RegionMetrics region : server.getRegionMetrics().values()) { for (String region : regions) { echo "Found ${example_rowcount} rows, which is enough to cover 48 for import, 1000 example's use of user table regions, 1 for example's use of meta region, and 1 for example's count record"
if,31
echo " --hbase-client-install /path/to/unpacked/client/tarball if given we'll look here for hbase client jars instead of the bin-install" if [ $ if [ $ if [ ! -x "${hadoop_exec}" ]; then if [ ! -x "${mapred_exec}" ]; then if [ ! -d "${component_install}" ]; then if [ ! -f "${yarn_server_tests_test_jar}" ]; then if [ ! -f "${mapred_jobclient_test_jar}" ]; then if [ -z "${working_dir}" ]; then if ! working_dir="$(mktemp -d -t hbase-pseudo-dist-test)" ; then if [ ! -d "${working_dir}" ]; then if [ -z "${zk_data_dir}" ]; then if [ ! -d "${zk_data_dir}" ]; then if [ -z "${hbase_client}" ]; then if [ ! -d "${hbase_client}" ]; then if [ -n "${hadoop_jars}" ]; then if [ "${hadoop_version%.*.*}" -gt 2 ]; then if [ -n "${clean}" ]; then if [ ! -s "${hbase_client}/lib/shaded-clients/hbase-shaded-mapreduce-${hbase_version}.jar" ]; then if [ ! -s "${hbase_client}/lib/shaded-clients/hbase-shaded-client-${hbase_version}.jar" ]; then if [ ! -s "${hbase_client}/lib/shaded-clients/hbase-shaded-client-byo-hadoop-${hbase_version}.jar" ]; then if [ -f "${component_install}/conf/log4j2.properties" ]; then if [ "true" = "${distributed}" ]; then if [ -f "${working_dir}/hadoop.pid" ]; then if [ "${hadoop_version%.*.*}" -gt 2 ]; then if [ "${sleep_time}" -ge "${max_sleep_time}" ] ; then if [ "${hadoop_version%.*.*}" -gt 2 ]; then if [ -n "${clean}" ]; then if [ ! "${import_rowcount}" -eq 48 ]; then if [ -z "${hadoop_jars}" ]; then if [ "${example_rowcount}" -gt "1049" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/conf/hbase-env.sh
lines,211
function,0


for,0

if,0

git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-common/src/saveVersion.sh
lines,141
function,0


for,4
find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py distributed with this work for additional information find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py See the License for the specific language governing permissions and find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py distributed with this work for additional information find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py See the License for the specific language governing permissions and
if,6
if [ "$user" == "" ] if [ -d .svn ]; then elif [ -d .git ]; then if [ -z "${revision}" ]; then if ! [ -x "$(command -v openssl)" ]; then if ! [ -x "$(command -v gpg)" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-examples/src/main/sh/healthcheck/healthcheck.sh
lines,84
function,2
function check_disks { function check_link {

for,3
for m in `awk '$3~/ext3/ {printf" %s ",$2}' /etc/fstab` ; do for (i in ifIndex ) { for check in disks link ; do
if,15
if [ -z "$fsdev" ] ; then msg_="$msg_`awk -v m=$m '$2==m { if ( $4 ~ /^ro,/ ) {printf"%s(ro)",$2 } ; }' /proc/mounts`" if [ -z "$msg_" ] ; then /usr/bin/snmpwalk -t 5 -Oe -Oq -Os -v 1 -c public localhost if | \ if ( a[1] == "ifIndex" ) { ifIndex[a[2]] = $2 } if ( a[1] == "ifDescr" ) { ifDescr[a[2]] = $2 } if ( a[1] == "ifType" ) { ifType[a[2]] = $2 } if ( a[1] == "ifSpeed" ) { ifSpeed[a[2]] = $2 } if ( a[1] == "ifAdminStatus" ) { ifAdminStatus[a[2]] = $2 } if ( a[1] == "ifOperStatus" ) { ifOperStatus[a[2]] = $2 } if ( ifType[i] == 6 && ifAdminStatus[i] == 1 && ifOperStatus[i] == 1 && ifSpeed[i] == 1000000000 ) { if ( up == 0 ) { print "check link" ; exit 2 } if [ $? -eq 0 ] ; then if [ ! -z "$err_msg" ] ; then if [ ! -z "$ok_msg" ] ; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-shaded/hbase-shaded-check-invariants/src/test/resources/ensure-jars-have-correct-contents.sh
lines,144
function,1
function usage {

for,2
for artifact in "${artifact_list[@]}"; do for bad_line in "${bad_contents[@]}"; do
if,8
if [ $ if [ -z "${JAVA_HOME}" ]; then if [ $ if [ -n "${debug}" ]; then if [ -n "${allow_hadoop}" ]; then if [ ${ if [ ${ if [ "${bad_artifacts}" -gt 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-shaded/hbase-shaded-with-hadoop-check-invariants/src/test/resources/ensure-jars-have-correct-contents.sh
lines,144
function,1
function usage {

for,2
for artifact in "${artifact_list[@]}"; do for bad_line in "${bad_contents[@]}"; do
if,8
if [ $ if [ -z "${JAVA_HOME}" ]; then if [ $ if [ -n "${debug}" ]; then if [ -n "${allow_hadoop}" ]; then if [ ${ if [ ${ if [ "${bad_artifacts}" -gt 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/hbase-config.sh
lines,201
function,2
function read_java_version() { function parse_java_major_version() {
function read_java_version() { function parse_java_major_version() {
for,2
echo "Invalid value for --autostart-window-size, should be a positive integer" echo "Invalid value for --autostart-window-retry-limit, should be a positive integer"
if,22
if expr "$link" : '.*/.*' > /dev/null; then if [ -z "$HBASE_HOME" ]; then if [ "--config" = "$1" ] elif [ "--hosts" = "$1" ] elif [ "--auth-as-server" = "$1" ] elif [ "--autostart-window-size" = "$1" ] if [ $AUTOSTART_WINDOW_SIZE -lt 0 ]; then elif [ "--autostart-window-retry-limit" = "$1" ] if [ $AUTOSTART_WINDOW_RETRY_LIMIT -lt 0 ]; then elif [ "--internal-classpath" = "$1" ] elif [ "--debug" = "$1" ] elif [ "--help" = "$1" ] || [ "-h" = "$1" ] if [ -n "$HBASE_JMX_BASE" ] && [ -z "$HBASE_JMX_OPTS" ]; then if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_THRIFT_JMX_OPTS" ]; then if [ -z "$HBASE_THRIFT_OPTS" ]; then if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_REST_JMX_OPTS" ]; then if [ -z "$HBASE_REST_OPTS" ]; then if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then if [ "$HBASE_REGIONSERVER_MLOCK" = "true" ]; then if [ ! -f "$MLOCK_AGENT" ]; then if [ -z "$HBASE_REGIONSERVER_UID" ] || [ "$HBASE_REGIONSERVER_UID" == "$USER" ]; then if [ -z "$JAVA_HOME" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/master-backup.sh
lines,74
function,0


for,1
for hmaster in `cat "$HOSTLIST"`; do
if,5
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_BACKUP_MASTERS" = "" ]; then if [ -f $HOSTLIST ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/graceful_stop.sh
lines,205
function,2
function usage {
log() {
for,2
echo " n|noack Enable noAck mode in RegionMover. This is a best effort mode for \ echo " movetimeout xx Timeout for moving regions. If regions are not moved by the timeout value,\
if,23
echo " hostname Hostname to stop; match what HBase uses; pass 'localhost' if local to avoid ssh" echo " e|failfast Set -e so exit immediately if any command exits with non-zero status" if [ $ if [ $ if [ "$failfast" != "" ]; then log "Set failfast, will exit immediately if any command exits with non-zero status" if [ "$localhostname" == "$hostname" ] || [ "$hostname" == "localhost" ]; then if [ "$nob" == "true" ]; then if [ "$designatedfile" != "" ]; then if [ "$excludefile" != "" ]; then if [ "$thrift" != "" ]; then if [ "$local" == true ]; then if [ "$rest" != "" ]; then if [ "$local" == true ]; then if [ "$local" == true ]; then if [ "$restart" != "" ]; then if [ "$local" == true ]; then if [ "$thrift" != "" ]; then if [ "$local" == true ]; then if [ "$rest" != "" ]; then if [ "$local" == true ]; then if [ "$reload" != "" ]; then if [ "$HBASE_BALANCER_STATE" != "false" ] && [ "$nob" != "true" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/hbase-common.sh
lines,41
function,1

waitForProcessEnd() {
for,0

if,2
if [ $(( `date +%s` - $processedAt )) -gt ${HBASE_STOP_TIMEOUT:-1200} ]; then if kill -0 $pidKilled > /dev/null 2>&1; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/chaos-daemon.sh
lines,140
function,1

check_before_start(){
for,0

if,15
if [ $ if [ -f "$CHAOS_PID" ]; then if kill -0 "$(cat "$CHAOS_PID")" > /dev/null 2>&1; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -z "${HBASE_ROOT_LOGGER}" ]; then if [ -z "${HBASE_SECURITY_LOGGER}" ]; then if [ -z "$CHAOS_JAVA_OPTS" ]; then if [ "$command" = "chaosagent" ]; then elif [ "$command" = "chaosmonkeyrunner" ]; then if [ -f $CHAOS_PID ]; then if kill -0 $pidToKill > /dev/null 2>&1; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/regionservers.sh
lines,83
function,0


for,1
for regionserver in `cat "$HOSTLIST"`; do
if,6
if [ $ if [ "$HOSTLIST" = "" ]; then if [ "$HBASE_REGIONSERVERS" = "" ]; then if [ "$regionservers" = "localhost" ]; then if ${HBASE_SLAVE_PARALLEL:-true}; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/hbase-daemons.sh
lines,62
function,0


for,1
[--autostart-window-retry-limit <retry count limit for autostart>] \
if,2
if [ $ if [[ "$1" = "autostart" || "$1" = "autorestart" ]]
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/rolling-restart.sh
lines,228
function,1
function usage() {
function usage() {
for,5
[--autostart-window-retry-limit <retry count limit for autostart>] [--autostart] [--rs-only] [--master-only] \ echo -n "Waiting for Master ZNode ${zmaster} to expire" echo "Wait a minute for master to come up join cluster" echo -n "Waiting for ${zunassigned} to empty" for rs in $online_regionservers
if,16
if [ $errCode -ne 0 ] if [ "$distMode" == 'false' ]; then if [ $RR_RS -ne 1 ] || [ $RR_MASTER -ne 1 ]; then echo Cant do selective rolling restart if not running distributed if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ $RR_MASTER -eq 1 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ "$zunassigned" == "null" ]; then zunassigned="region-in-transition"; fi if test 0 -eq ${ret} if test 0 -eq ${unassigned} if [ $RR_RS -eq 1 ]; then if [ $RR_GRACEFUL -eq 1 ]; then if [ "$masterport" == "null" ]; then masterport="16000"; fi if [ "$zkrs" == "null" ]; then zkrs="rs"; fi if [ "$port" -eq "$masterport" ]; then if [ "$HBASE_BALANCER_STATE" != "false" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/considerAsDead.sh
lines,61
function,0


for,1
for rs in $online_regionservers
if,4
if [ $ if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$zkrs" == "null" ]; then zkrs="rs"; fi if [ "$deadhost" == "$hostname" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/start-hbase.sh
lines,65
function,0


for,1
[--autostart-window-retry-limit <retry count limit for autostart>]\
if,3
if [ $errCode -ne 0 ] if [ "$1" = "autostart" ] if [ "$distMode" == 'false' ]
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/test/process_based_cluster.sh
lines,108
function,4

print_usage() { show_processes() { cmd_specified() { list_pid_files() {
for,1
for F in `list_pid_files`; do
if,6
if [ "$CMD_SPECIFIED" ]; then if [ $ if [ "$IS_KILL" ]; then elif [ "$IS_SHOW" ]; then if [ -n "$PID" ]; then if [ -n "$PIDS" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/local-regionservers.sh
lines,74
function,1

run_regionserver () {
for,2
echo " [--autostart-window-retry-limit <retry count limit for autostart>] [autostart|start|stop] offset(s)" for i in "$@"
if,4
if [ -z "$HBASE_RS_BASE_PORT" ]; then if [ -z "$HBASE_RS_INFO_BASE_PORT" ]; then if [ $ if [[ "$i" =~ ^[0-9]+$ ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/hbase-cleanup.sh
lines,155
function,6

check_for_znodes() { execute_zk_command() { execute_hdfs_command() { execute_clean_acls() { clean_up() { check_znode_exists() {
for,0

if,11
if [ $ if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$hrootdir" == "null" ]; then hrootdir="file:///tmp/hbase-${USER}/hbase"; fi if [ "$zchild" == "null" ]; then zchild="rs"; fi if [ "$zchild" == "null" ]; then zchild="backup-masters"; fi if [ "$znodes" != "" ]; then if [ "${hbasewaldir}" != "null" ]; then if [ "${hbasewaldir}" != "null" ]; then if [ $? -ne 0 ]; then if [ "$zmaster" == "null" ]; then zmaster="master"; fi if [ $? -ne 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/zookeepers.sh
lines,59
function,0


for,1
for zookeeper in $hosts; do
if,4
if [ $ if [ "$HBASE_MANAGES_ZK" = "" ]; then if [ "$HBASE_MANAGES_ZK" = "true" ]; then if [ "$HBASE_SLAVE_SLEEP" != "" ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/stop-hbase.sh
lines,80
function,1

show_usage() {
for,1
usage="Usage: stop-hbase.sh can only be used for shutting down entire cluster\
if,5
if [ "--help" = "$1" ] || [ "-h" = "$1" ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [[ -e $pid ]]; then if [ "$distMode" == 'true' ]
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/local-master-backup.sh
lines,65
function,1

run_master () {
for,2
echo " [--autostart-window-retry-limit <retry count limit for autostart>] [autostart|start|stop] offset(s)" for i in $*
if,2
if [ $ if [[ "$i" =~ ^[0-9]+$ ]]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/bin/hbase-daemon.sh
lines,383
function,6
function sighup_handler function sigterm_handler
hbase_rotate_log () cleanAfterRun() { check_before_start(){ wait_until_done ()
for,2
[--autostart-window-retry-limit <retry count limit for autostart>]\ echo "`date` Autostart window retry limit: $AUTOSTART_WINDOW_RETRY_LIMIT exceeded for given window size: $AUTOSTART_WINDOW_SIZE hours.. Exiting..." >> ${HBASE_LOGLOG}
if,34
if [ $ if [ -n "$2" ]; then if [ -f "$log" ]; then if [ -f "${HBASE_PID}" ] ; then if [ -f "${HBASE_PID}" ]; then if [ -f "${HBASE_ZNODE_FILE}" ]; then if [ "${command}" = "master" ]; then if [ -f $HBASE_PID ]; then if kill -0 `cat $HBASE_PID` > /dev/null 2>&1; then if [ $cnt -gt 1 ]; then if [ "$HBASE_LOG_DIR" = "" ]; then if [ "$HBASE_PID_DIR" = "" ]; then if [ "$HBASE_IDENT_STRING" = "" ]; then if [ "$JAVA_HOME" != "" ]; then if [ "$JAVA_HOME" = "" ]; then if [ -z "${HBASE_ROOT_LOGGER}" ]; then if [ -z "${HBASE_SECURITY_LOGGER}" ]; then if [ -n "$SERVER_GC_OPTS" ]; then if [ -n "$CLIENT_GC_OPTS" ]; then if [ "$HBASE_NICENESS" = "" ]; then if [ $sp -gt 0 ]; then if [ "$HBASE_NO_REDIRECT_LOG" != "" ]; then if [ -f $HBASE_PID ] && kill -0 "$(cat "$HBASE_PID")" > /dev/null 2>&1 ; then if [ ! -f "$HBASE_AUTOSTART_FILE" ]; then if [ "$distMode" != 'false' ]; then if [ "$zparent" == "null" ]; then zparent="/hbase"; fi if [ "$zkrunning" == "null" ]; then zkrunning="running"; fi if [ $? -eq 0 ]; then if [ $? -eq 0 ]; then if [ $AUTOSTART_WINDOW_SIZE -gt 0 ] && [ $(( $curDate - $autostartWindowStartDate )) -gt $(( $AUTOSTART_WINDOW_SIZE find_bash.sh hbase output.txt outputbashcleaned.txt process_bash.py $ONE_HOUR_IN_SECS )) ]; then if ! $autostartWindowReset && [ $AUTOSTART_WINDOW_RETRY_LIMIT -gt 0 ] && [ $autostartCount -gt $AUTOSTART_WINDOW_RETRY_LIMIT ]; then if [ -f $HBASE_PID ]; then if kill -0 $pidToKill > /dev/null 2>&1; then if [ $sp -gt 0 ]; then
git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-archetypes/hbase-archetype-builder/createArchetypes.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/hbase.git,dde504ce489fd3fd55166a872768a077400ba2ab,hbase,4979,./hbase/hbase-archetypes/hbase-archetype-builder/installArchetypes.sh
lines,35
function,0


for,0

if,0

git@github.com:yipianfengye/android-zxingLibrary.git,fe7b868f8d232031ddcd099c8fc79a562a758bd2,android-zxingLibrary,4973,
git@github.com:rubensousa/GravitySnapHelper.git,5336f036ff0b05fb1f80d555dabd6a85fca11586,GravitySnapHelper,4972,
git@github.com:apache/groovy.git,ba86d8f9e70b14ad1a3972bdb05cc8f927839fdd,groovy,4969,./groovy/.muse/codenarc.sh
lines,56
function,5
function version() { function applicable() { function gettool() { function emit_results() { function run() {
function version() { function applicable() { function gettool() { function emit_results() { function run() {
for,0

if,3
if [[ "$cmd" = "run" ]] ; then if [[ "$cmd" = "applicable" ]] ; then if [[ "$cmd" = "version" ]] ; then
git@github.com:amitshekhariitbhu/RxJava2-Android-Samples.git,32432ed7b3672a73e3a08116a34e3af7764fc55f,RxJava2-Android-Samples,4958,
git@github.com:DingMouRen/LayoutManagerGroup.git,26a38fd30d1f04730051198aa512f3ede8c99b45,LayoutManagerGroup,4955,
git@github.com:Devlight/NavigationTabBar.git,bd5d779548a002af24daf8c8a2b0cf0ee91531e4,NavigationTabBar,4954,
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/docker/load-initdb.sh
lines,34
function,0


for,2
"until true &>/dev/null </dev/tcp/127.0.0.1/8182; do echo \"waiting for JanusGraph Server...\"; sleep 5; done" for f in ${JANUS_INITDB_DIR}/*; do
if,2
if ! [ "$(ls -A ${JANUS_INITDB_DIR})" ]; then if ! [ -z "${JANUS_SERVER_TIMEOUT:-}" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/docker/docker-entrypoint.sh
lines,92
function,0


for,1
"until bin/gremlin.sh -e $F > /dev/null 2>&1; do echo \"waiting for storage...\"; sleep 5; done"
if,10
if [ "$1" == 'janusgraph' ] && [ "$(id -u)" == "0" ]; then if [ "$1" == 'janusgraph' ]; then if [[ "${envvar_key}" =~ janusgraph\. ]] && [[ ! -z ${envvar_val} ]]; then if grep -q -E "^\s*${envvar_key}\s*=\.*" ${JANUS_PROPS}; then elif [[ "${envvar_key}" =~ gremlinserver(%d)?[.]{1}(.+) ]]; then if [[ ${BASH_REMATCH[1]} == "%d" ]]; then edit_mode="d"; else edit_mode="w"; fi if [[ edit_mode == "d" ]]; then envvar_val=""; fi if [ "$2" == 'show-config' ]; then if ! [ -z "${JANUS_STORAGE_TIMEOUT:-}" ]; then if ! [ -z "${GREMLIN_REMOTE_HOSTS:-}" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/docker/test-image.sh
lines,55
function,0


for,2
for i in $(seq 1 10); do echo "Timeout waiting for health check:"
if,3
if [ -z "${IMAGE:-}" ]; then if [ -z "${res:-}" ]; then if [ -z "${res:-}" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/docker/build-and-push-image.sh
lines,81
function,0

TAGS=() BUILD_ARGS=()
for,2
for BUILD_ARG in "${BUILD_ARGS[@]}" for TAG in "${TAGS[@]}"
if,5
if [ "$ if [[ $PUSH == "push" ]]; then if [[ $MULTI_PLATFORM == "true" ]]; then if [[ $JANUS_VERSION == *"${REVISION}"* ]]; then if [[ $PUSH == "no-push" ]]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/src/assembly/static/bin/janusgraph-server.sh
lines,329
function,9

setValidConfiguration() { useGremlinServerConfiguration(){ isRunning() { status() { stop() { start() { startForeground() { printConfig() { printUsage() {
for,3
for opt in "$(grep '^-' $JAVA_OPTIONS_FILE)" for i in $(seq 1 60); do echo " console Start the server in the foreground. Same rules are applied for configurations as described
if,32
if [[ -z "$JANUSGRAPH_HOME" ]]; then if [[ -z "$JANUSGRAPH_CONF" ]] ; then if [[ -z "$LOG_DIR" ]] ; then if [[ -z "$LOG_FILE" ]]; then if [[ -z "$PID_DIR" ]] ; then if [[ -z "$PID_FILE" ]]; then if [[ -r "$1" ]]; then elif [[ -r "$JANUSGRAPH_HOME/$1" ]] ; then elif [[ -r "$JANUSGRAPH_CONF/$1" ]] ; then if [[ -n "$1" ]] ; then elif [[ -z "$JANUSGRAPH_YAML" ]]; then elif [[ -r "$JANUSGRAPH_YAML" ]]; then if [[ -z "$JANUSGRAPH_LIB" ]]; then if [[ "$JAVA_HOME" = "" ]] ; then if [[ -z "$JAVA_OPTIONS_FILE" ]]; then if [[ $jver == "1.8" ]]; then if [[ -f "$JAVA_OPTIONS_FILE" ]]; then if [[ -z "$CP" ]];then if [[ -r "$PID_FILE" ]] ; then if [[ $RUNNING -gt 0 ]]; then if [[ $RUNNING -gt 0 ]]; then if [[ $RUNNING -eq 0 ]]; then if [[ -z "$RUNAS" ]]; then if [[ ! -d "$LOG_DIR" ]]; then if [[ ! -d "$PID_DIR" ]]; then if [[ ! -d "$LOG_DIR" ]]; then if [[ ! -d "$PID_DIR" ]]; then if [[ $RUNNING -eq 0 ]]; then if [[ $RUNNING -eq 0 ]]; then if [[ -z "$RUNAS" ]]; then echo " status Check if the server is running" if [[ -n "$1" ]] ; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/src/assembly/static/bin/janusgraph.sh
lines,297
function,12

abs_path() { wait_for_cassandra() { wait_for_startup() { wait_for_shutdown() { start() { stop() { kill_class() { status_class() { status() { clean() { usage() { find_verb() {
for,4
for maybejps in jps "${JAVA_HOME}/bin/jps"; do echo "See $BIN/../logs/cassandra.log for Cassandra log output." >&2 echo "See $BIN/../logs/elasticsearch.log for Elasticsearch log output." >&2 echo "See $BIN/../logs/janusgraph.log for $JANUSGRAPH_FRIENDLY_NAME log output." >&2
if,18
if [ -z "$JANUSGRAPH_HOME" ]; then if [ $? -eq 0 ]; then if [ -z "$JPS" ]; then if [ $? -eq 0 -a 'running' = "$statusbinary" ]; then if [ $? -eq 0 ]; then if [ $? -eq 1 ]; then if [ -n "$VERBOSE" ]; then if [ -n "$VERBOSE" ]; then if [ -n "$VERBOSE" ]; then if [ -z "$p" ]; then if [ -n "$p" ]; then if [ "$response" != "y" -a "$response" != "Y" ]; then if cd "$BIN"/../db 2>/dev/null; then if cd "$BIN"/../logs; then if [ "$1" = 'start' -o \ if find_verb ${!OPTIND}; then elif getopts 'c:v' option; then if [ -n "$COMMAND" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/src/assembly/static/bin/checkconfig.sh
lines,117
function,1

abs_path() {
for,0

if,14
if [ -n "${HADOOP_PREFIX:-}" ]; then if [ -d "$HADOOP_PREFIX"/etc/hadoop ]; then elif [ -d "$HADOOP_PREFIX"/conf ]; then elif [ -n "${HADOOP_CONF_DIR:-}" ]; then elif [ -n "${HADOOP_CONF:-}" ]; then elif [ -n "${HADOOP_HOME:-}" ]; then if [ -d "$HADOOP_HOME"/etc/hadoop ]; then elif [ -d "$HADOOP_HOME"/conf ]; then if [ -z "${JAVA_HOME:-}" ]; then if [ -z "${GREMLIN_LOG_LEVEL:-}" -o "${GREMLIN_MR_LOG_LEVEL:-}" ]; then if [ -z "${SCRIPT_DEBUG:-}" ]; then if [ "$GREMLIN_LOG_LEVEL" = "TRACE" -o \ if [ -z "${JAVA_OPTIONS:-}" ]; then if [ -n "$SCRIPT_DEBUG" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/src/assembly/static/bin/gremlin.sh
lines,128
function,0


for,0

if,8
if [ ! -z "${JAVA_OPTIONS}" ]; then if [ ! -z "${USER_EXT_DIR}" -a ! -d "${USER_EXT_DIR}" ]; then if [ -z "${JAVA_HOME:-}" ]; then if [ -z "${SCRIPT_DEBUG:-}" ]; then if [ "$GREMLIN_LOG_LEVEL" = "TRACE" -o \ if [ -z "${HADOOP_GREMLIN_LIBS:-}" ]; then JAVA_OPTIONS=$(awk -v RS=' ' '!/^$/ {if (!x[$0]++) print}' <<< "${JAVA_OPTIONS}" | grep -v '^$' | paste -sd ' ' -) if [ -n "$SCRIPT_DEBUG" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-dist/src/assembly/static/bin/checksocket.sh
lines,37
function,1

abs_path() {
for,0

if,1
if [ -n "$JAVA_HOME" ]; then
git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-solr/src/test/resources/import-collections.sh
lines,21
function,0


for,1
for core in $(cat /tmp/collections.txt); do /opt/solr/server/scripts/cloud-scripts/zkcli.sh -zkhost 172.17.0.1:9983 -cmd upconfig -confdir mydata -confname $core; done
if,0

git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-cql/src/test/resources/docker/janusgraph_docker_entrypoint.sh
lines,19
function,0


for,0

if,0

git@github.com:JanusGraph/janusgraph.git,f7f7af184d82469dc3db7ec0a6fd1450aecb4762,janusgraph,4945,./janusgraph/janusgraph-hbase/docker/entrypoint.sh
lines,19
function,0


for,0

if,0

git@github.com:JodaOrg/joda-time.git,b92d88eea7df04f066d141c6e3d834f2894e52ef,joda-time,4941,./joda-time/.github/website.sh
lines,24
function,0


for,0

if,0

git@github.com:traex/RippleEffect.git,df5f9e4456eae8a8e98e2827a3c6f9e7185596e1,RippleEffect,4939,
git@github.com:CodingDocs/springboot-guide.git,76c018d7d898d61d9ce07a975c0056a36a5f9358,springboot-guide,4932,
git@github.com:ZHENFENG13/spring-boot-projects.git,f08f1c4f91de27edb45f2c6702c7b23d0acf68cc,spring-boot-projects,4902,
git@github.com:spring-projects/spring-data-examples.git,c4d1ca270fcf32a93c2a5e9d7e91a5592b7720ff,spring-data-examples,4894,
git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/build-bigtable.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/src/create_table.sh
lines,60
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/src/upgrade_1to2.sh
lines,39
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/src/mygnuplot.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/build.sh
lines,9
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/fat-jar/create-src-dir-overlay.sh
lines,29
function,0


for,0

if,4
if [ ! -d src-main ]; then if [ ! -d src-test ]; then if [ ! -d src-resources ]; then if [ ! -d test-resources ]; then
git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/build-aux/gen_build_data.sh
lines,155
function,17

fatal() { t = time.time(); is_mint_repo() { public static final String revisionString() { public static final String buildString() { public static String version() { public static String shortRevision() { public static String fullRevision() { public static String date() { public static long timestamp() { public static RepoStatus repoStatus() { public static String user() { public static String host() { public static String repo() { private $CLASS() {} System.out.println(revisionString()); System.out.println(buildString());
for,1
/bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII Build data for {@code $PACKAGE} opentsdb/
if,1
if is_mint_repo; then
git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/build-aux/create-src-dir-overlay.sh
lines,17
function,0


for,0

if,2
if [ ! -d src-main ]; then if [ ! -d src-test ]; then
git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/build-cassandra.sh
lines,8
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/tools/docker/docker.sh
lines,16
function,0


for,0

if,0

git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/tools/osx_full_stack_install.sh
lines,93
function,0


for,2
find_bash.sh opentsdb output.txt outputbashcleaned.txt process_bash.py distributed with this work for additional information find_bash.sh opentsdb output.txt outputbashcleaned.txt process_bash.py See the License for the specific language governing permissions and
if,2
if [ $ if [ ! -d "${BASE_DIR}" ] ; then
git@github.com:OpenTSDB/opentsdb.git,9de0f9f31e2524ccb5843b631ded9c4ba09f5a17,opentsdb,4887,./opentsdb/tools/clean_cache.sh
lines,12
function,1

diskSpaceIsShort() {
for,0

if,2
| awk 'NR==2{pct=$5; sub(/%/, "", pct); if (pct < 90) exit 1; exit 0;}' if diskSpaceIsShort; then
git@github.com:Ramotion/folding-cell-android.git,d8736d1bd5071dc61a36548e708fbd055af31ff2,folding-cell-android,4884,
git@github.com:andkulikov/Transitions-Everywhere.git,226eb81be7f3e1487886594812f56a289ea3d72a,Transitions-Everywhere,4841,
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/testlib/create-class-h.sh
lines,26
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/testlib/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/testlib/create-interface.sh
lines,22
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/create-class-h.sh
lines,26
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus/src/vespa/messagebus/create-interface.sh
lines,22
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/rpc-error/dotest.sh
lines,45
function,0


for,0

if,2
if [ -z "$SOURCE_DIRECTORY" ]; then if [ $fail = "0" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/rpc-error/rpc-error_test.sh
lines,25
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/rpc-error/progdefs.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/slobrok-api/dotest.sh
lines,15
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/slobrok-api/progdefs.sh
lines,2
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mandatory-methods/mandatory-methods_test.sh
lines,19
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mandatory-methods/dotest.sh
lines,20
function,0


for,0

if,2
if [ -z "$SOURCE_DIRECTORY" ]; then if diff -u out.txt $SOURCE_DIRECTORY/ref.txt; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mandatory-methods/progdefs.sh
lines,2
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mockup-invoke/dotest.sh
lines,23
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mockup-invoke/mockup-invoke_test.sh
lines,20
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/mockup-invoke/progdefs.sh
lines,2
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/echo/dotest.sh
lines,19
function,0


for,0

if,2
if [ -z "$SOURCE_DIRECTORY" ]; then if diff -u out.txt $SOURCE_DIRECTORY/ref.txt; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/echo/progdefs.sh
lines,2
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/tests/echo/echo_test.sh
lines,12
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt_test/src/binref/progctl.sh
lines,180
function,10

prog() { print_usage() { check_entry() { check_usage() { start() { stop() { check() { start_all() { stop_all() { check_all() {
for,0

if,14
if [ "$ if [ "$p" = "$1" ] && [ "$i" = "$2" ]; then if [ "$1" != "start" ] && [ "$1" != "stop" ] && [ "$1" != "check" ]; then if [ "$ if [ "$ if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "X$4" != "X" ]; then if [ "X$pid" = "X" ]; then if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "$2" = "all" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalog/src/test/bufferedlogtest_test.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalog/src/test/bufferedlogskiptest_test.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespa-feed-client-cli/src/main/sh/vespa-feed-client.sh
lines,86
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespa-feed-client-cli/src/main/sh/vespa-feed-client-standalone.sh
lines,8
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespa-feed-client-cli/vespa-feed-client-dev.sh
lines,12
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-model/remove-indexes-from-temp-files.sh
lines,4
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-model/src/test/sh/test-schema.sh
lines,41
function,0


for,0

if,1
if $cmd; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-model/src/main/make-xsd-files.sh
lines,46
function,3

gen_xsd() { regenall() { need_regen() {
for,4
for x in $outputs; do gen_xsd $x; done for out in $outputs; do for infile in ${srcdir}/*.*; do echo "No updates for schema files"
if,3
if [ -f ${outfile} ]; then if [ ${infile} -nt ${outfile} ]; then if need_regen; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/storage/src/vespa/storage/tools/generate_distribution_doc.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/vespa/vespalib/data/slime/make_dist.sh
lines,120
function,6

int main() { int main() { int main(); MultiTools::main() int main() { return tools.main();
for,4
hfiles=$(for file in *.h; do echo $file $file; cat $file | sed -n -e "s/ for file in $hfiles; do for file in $cppfiles; do echo "AWESOME (slime_me.{h,cpp} are ready for use)"
if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/vespa/vespalib/testkit/progctl.sh
lines,180
function,10

prog() { print_usage() { check_entry() { check_usage() { start() { stop() { check() { start_all() { stop_all() { check_all() {
for,0

if,14
if [ "$ if [ "$p" = "$1" ] && [ "$i" = "$2" ]; then if [ "$1" != "start" ] && [ "$1" != "stop" ] && [ "$1" != "check" ]; then if [ "$ if [ "$ if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "X$4" != "X" ]; then if [ "X$pid" = "X" ]; then if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "$2" = "all" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/benchmark/benchmark_test.sh
lines,21
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/util/process_memory_stats/process_memory_stats_test.sh
lines,6
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/tutorial/compare-tutorials.sh
lines,11
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/tutorial/make_source.sh
lines,7
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/tutorial/make_example.sh
lines,16
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespalib/src/tests/testkit-subset/testkit-subset_test.sh
lines,13
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/streamingvisitors/src/tests/searchvisitor/cfg/generate.sh
lines,29
function,0


for,1
for file in *.cfg; do echo >> $file; done
if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-visit.sh
lines,101
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,1
for arg in "$@"; do
if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ "${VESPA_LOG_LEVEL}" = "" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-crypto-cli.sh
lines,88
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-feeder.sh
lines,89
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-stat.sh
lines,87
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-summary-benchmark.sh
lines,89
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-crypto-cli-standalone.sh
lines,18
function,0


for,0

if,1
if ! test -e "$jarfile"
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-query-profile-dump-tool.sh
lines,80
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-document-statistics.sh
lines,94
function,5
function help {
findpath () { source_common_env () { findroot () { findhost () {
for,0

if,11
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ "$1" == "-h" ]; then if [ "$1" == "" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-destination.sh
lines,88
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-visit-target.sh
lines,87
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-status-filedistribution.sh
lines,91
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,11
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ "$VESPA_ENVIRONMENT" != "" ]; then if [ "$VESPA_REGION" != "" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient-java/src/main/sh/vespa-get.sh
lines,88
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vbench/src/vbench/test/create-all-h.sh
lines,24
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vbench/src/apps/vbench/run.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/compile-java/compile-java_test.sh
lines,13
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/speed/ctl.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/speed/speed_test.sh
lines,14
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/speed/progdefs.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/trace/ctl.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/trace/trace_test.sh
lines,13
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/trace/progdefs.sh
lines,15
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/errorcodes/errorcodes_test.sh
lines,16
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/error/ctl.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/error/error_test.sh
lines,13
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/tests/error/progdefs.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/messagebus_test/src/binref/progctl.sh
lines,149
function,10

prog() { print_usage() { check_entry() { check_usage() { start() { stop() { check() { start_all() { stop_all() { check_all() {
for,0

if,14
if [ "$ if [ "$p" = "$1" ] && [ "$i" = "$2" ]; then if [ "$1" != "start" ] && [ "$1" != "stop" ] && [ "$1" != "check" ]; then if [ "$ if [ "$ if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "X$4" != "X" ]; then if [ "X$pid" = "X" ]; then if [ "X$pid" != "X" ] && kill -0 $pid 2> /dev/null; then if [ "$2" = "all" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then if [ "$1" = "start" ]; then elif [ "$1" = "stop" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/queryeval/create-class-h.sh
lines,27
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/queryeval/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/queryeval/create-interface.sh
lines,23
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/features/create-class-h.sh
lines,27
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/features/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/engine/create-class-h.sh
lines,27
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/engine/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/engine/create-interface.sh
lines,23
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/fef/create-class-h.sh
lines,27
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/fef/dist_doc_hp.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/fef/create-fef-includes.sh
lines,26
function,0


for,1
for f in *.h; do
if,1
if [ $f != "fef.h" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/fef/create-class-cpp.sh
lines,24
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/vespa/searchlib/fef/create-interface.sh
lines,23
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/diskindex/fusion/fusion_test.sh
lines,16
function,0


for,3
$ECHO_CMD dumping dictionary words for field f0 $ECHO_CMD transposing index back for inspection $ECHO_CMD dumping posting list for word z in field f0
if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/features/prod_features_test.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/transactionlogstress/translogstress_test.sh
lines,7
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/url/dotest.sh
lines,14
function,0


for,0

if,1
if [ $? -eq 0 ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/docstore/logdatastore/logdatastore_test.sh
lines,29
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/attribute/stringattribute/stringattribute_test.sh
lines,6
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/attribute/searchcontext/searchcontext_test.sh
lines,8
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/attribute/changevector/changevector_test.sh
lines,9
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/tests/attribute/guard/attributeguard_test.sh
lines,9
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/main/sh/vespa-evaluate-tensor-conformance.sh
lines,82
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchlib/src/forcelink.sh
lines,45
function,0

find . -name "*.cpp" -maxdepth 1 | sed -e "s|.*/\(.*\)\.cpp|void ${prefix}\1();|" >> forcelink.hpp echo "void forcelink_${project}_${guard}() {" >> forcelink.hpp find . -name "*.cpp" -maxdepth 1 | sed -e "s|.*/\(.*\)\.cpp| ${prefix}\1();|" >> forcelink.hpp echo "invoke 'forcelink_${project}_${guard}()' to force link this directory" echo "void ${name}() {}" >> $file
for,1
for file in *.cpp; do
if,3
if [ X$1 == "Xupdate" ]; then if [ $found == "0" ]; then echo "if you feel lucky, run:"
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vdslib/src/tests/state/generate_plots.sh
lines,17
function,0


for,1
for a in `ls state/plots/scripts`; do echo "$a"; gnuplot state/plots/scripts/$a; done
if,1
if [ $? -ne 0 ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/segmenter_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/ngram_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/detector_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/alltest.sh
lines,27
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/lookup_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/fsa_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/fsa/src/alltest/vectorizer_test.sh
lines,10
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/dist/build-rpm.sh
lines,125
function,4

Usage() { Fail() { Run() { Main() { local -a dists=() local -a defines=()
for,3
-d DIST The %dist to build for (e.g. .el7 for RHEL 7). Can be specified for arg in "$@"; do for dist in "${dists[@]}"; do
if,13
Run rpmbuild with the given specfile macros, creating TOPDIR if necessary. if no -d options have been specified. if ! test -d "$builddir"; then elif ! builddir=$(readlink -e "$builddir"); then if ! [[ "$topdir" =~ ^/ ]]; then if ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then if (( $ elif (( $ if test -n "$builddir"; then if test -n "$topdir"; then if ! mkdir -p "$topdir"; then if test -n "$version"; then if (( ${
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/dist/release-vespa-rpm.sh
lines,32
function,0


for,0

if,2
if [[ $ if [[ -z $COPR_WEBHOOK ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/dist/getversionmap.sh
lines,58
function,0


for,0

if,5
if [ "$dateadd" = "" ]; then if [ "$version" = "" ]; then if [ "$major" = "" ]; then major=0; fi if [ "$minor" = "" ]; then minor=0; fi if [ "$micro" = "" ]; then micro=0; fi
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-proxy/src/main/sh/vespa-config-ctl.sh
lines,179
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,3
echo "Waiting for config proxy to start" for ((sleepcount=0;$sleepcount<1800;sleepcount=$sleepcount+1)) ; do echo "look for reason in vespa.log, last part follows..." 1>&2
if,14
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ -f $P_CONFIG_PROXY ] && kill -0 `cat $P_CONFIG_PROXY` && vespa-ping-configproxy -s $hname 2>/dev/null if $fail ; then if ! [ -f $P_CONFIG_PROXY ] elif ! kill -0 `cat $P_CONFIG_PROXY` elif ! vespa-ping-configproxy -s $hname
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-proxy/src/main/sh/vespa-config-loadtester.sh
lines,82
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/config-proxy/src/main/sh/vespa-config-verification.sh
lines,82
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespaclient/bin/vdsgetsystemstate.sh
lines,8
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/dist.sh
lines,20
function,0


for,0

if,2
if [ -z "$1" ]; then if [ ! -e "$DIST_FILE" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/standalone-container/src/main/sh/standalone-container.sh
lines,357
function,11

findpath () { source_common_env () { findroot () { findhost () { Usage() { Fail() { FixDataDirectory() { StartCommand() { Kill() { StopCommand() { Main() { local -a jvm_arguments=()
for,0

if,30
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if ! [ -d "$1" ]; then if [ -e "$1" ]; then if ! [[ "$service" =~ $service_regex ]]; then if [ "$force" = false ] && test -r "$pidfile"; then if true; then if ! now=$(date +%s); then if ! ps_output=$(ps -p "$pid" -o user= -o comm=); then if test "$user" != "$expected_user"; then if test "$comm" != "$expected_comm"; then if ! "$has_killed"; then if $force; then if ! kill -KILL "$pid"; then if ! kill "$pid"; then if (( now >= timeout )); then if ! test -r "$pidfile"; then if ! [[ "$pid" =~ ^[0-9]+$ ]]; then if (( $ if test -z "$service"; then elif ! [[ "$service" =~ $service_regex ]]; then if ! getent passwd "$user" &> /dev/null; then elif test "$(id -un)" != "$user"; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/release-container-image.sh
lines,85
function,0


for,1
for data in "Dockerfile vespa"; do
if,6
if [[ $ if [[ -z "$DOCKER_HUB_DEPLOY_KEY" ]]; then if [[ -z "$GHCR_DEPLOY_KEY" ]]; then if git rev-parse $RELEASE_TAG &> /dev/null; then if curl -fsSL https://index.docker.io/v1/repositories/vespaengine/$IMAGE_NAME/tags/$VESPA_VERSION &> /dev/null; then if grep $VESPA_VERSION <<< "$IMAGE_TAGS" &> /dev/null; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/release-ann-benchmark.sh
lines,32
function,0


for,0

if,3
if [[ $ if [[ -z "$ANN_BENCHMARK_DEPLOY_KEY" ]]; then if ! git rev-parse $RELEASE_TAG &> /dev/null; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/release-rpms.sh
lines,45
function,0


for,1
echo "Vespa RPMs for version $VESPA_RELEASE already exists. Exiting."
if,2
if [ $ if [[ "$VESPA_RELEASE" == "$VESPA_RPM_X86_64" ]] && [[ "$VESPA_RELEASE" == "$VESPA_RPM_AARCH64" ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/publish-unpublished-rpms-to-jfrog-cloud.sh
lines,77
function,0


for,3
name=Copr repo for vespa owned by @vespa for pv in $(cat $COPR_PACKAGES); do for rpm in $(ls *.rpm); do
if,7
if [[ ! -f /etc/yum.repos.d/group_vespa-vespa-epel-7.repo ]]; then if [[ ! -f /etc/yum.repos.d/vespa.repo ]]; then if ! dnf list -q --disablerepo='*' --enablerepo=vespa-release $pv &> /dev/null; then if ! ls *.rpm &> /dev/null; then if [[ -n $SCREWDRIVER ]] && [[ -z $SD_PULL_REQUEST ]]; then if ! $MYDIR/upload-rpm-to-artifactory.sh $rpm ; then if $UPLOAD_FAILED; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/factory-command.sh
lines,74
function,0


for,0

if,4
if (( $ if [[ -z $VERSION ]]; then echo "Usage: $0 $COMMAND <version>"; exit 1; fi if [[ -z $STATUS ]] || [[ -z $DESCRIPTION ]]; then echo "Usage: $0 $COMMAND <status> <description>"; exit 1; fi if [[ -z $VERSION ]]; then echo "Usage: $0 $COMMAND <version>"; exit 1; fi
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/test-quick-start-guide.sh
lines,26
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/release-container-image-docker.sh
lines,89
function,0


for,1
for data in "Dockerfile vespa"; do
if,6
if [[ $ if [[ -z "$DOCKER_HUB_DEPLOY_KEY" ]]; then if [[ -z "$GHCR_DEPLOY_KEY" ]]; then if git rev-parse $RELEASE_TAG &> /dev/null; then if curl -fsSL https://index.docker.io/v1/repositories/vespaengine/$IMAGE_NAME/tags/$VESPA_VERSION &> /dev/null; then if grep $VESPA_VERSION <<< "$IMAGE_TAGS" &> /dev/null; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/update-vespa-version-in-sample-apps.sh
lines,67
function,2
function is_published { function wait_until_published {

for,1
echo "Waiting 60 seconds for version ${VESPA_RELEASE} on central maven repo ($cnt times)."
if,4
if [[ $ if mvn -V -B -pl ai.vespa.examples:album-recommendation-java -Dmaven.repo.local=$TMP_MVN_REPO -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests clean package; then if (( $cnt > 60 )); then if (( changes > 0 )); then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/build-vespa.sh
lines,74
function,1

build_cpp() {
for,0

if,2
if ! source $SOURCE_DIR/screwdriver/detect-what-to-build.sh; then if [[ $SHOULD_BUILD == systemtest ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/detect-what-to-build.sh
lines,37
function,0


for,1
FILES=$(for C in $COMMITS; do JSON=$(curl -sLf https://api.github.com/repos/vespa-engine/vespa/commits/$C); jq -re '.files[].filename' <<< "$JSON"; done)
if,7
if (( ${ if [[ $SD_PULL_REQUEST == false ]]; then if ! [[ $PR_TITLE =~ \[skip-systemtest\] ]]; then elif [[ -z $FILES ]]; then elif ! grep -v -E "(\.h|\.hh|\.hxx|\.c|\.cpp|\.cxx)$" <<< "$FILES" &> /dev/null; then elif ! grep -v -E "(\.java)$" <<< "$FILES" &> /dev/null; then elif ! grep -v -E "(\.go)$" <<< "$FILES" &> /dev/null; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/replace-vespa-version-in-poms.sh
lines,18
function,0


for,0

if,1
if [[ $
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/release-java-artifacts.sh
lines,84
function,0


for,3
for MODULE in $(comm -2 -3 \ echo "No javadoc available for module" > $MODULE/src/main/javadoc/README echo "No javadoc available for module" > container-spifly/src/main/javadoc/README
if,3
if [[ $ if [[ -z $OSSRH_USER ]] || [[ -z $OSSRH_TOKEN ]] || [[ -z $GPG_KEYNAME ]] || [[ -z $GPG_PASSPHRASE ]] || [[ -z $GPG_ENCPHRASE ]]; then if [[ "200" == $QUERY_VERSION_HTTP_CODE ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/upload-rpm-to-artifactory.sh
lines,27
function,1

main() {
for,0

if,1
if [[ -z $JFROG_API_TOKEN ]] || [[ -z $RPM ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/screwdriver/delete-old-artifactory-artifacts.sh
lines,47
function,0


for,2
for VERSION in $VERSIONS_TO_DELETE; do for RPM in $(cat $RPMS_TO_DELETE); do
if,2
if [[ ! -f /etc/yum.repos.d/vespa.repo ]]; then if [[ -n $SCREWDRIVER ]] && [[ -z $SD_PULL_REQUEST ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/bootstrap.sh
lines,113
function,4

usage() { get_env_var_with_optional_default() { mvn_install() { force_move() {
for,0

if,7
if [ $ elif [ "$1" = "full" ]; then elif [ "$1" = "java" ]; then elif [ "$1" = "default" ]; then elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then if [[ -n $existing_value ]]; then elif [[ -n $default_val ]]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/overwrite/overwrite_test.sh
lines,10
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/thread/thread_test.sh
lines,24
function,0


for,1
echo "Trying to find limit for processes:"
if,2
if ulimit -u; then elif [ "$RETRYEXEC" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/allocfree/generate_testtable.sh
lines,22
function,0


for,2
for t in "cross thread" "same thread" "same + cross" for f in "glibc" "vespamallostatic" "vespamalloc" "tcmalloc" "jemalloc" "ptmalloc3" "nedmalloc" "hoard" "tlsf"
if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/allocfree/allocfree_benchmark.sh
lines,153
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/allocfree/allocfree_test.sh
lines,17
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/allocfree/timeusage.sh
lines,3
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespamalloc/src/tests/doubledelete/doubledelete_test.sh
lines,8
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/vespa/searchcore/proton/create-class-h.sh
lines,24
function,2

$class(); virtual ~$class();
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/vespa/searchcore/proton/create-base.sh
lines,30
function,0


for,1
echo "Code generation script for the $module module"
if,1
if [ $
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/vespa/searchcore/proton/create-class-cpp.sh
lines,21
function,2

$class::$class() $class::~$class()
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/vespa/searchcore/proton/matching/.create-overrides.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/vespa/searchcore/proton/create-interface.sh
lines,20
function,1

virtual ~$class() {}
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/verify_ranksetup/verify_ranksetup_test.sh
lines,6
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/clean_tests.sh
lines,8
function,0


for,1
for file in find_bash.sh output.txt outputbashcleaned.txt process_bash.py vespa
if,1
if [ -d "$file" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/documentdb/fileconfigmanager/fileconfigmanager_test.sh
lines,6
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/documentdb/feedhandler/feedhandler_test.sh
lines,4
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/documentdb/documentdb_test.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/attribute/attributeflush_test.sh
lines,5
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/tests/proton/docsummary/docsummary_test.sh
lines,16
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/apps/vespa-feed-bm/runtest.sh
lines,36
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/searchcore/src/apps/vespa-remove-indexes/vespa-remove-index.sh
lines,271
function,12

findpath () { source_common_env () { findroot () { findhost () { usage() { removedata() { confirm() { garbage_collect_dirs() { dokey() { docol() { dorow() { docluster() {
for,10
echo "-cluster <cluster> only remove data for given cluster" echo "-key <distribution key> only remove data for given key" echo "-row <row number> only remove data for given row" echo "-column <col number> only remove data for given column" echo "-force do not ask for confirmation before removal" echo "[ERROR] stop services and run 'ps xgauww' to check for Vespa processes" 1>&2 for c in `ls $rowdir`; do echo "[info] You have $kb kilobytes of data for cluster $cluster" for dirname in `ls $clusterdir`; do for dir in $newdir/cluster.* ; do
if,33
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then echo "It will refuse to execute if Vespa is running." if [ -w $newdir ] && [ -w $olddir ]; then if [ -f $P_CONFIGPROXY ] && $sudo kill -0 `cat $P_CONFIGPROXY` 2>/dev/null; then echo -n 'Really to remove this vespa index? Type "yes" if you are sure ==> ' 1>&2 if [ "$answer" = "yes" ]; then if $removeold && [ -d $olddir ]; then if $ask; then if [ $kb -gt 100 ]; then if $confirmed; then if ! [ -e "$keydir" ]; then if $ask && [ "$kb" -gt 2 ]; then if $confirmed; then if ! [ -e "$coldir" ]; then if $ask && [ "$kb" -gt 2 ]; then if $confirmed; then if [ "$onlycolumn" ]; then if [ "$col" ] && [ "$col" != "$c" ]; then if ! [ -e "$clusterdir" ]; then if [ $kb -gt 1000 ]; then if [ "$onlykey" ]; then elif [ "$onlyrow" ]; then if [ "$key" ] && [ "$key" != "$dirname" ]; then if [ "$row" ] && [ "$row" != "$dirname" ]; then if [ "$onlycluster" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/configd/src/tests/configd/run-sentinel.sh
lines,17
function,0


for,0

if,2
if ../../apps/sentinel/vespa-config-sentinel > tmp.log 2>&1 ; then if grep -q Usage tmp.log ; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/configd/src/apps/sentinel/sentinel-tester.sh
lines,4
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/jrt/runexample.sh
lines,9
function,0


for,0

if,1
if [ $
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/start-vespa-base.sh
lines,89
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/rhel-prestart.sh
lines,159
function,5

findpath () { source_common_env () { findroot () { findhost () { fixdir () {
for,2
echo "Wrong owner for ${VESPA_HOME}/$4, expected $1, was $user" echo "Wrong group for ${VESPA_HOME}/$4, expected $2, was $group"
if,17
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ "$VESPA_USER" = "" ]; then if [ "$VESPA_GROUP" = "" ]; then if [ "$VESPA_GROUP" = "" ]; then if [ $ if ! $IS_ROOT; then if [ "$1" != "$user" ]; then if [ "$2" != "$group" ]; then if $IS_ROOT; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/vespa-start-configserver.sh
lines,87
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ -x $willrun ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/common-env.sh
lines,385
function,25

varhasvalue () { varisempty () { consider_fallback () { read_conf_file () { get_var() { populate_environment () { prepend_path () { add_valgrind_suppressions_file() { optionally_reduce_base_frequency() { get_thp_size_mb() { get_jvm_hugepage_settings() { get_heap_size() { get_min_heap_mb() { get_max_heap_mb() { fixlimits () { checkjava () { runvalidation() { disable_vm_zone_reclaim_mode () { drop_caches () { enable_transparent_hugepages_with_background_compaction () { use_configserver_if_needed () { getJavaOptionsIPV46() { log_message () { log_debug_message () { log_warning_message () { get_numa_ctl_cmd () {
for,1
for token in $args
if,38
if varhasvalue $1; then elif [ -z "${2}" ]; then elif [ `expr "$2" : ".*'"` != 0 ]; then if [ -f "${deffile}" ]; then if varhasvalue $env_var_name ; then eval "ret_val=\${$env_var_name}" if id vespa >/dev/null 2>&1 ; then elif id nobody >/dev/null 2>&1 ; then if [ -f "$1" ] ; then if [ -z "$VESPA_TIMER_HZ" ]; then if [[ "$os_release" == *linuxkit* ]]; then if [ -r /sys/kernel/mm/transparent_hugepage/hpage_pmd_size ]; then if (($sz_mb find_bash.sh output.txt outputbashcleaned.txt process_bash.py vespa 2 < $heap_mb)); then if [ "$JAVA_HOME" ] && [ -f "${JAVA_HOME}/bin/java" ]; then if ! varhasvalue file_descriptor_limit; then if [ "$(id -u)" -ne 0 ]; then if [ $file_descriptor -lt $file_descriptor_limit ]; then if [ "$core_size" != "unlimited" ]; then if [ "$max_processes" != "unlimited" ] && [ "$max_processes" -lt "$max_processes_limit" ]; then if [ $file_descriptor -lt $file_descriptor_limit ]; then if [ "$core_size" != "unlimited" ]; then if [ "$max_processes" != "unlimited" ] && [ "$max_processes" -lt "$max_processes_limit" ]; then if java -version 2>&1 | grep "64-Bit Server VM" >/dev/null ; then if [ "$run" ]; then if [ -x "$run" ]; then if $run ; then if [ -w $dn ]; then if [ -w $dn ]; then if grep -q "release 6" /etc/redhat-release; then if [ -w $dn/enabled ]; then if [ -w $dn/defrag ]; then if [ -w $dn/khugepaged/defrag ]; then if [ "$x" ]; then if ${VESPA_HOME}/libexec/vespa/vespa-wrapper ipv6-only; then if [ "$YINST_RUNNING" ]; then if ! type numactl &> /dev/null; then if test "$(uname -s)" = Darwin if numactl --interleave all echo &> /dev/null; then if [ "$VESPA_AFFINITY_CPU_SOCKET" ] &&
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/stop-vespa-base.sh
lines,84
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/vespa-stop-services.sh
lines,86
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ -x $willrun ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/start-cbinaries.sh
lines,195
function,9

findpath () { source_common_env () { findroot () { findhost () { check_bname_in_value () { configure_valgrind () { configure_huge_pages () { configure_use_madvise () { configure_vespa_malloc () {
for,5
for f in $1; do log_debug_message "Want huge pages for '$bname' since VESPA_USE_HUGEPAGES_LIST=${VESPA_USE_HUGEPAGES_LIST}" for f in $VESPA_USE_MADVISE_LIST for pre in lib64 lib; do log_debug_message "enabling hugepages for '$0-bin'."
if,25
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ "$1" = "all" ]; then if [ "$f" = "$bname" ]; then if which valgrind >/dev/null 2>&1; then if check_bname_in_value "$VESPA_USE_VALGRIND"; then if check_bname_in_value "$VESPA_USE_HUGEPAGES_LIST"; then if [ "$app" = "$bname" ]; then if [ "$app" = "all" ]; then if check_bname_in_value "$VESPA_USE_NO_VESPAMALLOC"; then if check_bname_in_value "$VESPA_USE_VESPAMALLOC_D"; then if check_bname_in_value "$VESPA_USE_VESPAMALLOC_DST"; then if $no_valgrind || $use_callgrind; then if [ -f "$tryfile" ]; then if [ "$VESPA_LOAD_CODE_AS_HUGEPAGES" ]; then if [ "$VESPA_USE_HUGEPAGES" ]; then if $no_valgrind ; then if $use_callgrind ; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/vespa-stop-configserver.sh
lines,86
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ -x $willrun ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/vespa-start-services.sh
lines,87
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if [ -x $willrun ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespabase/src/start-tool.sh
lines,82
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/vespa-feed-client/src/main/sh/vespa-version-generator.sh
lines,24
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/logserver/bin/logserver-start.sh
lines,92
function,4

findpath () { source_common_env () { findroot () { findhost () {
for,0

if,9
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/node-admin/src/main/sh/node-admin.sh
lines,112
function,7

findpath () { source_common_env () { findroot () { findhost () { Usage() { Start() { Stop() {
for,0

if,10
if [ "${empty_if_start_slash}" ]; then if [ "$mypath" ] && [ -d "$mypath" ]; then if [ -f "${mypath}/${myname}" ]; then if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then if [ -f "$common_env" ]; then if [ "$VESPA_HOME" ]; then if [ "$ROOT" ] && [ -d "$ROOT" ]; then if [ "${VESPA_HOSTNAME}" = "" ]; then if [ -f "$validate" ]; then if (( $
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/slobrok/src/tests/startup/run.sh
lines,10
function,0


for,0

if,1
if [ $? -eq 1 ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/slobrok/src/tests/startsome/startsome.sh
lines,110
function,1

listall () {
for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/logd/src/tests/rotate/create_configfile.sh
lines,13
function,0


for,0

if,0

git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/logd/src/tests/rotate/rotate_test.sh
lines,36
function,0


for,1
echo "looking for incomplete log forwarding due to slow log server..."
if,2
if [ -z "$SOURCE_DIRECTORY" ]; then if grep incomplete vespa.log*; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/logd/src/apps/retention/retention-enforcer.sh
lines,154
function,13

log_msg() { prereq_dir() { check_prereqs() { ensure_dir () { prepare_stuff() { bad_timestamp() { mark_pid() { check_pidfile() { get_mod_time() { maybe_collect() { process_file() { process_all() { mainloop() {
for,3
log_msg WARNING "bad timestamp '$timestamp' for logfilename '$logfilename'" for fn in $logfilename $logfilename.*z*; do for dbf in $DBDIR/logfiles.* ; do
if,10
if [ -d $1 ] && [ -w $1 ]; then if [ -d $1 ] && [ -w $1 ]; then if [ "$1" ] && [ "$1" -ge 1514764800 ] && [ "$1" -le $now ]; then if [ "$pid" ] && [ $pid -gt $$ ]; then if [ "$pid_again" != "$pid" ]; then return 1; fi if bad_timestamp "$1"; then if [ $lim1 -lt $now ] && [ $lim2 -lt $now ]; then if [ $earliest_expire -gt $now ]; then if [ -f "$fn" ]; then if [ $found = 0 ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/lowercasing_test/src/tests/lowercasing/dotest.sh
lines,30
function,0


for,0

if,4
if [ -z "$SOURCE_DIRECTORY" ]; then if ! diff -u out.txt $SOURCE_DIRECTORY/ref.txt.$ver; then if ! diff -u out.fastlib.txt $SOURCE_DIRECTORY/ref.fastlib.txt.$ver; then if ! diff -u out.vespalib.txt $SOURCE_DIRECTORY/ref.vespalib.txt.$ver; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/lowercasing_test/src/tests/lowercasing/lowercasing_test.sh
lines,12
function,0


for,0

if,1
if [ -z "$SOURCE_DIRECTORY" ]; then
git@github.com:vespa-engine/vespa.git,b87b0db14a2078a3c60da99aad498ed62b2bf2db,vespa,4821,./vespa/container-disc/src/main/sh/vespa-start-container-daemon.sh
lines,299
function,10

getconfig() { vespa_cg2get() { configure_memory() { configure_cpu() { configure_numactl() { configure_gcopts() { configure_env_vars() { configure_classpath () { configure_preload () { import_cfg_var () {
for,1
for setting in ${qrs_env} ; do
if,27
if [ -z "${VESPA_HOME}" ]; then if [ -z "${VESPA_SERVICE_NAME}" ]; then if [ -z "${VESPA_CONFIG_ID}" ]; then if test "$(uname -s)" = Darwin if [[ "$VESPA_SERVICE_NAME" = "container" || "$VESPA_SERVICE_NAME" = "container-clustercontroller" ]]; then if ! [ -e /sys/fs/cgroup/cgroup.controllers ]; then if ! cgroup_content=$(< /proc/self/cgroup); then if [ -n "$slice" ]; then if [ -r "$path" ]; then if [ -z "$min_value" ]; then elif [ "$min_value" == max ]; then elif [ "$value" != max ] && (( value < min_value )); then if [ -z "$min_value" ]; then if ((jvm_heapSizeAsPercentageOfPhysicalMemory > 0)); then if hash cgget 2>/dev/null; then if [ $? -ne 0 ]; then if [[ "$available_cgroup_bytes" =~ "Cgroup is not mounted" ]]; then if ! [[ "$available_cgroup_bytes" =~ ^[0-9]+$ ]]; then if ((jvm_minHeapsize > jvm_heapsize)); then if ((jvm_compressedClassSpaceSize != 0)); then if ((jvm_availableProcessors > 0)); then if [ "$jvm_verbosegc" = "true" ]; then if [ "$qrs_env" ]; then if [ "${jdisc_classpath_extra}" ]; then if [ "$PRELOAD" ]; then if varhasvalue $varname ; then elif varhasvalue $prefixed_varname ; then
git@github.com:deathmarine/Luyten.git,64af8d1df1d2cab029779142726fbcd8bc482956,Luyten,4821,
git@github.com:youlookwhat/CloudReader.git,95e19528a6df71ef8d4078070f06c592bfd8a5dc,CloudReader,4819,
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/docker/images/pinot-presto/docker-build.sh
lines,47
function,0


for,0

if,3
if [[ "$ if [[ "$ if [[ "$
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/docker/images/pinot/docker-build-and-push.sh
lines,30
function,0


for,0

if,1
if [[ "$
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/docker/images/pinot/docker-push.sh
lines,29
function,0


for,0

if,1
if [[ "$
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/docker/images/pinot/docker-build.sh
lines,61
function,0


for,0

if,5
if [[ "$ if [[ "$ if [[ "$ if [[ "$ if [[ "$
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/docker/images/pinot/bin/generator.sh
lines,192
function,0


for,6
-a set pinot-admin path for segement creation -j set jar path for resource extraction :) printf "missing argument for -%s\n" "$OPTARG" >&2 echo "Generating data for ${TEMPLATE_NAME} in ${DATA_DIR}" echo "Creating segment for ${TEMPLATE_NAME} in ${SEGMENT_DIR}" echo "Uploading segment for ${TEMPLATE_NAME}"
if,13
if [ -z "$TEMPLATE_NAME" ]; then if [ -z "$TABLE_NAME" ]; then if [ -z "$NUM_RECORDS" ]; then if [ "$TEMPLATE_NAME" = "simpleWebsite" ]; then if [ "$TEMPLATE_NAME" = "complexWebsite" ]; then if [ -z "$NUM_RECORDS" ]; then if [ $? != 0 ]; then if [ ! -e "${TEMP_DIR}/generator/${TEMPLATE_NAME}_schema.json" ] || [ ! -e "${TEMP_DIR}/generator/${TEMPLATE_NAME}_config.json" ] || [ ! -e "${TEMP_DIR}/generator/${TEMPLATE_NAME}_generator.json" ]; then if [ "$TEMPLATE_NAME" = "complexWebsite" ]; then if [ ! -d "${DATA_DIR}" ]; then if [ ! -d "${SEGMENT_DIR}" ]; then if [ $? != 0 ]; then if [ $? != 0 ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/contrib/pinot-druid-benchmark/run_benchmark.sh
lines,125
function,0


for,3
echo "Wait 30 seconds so that cluster is ready for processing queries..." echo "Wait 30 seconds so that cluster is ready for processing queries..." echo "Wait 30 seconds so that cluster is ready for processing queries..."
if,0

git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/presto/pinot-presto-cli.sh
lines,31
function,0


for,0

if,2
if [[ ! -f "/tmp/presto-cli" ]]; then if [[ $(nc -z localhost 18080) != 0 ]]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/presto/presto-cli.sh
lines,7
function,0


for,0

if,1
if [[ ! -f "/tmp/presto-cli" ]]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/presto/launch-presto-ui.sh
lines,28
function,0


for,0

if,1
if [[ $(nc -z localhost 8080) != 0 ]]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/setup_gke.sh
lines,42
function,0


for,0

if,1
if [[ -z "${GCLOUD_EMAIL}" ]] || [[ -z "${GCLOUD_PROJECT}" ]]
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/open-superset-ui.sh
lines,28
function,0


for,0

if,1
if [[ $(nc -z localhost 8088) != 0 ]]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/helm/pinot/query-pinot-data.sh
lines,28
function,0


for,0

if,1
if [[ $(nc -z localhost 9000) != 0 ]]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_build_info_gen.sh
lines,41
function,0


for,0

if,3
if [ -z "${PINOT_GIT_URL}" ]; then if [ -z "${PINOT_BRANCH}" ]; then if [ -z "${TAGS}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.superset_docker_image_build_and_push.sh
lines,59
function,0

tags=()
for,1
for tag in "${tags[@]}"
if,4
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${SUPERSET_IMAGE_TAG}" ]; then if [ -z "${BUILD_PLATFORM}" ]; then if [ -z "${TAGS}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.presto_docker_image_build_and_push.sh
lines,70
function,0

tags=()
for,1
for tag in "${tags[@]}"
if,5
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${PRESTO_GIT_URL}" ]; then if [ -z "${PRESTO_BRANCH}" ]; then if [ -z "${BUILD_PLATFORM}" ]; then if [ -z "${TAGS}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_multi_arch_docker_image_manifest_package.sh
lines,62
function,0

tags=() platforms=() baseImageTags=()
for,5
for tag in "${tags[@]}"; do for baseImageTag in "${baseImageTags[@]}"; do for platform in "${platforms[@]}"; do echo "Creating manifest for tag: ${tag}-${baseImageTag}" echo "Creating manifest for tag: latest"
if,3
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ "${baseImageTag}" == "11-amazoncorretto" ]; then if [ "${tag}" == "latest" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_docker_image_build_and_push.sh
lines,69
function,0

tags=()
for,1
for tag in "${tags[@]}"
if,5
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${PINOT_GIT_URL}" ]; then if [ -z "${PINOT_BRANCH}" ]; then if [ -z "${BUILD_PLATFORM}" ]; then if [ -z "${TAGS}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_base_docker_image_build_and_push.sh
lines,37
function,0


for,0

if,2
if [ -z "${BUILD_PLATFORM}" ]; then if [ -z "${BASE_IMAGE_TYPE}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_single_platform_docker_image_build.sh
lines,66
function,0

tags=()
for,3
for tag in "${tags[@]}"; do echo "Building docker image for platform: ${BUILD_PLATFORM} with tags: ${DOCKER_BUILD_TAGS}" for tag in "${tags[@]}"; do
if,7
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${PINOT_GIT_URL}" ]; then if [ -z "${JDK_VERSION}" ]; then if [ "${BASE_IMAGE_TAG}" == "11-amazoncorretto" ]; then if [ "${tag}" == "latest" ]; then if [ "${BASE_IMAGE_TAG}" == "11-amazoncorretto" ]; then if [ "${tag}" == "latest" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/docker/.pinot_docker_image_build.sh
lines,69
function,0

tags=()
for,1
for tag in "${tags[@]}"
if,5
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${PINOT_GIT_URL}" ]; then if [ -z "${PINOT_BRANCH}" ]; then if [ -z "${BUILD_PLATFORM}" ]; then if [ -z "${TAGS}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/.pinot_linter.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/.pinot_vuln_check.sh
lines,43
function,0


for,0

if,3
if [ -z "${DOCKER_IMAGE_NAME}" ]; then if [ -z "${PINOT_GIT_URL}" ]; then if [ -z "${PINOT_BRANCH}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/.pinot_quickstart.sh
lines,342
function,2

cleanup () { jdk_version() {
for,16
for line in $lines; do for i in $(seq 1 2) for i in $(seq 1 150) echo 'Failed to ingest data for table baseballStats.' echo 'Failed to ingest data for table baseballStats.' for i in $(seq 1 150) for i in $(seq 1 150) for i in $(seq 1 150) echo 'Standalone test failed: Cannot get correct result for count star query.' for i in $(seq 1 150) for i in $(seq 1 150) for i in $(seq 1 150) echo 'Batch Quickstart failed: Cannot get correct result for count star query.' for i in $(seq 1 150) echo 'Hybrid Quickstart test failed: Cannot get correct result for count star query.' echo 'Hybrid Quickstart test failed: Cannot get incremental counts for count star query.'
if,31
if test -z $result && echo "$line" | grep -q 'version "' if case $ver in "1."*) true;; *) false;; esac; if [ $? -eq 0 ]; then if [ "${PASS}" != 1 ]; then if [[ `curl localhost:9000/health` = "OK" ]]; then if [[ `curl localhost:8099/health` = "OK" ]]; then if [[ `curl localhost:8097/health` = "OK" ]]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -eq 0 ]; then if [[ "${COUNT_STAR_RES}" =~ ^[0-9]+$ ]] && [ "${COUNT_STAR_RES}" -eq 97889 ]; then if [ $? -eq 0 ]; then if [[ "${COUNT_STAR_RES}" =~ ^[0-9]+$ ]] && [ "${COUNT_STAR_RES}" -eq 97889 ]; then if [ $? -eq 0 ]; then if [[ "${RES_0}" = "\"David Allan\"" ]]; then if [ "${PASS}" -eq 0 ]; then if [ $? -eq 0 ]; then if [[ "${COUNT_STAR_RES}" =~ ^[0-9]+$ ]] && [ "${COUNT_STAR_RES}" -eq 97889 ]; then if [ $? -eq 0 ]; then if [[ "${COUNT_STAR_RES}" =~ ^[0-9]+$ ]] && [ "${COUNT_STAR_RES}" -eq 97889 ]; then if [ $? -eq 0 ]; then if [[ ${RES_0} = "\"David Allan\"" ]]; then if [ "${PASS}" -eq 0 ]; then if [ $? -eq 0 ]; then if [[ "${COUNT_STAR_RES}" =~ ^[0-9]+$ ]] && [ "${COUNT_STAR_RES}" -gt 0 ]; then if [ "${RES_1}" -eq 0 ]; then elif [ "${COUNT_STAR_RES}" -gt "${RES_1}" ]; then if [ "${PASS}" -eq 0 ]; then if [ "${RES_1}" -eq 0 ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/pr-tests/.pinot_tests_build.sh
lines,62
function,0


for,0

if,3
if [ "$RUN_INTEGRATION_TESTS" != false ]; then if [ "$RUN_TEST_SET" == "1" ]; then if [ "$RUN_TEST_SET" == "2" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/pr-tests/.pinot_tests_integration.sh
lines,37
function,0


for,0

if,2
if [ "$RUN_TEST_SET" == "1" ]; then if [ "$RUN_TEST_SET" == "2" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/pr-tests/.pinot_tests_custom_integration.sh
lines,33
function,0


for,0

if,1
if [ "$RUN_TEST_SET" == "1" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/pr-tests/.pinot_tests_unit.sh
lines,52
function,0


for,0

if,2
if [ "$RUN_TEST_SET" == "1" ]; then if [ "$RUN_TEST_SET" == "2" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/.github/workflows/scripts/.pinot_compatibility_verifier.sh
lines,89
function,0


for,1
echo "Failed to get commit hash for commit: \"${OLD_COMMIT}\""
if,4
if [ ! -z "${NEW_COMMIT}" ]; then if [ $? -ne 0 ]; then if [ "${NEW_COMMIT_HASH}" == "${OLD_COMMIT_HASH}" ]; then if [ -z "${NEW_COMMIT}" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/compatibility-verifier/compCheck.sh
lines,473
function,18
function cleanupControllerDirs() { function cleanupServerDirs() { function usage() { function waitForZkReady() { function waitForControllerReady() { function waitForKafkaReady() { function waitForBrokerReady() { function waitForServerReady() { function waitForClusterReady() { function setConfigFileArg() { function startService() { function stopService() { function startServices() { function stopServices() { function setupCompatTester() { function setupControllerVariables() { function setupBrokerVariables() { function setupServerVariables() {
function cleanupControllerDirs() { function cleanupServerDirs() { function usage() { function waitForZkReady() { function waitForControllerReady() { function waitForKafkaReady() { function waitForBrokerReady() { function waitForServerReady() { function waitForClusterReady() { function setConfigFileArg() { function startService() { function stopService() { function startServices() { function stopServices() { function setupCompatTester() { function setupControllerVariables() { function setupBrokerVariables() { function setupServerVariables() {
for,6
echo Checking port ${ZK_PORT} for zk ready echo Checking port ${CONTROLLER_PORT} for controller ready echo Checking port 19092 for kafka ready echo Checking port ${BROKER_QUERY_PORT} for broker ready echo Checking port ${SERVER_ADMIN_PORT} for server ready echo "Waiting for $serviceName (pid $pid) to die"
if,40
if [ ! -z "$dirName" ]; then if [ ! -z "$dirName" ]; then if [ ! -z "$dirName" ]; then if [[ -f $1 ]]; then if [ "$serviceName" = "zookeeper" ]; then elif [ "$serviceName" = "controller" ]; then elif [ "$serviceName" = "broker" ]; then elif [ "$serviceName" = "server" ]; then elif [ "$serviceName" = "kafka" ]; then if [ -f "${PID_DIR}/${serviceName}".pid ]; then if [ -f ${CONTROLLER_CONF} ]; then if [ ! -z "$port" ]; then if [ -f ${BROKER_CONF} ]; then if [ ! -z "$port" ]; then if [ -f ${SERVER_CONF} ]; then if [ ! -z "$port" ]; then if [ ! -z "$port" ]; then if [ -z "$workingDir" -o -z "$testSuiteDir" ]; then if [ "$(lsof -t -i:${SERVER_ADMIN_PORT} -s TCP:LISTEN)" ] || [ "$(lsof -t -i:${SERVER_NETTY_PORT} -sTCP:LISTEN)" ] || [ "$(lsof -t -i:${BROKER_QUERY_PORT} -sTCP:LISTEN)" ] || if [ -f $testSuiteDir/pre-controller-upgrade.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/pre-broker-upgrade.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/pre-server-upgrade.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/post-server-upgrade.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/post-server-rollback.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/post-broker-rollback.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then if [ -f $testSuiteDir/post-controller-rollback.yaml ]; then if [ $? -ne 0 ]; then if [ $keepClusterOnFailure == "false" ]; then
git@github.com:apache/pinot.git,86d3c44a7c4440f0cb8def40bd178bf3fa8e56d9,pinot,4817,./pinot/compatibility-verifier/checkoutAndBuild.sh
lines,330
function,3
function usage() { function checkOut() { function build() {
function usage() { function checkOut() { function build() {
for,10
echo -e " -o, --old-commit-hash git hash (or tag) for old commit\n" echo -e " -n, --new-commit-hash git hash (or tag) for new commit\n" for i in $(seq 1 $maxRetry); do for i in $(seq 1 $maxRetry); do echo Starting build for compat checker at ${cmdDir}, buildId none. echo Awaiting build complete for compat checker echo Starting build for old version at ${oldTargetDir} buildId ${buildId} echo Awaiting build complete for old commit echo Starting build for new version at ${newTargetDir} buildId ${buildId} echo Awaiting build complete for new commit
if,24
if [ ${buildId} -gt 0 ]; then if [ $buildCompatibilityVerifier -gt 0 ]; then if [ $? -eq 0 ]; then break; fi if [ $i -eq $maxRetry ]; then exit 1; fi if [ $buildTests -eq 1 ]; then if [ $? -eq 0 ]; then break; fi if [ $i -eq $maxRetry ]; then exit 1; fi if [ -z $workingDir ]; then if [ -d $workingDir ]; then if [ $? -ne 0 ]; then if [ -z "$olderCommit" -a ! -z "$newerCommit" ]; then if [ -z "$olderCommit" ]; then if [ -z "$newerCommit" ]; then if ! mkdir -p "$newTargetDir"; then if ! mkdir -p "$oldTargetDir"; then if [ $? -ne 0 ]; then if [ ${curBuildStatus} -eq 0 ]; then if [ $? -ne 0 ]; then if [ ${oldBuildStatus} -eq 0 ]; then if [ ${buildNewTarget} -eq 1 ]; then if [ ${buildNewTarget} -eq 1 ]; then if [ $? -ne 0 ]; then if [ ${buildNewTarget} -eq 1 ]; then if [ ${newBuildStatus} -eq 0 ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/calendar/CalendarClient/compile-Calendar-client.sh
lines,25
function,1

printdivision()
for,1
for i in $(seq 1 70); do
if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/calendar/CalendarClient/start-Calendar-client.sh
lines,8
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/install_kaldi_tts.sh
lines,23
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/start.sh
lines,42
function,1

usage(){
for,0

if,2
if [ "$YAML" == "" ] ; then if [ "$MASTER" == "localhost" ] ; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/install_kaldi.sh
lines,57
function,0


for,0

if,3
if [ ! -d kaldi ]; then if [ $? -ne 0 ]; then && if [ ! -d gst-kaldi-nnet2-online ]; then git clone https://github.com/alumae/gst-kaldi-nnet2-online.git; if [ $? -ne 0 ]; then echo "Could not download gst-kaldi-nnet2-online!!! Please try again later..."; exit 1; fi; fi \
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/test/models/download-fisher-nnet2.sh
lines,30
function,0


for,0

if,5
if [ $? -ne 0 ]; then rm -rf final.mdl; exit 1; fi if [ $? -ne 0 ]; then rm -rf ivector_extractor; exit 1; fi if [ $? -ne 0 ]; then rm -rf conf; exit 1; fi if [ $? -ne 0 ]; then rm -rf HCLG.fst; exit 1; fi if [ $? -ne 0 ]; then rm -rf words.txt; exit 1; fi
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/test/models/download-tedlium-nnet2.sh
lines,3
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/simple_start.sh
lines,4
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/stop.sh
lines,8
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/speechrecognition/kaldi_gstreamer_asr/install_idlak.sh
lines,218
function,0


for,1
echo "Configuring for OS X version $osx_ver ..."
if,13
if ! which wget >&/dev/null; then if ! which cmake >&/dev/null; then if [ ! -e expat-2.1.0.tar.gz ]; then if [ $ok_expat -ne 0 ]; then if [ ! -e pugixml-1.2.tar.gz ]; then if [ "$(uname)" == "Darwin" ]; then if [ "$osx_ver" == "10.9" ]; then elif [ "$osx_ver" == "10.10" ]; then if [ $ok_pugixml -ne 0 ]; then if [ ! -e pcre-8.20.tar.bz2 ]; then if [ $ok_pcre -ne 0 ]; then if [ ! -e SPTK-3.9.tar.gz ]; then if [ $ok_sptk -ne 0 ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/botframework-interface/start_interface.sh
lines,367
function,0


for,2
echo "You'll need to answer a few questions for first time setup. To change any of these options see config.sh. To reset delete config.sh" echo "[INFO] Waiting for ngrok to go online..."
if,48
if [ -f 'config.sh' ]; then if [ -f 'config.tmp' ]; then if [ -z "$BFW_SKIP_UPDATE" ]; then if [ -z "$respone" ]; then response="n"; fi if [[ "$response" != "n" ]] && [[ "$response" != "N" ]]; then if [ -z "$BFW_UID" ] && [ "$BFW_SKIP_UPDATE" -eq 0 ]; then if [ "$?" -ne 0 ]; then if [ "$?" -eq 1 ]; then if [ -z "$BFW_PWD" ] && [ ! -z "$BFW_UID" ]; then if [ "$?" -eq 1 ]; then if [ -z "$BFW_SAVE_PWD" ]; then if [ -z "$BFW_PWD" ]; then if [ -z "$BFW_SAVE_PWD" ] || [[ "$BFW_SAVE_PWD" == "n" ]] || [[ "$BFW_SAVE_PWD" == "N" ]]; then if [ "$BFW_SAVE_PWD" -eq 1 ]; then if [ -z "$CC_HOST" ]; then if [ -z "$CC_HOST" ]; then CC_HOST="http://localhost:3000"; fi if [ "$?" -eq 1 ]; then if [ "$?" -eq 1 ]; then if [ -z "$BFW_HND" ] && [ "$BFW_SKIP_UPDATE" -eq 0 ]; then if [ "$?" -ne 0 ]; then if [ "$USE_NGROK" -eq 1 ]; then BFW_HOST="https://xxx.ngrok.io"; fi if [ -z "$BFW_HOST" ] && [ "$BFW_SKIP_UPDATE" -eq 0 ]; then if [ -z "$BFW_HOST" ]; then BFW_HOST="https://xxx.ngrok.io"; USE_NGROK=1; fi if [ "$?" -eq 1 ]; then if [ -f "last_pushed_host" ]; then if [[ "$BFW_OLD_HOST" != "$BFW_HOST" ]]; then if [ -z "$BFW_PORT" ]; then if [ -z "$BFW_PORT" ]; then BFW_PORT=3728; fi if [ "$?" -eq 1 ]; then if [ -z "$BFW_APPID" ] || [ -z "$BFW_APPPWD" ]; then if [ "$?" -eq 1 ]; then if [ "$?" -eq 1 ]; then if [[ "$BFW_HOST" == "https://xxx.ngrok.io" ]] && [ "$BFW_SKIP_UPDATE" -eq 0 ]; then if [ "$?" -eq 1 ]; then if [ "$?" -eq 1 ]; then if [ ! -z "$ngrok_pid" ] && [ ! -z "$ngrok_port" ]; then if [ "$?" -eq 0 ]; then if [ -z "$BFW_HOST" ]; then if [ "$BFW_UPDATE_ENDPOINT" -eq 1 ] && [ "$BFW_SKIP_UPDATE" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$?" -eq 0 ]; then if [ "$counter" -gt 1 ]; then if [[ "$response" == "y" ]] || [[ "$response" == "Y" ]]; then if [ "$BFW_SKIP_UPDATE" -eq 1 ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/botframework-interface/deps/install_phantomjs.sh
lines,18
function,0


for,0

if,3
if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then exit 1; fi if [ $? -ne 0 ]; then exit 1; fi
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/botframework-interface/deps/install_node.sh
lines,3
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/botframework-interface/deps/install_ngrok.sh
lines,18
function,0


for,0

if,3
if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then exit 1; fi if [ $? -ne 0 ]; then exit 1; fi
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/asyncthrift/fake/auto.sh
lines,15
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/commandcenter/clear_db.sh
lines,8
function,5

db.text_yba.drop() db.images_yba.drop() db.fs.files.find() db.fs.files.drop() db.dropDatabase()
for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/commandcenter/gen_certs.sh
lines,24
function,0


for,0

if,1
if [ ! -e certs/server.key ] || [ ! -e certs/server.crt ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/commandcenter/apache/install_apache.sh
lines,12
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/src/info/ephyra/nlp/compile-snowball.sh
lines,3
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/scripts/OpenEphyraCorpus.sh
lines,16
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/scripts/EphyraTREC8To11.sh
lines,18
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/scripts/EphyraTREC13To16.sh
lines,20
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/scripts/OpenEphyra.sh
lines,18
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/start_test.sh
lines,2
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/questionanswering/OpenEphyra/start_server.sh
lines,2
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/djinntonic/imc/make_imc.sh
lines,10
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/djinntonic/tools/install-protobuf.sh
lines,19
function,0


for,0

if,3
if [ -z "$THREADS" ]; then if [ ! -d protobuf-$PROTOBUF_VERSION ]; then if [ $? -ne 0 ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/lucida/djinntonic/tools/install-caffe.sh
lines,31
function,0


for,0

if,6
if [ $? -ne 0 ]; then if [ -z "$THREADS" ]; then if [ ! -d caffe ]; then if [ $? -ne 0 ]; then && if [ ! -f libhdf5.so ]; then sudo ln -s libhdf5_serial.so libhdf5.so; fi \ && if [ ! -f libhdf5_hl.so ]; then sudo ln -s libhdf5_serial_hl.so libhdf5_hl.so; fi \
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_thrift.sh
lines,53
function,1

installCheck () {
for,0

if,7
if [ -z $THREADS ]; then if [ ! -d thrift-$THRIFT_VERSION ]; then if [ -d gen-java ]; then if installCheck "$0"; then if [ ! -d thrift-$THRIFT_VERSION ]; then if [ $? -ne 0 ]; then if installCheck "$0"; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_python.sh
lines,20
function,0


for,0

if,2
if [ ! -d Python-2.7.12 ]; then if [ $? -ne 0 ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/start_all_tmux.sh
lines,108
function,0


for,1
for i in "${services[@]}"
if,7
if [ "$1" == "test" ]; then if [ $? -eq 0 ]; then elif [ -n "$TMUX" ]; then if [ "$1" == "secure" ]; then if [ "$1" == "test" ]; then if [ $TMUX_WIN == 0 ]; then if [ "$1" == "test" ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_java.sh
lines,10
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_opencv.sh
lines,43
function,1

installCheck () {
for,0

if,6
if [ -z $THREADS ]; then if [[ $? -ne 0 ]]; then if installCheck "$0"; then if [ ! -d opencv-2.4 ]; then if [ $? -ne 0 ]; then if installCheck "$0"; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_fbthrift.sh
lines,45
function,1

installCheck () {
for,0

if,6
if [ ! -d fbthrift ]; then if [ -d gen-cpp2 ]; then if installCheck "$0"; then if [ ! -d fbthrift ]; then if [ $? -ne 0 ]; then if installCheck "$0"; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/deploy/cluster_up_linux.sh
lines,29
function,0


for,0

if,1
echo "Exiting... Wait until 'kubectl get pod' does not give error. Fix permission errors if exist. Then run 'start_services.sh'."
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/deploy/cluster_up_osx.sh
lines,9
function,0


for,0

if,1
echo "Exiting... Wait until 'kubectl get pod' does not give error. Fix permission errors if exist. Then run 'start_services.sh'."
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/deploy/start_services.sh
lines,44
function,0


for,4
for d in ${filelist}; do for d in ${filelist}; do for d in ${filelist}; do for d in ${filelist}; do
if,4
if [ "${filelist}" != "" ]; then if [ "${filelist}" != "" ]; then if [ "${filelist}" != "" ]; then if [ "${filelist}" != "" ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/install_mongodb.sh
lines,89
function,1

installCheck () {
for,0

if,11
if [[ $? -ne 0 ]]; then if [[ $(./check_mongodb | grep "Connection ok") == "Connection ok" ]]; then if installCheck "$0"; then if [ `ps -ef | grep -cPe "\Wmongod "` -lt 1 ]; then if [ ! -d mongo-c-driver ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ ! -d mongo-cxx-driver ]; then if [ $? -ne 0 ]; then if installCheck "$0"; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/apt_deps.sh
lines,78
function,0


for,0

if,0

git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/clean.sh
lines,18
function,0


for,1
for tar in *.tar.gz;
if,1
if [ -f "$tar" ]; then
git@github.com:claritylab/lucida.git,3256bfa84be24eda7c988b1e61ed4cee0663410d,lucida,4813,./lucida/tools/download_wiki_index.sh
lines,52
function,0


for,0

if,5
if [ -d wiki_indri_index ]; then if [[ $FREE -lt 11523524 ]]; then if [[ ! $REPLY =~ ^[Yy]$ ]] if [ $? -ne 0 ]; then if [ "$(sha384sum wiki_indri_index.tar.gz | cut -d' ' -f1)" == $FILECHECKSUM ]; then
git@github.com:sofastack/sofa-boot.git,2939e20ed536f3d0c1b5e62dd50cc5d9db631e80,sofa-boot,4811,./sofa-boot/tools/check_format.sh
lines,11
function,0


for,0

if,1
if [ -n "$(git status --untracked-files=no --porcelain)" ]; then
git@github.com:PojavLauncherTeam/PojavLauncher.git,1f0030ceb4d202cfa778d8abcebfb97b926ade84,PojavLauncher,4811,./PojavLauncher/scripts/patch_vulkanmod.sh
lines,53
function,1

copy_libs() {
for,1
for arg in "$@"; do
if,2
if [ -z "$1" ] || [ -z "$2" ] ; then if [ "$arg" != "$1" ]; then
git@github.com:PojavLauncherTeam/PojavLauncher.git,1f0030ceb4d202cfa778d8abcebfb97b926ade84,PojavLauncher,4811,./PojavLauncher/scripts/languagelist_updater.sh
lines,8
function,0


for,0

if,0

git@github.com:apache/iceberg.git,046fa74ca5476f3ca238167b5d247370669a07bf,iceberg,4809,./iceberg/dev/source-release.sh
lines,181
function,1

usage () {
for,3
echo "The target remote git repository, ${remote}, is not configured in git. Please pass a valid value for the remote git repository to target via the -g switch" echo "Preparing source for $tagrc" echo "We have generated a release announcement email for you here:"
if,5
if [ -z "$version" ] || [ -z "$rc" ]; then if ! git ls-remote --exit-code "$remote" >/dev/null 2>&1 ; then if [ -d $tmpdir ]; then if [ -z "$release_hash" ]; then non-binding votes. This vote will pass if there are 3 binding +1 votes and more binding
git@github.com:apache/iceberg.git,046fa74ca5476f3ca238167b5d247370669a07bf,iceberg,4809,./iceberg/dev/stage-binaries.sh
lines,34
function,0


for,0

if,0

git@github.com:coobird/thumbnailator.git,951d04f352d90f34420a82909c15453fee1b75ff,thumbnailator,4807,
git@github.com:obsidiandynamics/kafdrop.git,45b4f4aa0f69604dc5b1588164c7bd60994ec0fe,kafdrop,4801,./kafdrop/src/main/docker/kafdrop.sh
lines,68
function,0


for,0

if,10
if [ $PORT0 ]; then if [ -z $HOST ]; then if [ $MARATHON_APP_RESOURCE_MEM ]; then if [ $JMX_PORT ]; then if [ "$KAFKA_PROPERTIES" != "" ]; then elif [ ! -f $KAFKA_PROPERTIES_FILE ]; then if [ "$KAFKA_TRUSTSTORE" != "" ]; then elif [ ! -f $KAFKA_TRUSTSTORE_FILE ]; then if [ "$KAFKA_KEYSTORE" != "" ]; then elif [ ! -f $KAFKA_KEYSTORE_FILE ]; then
git@github.com:obsidiandynamics/kafdrop.git,45b4f4aa0f69604dc5b1588164c7bd60994ec0fe,kafdrop,4801,./kafdrop/theme/install.sh
lines,39
function,0


for,0

if,3
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -d bootswatch ]; then
git@github.com:spring-cloud/spring-cloud-netflix.git,522905b10c6b9a4ee389fa12ad82787e8cce43d6,spring-cloud-netflix,4783,./spring-cloud-netflix/scripts/runAcceptanceTests.sh
lines,27
function,0


for,0

if,0

git@github.com:spring-cloud/spring-cloud-netflix.git,522905b10c6b9a4ee389fa12ad82787e8cce43d6,spring-cloud-netflix,4783,./spring-cloud-netflix/scripts/compileOnly.sh
lines,6
function,0


for,0

if,0

git@github.com:spring-cloud/spring-cloud-netflix.git,522905b10c6b9a4ee389fa12ad82787e8cce43d6,spring-cloud-netflix,4783,./spring-cloud-netflix/docs/src/main/asciidoc/ghpages.sh
lines,330
function,15
function set_default_props() { function check_if_anything_to_sync() { function retrieve_current_branch() { function switch_to_tag() { function build_docs_if_applicable() { function retrieve_doc_properties() { function stash_changes() { function add_docs_from_target() { function copy_docs_for_current_version() { function copy_docs_for_provided_version() { function copy_docs_for_branch() { function commit_changes_if_applicable() { function checkout_previous_branch() { function assert_properties() { function print_usage() {
function set_default_props() { function check_if_anything_to_sync() { function retrieve_current_branch() { function switch_to_tag() { function build_docs_if_applicable() { function retrieve_doc_properties() { function stash_changes() { function add_docs_from_target() { function copy_docs_for_current_version() { function copy_docs_for_provided_version() { function copy_docs_for_branch() { function commit_changes_if_applicable() { function checkout_previous_branch() { function assert_properties() { function print_usage() {
for,8
for f in docs/target/generated-docs/*; do for f in docs/target/generated-docs/*; do [docs] module available under [docs] profile. Won't commit any changes to gh-pages for this branch." for f in ${ROOT_FOLDER}/docs/target/generated-docs/*; do - if there's no gh-pages / target for docs module then the script ends - for main branch the generated docs are copied to the root of gh-pages branch - for any other branch (if that branch is allowed) a subfolder with branch name is created -v|--version - the script will apply the whole procedure for a particular library version
if,31
if [[ ! -e "${ROOT_FOLDER}/.git" ]]; then if ! (git remote set-branches --add origin gh-pages && git fetch -q); then if ! [ -d docs/target/generated-docs ] && ! [ "${BUILD}" == "yes" ]; then if [[ -z "${CURRENT_BRANCH}" ]] ; then if [[ "${BUILD}" == "yes" ]] ; then git diff-index --quiet HEAD && dirty=$? || (echo "Failed to check if the current repo is dirty. Assuming that it is." && dirty="1") if [ "$dirty" != "0" ]; then git stash; fi if [[ -z "${DESTINATION}" && -z "${CLONE}" ]] ; then elif [[ "${CLONE}" == "yes" ]]; then if [[ ! -e "${clonedStatic}/.git" ]]; then if [[ ! -e "${DESTINATION}/.git" ]]; then if [[ -z "${VERSION}" ]] ; then if [[ "${CURRENT_BRANCH}" == "main" ]] ; then if ! git ls-files -i -o --exclude-standard --directory | grep -q ^$file$; then if [[ ",${ALLOWED_BRANCHES_VALUE}," = *",${CURRENT_BRANCH},"* ]] ; then if ! git ls-files -i -o --exclude-standard --directory | grep -q ^$file$; then if [[ "${file}" == "${MAIN_ADOC_VALUE}.html" ]] ; then if ! git ls-files -i -o --exclude-standard --directory | grep -q ^${file}$; then if [[ ("${file}" == "${MAIN_ADOC_VALUE}.html") || ("${file}" == "${REPO_NAME}.html") ]] ; then if [[ "${COMMIT_CHANGES}" == "yes" ]] ; then if [[ "${COMMIT_SUCCESSFUL}" == "yes" ]] ; then if [ "$dirty" != "0" ]; then git stash pop; fi if [[ "${VERSION}" != "" && (-z "${DESTINATION}" && -z "${CLONE}") ]] ; then echo "Version was set but destination / clone was not!"; exit 1;fi if [[ ("${DESTINATION}" != "" && "${CLONE}" != "") && -z "${VERSION}" ]] ; then echo "Destination / clone was set but version was not!"; exit 1;fi if [[ "${DESTINATION}" != "" && "${CLONE}" == "yes" ]] ; then echo "Destination and clone was set. Pick one!"; exit 1;fi - if there's no gh-pages / target for docs module then the script ends - for any other branch (if that branch is allowed) a subfolder with branch name is created - if the version switch is passed (-v) then a tag with (v) prefix will be retrieved and a folder - if the destination switch is passed (-d) then the script will check if the provided dir is a git repo and then will - if the destination switch is passed (-d) then the script will check if the provided dir is a git repo and then will if [[ -z "${VERSION}" ]] ; then
git@github.com:meefik/linuxdeploy.git,d2f1af07a2f4880eae7da0d33b79691716ff9883,linuxdeploy,4783,./linuxdeploy/app/src/main/assets/bin/all/websocket.sh
lines,121
function,7

split_hex() get_arg() is_packet() read_dec() ws_send() ws_connect() ws_server()
for,1
for byte in $(read_dec $length)
if,3
if [ -n "$code" ] if [ "$length" -gt 125 ] if printf "%s" "$line" | grep -q $'^\r$'; then
git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/packages/docs/deploy.sh
lines,35
function,0


for,0

if,0

git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/IJPay-Demo-JFinal/jfinal.sh
lines,82
function,2
function start() function stop()
function start() function stop()
for,0

if,4
if [[ "$MAIN_CLASS" == "com.yourpackage.YourMainClass" ]]; then if [[ "$COMMAND" != "start" ]] && [[ "$COMMAND" != "stop" ]] && [[ "$COMMAND" != "restart" ]]; then if [[ "$COMMAND" == "start" ]]; then elif [[ "$COMMAND" == "stop" ]]; then
git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/bin/update_version.sh
lines,12
function,0


for,0

if,1
if [ ! -n "$1" ]; then
git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/bin/del_versions_backup.sh
lines,6
function,0


for,0

if,0

git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/bin/install.sh
lines,6
function,0


for,0

if,0

git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/bin/check_dependency_updates.sh
lines,6
function,0


for,0

if,0

git@github.com:Javen205/IJPay.git,7788c868ab79418aef1cca075855e5ab7f64929d,IJPay,4779,./IJPay/bin/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:saiwu-bigkoo/Android-ConvenientBanner.git,985b3a1c27fefbb547376797082efb42b07d9052,Android-ConvenientBanner,4774,
git@github.com:etsy/AndroidStaggeredGrid.git,97739f6690a7676b62f0eb1246ae195ac98df4e2,AndroidStaggeredGrid,4772,
git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/codegen/src/test/resources/truffle/build.sh
lines,20
function,0


for,1
for target in ${targets}; do
if,0

git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/contracts/scripts/generateWrappers.sh
lines,43
function,0


for,1
for i in ${!targetFileIn[@]}; do
if,0

git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/src/test/resources/quorum-test-network/remove.sh
lines,55
function,1

removeDockerImage(){
for,0

if,4
if [[ ! -z `docker ps -a | grep $1` ]]; then if [ -f "docker-compose-deps.yml" ]; then if [[ ! -z `docker ps -a | grep quorum-dev-quickstart_pet_shop` ]]; then if grep -q 'kibana:' docker-compose.yml 2> /dev/null ; then
git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/src/test/resources/quorum-test-network/.common.sh
lines,75
function,0


for,0

if,8
if [ "$me" = ".common.sh" ];then if [ "$?" -eq "1" ];then if [ "$?" -eq "1" ];then if [ $dockermem -lt $PRIVACY_MINIMUM ]; then if [ $dockermem -lt $NORMAL_MINIMUM ]; then if [ "${NO_LOCK_REQUIRED}" = "true" ];then if [ -f ${LOCK_FILE} ];then if [ -f ${LOCK_FILE} ]; then
git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/src/test/resources/quorum-test-network/config/tessera/docker-entrypoint.sh
lines,12
function,0


for,0

if,0

git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/src/test/resources/quorum-test-network/attach.sh
lines,12
function,0


for,0

if,1
if [ -z `docker compose -f docker-compose.yml ps -q ${MEMBER_NODE} 2>/dev/null` ] ; then
git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/src/test/resources/quorum-test-network/run.sh
lines,63
function,0


for,0

if,1
if [ -f "docker-compose-deps.yml" ]; then
git@github.com:web3j/web3j.git,9ee5b4fcaa98422f9c6d7074d41277c4a9b28a86,web3j,4754,./web3j/integration-tests/scripts/generateWrappers.sh
lines,19
function,0


for,1
for target in ${targets}; do
if,0

git@github.com:jankotek/mapdb.git,8721c0e824d8d546ecc76639c05ccbc618279511,mapdb,4750,
git@github.com:natario1/CameraView.git,b279ffaf57919b7dffccc8879a0cb1eeb542c1ca,CameraView,4742,./CameraView/.github/workflows/emulator_script.sh
lines,13
function,0


for,0

if,0

git@github.com:google/cameraview.git,68947cc1643e7434250e099f38f346eae9c46339,cameraview,4735,
git@github.com:hongyangAndroid/baseAdapter.git,4898fab7f0646389be398e1712b9a7fd74528300,baseAdapter,4714,
git@github.com:jeecgboot/JimuReport.git,b1cb99cb721a8cdd884014da7b62cf193b398e72,JimuReport,4713,
git@github.com:getActivity/XXPermissions.git,e1dc6ede5ac1ace9bb7fc2420d70bc525eeede27,XXPermissions,4711,
git@github.com:TeamAmaze/AmazeFileManager.git,6783e4d050bf895aa57404933f136e23bdec87c5,AmazeFileManager,4710,
git@github.com:opengoofy/hippo4j.git,fa206974f4c82197a882de0131b0e8cfcc076582,hippo4j,4710,./hippo4j/docker/docker-startup.sh
lines,45
function,0


for,0

if,4
if [[ "${DATASOURCE_MODE}" == "mysql" ]]; then elif [[ "${DATASOURCE_MODE}" == "h2" ]]; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:opengoofy/hippo4j.git,fa206974f4c82197a882de0131b0e8cfcc076582,hippo4j,4710,./hippo4j/docs/deploy.sh
lines,23
function,0


for,0

if,0

git@github.com:opengoofy/hippo4j.git,fa206974f4c82197a882de0131b0e8cfcc076582,hippo4j,4710,./hippo4j/threadpool/server/bootstrap/bin/shutdown.sh
lines,13
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:opengoofy/hippo4j.git,fa206974f4c82197a882de0131b0e8cfcc076582,hippo4j,4710,./hippo4j/threadpool/server/bootstrap/bin/startup.sh
lines,43
function,0


for,0

if,3
if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:pardom-zz/ActiveAndroid.git,08c6335cd7324c6e72da536b0c6fffa5a798f6a2,ActiveAndroid,4709,
git@github.com:Doikki/DKVideoPlayer.git,5203b55fcd01207b44e76e14f2730ced7cbdf5ee,DKVideoPlayer,4698,./DKVideoPlayer/other/module-lite.sh
lines,259
function,0


for,0

if,0

git@github.com:reactive-streams/reactive-streams-jvm.git,a625d3aba756e9842ad1291a5b73f5db280b6168,reactive-streams-jvm,4688,
git@github.com:bitcoinj/bitcoinj.git,474d8d91f72bee72efd0c9aca58eb69585e0fd7d,bitcoinj,4687,
git@github.com:nisrulz/android-tips-tricks.git,133dcae244c0386a4a31745f057037dd7511431f,android-tips-tricks,4685,./android-tips-tricks/deploy-to-github-pages.sh
lines,32
function,0


for,0

if,0

git@github.com:gabrielemariotti/cardslib.git,d80384806cdffd2acc559bf1167251dcc797fa97,cardslib,4684,
git@github.com:cglib/cglib.git,5c947539c1218dc4ff1a14a7c36b4856b0ee6397,cglib,4670,
git@github.com:reactor/reactor-core.git,6b3fcc521242eb1a2d95095cd4c314703bbee152,reactor-core,4669,./reactor-core/.github/setup.sh
lines,12
function,0


for,0

if,0

git@github.com:wdullaer/MaterialDateTimePicker.git,f849a5c2704c974ba182fe4e2e205fa7f4fd395d,MaterialDateTimePicker,4662,
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/distribution-tp2/script/stresstester.sh
lines,33
function,0


for,0

if,2
if expr "$link" : '/.*' > /dev/null; then if [ -f "${JAVA_HOME}/bin/java" ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/distribution-tp2/script/console.sh
lines,47
function,0


for,0

if,2
if expr "$link" : '/.*' > /dev/null; then if [ -f "${JAVA_HOME}/bin/java" ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/distributed/script/dserver.sh
lines,128
function,0


for,1
for var in "$@"; do
if,12
if expr "$link" : '/.*' > /dev/null; then if [ ! -f "${CONFIG_FILE}" ] if [ `uname -m` != "armv6l" ]; then if [ -f "${JAVA_HOME}/bin/java" ]; then if [ -z "$ORIENTDB_LOG_CONF" ] ; then if [ -z "$ORIENTDB_WWW_PATH" ] ; then if [ -z "$ORIENTDB_PID" ] ; then if [ -f "$ORIENTDB_PID" ]; then if [ "$var" = "debug" ]; then if [ -z "$ORIENTDB_OPTS_MEMORY" ] ; then if [ -z "$JAVA_OPTS_SCRIPT" ] ; then if [ -z "$ORIENTDB_SETTINGS" ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/server/script/shutdown.sh
lines,77
function,0


for,2
echo "waiting for OrientDB server to shutdown" echo "wait for OrientDB server to shutdown"
if,7
if [ $ if expr "$link" : '/.*' > /dev/null; then if [ ! -f "${CONFIG_FILE}" ] if [ -f "${JAVA_HOME}/bin/java" ]; then if [ -z "$ORIENTDB_PID" ] ; then if [ -f "$ORIENTDB_PID" ] && [ "${ if [ "x$wait" = "xyes" ] ; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/server/script/orientdb.sh
lines,91
function,5

usage() { start() { stop() { logs() { status() {
for,0

if,8
if [ $PID -gt 0 ] if [ $PID -eq 0 ] if [ "x$PID" = "x" ] if [ "x$1" = "xstart" ] if [ "x$1" = "xstop" ] if [ "x$1" = "xlogs" ] if [ "x$1" = "xstatus" ] if [ $PID -gt 0 ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/server/script/server.sh
lines,127
function,0


for,1
for var in "$@"; do
if,12
if expr "$link" : '/.*' > /dev/null; then if [ ! -f "${CONFIG_FILE}" ] if [ `uname -m` != "armv6l" ]; then if [ -f "${JAVA_HOME}/bin/java" ]; then if [ -z "$ORIENTDB_LOG_CONF" ] ; then if [ -z "$ORIENTDB_WWW_PATH" ] ; then if [ -z "$ORIENTDB_PID" ] ; then if [ -f "$ORIENTDB_PID" ]; then if [ "$var" = "debug" ]; then if [ -z "$ORIENTDB_OPTS_MEMORY" ] ; then if [ -z "$JAVA_OPTS_SCRIPT" ] ; then if [ -z "$ORIENTDB_SETTINGS" ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/server/script/backup.sh
lines,148
function,2

check_errs() check_errs_no_exit()
for,1
echo "\tpassword.....: database password for the specified user "
if,15
if [ "$ if expr "$link" : '/.*' > /dev/null; then if [ "$ if [ "$?" -ne "0" ]; then if [ "$5" != "lvm" ] if [ "${1}" -ne "0" ]; then if [ "${1}" -ne "0" ]; then check_errs $? "Impossible to find lvcreate check if is correctly installed and if you have execution permission" check_errs $? "Impossible to find lvremove check if is correctly installed and if you have execution permission" check_errs $? "Impossible to find zip command check if is correctly installed" if [ "$ENGINE" = "plocal" ] DEVICE_PATH=`df -h $DB_PATH | awk '{if (NR !=1) {print $1}}'` MOUNT_POINT=`df -h $DB_PATH | awk '{if (NR !=1) {print $6}}'` if [ "$FREEZE" = "true" ] if [ "$FREEZE" = "true" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/server/script/console.sh
lines,54
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if [ -f "${JAVA_HOME}/bin/java" ]; then if [ -z "$ORIENTDB_OPTS_MEMORY" ] ; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/etl/script/oetl.sh
lines,71
function,0


for,0

if,6
if expr "$link" : '/.*' > /dev/null; then if [ -z "$ORIENTDB_ETL_LOG_CONF" ] ; then if [ -f "${JAVA_HOME}/bin/java" ]; then if [ -z "$ORIENTDB_OPTS_MEMORY" ] ; then if [ -z "$JAVA_OPTS_SCRIPT" ] ; then if [ -z "$ORIENTDB_SETTINGS" ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/release.sh
lines,25
function,0


for,0

if,1
if [ -z "$1" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/cd.sh
lines,15
function,0


for,0

if,1
if [ -z "$VER" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/fix-eclipse.sh
lines,41
function,0


for,3
for filename in $(grep -r "J2SE-1.5" --include "*.classpath" $1|cut -f 1 -d :) for filename in $(grep -r "1.5" --include "*/.settings/org.eclipse.jdt.core.prefs" $1|cut -f 1 -d :) for filename in $(find $1 -name bin -print)
if,4
if [ -z "$1" ] if [ -f $filename -a -r $filename ]; then if [ -f $filename -a -r $filename ]; then if [ -d $filename ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/release_enterprise.sh
lines,32
function,0


for,0

if,1
if [ -z "$1" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/switch.sh
lines,45
function,0


for,0

if,1
if [ -z "$1" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/release_community.sh
lines,29
function,0


for,0

if,1
if [ -z "$1" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/upd-version.sh
lines,20
function,0


for,1
for filename in $(grep -r "$2" --include "*.java" --include "*.htm*" --include "*.xml" --exclude-dir "apidocs" --exclude-dir "target" --exclude-dir "test-output" $1|cut -f 1 -d :)
if,2
if [ -z "$1" -o -z "$2" -o -z "$3" ] if [ -f $filename -a -r $filename ]; then
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/_base/script/deploy.sh
lines,29
function,0


for,0

if,2
if [ -z "$VER" ] if [ -n "$1" ]
git@github.com:orientechnologies/orientdb.git,52df826ab0119e5e56b50d43ba3dc5c8f43fc297,orientdb,4639,./orientdb/distribution/run-orientdb-docker.sh
lines,0
function,0


for,0

if,0

git@github.com:citerus/dddsample-core.git,88700971072fad9c0bb2226b4affe2ddf27b031b,dddsample-core,4633,
git@github.com:roncoo/roncoo-pay.git,9428382af21cd5568319eae7429b7e1d0332ff40,roncoo-pay,4633,./roncoo-pay/roncoo-pay-web-boss/src/main/webapp/dwz/bin/gzjs.sh
lines,38
function,0


for,0

if,0

git@github.com:luggit/react-native-config.git,bb3d8133612f3d3df9f7cc019f5d4da8ec61d689,react-native-config,4622,
git@github.com:JSQLParser/JSqlParser.git,1088db7aea0b2f9d1a4a75ad70e5fc531639dbc4,JSqlParser,4620,
git@github.com:techGay/v9porn.git,9539b4ecfeb112746a1350d5a28a921bcb0019a4,v9porn,4614,
git@github.com:brianfrankcooper/YCSB.git,ce3eb9ce51c84ee9e236998cdd2cefaeb96798a8,YCSB,4608,./YCSB/bin/ycsb.sh
lines,260
function,0


for,6
for f in "$YCSB_HOME"/lib/*.jar ; do for f in "$YCSB_HOME"/"$BINDING_DIR"-binding/lib/*.jar ; do for f in "$YCSB_HOME"/core/target/*.jar ; do for f in "$YCSB_HOME"/core/target/dependency/*.jar ; do for f in "$YCSB_HOME"/"$BINDING_DIR"/target/*.jar ; do for f in "$YCSB_HOME"/"$BINDING_DIR"/target/dependency/*.jar ; do
if,29
if [ -r "$YCSB_HOME/bin/setenv.sh" ]; then if [ -z "$JAVA_HOME" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [ "load" = "$1" ] ; then elif [ "run" = "$1" ] ; then elif [ "shell" = "$1" ] ; then if [ -z "$BINDING_LINE" ] ; then if [ "$BINDING_NAME" = "basic" ] ; then if $CYGWIN; then if [ -r "$YCSB_HOME/pom.xml" ]; then if [ -z "$CLASSPATH" ] ; then if [ "${BINDING_DIR}" = "cassandra2" ] ; then if [ "${BINDING_DIR}" = "hbase14" ] ; then if [ "${BINDING_DIR}" = "arangodb3" ] ; then if $DISTRIBUTION; then if [ -r "$f" ] ; then if [ -r "$YCSB_HOME"/"$BINDING_DIR"-binding/conf ] ; then if [ -r "$f" ] ; then if ! ls "$YCSB_HOME"/core/target/*.jar 1> /dev/null 2>&1 || \ if [ "$BINDING_NAME" = "basic" ] ; then if mvn -Psource-run -pl site.ycsb:"$MVN_PROJECT" -am package -DskipTests; then if [ -r "$f" ] ; then if [ -r "$f" ] ; then if [ "x$CLASSPATH_CONF" != "x" ]; then if [ -r "$f" ] ; then if [ -r "$f" ] ; then if [ "${BINDING_DIR}" = "couchbase" ] ; then if $CYGWIN; then
git@github.com:romandanylyk/PageIndicatorView.git,b1bad589b506add6842cc44ef6f2ca7e561dfebd,PageIndicatorView,4599,
git@github.com:square/sqlbrite.git,d4cf6ef967452f19a508e14b7c46f64964f8052e,sqlbrite,4586,./sqlbrite/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:j-easy/easy-rules.git,d4450831533e47a5c0cb361edb80dad43db228a4,easy-rules,4584,
git@github.com:hansonwang99/Spring-Boot-In-Action.git,807fd37643aa774b94fd004cc3adbd29ca17e9aa,Spring-Boot-In-Action,4583,
git@github.com:SplashCodes/JAViewer.git,52be616b03d9440b14a80f5ba53bd93656d48e4c,JAViewer,4577,
git@github.com:danielzeller/Depth-LIB-Android-.git,9e37df71dc7fa6ce2a7db241b8fb52ab192db1b3,Depth-LIB-Android-,4573,
git@github.com:go-lang-plugin-org/go-lang-idea-plugin.git,e73dab44213ffa76b3d6a853aecb109929c3e2b5,go-lang-idea-plugin,4571,./go-lang-idea-plugin/cloneToWt.sh
lines,45
function,0


for,2
for ROOT in ${ROOTS[@]}; do for ROOT in ${ROOTS[@]}; do
if,4
if [[ -z "$1" || -z "$2" ]] ; then if [[ "$BRANCH" == origin/* ]]; then if [ -d "$NEW_REPO" ]; then if [[ ! -z `git --git-dir="${OLD_REPO}${ROOT}/.git" --work-tree="${OLD_REPO}${ROOT}" branch --list $BRANCH` ]]; then
git@github.com:go-lang-plugin-org/go-lang-idea-plugin.git,e73dab44213ffa76b3d6a853aecb109929c3e2b5,go-lang-idea-plugin,4571,./go-lang-idea-plugin/src/com/goide/lexer/gen_lexer.sh
lines,0
function,0


for,0

if,0

git@github.com:chentao0707/SimplifyReader.git,ae24bdbb6fdbba7d8beb3d222fcabd4be93d15bf,SimplifyReader,4568,
git@github.com:pili-engineering/PLDroidPlayer.git,5dfd55b3aa03a1559e6bc433e6b75ea4eaa5744c,PLDroidPlayer,4566,
git@github.com:ronmamo/reflections.git,f5514b125c4f4b58e92beb0979a40ddce48d5be1,reflections,4565,
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/git-remoteless-branches.sh
lines,35
function,0


for,1
for branch in `git branch | grep -v "*"`; do
if,2
if [ "$?" == "1" ]; then if [ "$1" == "-d" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/build.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/git-patch-prop.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/git-patch-functions.sh
lines,131
function,3

formatPatch () { determineCurrentBranch () { requireCleanWorkTree () {
for,0

if,4
if [ ${IGNITE_CURRENT_BRANCH} = ${IGNITE_DEFAULT_BRANCH} ] if ! git diff-files --quiet --ignore-submodules -- if ! git diff-index --cached --quiet HEAD --ignore-submodules -- if [ $err = 1 ]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/git-format-patch.sh
lines,91
function,0


for,0

if,2
if [ -z ${IGNITE_HOME} ] if [ -f ${IGNITE_HOME}/scripts/git-patch-prop-local.sh ]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/update-versions.sh
lines,45
function,0


for,0

if,2
if [ $ if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/apply-pull-request.sh
lines,220
function,1

usage () {
for,1
echo "Squash commit for pull request with id='${PR_ID}' has been added. The commit has been added with comment '${COMMENT}'."
if,19
if [ "${GIT_HOME}" = "" ]; then if [ "${SCRIPTS_HOME}" = "" ]; then if [ "${PR_ID}" = "" ]; then if [ "${PR_ID}" = "-h" ]; then if [ "${PR_ID}" = "--help" ]; then if [ "${APACHE_GIT}" = "" ]; then if [ "${GITHUB_MIRROR}" = "" ]; then if [ "${TARGET_BRANCH}" = "" ]; then if [ "$CURRENT_BRANCH" != "${TARGET_BRANCH}" ]; then if test $? != 0; then if [ $LOCAL_TARGET_BR_HASH != $REMOTE_TARGET_BR_HASH ]; then if [ $LOCAL_TARGET_BR_HASH = $BASE_HASH ]; then elif [ $REMOTE_TARGET_BR_HASH = $BASE_HASH ]; then if test $? != 0; then if test $? != 0; then if test $? != 0; then echo "Press [ENTER] if you're agree with the comment or type your comment and press [ENTER]:" if [ "${COMMENT}" == "" ]; then if [ "${EXCLUDE_SPECIAL_FILE}" = "true" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/scripts/build-module.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/docs/_docs/code-snippets/k8s/setup.sh
lines,96
function,0


for,0

if,4
if [ $ if [ "$mode" = "stateful" ]; then if [ "$mode" = "stateful" ]; then if [ "$mode" = "stateful" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/docs/run.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/packaging/package.sh
lines,253
function,6

usage () { prepEnv () { getBin () { buildRPM () { buildDEB () { processTrap () {
for,4
--rpm, --deb select package type for building (multiselect) --batch do not ask user for any interation for executable in ${executables}; do echo "[ERROR] RPM for converting to DEB not found"
if,13
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [[ ! -z "${installCmd}" ]]; then if ${installFlag}; then if [ -f "${BIN_NAME}" ]; then if ! ${binPreparedFlag}; then if $(cp -rf ../target/bin/${BIN_NAME} ./ &>/dev/null); then if ! ${binPreparedFlag}; then if $(curl --fail -O https://archive.apache.org/dist/ignite/${IGNITE_VERSION}/${BIN_NAME} &>/dev/null); then if ! ${binPreparedFlag}; then if [ ! -f "apache-ignite-${packageVersion}.noarch.rpm" ]; then if [ ${BUILD_RPM_FLAG} == false -a ${BUILD_DEB_FLAG} == false ]; then if ${BUILD_RPM_FLAG}; then if ${BUILD_DEB_FLAG}; then buildDEB; fi
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/packaging/rpm/service.sh
lines,28
function,1

setFirewall ()
for,1
for port in s d
if,1
if [[ "$(type firewall-cmd &>/dev/null; echo $?)" -eq 0 && "$(systemctl is-active firewalld)" == "active" ]]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/index-reader.sh
lines,132
function,0


for,0

if,8
if [ -n "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ "${IGNITE_HOME:-}" = "" ]; if [ "${DOCK_OPTS:-}" == "" ]; then if [ -z "${CONTROL_JVM_OPTS:-}" ] ; then if "$JAVA" -version 2>&1 | grep -qE "1\.[7]\." ; then if [ "${ENABLE_ASSERTIONS:-}" = "1" ]; then if [ "${MAIN_CLASS:-}" = "" ]; then if [ -n "${JVM_OPTS}" ] ; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/build-classpath.sh
lines,82
function,1

includeToClassPath() {
for,1
for file in $1/*
if,6
if [[ -z "${EXCLUDE_MODULES:-}" ]] || [[ ${EXCLUDE_MODULES:-} != *"`basename $file`"* ]]; then if [ -d ${file} ] && [ -d "${file}/target" ]; then if [ -d "${file}/target/classes" ]; then if [[ -z "${EXCLUDE_TEST_CLASSES:-}" ]]; then if [ -d "${file}/target/test-classes" ]; then if [ -d "${file}/target/libs" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/parseargs.sh
lines,69
function,0


for,0

if,1
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/setenv.sh
lines,82
function,0


for,1
for file in ${IGNITE_HOME}/libs/*
if,4
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ "${IGNITE_HOME:-}" = "" ]; then if [ -d ${file} ] && [ "${file}" != "${IGNITE_HOME}"/libs/optional ]; then if [ "${USER_LIBS:-}" != "" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/functions.sh
lines,144
function,5

javaVersion() { javaMajorVersion() { checkJava() { setIgniteHome() { getClassPathSeparator() {
for,0

if,8
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ ${version} -eq 1 ]; then if [ "${JAVA_HOME:-}" = "" ]; then if [ $RETCODE -ne 0 ]; then if [ $version -lt 8 ]; then if [ "${IGNITE_HOME:-}" = "" ]; then if [ ! -d "${IGNITE_HOME}/config" ]; then if [ "${IGNITE_HOME}" != "${IGNITE_HOME_TMP}" ] &&
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/jvmdefaults.sh
lines,95
function,1

getJavaSpecificOpts() {
for,0

if,5
if [ $version -eq 8 ] ; then elif [ $version -gt 8 ] && [ $version -lt 11 ]; then elif [ "${version}" -ge 11 ] && [ "${version}" -lt 14 ]; then elif [ "${version}" -ge 14 ] && [ "${version}" -lt 15 ]; then elif [ "${version}" -ge 15 ] ; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/include/service.sh
lines,83
function,0


for,0

if,1
if [ -z "$JVM_OPTS" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/control.sh
lines,159
function,0


for,0

if,9
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ "${IGNITE_HOME:-}" = "" ]; if [ "${DEFAULT_CONFIG:-}" == "" ]; then if [ "${DOCK_OPTS:-}" == "" ]; then if [ -z "${CONTROL_JVM_OPTS:-}" ] ; then if [[ `"$JAVA" -version 2>&1 | egrep "1\.[7]\."` ]]; then if [ "${ENABLE_ASSERTIONS:-}" = "1" ]; then if [ "${MAIN_CLASS:-}" = "" ]; then if [ -n "${JVM_OPTS:-}" ] ; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/ignite.sh
lines,185
function,0


for,0

if,10
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ "${IGNITE_HOME:-}" = "" ]; if [ "${DEFAULT_CONFIG:-}" == "" ]; then if [ "${DOCK_OPTS:-}" == "" ]; then if [ -z "$JVM_OPTS" ] ; then if [ "${ENABLE_ASSERTIONS}" = "1" ]; then if [ "${MAIN_CLASS:-}" = "" ]; then if [ "${INTERACTIVE}" == "1" ] ; then if [ ! -f "${RESTART_SUCCESS_FILE}" ] ; then if [ -f "${RESTART_SUCCESS_FILE}" ] ; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/igniterouter.sh
lines,53
function,0


for,0

if,1
if [ "${IGNITE_HOME}" = "" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/bin/ignite-cdc.sh
lines,31
function,0


for,0

if,2
if [ "${IGNITE_HOME:-}" = "" ]; if ! [ "${CDC_JVM_OPTS:-}" = "" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/deliveries/docker/apache-ignite/run.sh
lines,119
function,0


for,2
for lib in ${LIBS_LIST[@]}; do for lib in "${LIBS_LIST[@]}"; do
if,10
if [ -n "${OPTION_LIBS}" ]; then if [ -z "${USER_LIBS}" ]; then if [ -n "${EXTERNAL_LIBS}" ]; then if [ "${USER_LIBS:-}" != "" ]; then if [ -z "${JVM_OPTS}" ] ; then if [ "${version}" -eq 8 ] ; then elif [ "${version}" -gt 8 ] && [ "${version}" -lt 11 ]; then elif [ "${version}" -ge 11 ] ; then if [ "${IGNITE_QUIET}" == "false" -o "${DIGNITE_QUIET}" == "false" ]; then if [ -z "${CONFIG_URI}" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/sqlline/bin/sqlline.sh
lines,80
function,0


for,0

if,2
if [ ! -z "${IGNITE_SCRIPT_STRICT_MODE:-}" ] if [ "${IGNITE_HOME:-}" = "" ];
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/kubernetes/config/run.sh
lines,50
function,0


for,2
for lib in ${LIBS_LIST[@]}; do for lib in ${LIBS_LIST[@]}; do
if,4
if [ ! -z "$OPTION_LIBS" ]; then if [ ! -z "$EXTERNAL_LIBS" ]; then if [ "$IGNITE_QUIET" = "false" ]; then if [ -z $CONFIG_URI ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/clients/src/test/keystore/generate-keys.sh
lines,92
function,1
function createStore {

for,3
echo Generate a certificate and private key pair for ${artifact}. echo Create a certificate signing request for ${artifact}. echo Update the keystore, ${artifact}.jks, by importing the full certificate chain for the ${artifact}.
if,1
if [[ "$expired" = true ]]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/clients/src/test/keystore/generate-ca.sh
lines,97
function,1
function createCa {

for,3
echo Create a certificate signing request for ${ca_name}. echo Self-sign the CSR for ${ca_name}. echo Create auxiliary files for ${ca_name}.
if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/clients/src/test/bin/start-nodes-ssh.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/clients/src/test/bin/start-nodes.sh
lines,97
function,0


for,2
for iter in {1..2} for iter in {1..2}
if,4
if [ ! -d "${JAVA_HOME}" ]; then if [ -d "${M2_HOME}" ]; then if [ ! -d "${IGNITE_HOME}/work" ]; then if [ ! -d "${IGNITE_HOME}/work/log" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/clients/src/test/bin/stop-nodes.sh
lines,40
function,0


for,2
for X in `$JAVA_HOME/bin/jps | grep -i -G Grid.*CommandLineLoader | awk {'print $1'}`; do for X in `$JAVA_HOME/bin/jps | grep -i -G Grid.*CommandLineStartup | awk {'print $1'}`; do
if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/core/src/test/bin/start-nodes-custom.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/platforms/cpp/odbc-test/config/ssl/generate_certificates.sh
lines,119
function,3
function generate_ca { function generate_client_key_and_crt { function generate_jks {

for,0

if,1
if [ -z "$OSSL" ]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/platforms/cpp/thin-client-test/config/ssl/generate_certificates.sh
lines,127
function,3
function generate_ca { function generate_client_key_and_crt { function generate_jks {

for,0

if,2
if [ -z "$OSSL" ] if [ "$4" == "1" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/platforms/dotnet/build.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/ducktests/tests/docker/run_tests.sh
lines,168
function,5

usage() { die() { _extend_json() { duck_add_global() { duck_add_param() {
for,0

if,5
if [ -z "$IMAGE_NAME" ]; then if [ -z "$FORCE" ]; then if "$SCRIPT_DIR"/ducker-ignite ssh | grep -q '(none)'; then if [[ "$PARAMETERS" != "{}" ]]; then if [[ -n "$MAX_PARALLEL" ]]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/ducktests/tests/docker/clean_up.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/ducktests/tests/certs/functions.sh
lines,110
function,5
function makeRoot() { function makeCA() { function mkCert() { function makeTruststore() { function error() {
function makeRoot() { function makeCA() { function mkCert() { function makeTruststore() { function error() {
for,1
for cert in $@ ; do
if,3
if [[ ${ALIAS} == "" ]] || [[ ${DNAME} == "" ]] || [[ ${PSWD} == "" ]] if [[ "${ROOT}" == "" ]] || [[ "${ALIAS}" == "" ]] || [[ "${DNAME}" == "" ]] || [[ "${PSWD}" == "" ]] if [[ ${CA} == "" ]] || [[ ${ALIAS} == "" ]] || [[ ${DNAME} == "" ]] || [[ ${PSWD} == "" ]]
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/ducktests/tests/certs/mkcerts.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/common.sh
lines,1481
function,35

validate() printInstanceInfo() gitClone() createTag() tagInstance() setNodeType() revertNodeType() getLocalLogsFolder() getDiscoveryUrl() getJoinLockUrl() getFirstNodeLockUrl() getSucessUrl() getFailureUrl() terminate() registerNode() unregisterNode() cleanupMetadata() tryToGetFirstNodeLock() checkFirstNodeLockExist() createFirstNodeLock() removeFirstNodeLock() tryToGetClusterJoinLock() checkClusterJoinLockExist() createClusterJoinLock() removeClusterJoinLock() waitToJoinCluster() setupClusterSeeds() waitFirstClusterNodeRegistered() waitAllClusterNodesReady() waitAllTestNodesCompletedTests() installGangliaPackages() setupNTP() bootstrapGangliaAgent() mountUnpartitionedDrives() createCassandraStorageLayout()
for,24
for i in 0 9; for i in 0 9; echo "[INFO] Checking for the first node lock: $1" echo "[INFO] Checking for the cluster join lock: $1" echo "[INFO] Another node is trying to join cluster. Waiting for extra 30sec." echo "[INFO] Looking for $1 seeds in: $DISCOVERY_URL" echo "[INFO] Waiting for the first $1 node to start and publish its seed, time passed ${duration}min" echo "[INFO] Waiting for the first $NODE_TYPE node to register in: $DISCOVERY_URL" terminate "Incorrect cluster type specified '$1' to wait for all nodes up and running" echo "[INFO] Waiting for all $NODES_COUNT $1 nodes ready" echo "[INFO] Waiting for all $TEST_NODES_COUNT test nodes to complete their tests" terminate "Failed to update creation date to current for all files inside: /opt/$unzipDir" terminate "Failed to update creation date to current for all files inside: /opt/rrdtool" terminate "Failed to update creation date to current for all files inside: /opt/monitor-core" terminate "Failed to prepare ganglia-core for compilation" terminate "Failed to update creation date to current for all files inside: /opt/web" for (( i=0; i<=$(( $count -1 )); i++ )) echo "[INFO] Creating partition for the drive: $drive" terminate "Failed to create partition for the drive: $drive" echo "[INFO] Successfully created partition $partition for the drive: $drive" terminate "Failed to mount /storage$iter mount point for partition /dev/$partition" for (( i=0; i<=$(( $count -1 )); i++ )) for (( i=0; i<=$(( $count -1 )); i++ )) for (( i=0; i<=$(( $count -1 )); i++ ))
if,173
if [ -n "$TESTS_TYPE" ] && [ "$TESTS_TYPE" != "ignite" ] && [ "$TESTS_TYPE" != "cassandra" ]; then if [ -z "$S3_TESTS_NODES_DISCOVERY" ]; then if [[ "$S3_TESTS_NODES_DISCOVERY" != ignite/ ]]; then if [ -z "$S3_TESTS_SUCCESS" ]; then if [[ "$S3_TESTS_SUCCESS" != ignite/ ]]; then if [ -z "$S3_TESTS_FAILURE" ]; then if [[ "$S3_TESTS_FAILURE" != ignite/ ]]; then if [ -z "$S3_TESTS_IDLE" ]; then if [[ "$S3_TESTS_IDLE" != ignite/ ]]; then if [ -z "$S3_TESTS_PREPARING" ]; then if [[ "$S3_TESTS_PREPARING" != ignite/ ]]; then if [ -z "$S3_TESTS_RUNNING" ]; then if [[ "$S3_TESTS_RUNNING" != ignite/ ]]; then if [ -z "$S3_TESTS_WAITING" ]; then if [[ "$S3_TESTS_WAITING" != ignite/ ]]; then if [ -z "$S3_IGNITE_NODES_DISCOVERY" ]; then if [[ "$S3_IGNITE_NODES_DISCOVERY" != ignite/ ]]; then if [ -z "$S3_IGNITE_BOOTSTRAP_SUCCESS" ]; then if [[ "$S3_IGNITE_BOOTSTRAP_SUCCESS" != ignite/ ]]; then if [ -z "$S3_IGNITE_BOOTSTRAP_FAILURE" ]; then if [[ "$S3_IGNITE_BOOTSTRAP_FAILURE" != ignite/ ]]; then if [ -z "$S3_CASSANDRA_NODES_DISCOVERY" ]; then if [[ "$S3_CASSANDRA_NODES_DISCOVERY" != ignite/ ]]; then if [ -z "$S3_CASSANDRA_BOOTSTRAP_SUCCESS" ]; then if [[ "$S3_CASSANDRA_BOOTSTRAP_SUCCESS" != ignite/ ]]; then if [ -z "$S3_CASSANDRA_BOOTSTRAP_FAILURE" ]; then if [[ "$S3_CASSANDRA_BOOTSTRAP_FAILURE" != ignite/ ]]; then if [ -z "$S3_GANGLIA_MASTER_DISCOVERY" ]; then if [[ "$S3_GANGLIA_MASTER_DISCOVERY" != ignite/ ]]; then if [ -z "$S3_GANGLIA_BOOTSTRAP_SUCCESS" ]; then if [[ "$S3_GANGLIA_BOOTSTRAP_SUCCESS" != ignite/ ]]; then if [ -z "$S3_GANGLIA_BOOTSTRAP_FAILURE" ]; then if [[ "$S3_GANGLIA_BOOTSTRAP_FAILURE" != ignite/ ]]; then if [ "$NODE_TYPE" == "cassandra" ]; then if [ "$NODE_TYPE" == "ignite" ]; then if [ "$NODE_TYPE" == "test" ]; then if [ "$NODE_TYPE" == "ganglia" ]; then if [ $code -eq 0 ]; then if [ -z "$EC2_INSTANCE_REGION" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then elif [ "$NODE_TYPE" == "ganglia" ]; then if [ -n "$INSTANCE_NAME" ]; then if [ -n "$EC2_OWNER_TAG" ]; then if [ -n "$EC2_PROJECT_TAG" ]; then if [ -n "$1" ]; then if [ -n "$NEW_NODE_TYPE" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then elif [ "$NODE_TYPE" == "ganglia" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then elif [ "$NODE_TYPE" == "ganglia" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then elif [ "$NODE_TYPE" == "ganglia" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then elif [ "$NODE_TYPE" == "ignite" ]; then elif [ "$NODE_TYPE" == "test" ]; then elif [ "$NODE_TYPE" == "ganglia" ]; then if [ -n "$SUCCESS_URL" ] && [[ "$SUCCESS_URL" != ignite/ ]]; then if [ -n "$FAILURE_URL" ] && [[ "$FAILURE_URL" != ignite/ ]]; then if [ -n "$1" ]; then if [ $? -ne 0 ]; then if [ -d "$localLogs" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$NODE_TYPE" == "test" ]; then if [ -n "$1" ]; then if [ $? -ne 0 ]; then if [ -n "$exists" ]; then if [ $? -ne 0 ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$first_host" != "$HOST_NAME" ]; then if [ -n "$lockExists" ]; then if [ $? -ne 0 ]; then if [ "$FIRST_NODE_LOCK" != "true" ]; then if [ $? -ne 0 ]; then if [ "$JOIN_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$join_host" != "$HOST_NAME" ]; then if [ -n "$lockExists" ]; then if [ "$NODE_TYPE" == "cassandra" ]; then if [ -n "$leaving" ] || [ -n "$moving" ] || [ -n "$joining" ]; then if [ $? -ne 0 ]; then if [ "$JOIN_LOCK" != "true" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$1" != "cassandra" ] && [ "$1" != "ignite" ] && [ "$1" != "test" ]; then if [ -n "$seeds" ]; then if [ $length -lt 4 ]; then if [ "$seed2" != "$seed1" ] && [ -n "$seed2" ]; then if [ "$seed3" != "$seed2" ] && [ "$seed3" != "$seed1" ] && [ -n "$seed3" ]; then if [ "$2" == "true" ]; then if [ $duration -gt $SERVICE_STARTUP_TIME ]; then if [ -n "$exists" ]; then if [ "$1" == "true" ]; then if [ $duration -gt $SERVICE_STARTUP_TIME ]; then if [ "$1" == "cassandra" ]; then elif [ "$1" == "ignite" ]; then elif [ "$1" == "test" ]; then if [ $NODES_COUNT -eq 0 ]; then if [ "$1" == "test" ]; then if [ $count -ge $NODES_COUNT ]; then if [ $count -eq 0 ]; then if [ "$1" == "master" ]; then if [ -z "$isAmazonLinux" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$1" == "master" ]; then if [ $? -ne 0 ]; then if [ -z "$isAmazonLinux" ]; then if [ $? -ne 0 ]; then if [ -z "$isAmazonLinux" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "rrdtool" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$1" != "master" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -z "$isAmazonLinux" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -z "$drive" ]; then if [ -n "$isPartitioned" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -n "$MOUNT_POINTS" ]; then if [ -z "$MOUNT_POINTS" ]; then if [ -z "$CASSANDRA_DATA_DIR" ]; then elif [ -z "$CASSANDRA_COMMITLOG_DIR" ]; then elif [ -z "$CASSANDRA_CACHES_DIR" ]; then if [ -z "$CASSANDRA_DATA_DIR" ]; then if [ -z "$CASSANDRA_COMMITLOG_DIR" ]; then if [ -z "$CASSANDRA_CACHES_DIR" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$1" != "cassandra" ] && [ "$1" != "ignite" ] && [ "$1" != "test" ] && [ "$1" != "ganglia" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/ganglia/agent-start.sh
lines,74
function,0


for,1
echo "[INFO] Running Ganglia agent discovery daemon for '$1' cluster using $2 port"
if,3
if [ $? -ne 0 ] || [ -z "$masterNode" ]; then if [ ! -f "/opt/gmond.pid" ]; then if [ -z "$exists" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/ganglia/ganglia-bootstrap.sh
lines,417
function,12

terminate() downloadPackage() setupJava() setupAWSCLI() setupPreRequisites() setupTestsPackage() createGmondReceiverConfig() createGmondSenderReceiverConfig() setupGangliaPackages() startGmondReceiver() startGmetadCollector() startHttpdService()
for,5
for i in 0 9; echo "[INFO] Starting gmond receiver daemon for $1 cluster using config file: $configFile" terminate "Failed to start gmond daemon for $1 cluster, pid file doesn't exist" echo "[INFO] gmond daemon for $1 cluster started, pid=$pid" terminate "gmond daemon for $1 cluster abnormally terminated"
if,31
if [ -n "$SUCCESS_URL" ] && [[ "$SUCCESS_URL" != ignite/ ]]; then if [ -n "$FAILURE_URL" ] && [[ "$FAILURE_URL" != ignite/ ]]; then if [ -n "$1" ]; then if [ -z "$FAILURE_URL" ]; then if [ -z "$SUCCESS_URL" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -n "$1" ]; then if [[ "$1" == s3* ]]; then if [ $code -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "java" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "ignite-cassandra-tests" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ ! -f "$pidFile" ]; then if [ -z "$exists" ]; then if [ ! -f "/opt/gmetad.pid" ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/tests/tests-bootstrap.sh
lines,316
function,6

terminate() downloadPackage() setupJava() setupAWSCLI() setupPreRequisites() setupTestsPackage()
for,1
for i in 0 9;
if,29
if [ -n "$SUCCESS_URL" ] && [[ "$SUCCESS_URL" != ignite/ ]]; then if [ -n "$FAILURE_URL" ] && [[ "$FAILURE_URL" != ignite/ ]]; then if [ -n "$1" ]; then if [ -z "$FAILURE_URL" ]; then if [ -z "$SUCCESS_URL" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -n "$1" ]; then if [[ "$1" == s3* ]]; then if [ $code -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "java" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "ignite-cassandra-tests" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/tests/tests-report.sh
lines,498
function,3

reportTestsSummary() reportSucceedTestsStatistics() reportFailedTestsDetailes()
for,44
echo "[ERROR] Failed to create tests summary zip archive $HOME/tests-summary.zip for $TESTS_SUMMARY_DIR" for dir in $2/* echo "[WARN] WRITE messages count is zero for $node node. This test probably failed." echo "WRITE messages count is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect WRITE messages count for $node node. This test probably failed." echo "Failed to detect WRITE messages count for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect WRITE errors count for $node node. This test probably failed." echo "Failed to detect WRITE errors count for $node node. This test probably failed." >> $tmpFile echo "[WARN] WRITE speed is zero for $node node. This test probably failed." echo "WRITE speed is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect WRITE speed for $node node. This test probably failed." echo "Failed to detect WRITE speed for $node node. This test probably failed." >> $tmpFile echo "[WARN] BULK_WRITE messages count is zero for $node node. This test probably failed." echo "BULK_WRITE messages count is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_WRITE messages count for $node node. This test probably failed." echo "Failed to detect BULK_WRITE messages count for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_WRITE errors count for $node node. This test probably failed." echo "Failed to detect BULK_WRITE errors count for $node node. This test probably failed." >> $tmpFile echo "[WARN] BULK_WRITE speed is zero for $node node. This test probably failed." echo "BULK_WRITE speed is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_WRITE speed for $node node. This test probably failed." echo "Failed to detect BULK_WRITE speed for $node node. This test probably failed." >> $tmpFile echo "[WARN] READ messages count is zero for $node node. This test probably failed." echo "READ messages count is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect READ messages count for $node node. This test probably failed." echo "Failed to detect READ messages count for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect READ errors count for $node node. This test probably failed." echo "Failed to detect READ errors count for $node node. This test probably failed." >> $tmpFile echo "[WARN] READ speed is zero for $node node. This test probably failed." echo "READ speed is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect READ speed for $node node. This test probably failed." echo "Failed to detect READ speed for $node node. This test probably failed." >> $tmpFile echo "[WARN] BULK_READ messages count is zero for $node node. This test probably failed." echo "BULK_READ messages count is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_READ messages count for $node node. This test probably failed." echo "Failed to detect BULK_READ messages count for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_READ errors count for $node node. This test probably failed." echo "Failed to detect BULK_READ errors count for $node node. This test probably failed." >> $tmpFile echo "[WARN] BULK_READ speed is zero for $node node. This test probably failed." echo "BULK_READ speed is zero for $node node. This test probably failed." >> $tmpFile echo "[WARN] Failed to detect BULK_READ speed for $node node. This test probably failed." echo "Failed to detect BULK_READ speed for $node node. This test probably failed." >> $tmpFile for dir in $2/* echo "Error details for node: $node" >> $1
if,43
if [ $succeedCount -gt 0 ]; then if [ $? -ne 0 ]; then if [ $failedCount -gt 0 ]; then if [ $? -ne 0 ]; then if [ $code -ne 0 ]; then if [ $? -ne 0 ]; then if [ -z "$logFile" ]; then if [ ! -f "$logFile" ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$writeErrNodes" ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$blkWriteErrNodes" ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$readErrNodes" ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$blkReadErrNodes" ]; then if [ -n "$cnt" ]; then if [ $cnt -ne 0 ]; then if [ -n "$writeErrNodes" ]; then if [ -n "$blkWriteErrNodes" ]; then if [ -n "$readErrNodes" ]; then if [ -n "$blkReadErrNodes" ]; then if [ -z "$node" ]; then if [ -f "$dir/__error__" ]; then if [ "$TESTS_TYPE" != "ignite" ] && [ "$TESTS_TYPE" != "cassandra" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/tests/tests-manager.sh
lines,457
function,16

switchToIdleState() switchToPreparingState() switchToWaitingState() switchToRunningState() createStateFlag() dropStateFlag() dropTestsSummary() recreateCassandraArtifacts() setupCassandraSeeds() setupIgniteSeeds() setupCassandraCredentials() triggerFirstTimeTestsExecution() cleanPreviousLogs() uploadTestsLogs() buildTestsSummaryReport() runLoadTests()
for,5
for flagUrl in "$@" for (( i=0; i<=$(( $count -1 )); i++ )) for (( i=0; i<=$(( $count -1 )); i++ )) for logFile in /opt/ignite-cassandra-tests/logs/* echo "[INFO] Waiting extra 30sec for load tests to complete"
if,35
if [ "$NODE_STATE" != "IDLE" ]; then if [ "$NODE_STATE" != "PREPARING" ]; then if [ "$NODE_STATE" != "WAITING" ]; then if [ "$NODE_STATE" != "RUNNING" ]; then if [ $? -ne 0 ]; then if [ -n "$exists" ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $CASSANDRA_NODES_COUNT -eq 0 ]; then if [ $IGNITE_NODES_COUNT -eq 0 ]; then if [ -z "$TESTS_TYPE" ]; then if [ $? -ne 0 ]; then if [ $code -ne 0 ]; then if [ -z "$managerLog" ]; then if [ -f "/opt/ignite-cassandra-tests/logs/__success__" ]; then if [ $? -ne 0 ]; then if [ -d "/opt/ignite-cassandra-tests/logs" ]; then if [ $? -ne 0 ]; then if [ -n "$S3_LOGS_TRIGGER" ]; then if [ $? -ne 0 ]; then if [ "$TESTS_TYPE" == "ignite" ]; then if [ -z "$proc" ]; then if [ "$LOGS_SNAPSHOT" != "$NEW_LOGS_SNAPSHOT" ]; then if [ $duration -gt 5 ]; then if [ "$TERMINATED" == "true" ]; then if [ "$TESTS_TYPE" == "cassandra" ]; then if [ -n "$failed" ]; then if [ -z "$NEW_TRIGGER_STATE" ] || [ "$NEW_TRIGGER_STATE" == "$TRIGGER_STATE" ]; then if [ $? -ne 0 ]; then if [ "$TESTS_TYPE" != "ignite" ] && [ "$TESTS_TYPE" != "cassandra" ]; then if [ $? -eq 0 ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -eq 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/ignite/ignite-bootstrap.sh
lines,335
function,8

terminate() downloadPackage() setupJava() setupAWSCLI() setupPreRequisites() setupTestsPackage() downloadIgnite() setupIgnite()
for,1
for i in 0 9;
if,31
if [ -n "$SUCCESS_URL" ] && [[ "$SUCCESS_URL" != ignite/ ]]; then if [ -n "$FAILURE_URL" ] && [[ "$FAILURE_URL" != ignite/ ]]; then if [ -n "$1" ]; then if [ -z "$FAILURE_URL" ]; then if [ -z "$SUCCESS_URL" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -n "$1" ]; then if [[ "$1" == s3* ]]; then if [ $code -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "java" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "ignite-cassandra-tests" ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "ignite" ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ -n "$testsJar" ]; then if [ $? -ne 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/ignite/ignite-start.sh
lines,265
function,4

setupCassandraSeeds() setupIgniteSeeds() checkIgniteStatus() startIgnite()
for,6
for (( i=0; i<=$(( $count -1 )); i++ )) echo "[INFO] Using localhost address as a seed for the first Ignite node: $CLUSTER_SEEDS" for (( i=0; i<=$(( $count -1 )); i++ )) metrics=$(cat $logFile | grep "Metrics for local node" | head -n 1) echo "[WARN] Failed to start Ignite daemon. Sleeping for extra 30sec" echo "[INFO] Waiting for Ignite daemon to start, time passed ${duration}min"
if,16
if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ -n "$logFile" ]; then if [ -n "$nodeId" ] && [ -n "$nodeAddrs" ] && [ -n "$nodePorts" ] && [ -n "$topology" ] && [ -n "$metrics" ] && [ -n "$proc" ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ -n "${proc[1]}" ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ "$FIRST_NODE_LOCK" != "true" ]; then if [ -f "$envScript" ]; then if [ $? -eq 0 ]; then if [ $duration -gt $SERVICE_STARTUP_TIME ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $START_ATTEMPT -gt $SERVICE_START_ATTEMPTS ]; then if [ -z "$proc" ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/ignite/ignite-env.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/logs-collector.sh
lines,173
function,5

uploadLogs() createNewLogsSnapshot() checkLogsChanged() updateLogsSnapshot() collectLogs()
for,4
for i in 0 9; echo "[ERROR] All 10 attempts to upload logs are failed for the directory: $1" for log_src in "$@" for log_src in "$@"
if,13
if [ ! -d "$1" ]; then if [ -z "$dirList" ]; then if [ $code -eq 0 ]; then if [ -d "$log_src" ] || [ -f "$log_src" ]; then if [ ! -f "~/logs-collector.snapshot" ]; then if [ ! -f "~/logs-collector.snapshot.new" ]; then if [ -f "$log_src" ]; then elif [ -d "$log_src" ]; then if [ -z "$1" ]; then if [ -z "$2" ]; then if [ -z "$1" ]; then if [ -z "$STATE" ] || [ "$STATE" == "$TRIGGER_STATE" ]; then if [ $? -eq 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/env.sh
lines,112
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/cassandra/cassandra-env.sh
lines,287
function,1

calculate_heap_sizes()
for,1
for opt in `grep "^-" $JVM_OPTS_FILE`
if,18
if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "8192" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ "$JVM_VERSION" \< "1.8" ] ; then if [ "$JVM_VERSION" \< "1.8" ] && [ "$JVM_PATCH_VERSION" \< "40" ] ; then if [ "x$MAX_HEAP_SIZE" = "x" ] && [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "x$MAX_HEAP_SIZE" = "x" ] || [ "x$HEAP_NEWSIZE" = "x" ]; then if [ "x$MALLOC_ARENA_MAX" = "x" ] ; then if [ $DEFINED_XMX -ne 0 ] && [ $DEFINED_XMS -ne 0 ]; then elif [ $DEFINED_XMX -ne 0 ] || [ $DEFINED_XMS -ne 0 ]; then if [ $DEFINED_XMN -eq 0 ] && [ $DEFINED_XMX -ne 0 ]; then elif [ $DEFINED_XMN -ne 0 ] && [ $USING_CMS -eq 0 ]; then if [ "$JVM_ARCH" = "64-Bit" ] && [ $USING_CMS -eq 0 ]; then if [ "x$CASSANDRA_HEAPDUMP_DIR" != "x" ]; then if [ "x$LOCAL_JMX" = "x" ]; then if [ "$LOCAL_JMX" = "yes" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/cassandra/cassandra-start.sh
lines,216
function,2

setupCassandraSeeds() startCassandra()
for,4
echo "[INFO] Using host address as a seed for the first Cassandra node: $CLUSTER_SEEDS" echo "[WARN] Failed to concurrently start Cassandra daemon. Sleeping for extra 30sec" echo "[WARN] Failed to start Cassandra daemon. Sleeping for extra 30sec" echo "[INFO] Waiting for Cassandra daemon to start, time passed ${duration}min"
if,14
if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $? -ne 0 ]; then if [ -n "${proc[1]}" ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ "$FIRST_NODE_LOCK" != "true" ]; then if [ $? -eq 0 ]; then if [ $duration -gt $SERVICE_STARTUP_TIME ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then if [ $START_ATTEMPT -gt $SERVICE_START_ATTEMPTS ]; then if [ -n "$concurrencyError" ] && [ "$FIRST_NODE_LOCK" != "true" ]; then if [ -z "$proc" ]; then if [ "$FIRST_NODE_LOCK" == "true" ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/bootstrap/aws/cassandra/cassandra-bootstrap.sh
lines,335
function,8

terminate() downloadPackage() setupJava() setupAWSCLI() setupPreRequisites() setupTestsPackage() downloadCassandra() setupCassandra()
for,1
for i in 0 9;
if,29
if [ -n "$SUCCESS_URL" ] && [[ "$SUCCESS_URL" != ignite/ ]]; then if [ -n "$FAILURE_URL" ] && [[ "$FAILURE_URL" != ignite/ ]]; then if [ -n "$1" ]; then if [ -z "$FAILURE_URL" ]; then if [ -z "$SUCCESS_URL" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -n "$1" ]; then if [[ "$1" == s3* ]]; then if [ $code -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "java" ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "ignite-cassandra-tests" ]; then if [ $? -ne 0 ]; then if [ "$unzipDir" != "cassandra" ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then if [ -z "$exists" ]; then if [ $? -ne 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/scripts/ignite-load-tests.sh
lines,39
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/scripts/jvm-opt.sh
lines,21
function,0


for,0

if,0

git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/scripts/cassandra-load-tests.sh
lines,39
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:apache/ignite.git,32f7a7ea53126afd2db830f767ebe16b87f49d0b,ignite,4548,./ignite/modules/cassandra/store/src/test/scripts/recreate-cassandra-artifacts.sh
lines,39
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:jdamcd/android-crop.git,f4b2d25a0508f45b1b961064a9b3e4a8ae30227c,android-crop,4546,
git@github.com:Flipboard/bottomsheet.git,2792f24d60a19e0948ff0e9977ea6ccff4a6a35d,bottomsheet,4541,
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/flink-connector-db2-cdc/src/test/resources/db2_server/dbsetup.sh
lines,70
function,0


for,1
echo "Waiting for DB2 start ( $DBNAME ) ."
if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/flink-connector-db2-cdc/src/test/resources/db2_server/cdcsetup.sh
lines,33
function,0


for,1
echo "waiting for db2inst1 exists ."
if,1
if [ ! -f /asncdctools/src/asncdc.nlk ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/docs/docs_site.sh
lines,55
function,2
function start_docs_server() { function stop_docs_server() {
function start_docs_server() { function stop_docs_server() {
for,1
echo "Please see docs/README.md for more details"
if,3
if ! command -v docker &> /dev/null if [[ $1 = "start" ]]; then elif [[ $1 = "stop" ]]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/docs/build_docs.sh
lines,75
function,0


for,3
for current_branch in ${branches}; do echo -e "\tINFO: Couldn't find 'docs/conf.py' for branch: ${current_branch}, just skip this branch" echo "INFO: Building sites for branch: ${current_branch}"
if,1
if [ ! -e 'docs/conf.py' ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/flink-cdc-e2e-tests/src/test/resources/docker/db2/dbsetup.sh
lines,65
function,0


for,1
echo "Waiting for DB2 start ( $DBNAME ) ."
if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/flink-cdc-e2e-tests/src/test/resources/docker/db2/cdcsetup.sh
lines,33
function,0


for,1
echo "waiting for db2inst1 exists ."
if,1
if [ ! -f /asncdctools/src/asncdc.nlk ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/azure-pipelines/create_build_artifact.sh
lines,35
function,0


for,0

if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/azure-pipelines/unpack_build_artifact.sh
lines,31
function,0


for,0

if,1
if ! [ -e $FLINK_ARTIFACT_DIR ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/azure-pipelines/uploading_watchdog.sh
lines,85
function,1
function timeout_watchdog() {
function timeout_watchdog() {
for,0

if,3
if [ -z "$HERE" ] ; then if [[ $secondsToKill -lt 0 ]]; then if [[ "$TEST_EXIT_CODE" == 0 ]]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/azure-pipelines/debug_files_utils.sh
lines,25
function,1
function prepare_debug_files {

for,0

if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/stage.sh
lines,172
function,2
function get_compile_modules_for_stage() { function get_test_modules_for_stage() {
function get_compile_modules_for_stage() { function get_test_modules_for_stage() {
for,0

if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/test_controller.sh
lines,113
function,0


for,0

if,5
if [ -z "$HERE" ] ; then if [ -z "$DEBUG_FILES_OUTPUT_DIR" ] ; then if [ ! -d "$DEBUG_FILES_OUTPUT_DIR" ] ; then if [ -z "$STAGE" ] ; then if [ $EXIT_CODE != 0 ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/controller_utils.sh
lines,50
function,2

print_system_info() { print_stacktraces () {
for,1
for pid in "${pids[@]}"; do
if,0

git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/watchdog.sh
lines,127
function,5
function run_with_watchdog() {
max_of() { mod_time () { the_time() { watchdog () { function run_with_watchdog() {
for,2
for number in "${@:2}"; do echo "Process produced no output for ${MAX_NO_OUTPUT} seconds."
if,2
if ((number > max)); then if [ $time_diff -ge $MAX_NO_OUTPUT ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/compile.sh
lines,63
function,0


for,1
echo "License header check failure detected. Printing first 50 lines for convenience:"
if,3
if [ -z "$HERE" ] ; then if [ $EXIT_CODE != 0 ]; then if [ $? != 0 ]; then
git@github.com:ververica/flink-cdc-connectors.git,e0fd6f965b702cc2876372dc068379dafe066277,flink-cdc-connectors,4538,./flink-cdc-connectors/tools/ci/maven-utils.sh
lines,100
function,5
function run_mvn { function setup_maven { function set_mirror_config { function collect_coredumps { function collect_dmesg {

for,2
echo "Searching for .dump, .dumpstream and related files in '$SEARCHDIR'" for file in `find $SEARCHDIR -type f -regextype posix-extended -iregex '.*\.hprof|.*\.dump|.*\.dumpstream|.*hs.*\.log|.*/core(.[0-9]+)?$'`; do
if,6
if [[ "$M2_HOME" != "" ]]; then if [[ "$MVN_RUN_VERBOSE" != "false" ]]; then if [ ! -d "${MAVEN_VERSIONED_DIR}" ]; then if [ -d "${HOME}/.m2/repository/" ]; then find ${HOME}/.m2/repository/ -name "*.jar" -exec sh -c 'if ! zip -T {} >/dev/null ; then echo "deleting invalid file: {}"; rm -f {} ; fi' \; if [[ "$MAVEN_MIRROR_CONFIG_FILE" != "" ]]; then
git@github.com:zhanghai/Douya.git,14d2f3e6760ba4659db0d1c602159719e2c8b78b,Douya,4534,./Douya/upload-to-releases.sh
lines,47
function,0


for,1
for file in "$@"; do
if,1
if [[ "${old_release_id}" != "null" ]]; then
git@github.com:xuexiangjys/XUI.git,111e6008ccd97978d892c6807be1a50f544908ee,XUI,4530,
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/sparkworker/worker.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/historyserver/run_history.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/namenode/run_nn.sh
lines,35
function,0


for,0

if,3
if [ ! -d $namedir ]; then if [ -z "$CLUSTER_NAME" ]; then if [ "`ls -A $namedir`" == "" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/sparkmaster/master.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/base_java11/export_container_ip.sh
lines,30
function,0


for,1
for interface in "${interfaces[@]}"
if,1
if [ -n "$ipAddr" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/base_java11/entrypoint.sh
lines,107
function,2
function addProperty() { function configure() {
function addProperty() { function configure() {
for,4
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "Configuring for multihomed network" for module in mapred jvm rpc ugi; do for module in namenode datanode resourcemanager nodemanager mrappmaster jobhistoryserver; do
if,3
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if [ "$MULTIHOMED_NETWORK" = "1" ]; then if [ -n "$GANGLIA_HOST" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/base/export_container_ip.sh
lines,30
function,0


for,1
for interface in "${interfaces[@]}"
if,1
if [ -n "$ipAddr" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/base/entrypoint.sh
lines,107
function,2
function addProperty() { function configure() {
function addProperty() { function configure() {
for,4
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "Configuring for multihomed network" for module in mapred jvm rpc ugi; do for module in namenode datanode resourcemanager nodemanager mrappmaster jobhistoryserver; do
if,3
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if [ "$MULTIHOMED_NETWORK" = "1" ]; then if [ -n "$GANGLIA_HOST" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/prestobase/lib/mustache.sh
lines,269
function,7

mustache() { _mustache() { _mustache_cat() { _mustache_cmd() { _mustache_die() { _mustache_sed() { _mustache_tag() {
for,0

if,5
if [ -z "$_M_PREV_C" ] if [ -z "$_M_TAG" ] if [ "$_M_STATUS" -eq 1 ] if [ "$_M_STATUS" -eq 1 ] if [ "$_M_TAG" != "$_M_SECTION_TAG" ]
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/prestobase/bin/mustache.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/prestobase/bin/entrypoint.sh
lines,71
function,1

wait_until() {
for,1
for template in $(ls ${PRESTO_CONF_DIR}/*.mustache)
if,3
if nc -z ${hostname} ${port}; then if [ $address_up -eq 0 ]; then if [ ! -e ${PRESTO_LOG_DIR}/node.id ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/sparkadhoc/adhoc.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/datanode/run_dn.sh
lines,25
function,0


for,0

if,1
if [ ! -d $datadir ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/spark_base/execute-step.sh
lines,30
function,0


for,0

if,1
if [ $ENABLE_INIT_DAEMON = "true" ]
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/spark_base/wait-for-step.sh
lines,29
function,0


for,0

if,2
if [ $ENABLE_INIT_DAEMON = "true" ] echo "Validating if step ${INIT_DAEMON_STEP} can start in pipeline"
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/spark_base/finish-step.sh
lines,32
function,0


for,0

if,1
if [ $ENABLE_INIT_DAEMON = "true" ]
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/trinobase/scripts/trino.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/hive_base/conf/hive-env.sh
lines,55
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/hive_base/startup.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/hoodie/hadoop/hive_base/entrypoint.sh
lines,134
function,3
function addProperty() { function configure() { function wait_for_it()
function addProperty() { function configure() { function wait_for_it()
for,6
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "Configuring for multihomed network" for module in mapred jvm rpc ugi; do for module in namenode datanode resourcemanager nodemanager mrappmaster jobhistoryserver; do echo "[$i/$max_try] check for ${service}:${port}..." for i in ${SERVICE_PRECONDITION[@]}
if,4
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if [ "$MULTIHOMED_NETWORK" = "1" ]; then if [ -n "$GANGLIA_HOST" ]; then if (( $i == $max_try )); then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/generate_test_suite.sh
lines,301
function,0

POSITIONAL=()
for,2
--input_path input path for test in docker image (DEFAULT /user/hive/warehouse/hudi-integ-test-suite/input/) --output_path input path for test in docker image (DEFAULT /user/hive/warehouse/hudi-integ-test-suite/output/)
if,14
--execute_test_suite flag if test need to execute (DEFAULT- true) if $INCLUDE_MEDIUM_TEST_SUITE ; then if $INCLUDE_LONG_TEST_SUITE ; then if $INCLUDE_CLUSTER_YAML ; then if [ ! -f $CUR_DIR/../packaging/hudi-integ-test-bundle/target/$JAR_NAME ]; then if [ -d "demo/config/test-suite/staging" ]; then if [ ! -d "demo/config/test-suite/staging" ]; then if $INCLUDE_MEDIUM_TEST_SUITE ; then if $INCLUDE_LONG_TEST_SUITE ; then if $INCLUDE_CLUSTER_YAML ; then if $EXECUTE_TEST_SUITE ; then if [ -f demo/config/test-suite/staging/medium_test_suite_spark_command.sh ]; then if [ -f demo/config/test-suite/staging/long_test_suite_spark_command.sh ]; then if [ -f demo/config/test-suite/staging/clustering_spark_command.sh ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/demo/get_min_commit_time_mor.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/demo/get_min_commit_time_cow.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/demo/setup_demo_container.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/stop_demo.sh
lines,32
function,0


for,0

if,1
if [ "$HUDI_DEMO_ENV" = "--mac-aarch64" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/setup_demo.sh
lines,37
function,0


for,0

if,2
if [ "$HUDI_DEMO_ENV" = "--mac-aarch64" ]; then if [ "$HUDI_DEMO_ENV" != "dev" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/docker/build_local_docker_images.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-platform-service/hudi-metaserver/src/main/thrift/bin/thrift_binary.sh
lines,31
function,0


for,0

if,2
if [ "$OS_VERSION" = "$M1_MAC" ] elif [ "$OS_VERSION" = "$DOCKER" ]
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-platform-service/hudi-metaserver/src/main/thrift/bin/thrift_in_mac_m1.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-platform-service/hudi-metaserver/src/main/thrift/bin/thrift_in_docker.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-platform-service/hudi-metaserver/hudi-metaserver-server/bin/start_hudi_metaserver.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-spark-datasource/hudi-spark/run_hoodie_generate_app.sh
lines,40
function,1
function error_exit {

for,0

if,2
if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "$CLIENT_JAR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-spark-datasource/hudi-spark/run_hoodie_app.sh
lines,40
function,1
function error_exit {

for,0

if,2
if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "$CLIENT_JAR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-spark-datasource/hudi-spark/run_hoodie_streaming_app.sh
lines,40
function,1
function error_exit {

for,0

if,2
if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "$CLIENT_JAR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/validate_source_binary_files.sh
lines,34
function,0


for,1
echo "Checking for binary files in the source files"
if,1
if [ "$numBinaryFiles" -gt "0" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/validate_staged_release.sh
lines,141
function,0


for,2
echo "This script will validate source release candidate published in dist for apache hudi" for param in "$@"
if,12
if [[ `basename $CURR_DIR` != "scripts" ]] ; then if [[ $ if [[ $param =~ --release\=([0-9]\.[0-9]*\.[0-9]) ]]; then if [[ $param =~ --rc_num\=([0-9]*) ]]; then if [[ $param =~ --release_type\="release" ]]; then if [[ $param =~ --verbose ]]; then if [ "$(uname)" == "Darwin" ]; then if [ -z ${RC_NUM+x} ]; then if [ -z ${RELEASE_TYPE+x} ]; then if [ $RC_NUM == -1 ]; then if [ $RELEASE_TYPE == "release" ]; then elif [ $RELEASE_TYPE == "dev" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/preparation_before_release.sh
lines,113
function,0


for,1
echo "Please input you Apache account creds for checking out ${ROOT_SVN_URL} and adding your key to KEYS file"
if,7
if [[ $confirmation = "y" ]]; then if [[ $confirmation != "y" ]]; then if [[ $pmc_permission != "y" ]]; then if [[ -d ${LOCAL_SVN_DIR} ]]; then if [[ $commit_confirmation = "y" ]]; then if [[ -d ${LOCAL_SVN_DIR} ]]; then if [[ $commit_confirmation = "y" ]]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/validate_source_rat.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/cut_release_branch.sh
lines,145
function,1
function clean_up(){
function clean_up(){
for,4
echo "This script will update apache hudi master branch with next release version and cut release branch for current development version." for param in "$@" echo "!!Please open a PR based on ${NEXT_VERSION_BRANCH} branch for approval!! [Press ENTER to continue]" git commit -am "Create release branch for version ${RELEASE}."
if,9
if [[ $confirmation = "y" ]]; then if [[ $ if [[ $param =~ --release\=([0-9]\.[0-9]*\.[0-9]) ]]; then if [[ $param =~ --next_release\=([0-9]\.[0-9]*\.[0-9]) ]]; then if [[ $param =~ --rc_num\=([0-9]*) ]]; then if [[ -z "$RELEASE" || -z "$NEXT_VERSION_IN_BASE_BRANCH" || -z "$RC_NUM" ]]; then if [[ -d ${LOCAL_CLONE_DIR} ]]; then if [[ $confirmation != "y" ]]; then if [[ $confirmation != "y" ]]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/create_source_directory.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/create_source_release.sh
lines,77
function,0


for,0

if,3
if [[ `basename $CURR_DIR` != "scripts" ]] ; then if [ -z "${RELEASE_VERSION}" ]; then if [ "$(uname)" == "Darwin" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/validate_staged_bundles.sh
lines,56
function,0


for,2
for bundle in "${bundles[@]}" for extension in "${extensions[@]}"
if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/generate_notice.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/deploy_staging_jars.sh
lines,120
function,0


for,2
for v in "${ALL_VERSION_OPTS[@]}"; do for v in "${ALL_VERSION_OPTS[@]}"
if,5
if [ ! -d "$CURR_DIR/packaging" ] ; then if [ "$ if [ "${1:-}" == "-h" ]; then if [ "$valid_version_opt" = true ]; then elif [ "$
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/release/validate_source_copyright.sh
lines,55
function,0


for,2
echo "Checking for DISCLAIMER" echo "Checking for LICENSE and NOTICE"
if,4
if [ -f "$disclaimerFile" ]; then if [ ! -f "$licenseFile" ]; then if [ ! -f "$noticeFile" ]; then if [ "$numfilesWithNoLicense" -gt "0" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/dependency.sh
lines,141
function,4
function generate_dependencies() { function build_classpath() { function check_diff() { function printUsage() {
function generate_dependencies() { function build_classpath() { function check_diff() { function printUsage() {
for,1
echo ' -p [MUST] to generate new dependencyList file for all bundle module with given profile list'
if,4
if [[ -n $the_diff ]]; then if [[ ${ if [ -z "$PROFILE" ]; then if [ $CHECK_DIFF == "true" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/pr_push_command.sh
lines,60
function,0


for,0

if,3
if [[ ${CURR_BRANCH} = pull/* ]] if ! echo ${PR_RESP} | jq '.url' | grep "hudi/pulls/${PR_NUM}" ; then if ! git remote -v | grep ${PR_REMOTE} ; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/scripts/checkout_pr.sh
lines,61
function,1
function printUsage {

for,0

if,2
echo ' -f force overwrite of local branch (default: fail if exists)' if [[ ${
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-integ-test/prepare_integration_suite.sh
lines,170
function,3

usage() { get_spark_command() { get_versions () {
for,0

if,4
if [ -z "$scala" ] if [ -z "$hadoop" ] if [ -z "$hive" ] if [ -z "$scala" ]
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-examples/bin/custom-streamer-example.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-examples/bin/dfs-streamer-example.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-examples/bin/kafka-streamer-example.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-kafka-connect/demo/setupKafka.sh
lines,178
function,1

usage() {
for,6
echo " -f |--raw-file, (optional) raw file for the kafka records" echo " -k |--kafka-topic, (optional) Topic name for Kafka" for ((i = 0; i < ${numHudiPartitions}; i++)); do for ((i = 1;i<=numBatch;i++)); do for (( ; ; )); do for partitionValue in "${partitions[@]}"; do
if,6
if [ $ if [ ! $HUDI_DIR ]; then if [ $recreateTopic = "Y" ]; then if [ $batchRecordSeq -eq $numRecords ]; then if [ $batchRecordSeq -eq $numRecords ]; then if [ $batchRecordSeq -eq $numRecords ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-cli/hudi-cli.sh
lines,31
function,0


for,0

if,1
if [ -z "$CLIENT_JAR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-cli/conf/hudi-env.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/run_docker_java17.sh
lines,116
function,0


for,0

if,7
if [[ ${SPARK_RUNTIME} == 'spark2.4.8' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.0.2' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.1.3' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.2.3' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.3.1' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.3.2' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.4.0' ]]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/flink/compact.sh
lines,35
function,0


for,0

if,1
if [ $numCommits -gt 0 ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/docker_java17/docker_java17_test.sh
lines,178
function,6

change_java_runtime_version () { use_default_java_runtime () { start_datanode () { setup_hdfs () { stop_hdfs() { build_hudi_java8 () { run_docker_tests() {
for,1
for i in $(seq 1 3)
if,10
if [[ ${JAVA_RUNTIME_VERSION} == 'openjdk11' ]]; then elif [[ ${JAVA_RUNTIME_VERSION} == 'openjdk17' ]]; then if [ -z $DN_DIR_PREFIX ]; then if [ -z $PID_DIR ]; then if [ "$?" -ne 0 ]; then if [ "$?" -ne 0 ]; then if [ ! -d $JARS_DIR ]; then if [ "$?" -ne 0 ]; then if [ $? -ne 0 ]; then if [ "$?" -ne 0 ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/ci_run.sh
lines,207
function,0


for,2
echo 'Adding environment variables for bundles in the release candidate' echo "Downloaded these jars from $REPO_BASE_URL for validation:"
if,19
if [[ ${SPARK_RUNTIME} == 'spark2.4.8' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.0.2' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.1.3' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.2.3' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.3.1' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.3.2' ]]; then elif [[ ${SPARK_RUNTIME} == 'spark3.4.0' ]]; then if [[ "$HUDI_VERSION" == *"SNAPSHOT" ]]; then if [[ ${SPARK_PROFILE} == 'spark' ]]; then elif [[ ${SPARK_PROFILE} == 'spark2.4' ]]; then elif [[ ${SPARK_PROFILE} == 'spark3.1' ]]; then elif [[ ${SPARK_PROFILE} == 'spark3.2' ]]; then elif [[ ${SPARK_PROFILE} == 'spark3.3' ]]; then elif [[ ${SPARK_PROFILE} == 'spark3' ]]; then if [[ ${FLINK_PROFILE} == 'flink1.13' ]]; then elif [[ ${FLINK_PROFILE} == 'flink1.14' ]]; then elif [[ ${FLINK_PROFILE} == 'flink1.15' ]]; then elif [[ ${FLINK_PROFILE} == 'flink1.16' ]]; then elif [[ ${FLINK_PROFILE} == 'flink1.17' ]]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1136hive313spark313.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1153hive313spark331.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1170hive313spark340.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1146hive313spark323.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1146hive313spark302.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1170hive313spark332.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/base/build_flink1153hive313spark332.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/validate.sh
lines,319
function,7

change_java_runtime_version () { use_default_java_runtime () { test_spark_hadoop_mr_bundles () { test_utilities_bundle () { test_flink_bundle() { test_kafka_connect_bundle() { test_metaserver_bundle () {
for,2
echo "::warning::validate.sh setting up hive metastore for spark & hadoop-mr bundles validation" echo "::warning::validate.sh skip validating utilities bundle for non-spark2.4 & non-spark3.1 build"
if,20
if [[ ${JAVA_RUNTIME_VERSION} == 'openjdk11' ]]; then elif [[ ${JAVA_RUNTIME_VERSION} == 'openjdk17' ]]; then if [ "$numRecords" -ne 10 ]; then if [[ $HIVE_HOME =~ 'hive-2' ]]; then return; fi if [ "$numRecordsHiveQL" -ne 10 ]; then if [[ -n $EXTRA_JARS ]]; then if [ "$?" -ne 0 ]; then if [[ -z $OUTPUT_SIZE || "$OUTPUT_SIZE" -lt "580" ]]; then if [ "$?" -ne 0 ]; then if [ "$EXIT_CODE" -ne 0 ]; then if [ "$EXIT_CODE" -ne 0 ]; then if [ "$numRecords" -ne 10 ]; then if [ "$?" -ne 0 ]; then if [[ $SPARK_HOME == *"spark-2.4"* ]] || [[ $SPARK_HOME == *"spark-3.1"* ]] if [ "$?" -ne 0 ]; then if [ "$?" -ne 0 ]; then if [[ ${JAVA_RUNTIME_VERSION} == 'openjdk8' ]]; then if [ "$?" -ne 0 ]; then if [ "$?" -ne 0 ]; then if [ "$?" -ne 0 ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/kafka/produce.sh
lines,30
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/bundle-validation/kafka/consume.sh
lines,34
function,0


for,0

if,1
if [ $numCommits -gt 0 ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/hudi-cli-bundle/conf/hudi-env.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/hudi-cli-bundle/hudi-cli-with-bundle.sh
lines,63
function,0


for,1
echo "Downloading necessary auxiliary jars for Hudi CLI"
if,6
if [ -z "$CLI_BUNDLE_JAR" ]; then if [ -z "$SPARK_BUNDLE_JAR" ]; then if [ ! -d $HUDI_AUX_LIB ]; then if [ -z "$CLI_BUNDLE_JAR" ] || [ -z "$SPARK_BUNDLE_JAR" ]; then if [ -z "$SPARK_HOME" ]; then if [ -z "$CLIENT_JAR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/packaging/hudi-timeline-server-bundle/run_server.sh
lines,52
function,0


for,0

if,4
if [ -z "$HADOOP_HOME" ]; then if [ -z "$HADOOP_CONF_DIR" ]; then if [ ! -f "${DIR}/javax.servlet-api-3.1.0.jar" ]; then if [ ! -f "${DIR}/javax.servlet-api-3.1.0.jar" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-sync/hudi-hive-sync/run_hive_global_commit_tool.sh
lines,69
function,1
function error_exit {

for,0

if,5
if [ -z "${HADOOP_HOME}" ]; then if [ -z "${HIVE_HOME}" ]; then if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "${HIVE_JDBC}" ]; then if ! [ -z "$HIVE_CONF_DIR" ]; then
git@github.com:apache/hudi.git,49ed0e7e3d6885dd0e33f64ab9f7a7e71ce6e8f6,hudi,4527,./hudi/hudi-sync/hudi-hive-sync/run_sync_tool.sh
lines,55
function,1
function error_exit {

for,0

if,4
if [ -z "${HADOOP_HOME}" ]; then if [ -z "${HIVE_HOME}" ]; then if [ -z "$HADOOP_CONF_DIR" ]; then if [ -z "${HIVE_JDBC}" ]; then
git@github.com:zfdang/Android-Touch-Helper.git,a4e333a369ad599c66b4f98646f7a27f8b5ff445,Android-Touch-Helper,4524,
git@github.com:javagrowing/JGrowing.git,425cd785cb93c9daeaf3630529ece76ca4a7bbd3,JGrowing,4511,
git@github.com:castorflex/SmoothProgressBar.git,c620eacc77d55d7039dc13c8fb29cfedb9cf09c3,SmoothProgressBar,4482,
git@github.com:alibaba/dexposed.git,d1082567d6dc1de814b9ed2e9a3a63285a552bf9,dexposed,4480,
git@github.com:Netflix/ribbon.git,9f3fe1b32b384b610a5bd237f901cdd34d07bfde,ribbon,4470,
git@github.com:CellularPrivacy/Android-IMSI-Catcher-Detector.git,2035d2945903d41d657170f08551cf3ba98cd68b,Android-IMSI-Catcher-Detector,4466,
git@github.com:tuguangquan/mybatis.git,0483a1dcbe92e2d226ab045420f41a85e01d6c04,mybatis,4452,
git@github.com:square/android-times-square.git,36e247f5beca6e47fd7c3866604a298c3dc0b9e6,android-times-square,4440,./android-times-square/.buildscript/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/pmd-apex-jorje/repo/create-local-repo.sh
lines,94
function,7
function deleteoldrepo() { function install() { function download() { function minimize() { function cleanup() { function updateversion() { function diffstat() {
function deleteoldrepo() { function install() { function download() { function minimize() { function cleanup() { function updateversion() { function diffstat() {
for,0

if,0

git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/docs/build-docs.sh
lines,4
function,0


for,0

if,0

git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/pmd-dist/src/test/resources/scripts/runtest.sh
lines,88
function,4

get_full_java_version() { determine_java_version() { jre_specific_vm_options() { run_test() {
for,0

if,7
if [ "$java_ver" -ge 70 ] && [ "$java_ver" -lt 80 ] elif [ "$java_ver" -ge 80 ] && [ "$java_ver" -lt 90 ] elif [ "$java_ver" -ge 90 ] && [ "$java_ver" -lt 110 ] && [ "$java_vendor" = "java" ] elif [ "$java_vendor" = "openjdk" ] || ( [ "$java_vendor" = "java" ] && [ "$java_ver" -ge 110 ] ) if [ "$EXPECTED_VER" = "$java_ver" ]; then echo -e "\e[32mOK\e[0m"; else echo -e "\e[31mFAILED\e[0m"; fi if [ "$EXPECTED_VENDOR" = "$java_vendor" ]; then echo -e "\e[32mOK\e[0m"; else echo -e "\e[31mFAILED\e[0m"; fi if [ "$EXPECTED" = "$java_opts" ]; then echo -e "\e[32mOK\e[0m"; else echo -e "\e[31mFAILED\e[0m - expected: ${EXPECTED}"; fi
git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/.ci/build.sh
lines,342
function,6
function build() { function pmd_ci_build_setup_bundler() { function pmd_ci_build_run() { function pmd_ci_deploy_build_artifacts() { function pmd_ci_build_and_upload_doc() { function pmd_ci_dogfood() {
function build() { PMD_MAVEN_EXTRA_OPTS=() function pmd_ci_build_setup_bundler() { function pmd_ci_build_run() { function pmd_ci_deploy_build_artifacts() { function pmd_ci_build_and_upload_doc() { function pmd_ci_dogfood() { local mpmdVersion=()
for,5
pmd_ci_log_info "Install openjdk8 for integration tests and pmd-regression-tests" pmd_ci_log_info "Install openjdk17 for integration tests and pmd-regression-tests" pmd_ci_log_info "Install openjdk21 for integration tests and pmd-regression-tests" pmd_ci_log_group_start "Creating new baseline for regression tester" pmd_ci_log_group_start "Creating new baseline for regression tester"
if,20
if [ "$(pmd_ci_utils_get_os)" = "linux" ]; then if pmd_ci_utils_is_fork_or_pull_request; then if [[ "${PMD_CI_IS_FORK}" = "false" && -n "${PMD_CI_PULL_REQUEST_NUMBER}" ]]; then if [ "$(pmd_ci_utils_get_os)" = "linux" ]; then if pmd_ci_maven_isReleaseBuild; then if [ "$(pmd_ci_utils_get_os)" != "linux" ]; then if [ "${PMD_CI_BRANCH}" = "experimental-apex-parser" ]; then if pmd_ci_maven_isReleaseBuild && [[ "${PMD_CI_TAG}" == *-dist ]]; then if pmd_ci_maven_isSnapshotBuild || [[ "${PMD_CI_TAG}" == *-dist ]]; then if pmd_ci_maven_isSnapshotBuild; then if pmd_ci_maven_isReleaseBuild; then if [[ "${PMD_CI_TAG}" != *-dist ]]; then if pmd_ci_maven_isSnapshotBuild; then if pmd_ci_maven_isReleaseBuild && [[ "${PMD_CI_TAG}" != *-dist ]]; then if pmd_ci_maven_isReleaseBuild && [[ "${PMD_CI_TAG}" == *-dist ]]; then if pmd_ci_maven_isReleaseBuild && [[ "${PMD_CI_TAG}" != *-dist ]]; then if pmd_ci_maven_isSnapshotBuild || [[ "${PMD_CI_TAG}" != *-dist ]]; then if pmd_ci_maven_isSnapshotBuild && [ "${PMD_CI_BRANCH}" = "master" ]; then if pmd_ci_maven_isReleaseBuild && [[ "${PMD_CI_TAG}" != *-dist ]]; then if [ "${PMD_CI_MAVEN_PROJECT_VERSION}" = "7.0.0-SNAPSHOT" ]; then
git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/.ci/git-repo-sync.sh
lines,81
function,2
function git_repo_sync() { function retry {
function git_repo_sync() {
for,0

if,4
if pmd_ci_utils_is_fork_or_pull_request; then if [ -n "${PMD_CI_BRANCH}" ]; then elif [ -n "${PMD_CI_TAG}" ]; then if [ $count -lt $retries ]; then
git@github.com:pmd/pmd.git,981f44406fbdaebf13de4ee13d525643a79bc3d5,pmd,4432,./pmd/do-release.sh
lines,301
function,0


for,1
git tag -m "[release] copy for tag pmd_releases/${RELEASE_VERSION}-dist" "pmd_releases/${RELEASE_VERSION}-dist"
if,9
if [ ! -f pom.xml ] || [ ! -d ../pmd.github.io ]; then if [ "$RELEASE_VERSION" = "" ]; then if [ "$PATCH" == "0" ]; then if [ "$DEVELOPMENT_VERSION" = "" ]; then if [ "$LAST_VERSION" = "" ]; then if [ "${BUILD_TOOLS_VERSION}" != "${BUILD_TOOLS_VERSION_RELEASE}" ]; then if [[ -e "${RELEASE_RULESET}" ]] if [ "$changes" -gt 0 ]; then if [ "$changes" -gt 0 ]; then
git@github.com:yasserg/crawler4j.git,68f5c1e4fb86542e74d31c0bcb4b1ae14ba2ea71,crawler4j,4426,./crawler4j/config/intellij/reset.sh
lines,14
function,0


for,0

if,0

git@github.com:line/armeria.git,43a4ae496db6956a01a3ab70f2f62c2cb447582f,armeria,4422,./armeria/examples/dropwizard/test-endpoints.sh
lines,14
function,0


for,0

if,0

git@github.com:line/armeria.git,43a4ae496db6956a01a3ab70f2f62c2cb447582f,armeria,4422,./armeria/benchmarks/ghz/bench.sh
lines,65
function,1

stop_server() {
for,1
echo "ghz could not be found. Visit https://ghz.sh/docs/install for installation"
if,5
if ! command -v ghz > /dev/null 2>&1; then if [ -n "${GRPC_SERVER_PID}" ]; then if [ "$1" != "done" ]; then if [ "${GRPC_SERVER_START}" = "true" ]; then if curl -s -o /dev/null http://127.0.0.1:${GRPC_SERVER_PORT}; then
git@github.com:ZhongFuCheng3y/austin.git,957b5678d979940854db1fe7eb9c4ee834e07a32,austin,4420,./austin/doc/docker/rabbitmq/rabbitmq-cluster/init-rabbitmq.sh
lines,44
function,0


for,0

if,0

git@github.com:ZhongFuCheng3y/austin.git,957b5678d979940854db1fe7eb9c4ee834e07a32,austin,4420,./austin/stream-start.sh
lines,13
function,0


for,0

if,0

git@github.com:Heeexy/SpringBoot-Shiro-Vue.git,7569980d647fddd0d325b91384ea6f36fc160a6a,SpringBoot-Shiro-Vue,4386,
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/docker-compile.sh
lines,209
function,0


for,4
echo -e "Use win-docker-compile.cmd in a Windows Command Prompt to build for Windows." echo "Building package for ${CONTAINER_ARCH} (system architecture is ${SYSTEM_ARCH})" echo "No image found for $REPO:$IMAGE_TAG." echo "Found image $IMAGEID for $REPO:$IMAGE_TAG."
if,18
if [ "${IMAGE:0:7}" = "windows" ]; then if [ -z "$IMAGE" ] || [ -z "$FLAVOR" ]; then if [ -z "$CONTAINER_ARCH" ]; then if [ "$SYSTEM_ARCH" = "aarch64" ] || [ "$SYSTEM_ARCH" = "arm64" ]; then if [ -z "$IMAGEID" ]; then if [ -n "${DOCKER_GITHUB_LOGIN}" ]; then if [ "${IMAGE:0:6}" = "centos" ]; then elif [ "${IMAGE:0:6}" = "fedora" ]; then elif [ "${IMAGE:0:4}" = "rhel" ]; then elif [ "${IMAGE:0:8}" = "opensuse" ]; then if [ -n "$VERSION" ]; then if [[ ${ if [ "$(uname)" = "Darwin" ]; then elif hash nproc 2>/dev/null; then if [ -n "$CMAKE_BUILD_TYPE" ]; then if [ "$CMAKE_BUILD_TYPE" = "Debug" ]; then echo "Cleaning up container $CONTAINER_ID if it exists..." if [ "${PKG_FILENAME:0:6}" = "build-" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/docker-compile-all.sh
lines,22
function,0


for,1
for ((i = 0; i < ${
if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/publish-daily-binary.sh
lines,120
function,0


for,2
echo "Publishing $FILENAME as daily $FLAVOR build for $OS ($PLATFORM): $LATEST..." echo "Fetching .htaccess for update..."
if,11
if [[ "$ if [[ "$FILENAME" =~ "hourly" ]]; then if [[ ${ if [ "$OS" == "macos" ] || [ "$OS" == "windows" ]; then if [ "$FLAVOR" != "desktop" ] && [ "$FLAVOR" != "server" ] && [ "$FLAVOR" != "electron" ]; then if [ "$OS" == "macos" ]; then if [ "$FLAVOR" == "electron" ] ; then if [[ $FILENAME =~ "preview" ]] ; then if [ "$SCP_COUNT" -ge "5" ] ; then if grep "/${FLAVOR}/${OS}/${LATEST}" $HTACCESS > /dev/null ; then if [ "$SCP_COUNT" -ge "5" ] ; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/notarize-release.sh
lines,66
function,0


for,0

if,4
if [[ "$ if [ -z "$APPLE_ID_USR" ]; then if [ -z "$APPLE_ID_PSW" ]; then if [ $? -eq 0 ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/clean-gid.sh
lines,24
function,0


for,0

if,3
if [ $? -ne 0 ]; then if hash groupdel 2>/dev/null; then elif hash delgroup 2>/dev/null; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/rstudio-version.sh
lines,170
function,7
function invalid_arg() { function help() { function log() { function buildType() { function flower() { function calver() { function baseCommit() {
function invalid_arg() { function help() { function log() { function buildType() { function flower() { function calver() { function baseCommit() {
for,1
for arg in "$@"; do
if,10
if [[ $DEBUG = true ]]; then if [ -e "$RSTUDIO_ROOT_DIR/version/BUILDTYPE" ]; then if [[ -n "$CUSTOM_BUILD_TYPE" ]]; then if [[ -n "$BUILD_TYPE" && "$BUILD_TYPE" != "release" ]]; then if [ -e "$RSTUDIO_ROOT_DIR/version/RELEASE" ]; then if [ -e "$RSTUDIO_ROOT_DIR/version/CALENDAR_VERSION" ]; then if [ -e $BASE_COMMIT_FILE ]; then if [[ -e "$RSTUDIO_ROOT_DIR/upstream/VERSION" ]]; then if [[ $OPEN_SOURCE = true ]]; then elif [[ $PRO = true ]]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/sentry-upload.sh
lines,53
function,0


for,0

if,3
/usr/local/bin/sentry-cli --auth-token $1 upload-dif --org rstudio --project ide-backend -t elf . if [ $? -eq 0 ]; then if [ $RETRIES -ge $2 ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/sign-release.sh
lines,170
function,1
function cleanup {

for,0

if,11
if [[ "$ if [ -d "$TMP_KEYRING_DIR" ]; then if [ -x "$(command -v gpg1)" ]; then if [ "$EXT" == "deb" ]; then elif [ "$EXT" == "rpm" ]; then if [ -f "$RPM_MACROS" ]; then if [ -f /etc/redhat-release ]; then if [ -z ${REDHAT_VERSION} ]; then if ((${VERSION_ARRAY[0]} >= 8)); then if [ -f /etc/fedora-release ] || [ "$FORCE_NO_EXPECT" = true ]; then if [ -f "$RPM_MACROS.bak" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/publish-build.sh
lines,284
function,0


for,4
echo "publish-build.sh: utility for adding builds to the latest builds site." echo "--channel (optional) The Channel type for the build. One of Hourly, Daily, Preview, Release." echo " Required for setting to Hourly. If not set, the channel will be determined from" echo "Received a 409 error, assuming it's a commit interleaving error, we'll back off for 3 seconds and retry".
if,18
if [ $ if [ -z "$build" ]; then if [ -z "$arch" ]; then if [ -z "$url" ]; then if [ -z "$file" ]; then if [ -z "$version" ]; then if [ -z "$pat" ]; then if [ -z "$GITHUB_PAT" ]; then if [ ! -z $channel ]; then if [[ ! "$channel" =~ ^(Hourly|Daily|Preview|Release)$ ]]; then if [[ -f $file ]]; then if [[ "$OSTYPE" == "darwin"* ]]; then if [ -z "$channel" ]; then if [[ "$OSTYPE" == "darwin"* ]]; then if [ $channel == "Hourly" ]; then if [[ $httpCode -eq 422 ]]; then if [[ $httpCode -eq 409 ]]; then if [[ $(($httpCode)) -ge 400 ]]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/docker/jenkins/clean-uid.sh
lines,24
function,0


for,0

if,3
if [ $? -ne 0 ]; then if hash userdel 2>/dev/null; then elif hash deluser 2>/dev/null; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/node/desktop/scripts/docker-run-unit-tests.sh
lines,22
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/node/desktop/envvars.sh
lines,12
function,0


for,0

if,1
if [ "$(uname -ms)" = "Darwin arm64" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/cpp/ext/fmt/test/fuzzing/build.sh
lines,90
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/cpp/server/db/make-schema.sh
lines,25
function,0


for,0

if,2
if [ -z "$1" ] if [ -z "$2" ]
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/cpp/report-options.sh
lines,130
function,7
function inDocs() { function inCode() { function listDocFiles() { function scanPublicOptions() { function serverOptionsMatch() { function scanSomeOptions() { function scanCodeOptions() {
function inDocs() { function inCode() { function listDocFiles() { function scanPublicOptions() { function serverOptionsMatch() { function scanSomeOptions() { function scanCodeOptions() {
for,0

if,15
if [[ $MENTION_COUNT -ne 0 || $EXAMPLE_COUNT -ne 0 || $COMMAND_COUNT -ne 0 ]]; then if [[ $COUNT -eq 0 ]]; then OPTIONS=$(cat ./$FILE/$FILE-options*.json | jq -r '.options | keys[] as $k | .[$k] | flatten | .[] | select(.isHidden != true and .isDeprecated != true) | .name | if type=="object" then .value else . end' | sort) if [[ $? -eq 0 ]]; then elif [[ ! -z $ALL ]]; then SERVER_OPTIONS=$(cat ./server/server-options*.json | jq -r '.options | keys[] as $k | .[$k] | flatten | .[] | .name | if type=="object" then .value else . end' | sort) OPTIONS=$(cat ./$FILE/$FILE-options*.json | jq --arg field "$TYPE" -r '.options | keys[] as $k | .[$k] | flatten | .[] | select(.[$field] == true) | .name | if type=="object" then .value else . end' | sort) if [[ $? -eq 1 ]]; then if [[ $FILE == "session" ]]; then if [[ $TYPE == "isHidden" ]]; then if [[ $OTHER -eq 0 ]]; then elif [[ ! -z $ALL ]]; then elif [[ ! -z $ALL ]]; then OPTIONS=$(cat ./$FILE/$FILE-options*.json | jq -r '.options | keys[] as $k | .[$k] | flatten | .[] | if .accessorName then .accessorName else (if .memberName then .memberName|sub("_"; "") else (if .name|type=="object" then .name.constant else . end) end) end' | sort) if [[ $COUNT -eq 0 ]]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/cpp/session/resources/grid/minify.sh
lines,14
function,1

minify () {
for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/src/gwt/tools/i18n-helpers/create_dev_locale.sh
lines,27
function,0


for,1
for src in $(find . -name "*en.properties"); do
if,2
if [ -f "$tgt" ]; then if [[ "$OSTYPE" = "darwin"* ]]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/.devcontainer/generate-dev-containers.sh
lines,52
function,0


for,2
for PLATFORM in "${PLATFORMS[@]}" echo "Generating devcontainer.json for $PLATFORM"
if,4
if [ "$(uname)" = "Darwin" ]; then elif hash nproc 2>/dev/null; then if [ -f devcontainer_dev.json ]; then if [ ! -f init-dev.sh ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/.devcontainer/docker-env.sh
lines,53
function,0


for,0

if,5
if [ "$ if [ "$(basename $(pwd))" != "rstudio" ] && [ "$(basename $(pwd))" != "rstudio-pro" ]; then if git remote -v | grep -q rstudio-pro; then if [ "$ARCH" == "x86_64" ]; then elif [ "$ARCH" == "arm64" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/version/new-version.sh
lines,121
function,0


for,2
echo " [base commit sha] - The base commit sha that should be used for the [flower].BASE_COMMIT file (optional)" echo "Please commit these changes and push them to the remote repository. i.e., git commit -m \"Update version files for $RELEASE_FLOWER\" && git push"
if,4
if [[ "$ if [[ "$ if [ -e "NEWS.md" ]; then if [ -e $BASE_COMMIT_FILE ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/package/osx/scripts/fix-library-paths.sh
lines,51
function,0


for,2
for FILE in ${FILES}; do for LIBPATH in ${LIBPATHS}; do
if,1
if [ "$
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/package/osx/scripts/codesign-package.sh
lines,64
function,2

codesign-file () { codesign-directory () {
for,2
for FILE in "$1"/*; do for FILE in "$1"/*; do
if,3
if [ "$ if [ -d "${FILE}" ]; then if [ -f "${FILE}" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-license-client.sh
lines,8
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-balancer-user.sh
lines,18
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-license-server.sh
lines,24
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-common-user.sh
lines,15
function,0


for,0

if,2
if [ -f /rstudio/vagrant/vagrant_key_rsa.pub ]; then if [ -f ./install-overlay-debian ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-multi-r.sh
lines,27
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-nfs-client.sh
lines,10
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-ldap-server.sh
lines,25
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-nfs4-client.sh
lines,17
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-ldap-client.sh
lines,28
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-primary-load.sh
lines,14
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-create-users.sh
lines,16
function,0


for,1
for userdetails in `cat /rstudio/vagrant/rstudiousers.txt`
if,1
if [ -f /etc/redhat-release ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-editor.sh
lines,32
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-balancer.sh
lines,39
function,0


for,1
for userdetails in `cat /rstudio/vagrant/rstudiousers.txt`
if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-nfs.sh
lines,12
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-primary-overlay.sh
lines,3
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/bootstrap-centos.sh
lines,32
function,0


for,0

if,2
if grep -q -i -s "release 6" /etc/redhat-release if [ ! -f /rstudio/vagrant/vagrant_key_rsa ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-primary-user.sh
lines,41
function,0


for,0

if,3
if [ -f /etc/redhat-release ]; then if [ -f ./install-overlay-$LINUX_SYS ]; then if [ -x "$rcpath" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-primary.sh
lines,25
function,0


for,0

if,1
if [ ! -f /etc/redhat-release ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/install-eclim.sh
lines,21
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/start-eclim.sh
lines,3
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/provision-nfs4.sh
lines,28
function,0


for,0

if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/vagrant/bootstrap-debian.sh
lines,52
function,0


for,0

if,1
if [ ! -f /rstudio/vagrant/vagrant_key_rsa ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/dependencies/common/install-qt.sh
lines,355
function,2
function help() { function compute_url(){
function help() { function compute_url(){
for,5
echo "install-qt not yet available for aarch64" for instance: qtbase, qtdeclarative, qtscript, qttools, icu, ... for REMOTE_BASE in ${REMOTE_BASES[*]}; do echo "Could not determine a remote URL for ${COMPONENT} with version ${VERSION}">&2 for COMPONENT in ${COMPONENTS}; do
if,21
if [ "$(arch)" = "aarch64" ]; then if [ -z "${HOST_OS}" ]; then if [ -z "${INSTALL_DIR}" ]; then if [ -z "${VERSION}" ]; then if [ -z "${COMPONENTS}" ]; then if ! ${FORCE_DOWNLOAD} && [ -f "${HASH_FILEPATH}" ]; then if [ ! -e "${filepath}" ]; then if ${INSTALLATION_IS_VALID}; then if [[ "${COMPONENT}" =~ "qtcreator" ]]; then if [[ "${HOST_OS}" == "linux_x64" && "${VERSION}" == "5.12.8" ]]; then if [[ "${COMPONENT}" == "qtwaylandcompositor" ]]; then if [ ! -z "${REMOTE_PATH}" ]; then if [ "${COMPONENT}" == "qtbase" ]; then if [[ "${TOOLCHAIN}" =~ "win64_mingw" ]]; then elif [[ "${TOOLCHAIN}" =~ "win32_mingw" ]]; then elif [[ "${TOOLCHAIN}" =~ "win64_msvc" ]]; then elif [[ "${TOOLCHAIN}" =~ "win32_msvc" ]]; then elif [[ "${TOOLCHAIN}" =~ "any" ]] && [[ "${TARGET_PLATFORM}" == "android" ]]; then if [ "${TARGET_PLATFORM}" == "android" ] && [ ! "${QT_VERSION}" \< "6.0.0" ]; then elif [[ "${COMPONENT}" =~ "qtcreator" ]]; then if [ "${HOST_OS}" == "mac_x64" ]; then
git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/dependencies/tools/upload-pandoc.sh
lines,38
function,0


for,1
for PLATFORM in "${PLATFORMS[@]}"; do
if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/dependencies/tools/upload-quarto.sh
lines,36
function,0


for,1
for PLATFORM in "${PLATFORMS[@]}"; do
if,0

git@github.com:rstudio/rstudio.git,4fa96a595ec6fa33e5a238b15b17ad2944c7de6b,rstudio,4384,./rstudio/dependencies/tools/rstudio-tools.sh
lines,491
function,39

section () { info () { warn () { error () { set-default () { rerun-as-root () { sudo-if-necessary-for () { mkdir-sudo-if-necessary () { find-file () { pushd () { popd () { has-command () { has-program () { find-program () { require-program () { is-verbose () { is-m1-mac () { download () { extract () { platform () { ubuntu-codename () { os-version () { os-version-part () { os-version-major () { os-version-minor () { os-version-patch () { is-mac () { is-macos () { is-darwin () { is-linux () { is-redhat () { is-centos () { is-rhel () { is-fedora () { is-opensuse () { is-ubuntu () { is-jenkins () { save-original-file () { restore-original-file () {
for,5
sudo-if-necessary-for () { echo "Execution of '$0' requires root privileges for access to '$1'" for FILE in "$@"; do for DIR in "$@"; do echo "don't know how to infer OS version for platform '$(platform)'"
if,38
if [ "${BASH_SUBSHELL}" -eq 0 ]; then if [ "$ Set the value of a variable if it is unset. if [ -z "${!VAR}" ]; then if ! [ -e "$1" ]; then if mkdir -p "$1" &> /dev/null; then if ! [ -w "$1" ]; then if ! [ -e "$1" ]; then if ! [ -e "$1" ]; then if [ "$ if [ -n "${!VAR}" ]; then if [ -e "${FILE}" ]; then if [ "$ if [ -n "${!VAR}" ]; then if [ -f "${VAL}" ]; then if [ -n "${CANDIDATE}" ]; then if ! has-program "$1"; then if [ "$ if [ "$ if is-verbose; then if has-command curl; then elif has-command wget; then if is-verbose; then if [ "$(uname)" = "Darwin" ]; then if [ -f /etc/os-release ]; then if [ -n "${ID}" ]; then if [ -f /etc/redhat-release ]; then if grep -siq "centos" /etc/redhat-release; then if grep -siq "fedora" /etc/redhat-release; then if grep -siq "rocky" /etc/redhat-release; then if [ -n "${CODENAME}" ]; then if [ -f /etc/os-release ]; then if [ -n "${VERSION_ID}" ]; then if [ -f /etc/redhat-release ]; then if has-command sw_vers; then if [ -n "${VERSION}" ]; then if [ -z "${RSTUDIO_TOOLS_ROOT}" ]; then if is-jenkins && [ "$(arch)" = "arm64" ]; then
git@github.com:alibaba/jetcache.git,3a9453276800c0f3c237bd4a38d46039f6e37026,jetcache,4364,
git@github.com:Tencent/GT.git,6e115aa7927441a7348f747b1316d5f4c4b4241a,GT,4358,
git@github.com:Ashok-Varma/BottomNavigation.git,4144f98787a2bca55ccdd3c19372e00a75e75b68,BottomNavigation,4353,
git@github.com:Fuzion24/JustTrustMe.git,861c5faffeac1d3eb11323362db3256c66444dc5,JustTrustMe,4352,./JustTrustMe/build.sh
lines,5
function,0


for,0

if,0

git@github.com:awangdev/leet-code.git,ee875b439add317b7dacae3ee4aa94381b7268be,leet-code,4348,
git@github.com:Meituan-Dianping/Robust.git,955adcc21e4fbcb52054a8f7f4bbb11f462aeb2f,Robust,4344,
git@github.com:react-native-webrtc/react-native-webrtc.git,8d0a9db3ed462a2630bbd8c139a6723b284b08f0,react-native-webrtc,4343,./react-native-webrtc/tools/release.sh
lines,45
function,0


for,0

if,4
if [ -z "$version" ]; then if [ ! -f ./package.json ]; then if git rev-parse "$version" >/dev/null 2>&1; then if ! npm version "$version" --no-git-tag-version --allow-same-version; then
git@github.com:react-native-webrtc/react-native-webrtc.git,8d0a9db3ed462a2630bbd8c139a6723b284b08f0,react-native-webrtc,4343,./react-native-webrtc/tools/format.sh
lines,6
function,0


for,0

if,0

git@github.com:traccar/traccar.git,37ed394724c0bdcc6f98f421e71d76916206ed30,traccar,4342,./traccar/setup/setup.sh
lines,26
function,0


for,0

if,2
if [ -f /opt/traccar/conf/traccar.xml ] if [ ${PRESERVECONFIG} -eq 1 ] && [ -f /opt/traccar/conf/traccar.xml.saved ]
git@github.com:traccar/traccar.git,37ed394724c0bdcc6f98f421e71d76916206ed30,traccar,4342,./traccar/setup/package.sh
lines,205
function,11

usage () { info () { ok () { warn () { check_requirement () { prepare () { cleanup () { package_other () { package_windows () { package_linux () { package_linux_64 () { package_linux_arm () { package_linux_arm64 () {
for,2
echo "Without PLATFORM provided, builds installers for all platforms." info "Checking build requirements for platform: "$PLATFORM
if,11
if [[ $ if ! eval $2 &>/dev/null if [ $PLATFORM != "other" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "windows-64" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "linux-64" -o $PLATFORM = "linux-arm" -o $PLATFORM = "linux-arm64" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "linux-64" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "linux-arm" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "linux-arm64" ]; then if [ $PREREQ = false ]; then if [ $PLATFORM = "all" -o $PLATFORM = "windows-64" ]; then if [ $PLATFORM = "all" -o $PLATFORM = "windows-64" ]; then
git@github.com:traccar/traccar.git,37ed394724c0bdcc6f98f421e71d76916206ed30,traccar,4342,./traccar/tools/test-photo.sh
lines,103
function,0


for,0

if,0

git@github.com:traccar/traccar.git,37ed394724c0bdcc6f98f421e71d76916206ed30,traccar,4342,./traccar/tools/hex.sh
lines,43
function,4

send_hex_udp () { send_hex_tcp () { send_text_udp () { send_text_tcp () {
for,0

if,2
if [ $ if [ $
git@github.com:stleary/JSON-java.git,d677a99f4ef56666a9f2ee6cc61fc36abadb8291,JSON-java,4339,
git@github.com:robinhood/ticker.git,856935b4c8a535431b28f80b23ca9c39d88d35a9,ticker,4335,
git@github.com:201206030/novel.git,2270072d7ee1aa0fd193676e76bfcbfeeae2818f,novel,4331,
git@github.com:nayuki/QR-Code-generator.git,49a66a2b8bb8f8852fd2e1deb00b8672f5760139,QR-Code-generator,4329,./QR-Code-generator/typescript-javascript/build.sh
lines,25
function,0


for,0

if,0

git@github.com:DiUS/java-faker.git,a8b8ff0acc6fcc629d08a3a9952f83be56a9a3c3,java-faker,4325,
git@github.com:airbnb/DeepLinkDispatch.git,4fdf7629c7bfb413f684a8180ea9a5d98ed17de0,DeepLinkDispatch,4320,
git@github.com:runelite/runelite.git,eb7629c2b1ac0c2d10ff4305998785a3532ea37b,runelite,4305,./runelite/ci/build.sh
lines,18
function,0


for,0

if,1
if [ ! -f "${GLSLANG_ARCHIVE}" ] || [ ! -d "${GLSLANG_DIR}" ] || ! echo "${GLSLANG_CHECKSUM} ${GLSLANG_ARCHIVE}" | sha256sum -c -; then
git@github.com:mcxiaoke/android-volley.git,6864be3efadf3a33793228c0ce721a72d7a78731,android-volley,4304,./android-volley/deploy.sh
lines,2
function,0


for,0

if,0

git@github.com:graphhopper/graphhopper.git,4be9ffc2c7b256ae6fbb952ad70b3759fc708f42,graphhopper,4304,./graphhopper/benchmark/benchmark.sh
lines,148
function,0


for,3
echo "1 - small map: node- and edge-based CH + landmarks (edge- & node-based for LM) + slow routing" echo "2 - big map: node-based CH + landmarks (edge- & node-based for LM) + slow routing" echo "4 - big map, outdoor: node-based CH + landmarks (edge- & node-based for LM)"
if,0

git@github.com:graphhopper/graphhopper.git,4be9ffc2c7b256ae6fbb952ad70b3759fc708f42,graphhopper,4304,./graphhopper/benchmark/post_benchmark.sh
lines,23
function,0


for,1
for f in $1*.json
if,1
if [ $http_status -gt 300 ]; then
git@github.com:graphhopper/graphhopper.git,4be9ffc2c7b256ae6fbb952ad70b3759fc708f42,graphhopper,4304,./graphhopper/benchmark/download_map.sh
lines,16
function,0


for,0

if,1
if [ ! -f $2 ];
git@github.com:graphhopper/graphhopper.git,4be9ffc2c7b256ae6fbb952ad70b3759fc708f42,graphhopper,4304,./graphhopper/core/files/update-translations.sh
lines,21
function,0


for,1
for tr in $translations; do
if,1
if [[ "x$tr" = "xSKIP" ]]; then
git@github.com:graphhopper/graphhopper.git,4be9ffc2c7b256ae6fbb952ad70b3759fc708f42,graphhopper,4304,./graphhopper/core/files/check-swap-usage.sh
lines,18
function,0


for,2
for DIR in `find /proc/ -maxdepth 1 -type d | egrep "^/proc/[0-9]"` ; do for SWAP in `grep Swap $DIR/smaps 2>/dev/null| awk '{ print $2 }'`
if,0

git@github.com:alibaba/QLExpress.git,4004bef0aa78c9026c6cbafa731f1789eb4ff37b,QLExpress,4304,
git@github.com:bingoogolapple/BGARefreshLayout-Android.git,c5bfc787ad28b2e59e02b1c0b88c83205e1a8419,BGARefreshLayout-Android,4299,./BGARefreshLayout-Android/publishToJcenter.sh
lines,6
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/demangle_unittest.sh
lines,95
function,1

die () {
for,0

if,6
if test -e "$DEMANGLER"; then if ! test -e "$DEMANGLER"; then nm "$LIBGLOG" | perl -nle 'print $1 if /\s(_Z\S+$)/' > "$NM_OUTPUT" if ! grep --quiet '^_Z' "$NM_OUTPUT"; then if test "$NM_LINES" != "$DM_LINES"; then if grep --quiet '^_Z' "$DM_OUTPUT"; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/signalhandler_unittest.sh
lines,131
function,1

die () {
for,4
for pattern in SIGSEGV 0xdead main "Aborted at [0-9]"; do for pattern in SIGTERM "by PID $!" "$from_pid" main "Aborted at [0-9]"; do for pattern in SIGFPE DieInThread "TID $EXPECTED_TID" "Aborted at [0-9]"; do for pattern in SIGABRT main "Aborted at [0-9]"; do
if,11
if test -e "$BINARY"; then if ! test -e "$BINARY"; then if [ x`$BINARY` != 'xOK' ]; then if [ x`uname -p` = x"powerpc" ]; then if ! grep --quiet "$pattern" signalhandler.out1; then if ! grep --quiet "a message before segv" $LOG_INFO; then if grep --quiet looping signalhandler.out2; then if [ x`uname` = "xLinux" ]; then if ! grep --quiet "$pattern" signalhandler.out2; then if ! grep --quiet "$pattern" signalhandler.out3; then if ! grep --quiet "$pattern" signalhandler.out4; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/logging_striplog_test.sh
lines,72
function,3

get_strings () { check_eq () { die () {
for,2
./logging_striptest2 2>/dev/null && die "Did not abort for STRIP_LOG=2" ./logging_striptest10 2>/dev/null && die "Did not abort for STRIP_LOG=10"
if,3
if test -e ".libs/$1"; then elif test -e "$1.exe"; then if [ "$1" != "$2" ]; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/glog/src/windows/preprocess.sh
lines,118
function,0


for,1
for file in `echo "$1"/glog/*.in`; do
if,2
if [ -z "$1" ]; then // NOTE: if you are statically linking the template library into your binary\n\
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/protobuf/protobuf/src/google/protobuf/io/gzip_stream_unittest.sh
lines,44
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/third_party/breakpad/src/third_party/protobuf/protobuf/src/google/protobuf/compiler/zip_output_unittest.sh
lines,91
function,1

fail() {
for,0

if,2
if unzip -h > /dev/null; then if jar c $TEST_TMPDIR/testzip.proto > /dev/null; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/patch_boringssl.sh
lines,6
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/patch_ffmpeg.sh
lines,44
function,1
function cp {

for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/build_ffmpeg_clang.sh
lines,229
function,4
function build_one { function setCurrentPlatform { function checkPreRequisites { function build {

for,1
for arg in "$@"; do
if,5
--enable-decoder=gif \ --enable-demuxer=gif \ if ! [ -d "ffmpeg" ] || ! [ "$(ls -A ffmpeg)" ]; then if [ -z "$NDK" -a "$NDK" == "" ]; then if (( $
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/build_boringssl.sh
lines,86
function,3
function build_one { function checkPreRequisites { function build {

for,1
for arg in "$@"; do
if,4
if ! [ -d "boringssl" ] || ! [ "$(ls -A boringssl)" ]; then if [ -z "$NDK" -a "$NDK" == "" ]; then if [ -z "$NINJA_PATH" -a "$NINJA_PATH" == "" ]; then if (( $
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/TMessagesProj/jni/build_libvpx_clang.sh
lines,190
function,4
function build_one { function setCurrentPlatform { function checkPreRequisites { function build {

for,1
for arg in "$@"; do
if,5
if [ "x86" = ${ARCH} ]; then if [ "x86" = ${ARCH} ]; then if ! [ -d "libvpx" ] || ! [ "$(ls -A libvpx)" ]; then if [ -z "$NDK" -a "$NDK" == "" ]; then if (( $
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/v2ray/build.sh
lines,12
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/v2ray/init.sh
lines,11
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/update.sh
lines,6
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/shadowsocks.sh
lines,9
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/ssr.sh
lines,9
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/v2ray.sh
lines,3
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/libs/native.sh
lines,25
function,1
function install() {
function install() {
for,0

if,1
if [ ! -f $OUT/$ABI/libtmessages*.so ]; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/release.sh
lines,17
function,0


for,0

if,1
if [ ! -x "$(command -v ghr)" ]; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/build.sh
lines,22
function,1
function upload() {
function upload() {
for,2
for apk in TMessagesProj/build/outputs/apk/$1/*.apk; do for job in $(jobs -p); do
if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/debug.sh
lines,3
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/upload.sh
lines,6
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/play.sh
lines,2
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/alaha.sh
lines,23
function,1
function flavor() {
function flavor() {
for,2
for f in "$@"; do for job in $(jobs -p); do
if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/app/init.sh
lines,13
function,1
function flavor() {
function flavor() {
for,1
for f in "$@"; do
if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/fdroid/build.sh
lines,11
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/fdroid/prebuild.sh
lines,35
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/libs/boringssl.sh
lines,17
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/libs/ffmpeg.sh
lines,14
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/libs/libvpx.sh
lines,15
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/env.sh
lines,36
function,0


for,0

if,8
if [ -z "$ANDROID_HOME" ]; then if [ -d "$HOME/Android/Sdk" ]; then elif [ -d "$HOME/.local/lib/android/sdk" ]; then if [ ! -f "$_NDK/source.properties" ]; then if [ ! $(command -v go) ]; then if [ -d /usr/lib/go-1.16 ]; then elif [ -d $HOME/.go ]; then if [ $(command -v go) ]; then
git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/libs.sh
lines,7
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/action/boringssl.sh
lines,3
function,0


for,0

if,0

git@github.com:NekoX-Dev/NekoX.git,e72c1741bfda12984dba9406c4fc7614e137570a,NekoX,4294,./NekoX/bin/init/action/shadowsocks.sh
lines,8
function,0


for,0

if,0

git@github.com:chewiebug/GCViewer.git,af97692884ac918ccbdf7a123fa698460a1d397e,GCViewer,4292,./GCViewer/cicd/gcviewer-script.sh
lines,92
function,6
function perform_snapshot_release() { function init_github() { function push_to_github() { function merge_with_develop_branch() { function perform_release() { function perform_verify() {
function perform_snapshot_release() { function init_github() { function push_to_github() { function merge_with_develop_branch() { function perform_release() { function perform_verify() {
for,0

if,3
if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [[ ! "${TRAVIS_COMMIT_MESSAGE}" = \[maven-release-plugin\]* ]] && [ "${TRAVIS_JDK_VERSION}" = "openjdk8" ] if [ "${TRAVIS_BRANCH}" = "develop" ] elif [[ "${TRAVIS_BRANCH}" = "master" ]]
git@github.com:aporter/coursera-android.git,157373885fbfa18b83fa97cd46f6a003905970ea,coursera-android,4273,
git@github.com:jagrosh/MusicBot.git,2c76164f6d1e3fb270c5d987cfd37e94ff04a899,MusicBot,4272,./MusicBot/scripts/run_jmusicbot.sh
lines,35
function,2

download() { run() {
for,0

if,2
if [ $DOWNLOAD == true ]; then if [ -f $FILENAME ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/mockserver-netty/src/integration-tests/logging.sh
lines,80
function,10
function printMessageWithColourAndBorders() { function printMessageWithColour() { function printMessage() { function printPassMessage() { function printPlainPassMessage() { function printFailureMessage() { function printPlainFailureMessage() { function runCommand() { function retryCommand() { function logTestResult() {
function printMessageWithColourAndBorders() { function printMessageWithColour() { function printMessage() { function printPassMessage() { function printPlainPassMessage() { function printFailureMessage() { function printPlainFailureMessage() { function runCommand() { function retryCommand() { function logTestResult() {
for,1
printMessage "${n} of ${2:-3} retries for command: ${1}"
if,5
if [[ "${ if ! eval "$(echo $1)"; then if [ "$n" -ge "${2:-3}" ]; then if [[ "${TEST_EXIT_CODE}" != "0" ]]; then if [ -n "${3:-}" ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/mockserver-netty/src/integration-tests/gradle_integration_tests.sh
lines,13
function,1
function run_gradle_build() {
function run_gradle_build() {
for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/mockserver-netty/src/main/package/dput.sh
lines,12
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/mockserver-netty/src/main/package/lintian.sh
lines,11
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/mockserver-netty/src/main/assembly/brew-tar/run_mockserver.sh
lines,160
function,5
function showUsage { function runCommand { function prep_term { function handle_term { function wait_term {

for,4
echo >&2 " port(s) for both mocking and proxying" echo >&2 " support all protocols for proxying and" echo >&2 " comma separated list for binding to" echo >&2 " value is provided for proxyRemoteHost when"
if,16
if [ "${term_child_pid}" ]; then if [ "${term_kill_needed}" ]; then if [ -z "$SERVER_PORT" ] if [ -n "$serverPort" ] if [ -n "$SERVER_PORT" ] if [ -z "$PROXY_REMOTE_PORT" ] if [ -n "$proxyRemotePort" ] if [ -n "$PROXY_REMOTE_PORT" ] if [ -z "$PROXY_REMOTE_HOST" ] if [ -n "$proxyRemoteHost" ] if [ -n "$PROXY_REMOTE_HOST" ] if [ -z "$LOG_LEVEL" ] if [ -n "$logLevel" ] if [ -n "$LOG_LEVEL" ] if [ -z "$JVM_OPTIONS" ] if [ -n "$jvmOptions" ]
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/docker/local/local_docker_cadvisor_run.sh
lines,17
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/docker/local/local_docker_build.sh
lines,4
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/docker/local/local_docker_run.sh
lines,13
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_without_server_port/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/helm_default_config/integration_test.sh
lines,38
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_server_port_by_command/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_with_persisted_expectations/integration_test.sh
lines,46
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,3
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then if [[ ! -s "${SCRIPT_DIR}/config/persistedExpectations.json" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_server_port_by_environment_variable_long_name/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/helm_remote_host_and_port/integration_test.sh
lines,42
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker-compose.sh
lines,32
function,6
function docker-exec() { function docker-exec-client() { function tear-down() { function start-up() { function container-logs() { function clean-up-docker-containers() {
function docker-exec() { function docker-exec-client() { function tear-down() { function start-up() { function container-logs() { function clean-up-docker-containers() {
for,0

if,1
if [[ -z "${TEST_CASE:-}" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/helm_custom_server_port/integration_test.sh
lines,38
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_with_server_port_from_custom_properties_file/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_forward_with_override/integration_test.sh
lines,67
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,4
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${NGHTTP_OUTPUT}" != *"NO_ERROR"* ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/helm-deploy.sh
lines,47
function,7
function start-up-k8s() { function tear-down-k8s() { function start-up() { function tear-down() { function container-logs() {
function start-up-k8s() { function tear-down-k8s() { function start-up() { function tear-down() { function container-logs() {
for,0

if,3
if [[ "${REBUILD_CLUSTER:-false}" == "true" ]]; then if [[ "$(kind get clusters 2>&1 | grep -w ${CLUSTER_NAME})" == "${CLUSTER_NAME}" ]]; then if [[ "${DELETE_CLUSTER:-false}" == "true" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_server_port_by_environment_variable_short_name/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/helm_local_docker_container/integration_test.sh
lines,38
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/logging.sh
lines,80
function,10
function printMessageWithColourAndBorders() { function printMessageWithColour() { function printMessage() { function printPassMessage() { function printPlainPassMessage() { function printFailureMessage() { function printPlainFailureMessage() { function runCommand() { function retryCommand() { function logTestResult() {
function printMessageWithColourAndBorders() { function printMessageWithColour() { function printMessage() { function printPassMessage() { function printPlainPassMessage() { function printFailureMessage() { function printPlainFailureMessage() { function runCommand() { function retryCommand() { function logTestResult() {
for,1
printMessage "${n} of ${2:-3} retries for command: ${1}"
if,5
if [[ "${ if ! eval "$(echo $1)"; then if [ "$n" -ge "${2:-3}" ]; then if [[ "${TEST_EXIT_CODE}" != "0" ]]; then if [ -n "${3:-}" ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_with_server_port_from_default_properties_file/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_with_expectation_initialiser/integration_test.sh
lines,27
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,1
if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/integration_tests.sh
lines,90
function,3
function build_docker() { function test() { function run_all_tests() {
function build_docker() { function test() { function run_all_tests() {
for,0

if,8
if [[ "${SKIP_JAVA_BUILD:-}" != "true" ]]; then if [[ "${SKIP_DOCKER_BUILD_MOCKSERVER:-}" != "true" ]]; then if [[ "${SKIP_DOCKER_REBUILD_CLIENT:-}" != "true" ]]; then if [[ "${SKIP_ALL_TESTS:-}" != "true" ]]; then if [[ "${SKIP_DOCKER_TESTS:-}" != "true" ]]; then if [[ "${SKIP_HELM_TESTS:-}" != "true" ]]; then if [[ -s "${PASS_LOG_FILE}" ]]; then if [[ -s "${FAIL_LOG_FILE}" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/container_integration_tests/docker_compose_remote_host_and_port_by_environment_variable/integration_test.sh
lines,36
function,1
function integration_test() {
function integration_test() {
for,1
printFailureMessage "Failed to retrieve response body for expectation matched by path, found: \"${RESPONSE_BODY}\""
if,2
if [[ "${TEST_EXIT_CODE}" == "0" ]]; then if [[ "${RESPONSE_BODY}" != "some_response_body" ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_quick_build.sh
lines,16
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_docker_push_tag.sh
lines,30
function,1
function runCommand {

for,1
for commit in $COMMIT_LIST; do
if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_online_build.sh
lines,16
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_generate_web_site.sh
lines,11
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/stop_MockServer.sh
lines,3
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/jekyll_server.sh
lines,17
function,1

cleanup() {
for,0

if,1
if [[ -z ${JEKYLL_PID+x} ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_build_module_by_module.sh
lines,28
function,2
function printModule { function runSubModule {

for,1
for module in $MODULE_LIST; do
if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/log_event_size_test_intellij_tls_load.sh
lines,14
function,0


for,1
for counter in $(seq 1 1 5000); do
if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/buildkite_deploy_snapshot.sh
lines,20
function,0


for,0

if,1
if test "${BUILDKITE_BRANCH:-}" = "master"; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_list_versions.sh
lines,8
function,0


for,1
for commit in $COMMIT_LIST; do
if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_deploy_snapshot.sh
lines,6
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/log_event_size_test_intellij_tls.sh
lines,36
function,0


for,1
for counter in $(seq 1 1 5000); do
if,3
MEM=$(jstat -gc "$(ps aux | grep java | grep 1080 | awk '{ print $2 }')" | awk '{ if (NR > 1) print $3","$4","$6","$8","$10 }') if [[ "$counter" == *00 ]]; then MEM=$(jstat -gc "$(ps aux | grep java | grep 1080 | awk '{ print $2 }')" | awk '{ if (NR > 1) print $3","$4","$6","$8","$10 }')
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/install_ca_certificate.sh
lines,91
function,7
function runCommand { function printMessage { function determineTrustStoreOrKeyStoreLocation { function downloadCertificate { function deleteDownloadedCertificate { function removeIfAlreadyInstalled { function installCertificate {

for,0

if,4
if [[ -z "$JAVA_HOME" ]]; then if [ -e "$JAVA_HOME/jre/lib/security/cacerts" ]; then elif [ -e "$JAVA_HOME/lib/security/cacerts" ]; then if [ ! -z "$CERT_ALREADY_INSTALLED" -a "$CERT_ALREADY_INSTALLED" != "1" ]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_docker_launch.sh
lines,4
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_single_test.sh
lines,14
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_buildkite_build.sh
lines,4
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/bash_functions.sh
lines,192
function,20

abort() { warning () { die () { echo_array() { what_os() { contains_files() { check_not_empty () { check_not_empty_variable () { check_file_exists () { check_file_not_exists () { check_file_not_empty () { check_dir_exists () { check_command_exists () { delete_file_if_exists() { copy_files() { strip_prefix_and_file_from_path() { strip_suffix() { print_function_arguments() { retry() { mac_compatibility() {
for,3
for value in "$@"; do for file in "$@"; do for file in "${file_list[@]}"; do
if,10
if ! [ -f "${file}" ] if [[ -z "${1// }" ]]; then if [ -z "${empty_or_x}" ]; then elif [ -z "${value}" ]; then if [ ! -f "${file}" ]; then if [ -f "${file}" ]; then if [ ! -s "${file}" ]; then if [ ! -d "${directory}" ]; then if [ -f "${file}" ]; then if ${command}; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/log_event_size_test_intellij.sh
lines,26
function,0


for,1
for counter in $(seq 1 1 5000); do
if,3
MEM=$(jstat -gc "$(ps aux | grep java | grep 1080 | awk '{ print $2 }')" | awk '{ if (NR > 1) print $3","$4","$6","$8","$10 }') if [[ "$counter" == *00 ]]; then MEM=$(jstat -gc "$(ps aux | grep java | grep 1080 | awk '{ print $2 }')" | awk '{ if (NR > 1) print $3","$4","$6","$8","$10 }')
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_javadoc_build_all_versions.sh
lines,21
function,1
function runCommand {

for,1
for ITEM in $COMMIT_LIST; do
if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_single_module.sh
lines,14
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/buildkite_quick_build.sh
lines,20
function,0


for,0

if,1
if test "${BUILDKITE_BRANCH:-}" = "master"; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/local_release.sh
lines,19
function,0


for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/download_maven_jars.sh
lines,17
function,1
function download_and_extract() {
function download_and_extract() {
for,0

if,0

git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/scripts/log_event_size_test_docker.sh
lines,38
function,1

cleanup() {
for,1
for counter in $(seq 1 1 5000); do
if,1
if [[ "$counter" == *00 ]]; then
git@github.com:mock-server/mockserver.git,b607ad690543b17a6f6d6ecd92292ca3f28afe0d,mockserver,4268,./mockserver/jekyll-www.mock-server.com/jekyll_server.sh
lines,17
function,1

cleanup() {
for,0

if,1
if [[ -z ${JEKYLL_PID+x} ]]; then
git@github.com:zlt2000/microservices-platform.git,da821d6b598fb82d901fc67861cf902b3e60389c,microservices-platform,4267,./microservices-platform/zlt-register/nacos/bin/shutdown.sh
lines,28
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:zlt2000/microservices-platform.git,da821d6b598fb82d901fc67861cf902b3e60389c,microservices-platform,4267,./microservices-platform/zlt-register/nacos/bin/startup.sh
lines,142
function,1

error_exit ()
for,0

if,14
if [ -z "$JAVA_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [[ "${MODE}" == "standalone" ]]; then if [[ "${EMBEDDED_STORAGE}" == "embedded" ]]; then if [[ "${FUNCTION_MODE}" == "config" ]]; then elif [[ "${FUNCTION_MODE}" == "naming" ]]; then if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then if [ ! -d "${BASE_DIR}/logs" ]; then if [[ "${MODE}" == "standalone" ]]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:JZ-Darkal/AndroidHttpCapture.git,9afc8805e8210df5d72e9718a745d802c59126f0,AndroidHttpCapture,4256,
git@github.com:mik3y/usb-serial-for-android.git,880c0070cb1fb62d602ed21bed0f8e2981ed68ec,usb-serial-for-android,4255,
git@github.com:CoderLeixiaoshuai/java-eight-part.git,77620444e663d2bd54fc2286678162f473478d35,java-eight-part,4249,
git@github.com:fuzhengwei/small-spring.git,69efcc9835aac100fb99ad2046a75e0b58508233,small-spring,4248,
git@github.com:grantland/android-autofittextview.git,5c565aa5c3ed62aaa31140440bb526e7435e7947,android-autofittextview,4243,
git@github.com:objectbox/objectbox-java.git,666f63b289d22374225b96cfe02dc371ccdf9b9a,objectbox-java,4240,./objectbox-java/scripts/update-flatbuffers.sh
lines,21
function,0


for,0

if,0

git@github.com:objectbox/objectbox-java.git,666f63b289d22374225b96cfe02dc371ccdf9b9a,objectbox-java,4240,./objectbox-java/ci/send-to-gchat.sh
lines,26
function,0


for,0

if,3
if [[ "$ if [[ "$1" == "--thread" ]]; then if [[ "$
git@github.com:objectbox/objectbox-java.git,666f63b289d22374225b96cfe02dc371ccdf9b9a,objectbox-java,4240,./objectbox-java/ci/test-with-asan.sh
lines,29
function,0


for,1
echo "Starting Gradle for target(s) \"$args\"..."
if,4
if [ -z "$ASAN_LIB_SO" ]; then if [ -z "$ASAN_SYMBOLIZER_PATH" ]; then if [ -z "$ASAN_OPTIONS" ]; then if [[ $
git@github.com:dreamhead/moco.git,d5b1bbdb6dccd816d779feb5fb7b5bdd0ee2b3af,moco,4236,
git@github.com:CalebFenton/simplify.git,29fb25d624aecf0b075dea5c6029b2541474ddfe,simplify,4236,./simplify/demoapp/dumpSmali.sh
lines,6
function,0


for,0

if,0

git@github.com:CaffeineMC/sodium-fabric.git,eeafb59cf9fab2d22d4cf75c0a3a0fd112f0feb5,sodium-fabric,4235,
git@github.com:tiann/epic.git,c67d0d3e3769c19119465784a579c659dd88c4ce,epic,4231,
git@github.com:RedSpider1/concurrent.git,91b8f417a768f768bc58cec64a9b2714d3d1b0f5,concurrent,4224,
git@github.com:ChadCSong/ShineButton.git,b8834976e918d61fa942c45b53043cb3c397ad93,ShineButton,4219,
git@github.com:baomidou/dynamic-datasource.git,d9d3b58cfc66e1c47731b60026b73bab26eed920,dynamic-datasource,4214,
git@github.com:bytedeco/javacpp.git,78f0203d3a8ce1b4f410ab52c1fd4bbda0e500d5,javacpp,4212,
git@github.com:codingapi/tx-lcn.git,f8ce807b8a820cfb4e8290eec132fa4e3e8da3fd,tx-lcn,4209,
git@github.com:bjmashibing/InternetArchitect.git,f1b7054c19fffdfb70fce0f0cfa8e63547d047cc,InternetArchitect,4184,
git@github.com:hugeterry/CoordinatorTabLayout.git,c565332bcf9479dace0e0697973722c7f2c78c0f,CoordinatorTabLayout,4183,
git@github.com:Jacksgong/JKeyboardPanelSwitch.git,092128023e824c85da63540780c79088b37a0c74,JKeyboardPanelSwitch,4177,
git@github.com:apache/shiro.git,2ab145e673b7d2190f54f2171cf663b1ab7525b2,shiro,4174,./shiro/integration-tests/support/src/main/resources/createKeyStore.sh
lines,65
function,0


for,0

if,0

git@github.com:saysky/ForestBlog.git,aa99908befd4abe17e623526ec5170ccbefdf298,ForestBlog,4173,
git@github.com:hussien89aa/AndroidTutorialForBeginners.git,c259419acc9110a7bb7fbd8a65f9435148604ab7,AndroidTutorialForBeginners,4171,
git@github.com:ThirtyDegreesRay/OpenHub.git,fcb9b422e8013169e2328a6e09c675ce11a27ad6,OpenHub,4165,
git@github.com:bingoogolapple/BGABanner-Android.git,ba0a57e8552cc64fef673c1cdd064db66749ae9e,BGABanner-Android,4156,
git@github.com:brianway/java-learning.git,3d71ff5cfed5e50e08da5ccb04ef828d30809da3,java-learning,4153,
git@github.com:GeyserMC/Geyser.git,6b67e43f8463aa2ea0672d901e587a22a595ed7a,Geyser,4145,
git@github.com:oshi/oshi.git,17c721122dabae6b15c9e3a5b0a90d507b6de10c,oshi,4141,
git@github.com:baoyachi/StepView.git,1b90467e03e17722abc3525b6c1e6d8695df6f63,StepView,4131,
git@github.com:pedrovgs/AndroidWiFiADB.git,c54f1e8dba380c0d595cf70267f385362f0d4f14,AndroidWiFiADB,4128,
git@github.com:yhaolpz/FloatWindow.git,23d9b7327280b302bbf88a1a4bea9d201b707b59,FloatWindow,4128,
git@github.com:youlookwhat/DesignPattern.git,aeed0759c023cf6db617ba3d7b88642fb066c5b7,DesignPattern,4127,
git@github.com:Freeyourgadget/Gadgetbridge.git,0f7fa7593130a51d7d95a90301cdfe1bd63ba447,Gadgetbridge,4121,./Gadgetbridge/src/main/fastlane/collect_screenshots.sh
lines,117
function,0


for,0

if,0

git@github.com:Freeyourgadget/Gadgetbridge.git,0f7fa7593130a51d7d95a90301cdfe1bd63ba447,Gadgetbridge,4121,./Gadgetbridge/external/build_fossil_hr_watchface.sh
lines,22
function,0


for,0

if,0

git@github.com:killbill/killbill.git,33aa3e9a65bf40de10edee7429341370488d4fb5,killbill,4121,
git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/statsd-datadog.sh
lines,14
function,0


for,0

if,1
if [ $
git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/kairosdb.sh
lines,2
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/go-graphite.sh
lines,8
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/atlas.sh
lines,15
function,0


for,0

if,2
if [ ! -f .atlas/memory.conf ]; then if [ ! -f .atlas/atlas-$ATLAS_VERSION-standalone.jar ]; then
git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/prometheus.sh
lines,4
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/ganglia.sh
lines,15
function,0


for,0

if,1
if [ ! -f .ganglia ]; then
git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/graphite.sh
lines,8
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/spring-dash/prometheus.sh
lines,7
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/spring-dash/grafana.sh
lines,9
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/statsd-telegraf.sh
lines,8
function,0


for,0

if,1
if [ ! -f .telegraf/tele.conf ]; then
git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/influx.sh
lines,3
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/cassandra.sh
lines,1
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/elastic.sh
lines,1
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/grafana.sh
lines,4
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/scripts/cpu.sh
lines,1
function,0


for,0

if,0

git@github.com:micrometer-metrics/micrometer.git,e70cc866231a207027865a8ef5cfd4cfa427a48e,micrometer,4116,./micrometer/gradle/deploy.sh
lines,34
function,0


for,0

if,3
if [ $CIRCLE_PR_NUMBER ]; then elif [ -z $CIRCLE_TAG ]; then elif [ $CIRCLE_TAG ]; then
git@github.com:alibaba/Tangram-Android.git,e8fe44d8aa0fd124afaefe945e65da3df9c9244c,Tangram-Android,4111,
git@github.com:eirslett/frontend-maven-plugin.git,b4738a78d5fb845fcd5e051b83d184ad7fe0c569,frontend-maven-plugin,4090,
git@github.com:dinuscxj/LoadingDrawable.git,db4ceb6b90cabee18f33f89e04f6bb3a7a0b1f64,LoadingDrawable,4077,
git@github.com:Manabu-GT/ExpandableTextView.git,b3b81486bc45d2e94440d6d4395b2030b8a83996,ExpandableTextView,4073,
git@github.com:liquibase/liquibase.git,c5e615430f3213afc69095f6e996cd47ee2f471e,liquibase,4073,./liquibase/liquibase-dist/src/main/deb/liquibase-env.sh
lines,5
function,0


for,0

if,0

git@github.com:liquibase/liquibase.git,c5e615430f3213afc69095f6e996cd47ee2f471e,liquibase,4073,./liquibase/liquibase-dist/src/main/archive/lib/liquibase_autocomplete.sh
lines,160
function,1

_liquibase() COMPREPLY=()
for,1
for i in "${!COMPREPLY[@]}"; do
if,3
if [[ ${prev} == "--"* && ${cur} == "=" ]] ; then if [[ ${prev} == '=' ]] ; then if [[ ${
git@github.com:liquibase/liquibase.git,c5e615430f3213afc69095f6e996cd47ee2f471e,liquibase,4073,./liquibase/.github/util/re-version.sh
lines,160
function,0


for,3
for jar in "${jars[@]}" for jar in "${javadocJars[@]}" for file in $outdir/*.jar
if,11
if [ -z ${1+x} ]; then if [ -z ${2+x} ]; then if [ -z ${3+x} ]; then if [ "$filesMade" == "2" ]; then if [[ $jar == "liquibase-core-0-SNAPSHOT.jar" || $jar == "liquibase-commercial-$branch-SNAPSHOT.jar" ]]; then if [[ "$RENAME_SNAPSHOTS" != "$outdir/$jar" ]]; then if [[ "$RENAME_JAVADOC_SNAPSHOTS" != "$outdir/$jar" ]]; then if jar -tf $file | grep "META-INF/MANIFEST.MF"; then if [ $secondLine == "META-INF/MANIFEST.MF" ]; then if grep -rl "0-SNAPSHOT" $workdir/test; then if grep -rl "0.0.0.SNAPSHOT" $workdir/test; then
git@github.com:liquibase/liquibase.git,c5e615430f3213afc69095f6e996cd47ee2f471e,liquibase,4073,./liquibase/.github/util/sign-artifacts.sh
lines,58
function,0


for,3
for file_pattern in "${file_patterns[@]}" echo "Searching for $file_pattern files..." for i in `find $archiveDir -name $file_pattern -maxdepth 1`; do
if,4
if [ -z ${1+x} ]; then if [ -z ${GPG_PASSWORD+x} ]; then if [[ "$OSTYPE" != "linux-gnu"* ]]; then if [[ "$OSTYPE" == "linux-gnu"* ]]; then
git@github.com:liquibase/liquibase.git,c5e615430f3213afc69095f6e996cd47ee2f471e,liquibase,4073,./liquibase/.github/util/package-install4j.sh
lines,59
function,0


for,0

if,4
if [ -z ${1+x} ]; then if [ -z ${INSTALL4J_10_LICENSE+x} ]; then if [ -f "$install4jc" ]; then if [ ! -e target/keys ]; then
git@github.com:powermock/powermock.git,a0be5c4bbeb04f13a6aec2653c1f5663cece1316,powermock,4072,./powermock/docs/generate_javadoc.sh
lines,17
function,0


for,3
echo "Generating Javadoc for version ${version}." for project_name in ${project_names[*]} echo "Generating for ${project_name}"
if,0

git@github.com:rubensousa/ViewPagerCards.git,75d8004b8dfcf34f17629f73a0c0c116bb487bce,ViewPagerCards,4058,
git@github.com:jeequan/jeepay.git,4b31ea1a44a5f042cf6943ada4c2ef1d8307e511,jeepay,4053,./jeepay/docker/nginx.sh
lines,22
function,0


for,0

if,0

git@github.com:jeequan/jeepay.git,4b31ea1a44a5f042cf6943ada4c2ef1d8307e511,jeepay,4053,./jeepay/docker/build-docker-starter.sh
lines,104
function,4

docker_buildx() { build_backend() { build_frontend() { build_deps() {
for,1
for i in "$@"; do
if,8
if [ "$i" = "$build_path" ] || [ "$i" = "$build_name" ] || [ "$i" = "$build_file" ]; then if [ "$ECHO_NAME" = "name" ]; then if [ "$HAS_DEPS" = "deps" ]; then if [ "$HAS_DEPS" = "deps" ]; then if [ "$TARGET" != "" ]; then if [ "$TARGET" = "backend" ] || [ "$TARGET" = "all" ]; then if [ "$TARGET" = "frontend" ] || [ "$TARGET" = "all" ]; then if [ "$TARGET" = "all" ]; then
git@github.com:jeequan/jeepay.git,4b31ea1a44a5f042cf6943ada4c2ef1d8307e511,jeepay,4053,./jeepay/docs/script/app.sh
lines,135
function,6
function refAppPID(){ function getAppPID(){ function start(){ function stop(){ function check(){ function forcekill(){
function refAppPID(){ function getAppPID(){ function start(){ function stop(){ function check(){ function forcekill(){
for,0

if,11
if [ ! $APP_PID ]; then if [ $APP_PID ]; then if [ ! $APP_PID ]; then if [ $APP_PID ]; then if [ $APP_PID ]; then if [ $APP_PID ]; then if [ "${command}" == "start" ]; then elif [ "${command}" == "stop" ]; then elif [ "${command}" == "restart" ]; then elif [ "${command}" == "check" ]; then elif [ "${command}" == "kill" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/release_files_check.sh
lines,70
function,0


for,0

if,9
if [ "$CHECKSUM" != "$HELM_CHART_CHECKSUM" ]; then echo "if your changes are not related to a release please check your changes into" echo "if this is part of a release instead update the checksum i.e." if [ "$CHECKSUM" != "$INSTALL_CHECKSUM" ]; then echo "if your changes are not related to a release please check your changes into" echo "if this is part of a release instead update the checksum i.e." if [ "$CHECKSUM" != "$EXAMPLES_CHECKSUM" ]; then echo "if your changes are not related to a release please check your changes into" echo "if this is part of a release instead update the checksum i.e."
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/setup_shellcheck.sh
lines,8
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/install_cosign.sh
lines,11
function,0


for,0

if,1
if [ -z "$ARCH" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/install_syft.sh
lines,14
function,0


for,0

if,1
if [ -z "$ARCH" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/setup-kind.sh
lines,214
function,7
function install_kubectl { function label_node { function install_kubernetes_provisioner { function create_cluster_role_binding_admin { function setup_kube_directory { function add_docker_hub_credentials_to_kubernetes { function updateDockerDaemonConfiguration() {
function updateDockerDaemonConfiguration() {
for,4
for nodeName in $(kubectl get nodes -o custom-columns=:.metadata.name --no-headers); @param $1: JSON string for Docker daemon configuration. for node in $(kind get nodes --name kind-cluster); do for node in $(kind get nodes --name kind-cluster); do
if,10
if [ -z "$ARCH" ]; then if [ "${TEST_KUBECTL_VERSION:-latest}" = "latest" ]; then if [ "${TEST_KUBERNETES_VERSION:-latest}" = "latest" ]; then if [ "$KUBE_VERSION" != "latest" ] && [ "$KUBE_VERSION" != "stable" ]; then if [ "$COPY_DOCKER_LOGIN" = "true" ] if [[ "$IP_FAMILY" = "ipv4" || "$IP_FAMILY" = "dual" ]]; then if [ "$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)" != 'true' ]; then elif [[ "$IP_FAMILY" = "ipv6" ]]; then if [ "$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)" != 'true' ]; then if [ "$(docker inspect -f='{{json .NetworkSettings.Networks.kind}}' "${reg_name}")" = 'null' ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/docu-push-to-website.sh
lines,38
function,0


for,0

if,1
if [[ -z $(git status -s) ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/push-to-nexus.sh
lines,11
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/install_yq.sh
lines,9
function,0


for,0

if,1
if [ -z "$ARCH" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/check_docs.sh
lines,59
function,1
function grep_check {

for,1
grep_check '[^[:alpha:]](e\.g\.|eg)[^[:alpha:]]' "Replace 'e.g'. with 'for example, '"
if,4
if [ $(uname -s) = "Darwin" ]; then if [ -n "$x" ]; then if [ $fatal -gt 0 ]; then if [ -n "$CHANGED_DERIVED" ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/shellcheck.sh
lines,17
function,0


for,1
for SCRIPTS in $SCRIPT_DIRS; do
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/setup-helm.sh
lines,27
function,1
function install_helm3 {

for,0

if,1
if [ $helmCommandOutput != 0 ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/setup_upgrade.sh
lines,25
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/uncommitted-changes.sh
lines,28
function,0


for,0

if,3
if [ -n "$CHANGED_DERIVED" ] || [ -n "$GENERATED_FILES" ] ; then if [ -n "$CHANGED_DERIVED" ] ; then if [ -n "$GENERATED_FILES" ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.azure/scripts/setup-kubernetes.sh
lines,124
function,2
function install_kubectl { function label_node {

for,1
for nodeName in $(kubectl get nodes -o custom-columns=:.metadata.name --no-headers);
if,10
if [ -z "$ARCH" ]; then if [ "${TEST_KUBECTL_VERSION:-latest}" = "latest" ]; then if [ "$TEST_CLUSTER" = "minikube" ]; then if [ "${TEST_MINIKUBE_VERSION:-latest}" = "latest" ]; then if [ "$KUBE_VERSION" != "latest" ] && [ "$KUBE_VERSION" != "stable" ]; then if [ $? -ne 0 ] if [ "$COPY_DOCKER_LOGIN" = "true" ] if [ "$ARCH" = "s390x" ]; then elif [[ "$ARCH" = "ppc64le" ]]; then elif [[ "$ARCH" = "arm64" ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/cluster-operator/scripts/cluster_operator_run.sh
lines,36
function,0


for,0

if,4
if [ -z "$KUBERNETES_SERVICE_DNS_DOMAIN" ]; then if [ -n "$KUBERNETES_SERVICE_DNS_DOMAIN" ]; then if [ -f /opt/strimzi/custom-config/log4j2.properties ]; then if [[ -z "$STRIMZI_OPERATOR_NAME" ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/topic-operator/src/test/scripts/reassign.sh
lines,62
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/topic-operator/scripts/topic_operator_run.sh
lines,56
function,0


for,0

if,9
if [ -f /opt/topic-operator/custom-config/log4j2.properties ]; if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ -n "$STRIMZI_JAVA_OPTS" ]; then if [ "$STRIMZI_TLS_ENABLED" = "true" ] || [ "$STRIMZI_SECURITY_PROTOCOL" = "SSL" ] || [ "$STRIMZI_SECURITY_PROTOCOL" = "SASL_SSL" ]; then if [ "$STRIMZI_PUBLIC_CA" != "true" ]; then if [ -z "$STRIMZI_TRUSTSTORE_LOCATION" ]; then if [ "$STRIMZI_TLS_AUTH_ENABLED" != "false" ]; then if [ -z "$STRIMZI_KEYSTORE_LOCATION" ]; then if [ -n "${STRIMZI_ZOOKEEPER_CONNECT}" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/topic-operator/scripts/tls_prepare_certificates.sh
lines,54
function,2
function create_truststore { function create_keystore_without_ca_file {

for,5
echo "Preparing trust store certificates for internal communication" for CRT in /etc/tls-sidecar/cluster-ca-certs/*.crt; do echo "Preparing trust store certificates for internal communication is completed" echo "Preparing key store certificates for internal communication" echo "Preparing key store certificates for internal communication is completed"
if,3
if [ "$FIPS_MODE" = "disabled" ]; then if [ "$STRIMZI_PUBLIC_CA" != "true" ]; then if [ "$STRIMZI_TLS_AUTH_ENABLED" != "false" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/user-operator/scripts/user_operator_run.sh
lines,23
function,0


for,0

if,3
if [ -f /opt/user-operator/custom-config/log4j2.properties ]; if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ -n "$STRIMZI_JAVA_OPTS" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/config-model-generator/build-config-models.sh
lines,26
function,0


for,1
for version in "${versions[@]}"
if,1
if [ "$1" = "build" ]
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/documentation/snip-kafka-versions.sh
lines,33
function,0


for,1
for i in "${!versions[@]}"
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/documentation/version-dependent-attrs.sh
lines,16
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/documentation/snip-images.sh
lines,67
function,0


for,5
for kafka_version in "${versions[@]}" Strimzi image for running Kafka, including: Strimzi image for running the operators: Strimzi image for running the Strimzi kafka Bridge Strimzi image for running the Strimzi Drain Cleaner
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/packaging/helm-charts/kafka-version-tpl.sh
lines,70
function,0


for,1
for version in "${versions[@]}"
if,1
if [[ ${version_does_not_support[${version}]} != *"kafkaMirrorMaker2"* ]] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/kafka-init/scripts/kafka_init_run.sh
lines,5
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/src/test/resources/oauth2/prepare_keycloak_operator.sh
lines,23
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/src/test/resources/oauth2/teardown_keycloak_operator.sh
lines,12
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/scripts/results_info.sh
lines,109
function,1
function get_test_count () {
function get_test_count () {
for,2
for item in ${_TEST_COUNTS_ARR} for line in ${TMP_FAILED_TESTS}
if,11
if [[ -n "${EXCLUDED_GROUPS}" ]]; then if [[ -n "${ENV_VARIABLES}" ]]; then FAILED_TESTS=$(find "${RESULTS_PATH}" -name 'TEST*.xml' -type f -print0 | xargs -0 awk '/<testcase.*>/{ getline x; if (x ~ "<error" || x ~ "<failure") { gsub(/classname=|name=|\"/, "", $0); if ($3 ~ "time=") { print "\\n- " $2 } else { print "\\n- " $2 " in " $3 } }}') if [[ ${TEST_ONLY} == "true" ]]; then if [[ ${TEST_NAME[0]} == ${TEST_NAME[1]} ]] if [[ -n "${ENV_VARIABLES}" ]]; then if [ -n "${FAILED_TESTS}" ] if [[ "${BUILD_PROJECT_STATUS}" == "false" ]] elif [[ "${BUILD_DOCKER_IMAGE_STATUS}" == "false" ]] elif [ "${TEST_COUNT}" == 0 ] if [ "${TEST_ALL_FAILED_COUNT}" == 0 ]
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/scripts/run_tests.sh
lines,44
function,1
function run_test() {
function run_test() {
for,1
echo "Extra args for tests: ${EXTRA_TEST_ARGS}"
if,2
if [[ -n "${TESTCASE}" ]]; then if [[ ${failure} -gt 0 ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/tmt/tests/strimzi/test.sh
lines,25
function,0


for,0

if,2
if [[ ${IP_FAMILY} == "ipv4" || ${IP_FAMILY} == "dual" ]]; then elif [[ ${IP_FAMILY} == "ipv6" ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/systemtest/tmt/scripts/copy-logs.sh
lines,15
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/tools/prerequisites-check.sh
lines,40
function,1
function check_command_present() {
function check_command_present() {
for,0

if,3
if [[ ${YQ_ARRAY[0]} -lt 4 ]]; then if [[ ${YQ_ARRAY[0]} -eq 4 ]] && [[ ${YQ_ARRAY[1]} -lt 2 ]]; then if [[ ${YQ_ARRAY[0]} -eq 4 ]] && [[ ${YQ_ARRAY[1]} -eq 2 ]] && [[ ${YQ_ARRAY[2]} -lt 1 ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/tools/report.sh
lines,398
function,5

error() { get_masked_secrets() { get_namespaced_yamls() { get_nonnamespaced_yamls() { get_pod_logs() {
for,16
for res in $resources; do for res in $resources; do for RES in "${RESOURCES[@]}"; do for res in $resources; do for RES in "${CLUSTER_RESOURCES[@]}"; do for pod in "${CO_PODS[@]}"; do for CRD in $CRDS; do for j in $RES; do for pod in "${KAFKA_PODS[@]}"; do for pod in "${ZOO_PODS[@]}"; do for pod in "${ENTITY_PODS[@]}"; do for pod in "${CC_PODS[@]}"; do for pod in "${EXPORTER_PODS[@]}"; do for pod in "${BRIDGE_PODS[@]}"; do for pod in "${CONNECT_PODS[@]}"; do for pod in "${MM2_PODS[@]}"; do
if,45
if [[ $(uname -s) == "Darwin" ]]; then if [[ -z ${BASH_VERSINFO+x} ]]; then if [[ "${BASH_VERSINFO[0]}" -lt 4 ]]; then if [[ -x "$(command -v kubectl)" ]]; then if [[ -x "$(command -v oc)" ]]; then if [[ $OC_INSTALLED = false && $KUBECTL_INSTALLED = false ]]; then if [[ -z $NAMESPACE || -z $CLUSTER ]]; then if [[ -z $OUT_DIR ]]; then if [[ "$SECRETS_OPT" != "all" && "$SECRETS_OPT" != "off" && "$SECRETS_OPT" != "hidden" ]]; then if [[ -z $CLUSTER ]]; then if [[ -z $NAMESPACE ]]; then if [[ -z $($KUBE_CLIENT get ns "$NAMESPACE" -o name --ignore-not-found) ]]; then if [[ -z $($KUBE_CLIENT get kafkas.kafka.strimzi.io "$CLUSTER" -o name -n "$NAMESPACE" --ignore-not-found) ]]; then if [[ "$SECRETS_OPT" == "off" ]]; then if [[ "$SECRETS_OPT" == "all" ]]; then if [[ -n $resources ]]; then if [[ "$SECRETS_OPT" == "all" ]]; then if [[ -n "$RES" ]]; then if [[ -n $pod ]]; then if [[ "$count" -eq 1 ]]; then if [[ -n $logs ]]; then printf "%s" "$logs" > "$OUT_DIR"/reports/logs/"$pod".log; fi if [[ -n $logs ]]; then printf "%s" "$logs" > "$OUT_DIR"/reports/logs/"$pod".log.0; fi if [[ "$count" -gt 1 && -n "$con" && "$names" == *"$con"* ]]; then if [[ -n $logs ]]; then printf "%s" "$logs" > "$OUT_DIR"/reports/logs/"$pod"-"$con".log; fi if [[ -n $logs ]]; then printf "%s" "$logs" > "$OUT_DIR"/reports/logs/"$pod"-"$con".log.0; fi if [[ -n $CO_DEPLOY ]]; then if [[ -n $CO_RS ]]; then if [[ ${ if [[ -n $CO_CM ]]; then if [[ -n $DC_DEPLOY ]]; then if [[ -n $DC_POD ]]; then if [[ -n $RES ]]; then if [[ -n $EVENTS ]]; then if [[ ${ if [[ ${ if [[ ${ if [[ ${ if [[ ${ if [[ -n $BRIDGE ]]; then if [[ ${ if [[ -n $CONNECT ]]; then if [[ ${ if [[ -n $MM2 ]]; then if [[ ${ if [[ $OUT_DIR == *"tmp."* ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/tools/kafka-versions-tools.sh
lines,111
function,11
function get_default_kafka_version { function get_kafka_versions { function get_kafka_urls { function get_zookeeper_versions { function get_kafka_checksums { function get_kafka_third_party_libs { function get_unique_kafka_third_party_libs { function get_kafka_protocols { function get_kafka_formats { function get_kafka_does_not_support { function get_version_maps {

for,2
for i in "${!versions[@]}" for i in "${!versions[@]}"
if,3
if [ "$version" = "null" ] if [ "$(yq eval ".[${counter}].default" "$VERSIONS_FILE")" = "true" ] if [ "$default_kafka_version" = "null" ]
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/tools/strimzi-oauth-version.sh
lines,8
function,1
function get_strimzi_oauth_version {

for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/tools/multi-platform-support.sh
lines,33
function,0


for,0

if,1
if [ "$UNAME_S" = "Darwin" ];
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.jenkins/scripts/build_keycloak_opa-ppc64le.sh
lines,12
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/.jenkins/scripts/build_keycloak_opa-s390x.sh
lines,13
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/operator/scripts/launch_java.sh
lines,39
function,1
function get_gc_opts {

for,0

if,3
if [ "${STRIMZI_GC_LOG_ENABLED}" == "true" ]; then if [[ "$JAVA_OPTS" != *"MinRAMPercentage"* && "$JAVA_OPTS" != *"MaxRAMPercentage"* ]]; then if [ "$FIPS_MODE" = "disabled" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/build.sh
lines,70
function,3
function dependency_check { function alternate_base { function build {

for,4
>&2 echo "You need bash version >= 4 to build Strimzi. Refer to DEV_GUIDE.md for more information" command -v yq >/dev/null 2>&1 || { >&2 echo "You need yq installed to build Strimzi. Refer to DEV_GUIDE.md for more information"; exit 1; } for kafka_version in "${!version_checksums[@]}" for image in $kafka_images
if,4
if [ -z ${BASH_VERSINFO+x} ] if [ "${BASH_VERSINFO[0]}" -lt 4 ] if [ -n "$ALTERNATE_BASE" ] && [ -f "$1/$ALTERNATE_BASE/Dockerfile" ]; then if [[ $targets == *"docker_build"* ]]
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/find-classpath-collision.sh
lines,35
function,1

exit_handler() {
for,0

if,1
if [ "$collisions" != "" ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/set_kafka_jmx_options.sh
lines,36
function,0


for,0

if,2
if [ "$JMX_ENABLED" = "true" ]; then if [ -n "$JMX_USERNAME" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_controller_liveness.sh
lines,8
function,0


for,1
for proc in /proc/*[0-9];
if,1
do if readlink -f "$proc"/exe | grep -q java; then exit 0; fi;
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/dynamic_resources.sh
lines,30
function,1
function get_heap_size {

for,0

if,4
if [ "${MAX}" ]; then if [ "${MAX}" -lt "${POSSIBLE_HEAP}" ]; then if [ -z "$KAFKA_HEAP_OPTS" ] && [ -n "${STRIMZI_DYNAMIC_HEAP_PERCENTAGE}" ]; then if [ -n "$CALC_MAX_HEAP" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/zookeeper_healthcheck.sh
lines,8
function,0


for,0

if,1
if [ "$OK" == "imok" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_connect_tls_prepare_certificates.sh
lines,37
function,0


for,4
for cert in "${CERTS[@]}" echo "Preparing truststore for OAuth" for CRT in /opt/kafka/oauth-certs/**/*; do echo "Preparing truststore for OAuth is complete"
if,2
if [ -n "$KAFKA_CONNECT_TLS_AUTH_CERT" ] && [ -n "$KAFKA_CONNECT_TLS_AUTH_KEY" ]; then if [ -d /opt/kafka/oauth-certs ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_config_generator.sh
lines,40
function,0


for,1
for LISTENER in $LISTENERS ; do
if,3
if [ -e "$KAFKA_HOME/init/rack.id" ]; then if [ -e "$NODE_PORT_CONFIG_FILE" ]; then if [ -n "${!VAR_NAME}" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_run.sh
lines,129
function,0


for,0

if,12
if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ "$KAFKA_MIRRORMAKER_METRICS_ENABLED" = "true" ]; then if [ "$FIPS_MODE" = "disabled" ]; then if [ "$STRIMZI_TRACING" = "jaeger" ] || [ "$STRIMZI_TRACING" = "opentelemetry" ]; then if [ "$STRIMZI_TRACING" = "opentelemetry" ] && [ -z "$OTEL_TRACES_EXPORTER" ]; then if [ -n "$KAFKA_MIRRORMAKER_INCLUDE" ]; then if [ -n "$KAFKA_MIRRORMAKER_NUMSTREAMS" ]; then if [ -n "$KAFKA_MIRRORMAKER_OFFSET_COMMIT_INTERVAL" ]; then if [ -n "$KAFKA_MIRRORMAKER_ABORT_ON_SEND_FAILURE" ]; then if [ -n "$KAFKA_MIRRORMAKER_MESSAGE_HANDLER" ]; then if [ -n "$KAFKA_MIRRORMAKER_MESSAGE_HANDLER_ARGS" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_producer_config_generator.sh
lines,92
function,0


for,0

if,14
if [ "$KAFKA_MIRRORMAKER_TLS_PRODUCER" = "true" ]; then if [ -n "$KAFKA_MIRRORMAKER_TRUSTED_CERTS_PRODUCER" ]; then if [ -n "$KAFKA_MIRRORMAKER_TLS_AUTH_CERT_PRODUCER" ] && [ -n "$KAFKA_MIRRORMAKER_TLS_AUTH_KEY_PRODUCER" ]; then if [ -n "$KAFKA_MIRRORMAKER_SASL_MECHANISM_PRODUCER" ]; then if [ "$SECURITY_PROTOCOL" = "SSL" ]; then if [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_PRODUCER" = "plain" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_PRODUCER" = "scram-sha-512" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_PRODUCER" = "scram-sha-256" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_PRODUCER" = "oauth" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_ACCESS_TOKEN_PRODUCER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_REFRESH_TOKEN_PRODUCER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_CLIENT_SECRET_PRODUCER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_PASSWORD_GRANT_PASSWORD_CONSUMER" ]; then if [ -f "/tmp/kafka/producer-oauth.keystore.p12" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_connect_config_generator.sh
lines,139
function,0


for,0

if,14
if [ "$KAFKA_CONNECT_TLS" = "true" ]; then if [ -n "$KAFKA_CONNECT_TRUSTED_CERTS" ]; then if [ -n "$KAFKA_CONNECT_TLS_AUTH_CERT" ] && [ -n "$KAFKA_CONNECT_TLS_AUTH_KEY" ]; then if [ -n "$KAFKA_CONNECT_SASL_MECHANISM" ]; then if [ "$SECURITY_PROTOCOL" = "SSL" ]; then if [ "$KAFKA_CONNECT_SASL_MECHANISM" = "plain" ]; then elif [ "$KAFKA_CONNECT_SASL_MECHANISM" = "scram-sha-512" ]; then elif [ "$KAFKA_CONNECT_SASL_MECHANISM" = "scram-sha-256" ]; then elif [ "$KAFKA_CONNECT_SASL_MECHANISM" = "oauth" ]; then if [ -n "$KAFKA_CONNECT_OAUTH_ACCESS_TOKEN" ]; then if [ -n "$KAFKA_CONNECT_OAUTH_REFRESH_TOKEN" ]; then if [ -n "$KAFKA_CONNECT_OAUTH_CLIENT_SECRET" ]; then if [ -n "$KAFKA_CONNECT_OAUTH_PASSWORD_GRANT_PASSWORD" ]; then if [ -f "/tmp/kafka/oauth.truststore.p12" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_run.sh
lines,97
function,0


for,0

if,7
if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ "$FIPS_MODE" = "disabled" ]; then if [ "$KAFKA_METRICS_ENABLED" = "true" ]; then if [ "$STRIMZI_KRAFT_ENABLED" = "true" ]; then if [ ! -f "$KRAFT_LOG_DIR/meta.properties" ]; then if [ -f "$KRAFT_LOG_DIR/__cluster_metadata-0/quorum-state" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_liveness.sh
lines,9
function,0


for,0

if,1
if [ -f /tmp/mirror-maker-alive ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_consumer_config_generator.sh
lines,94
function,0


for,0

if,14
if [ "$KAFKA_MIRRORMAKER_TLS_CONSUMER" = "true" ]; then if [ -n "$KAFKA_MIRRORMAKER_TRUSTED_CERTS_CONSUMER" ]; then if [ -n "$KAFKA_MIRRORMAKER_TLS_AUTH_CERT_CONSUMER" ] && [ -n "$KAFKA_MIRRORMAKER_TLS_AUTH_KEY_CONSUMER" ]; then if [ -n "$KAFKA_MIRRORMAKER_SASL_MECHANISM_CONSUMER" ]; then if [ "$SECURITY_PROTOCOL" = "SSL" ]; then if [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_CONSUMER" = "plain" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_CONSUMER" = "scram-sha-512" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_CONSUMER" = "scram-sha-256" ]; then elif [ "$KAFKA_MIRRORMAKER_SASL_MECHANISM_CONSUMER" = "oauth" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_ACCESS_TOKEN_CONSUMER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_REFRESH_TOKEN_CONSUMER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_CLIENT_SECRET_CONSUMER" ]; then if [ -n "$KAFKA_MIRRORMAKER_OAUTH_PASSWORD_GRANT_PASSWORD_CONSUMER" ]; then if [ -f "/tmp/kafka/consumer-oauth.keystore.p12" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/zookeeper_config_generator.sh
lines,57
function,1

version() { echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'; }
for,0

if,1
if [[ $NODE -eq $ZOOKEEPER_ID ]] && [[ $ZOOKEEPER_NODE_COUNT -gt 2 ]] && [[ $(version "$KAFKA_VERSION") -ge $(version "3.4.1") ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_tls_prepare_certificates.sh
lines,46
function,0


for,4
for cert in "${CERTS[@]}" echo "Preparing truststore for OAuth" for CRT in "$oauth_certs_path"/**/*; do echo "Preparing truststore for OAuth is complete"
if,3
if [ -n "$trusted_certs" ]; then if [ -n "$tls_auth_cert" ] && [ -n "$tls_auth_key" ]; then if [ -d "$oauth_certs_path" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/zookeeper_tls_prepare_certificates.sh
lines,35
function,0


for,4
for CRT in /opt/kafka/cluster-ca-certs/*.crt; do echo "Looking for the right CA" echo "Preparing keystore for client and quorum listeners" echo "Preparing keystore for client and quorum listeners is complete"
if,1
if [ ! -f "$CA" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_2_connector_config_generator.sh
lines,139
function,0


for,5
for cluster in "${CLUSTERS[@]}" for cluster in "${CLUSTERS[@]}" for cluster in "${CLUSTERS[@]}" for cluster in "${CLUSTERS[@]}" for cluster in "${CLUSTERS[@]}"
if,9
if [ "$KAFKA_MIRRORMAKER_2_TLS_CLUSTERS" = "true" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_TRUSTED_CERTS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_TLS_AUTH_CERTS_CLUSTERS" ] && [ -n "$KAFKA_MIRRORMAKER_2_TLS_AUTH_KEYS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_SASL_PASSWORD_FILES_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_OAUTH_TRUSTED_CERTS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_OAUTH_CLIENT_SECRETS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_OAUTH_ACCESS_TOKENS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_OAUTH_REFRESH_TOKENS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_OAUTH_PASSWORDS_CLUSTERS" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/zookeeper_run.sh
lines,84
function,0


for,0

if,4
if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ "$ZOOKEEPER_METRICS_ENABLED" = "true" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ "$FIPS_MODE" = "disabled" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_mirror_maker_2_run.sh
lines,81
function,0


for,5
for cluster in "${TLS_AUTH_CERTS_CLUSTERS[@]}" for cluster in "${TLS_AUTH_KEYS_CLUSTERS[@]}" for cluster in "${TRUSTED_CERTS_CLUSTERS[@]}" for clusterAlias in "${CLUSTERS[@]}" echo "Preparing MirrorMaker 2 truststores and keystores for cluster ${clusterAlias}"
if,6
if [ -n "$KAFKA_MIRRORMAKER_2_TLS_AUTH_CERTS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_TLS_AUTH_KEYS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_TRUSTED_CERTS_CLUSTERS" ]; then if [ -n "$KAFKA_MIRRORMAKER_2_CLUSTERS" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ "$FIPS_MODE" = "disabled" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/tls_utils.sh
lines,57
function,4
function create_truststore { function create_keystore { function create_keystore_without_ca_file { function find_ca {

for,1
for ca in "$1"/*; do
if,2
if [ "$FIPS_MODE" = "disabled" ]; then if openssl verify -CAfile "$ca" "$2" &> /dev/null; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_liveness.sh
lines,19
function,0


for,0

if,2
if [ "$STRIMZI_KRAFT_ENABLED" = "true" ]; then if [ -f /var/opt/kafka/kafka-ready ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_tls_prepare_certificates.sh
lines,104
function,0


for,19
echo "Preparing truststore for replication listener" for CRT in /opt/kafka/cluster-ca-certs/*.crt; do echo "Preparing truststore for replication listener is complete" echo "Looking for the right CA" echo "Preparing keystore for replication and clienttls listener" echo "Preparing keystore for replication and clienttls listener is complete" for CERT_DIR in /opt/kafka/certificates/*; do echo "Preparing store for $listener listener" for CRT in "$CERT_DIR"/**/*; do echo "Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener is complete" echo "Preparing truststore for client authentication" for CRT in /opt/kafka/client-ca-certs/*.crt; do echo "Preparing truststore for client authentication is complete" echo "Preparing truststore for Authorization with OPA" for CRT in "$AUTHZ_OPA_DIR"/**/*; do echo "Preparing truststore for Authorization with OPA is complete" echo "Preparing truststore for Authorization with Keycloak" for CRT in "$AUTHZ_KEYCLOAK_DIR"/**/*; do echo "Preparing truststore for Authorization with Keycloak is complete"
if,6
if [ ! -f "$CA" ]; then if [[ $CERT_DIR =~ $regex ]]; then if [[ ${BASH_REMATCH[1]} == "custom" ]]; then elif [[ ${BASH_REMATCH[1]} == "oauth" ]]; then if [ -d "$AUTHZ_OPA_DIR" ]; then if [ -d "$AUTHZ_KEYCLOAK_DIR" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_readiness.sh
lines,14
function,0


for,0

if,1
if [ "$STRIMZI_KRAFT_ENABLED" = "true" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/set_kafka_gc_options.sh
lines,15
function,1
function get_gc_opts {

for,0

if,1
if [ "${STRIMZI_KAFKA_GC_LOG_ENABLED}" == "true" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/scripts/kafka_connect_run.sh
lines,89
function,0


for,0

if,9
if [ -z "$KAFKA_CONNECT_PLUGIN_PATH" ]; then if [ -e "$KAFKA_HOME/init/rack.id" ]; then if [ "$STRIMZI_STABLE_IDENTITIES_ENABLED" = "true" ]; then if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ "$KAFKA_CONNECT_METRICS_ENABLED" = "true" ]; then if [ "$STRIMZI_TRACING" = "jaeger" ] || [ "$STRIMZI_TRACING" = "opentelemetry" ]; then if [ "$STRIMZI_TRACING" = "opentelemetry" ] && [ -z "$OTEL_TRACES_EXPORTER" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ "$FIPS_MODE" = "disabled" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/stunnel-scripts/stunnel_healthcheck.sh
lines,3
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/stunnel-scripts/entity_operator_stunnel_config_generator.sh
lines,29
function,0


for,1
for cert in /etc/tls-sidecar/cluster-ca-certs/*.crt; do
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/stunnel-scripts/entity_operator_stunnel_run.sh
lines,13
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/stunnel-scripts/entity_operator_stunnel_pre_stop.sh
lines,13
function,0


for,0

if,1
if [ "$CONNS" -eq "0" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/exporter-scripts/kafka_exporter_run.sh
lines,75
function,0


for,1
for cert in /etc/kafka-exporter/cluster-ca-certs/*.crt; do
if,6
if [ -n "$KAFKA_EXPORTER_GROUP_REGEX" ]; then if [ -n "$KAFKA_EXPORTER_TOPIC_REGEX" ]; then if [ -n "$KAFKA_EXPORTER_GROUP_EXCLUDE_REGEX" ]; then if [ -n "$KAFKA_EXPORTER_TOPIC_EXCLUDE_REGEX" ]; then if [ "$KAFKA_EXPORTER_ENABLE_SARAMA" = "true" ]; then if [ -n "$KAFKA_EXPORTER_LOGGING" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/cruise-control-scripts/cruise_control_tls_prepare_certificates.sh
lines,26
function,0


for,5
echo "Preparing truststore for Cruise Control" for CRT in /etc/cruise-control/cluster-ca-certs/*.crt; do echo "Preparing truststore for Cruise Control is complete" echo "Preparing keystore for Cruise Control" echo "Preparing keystore for Cruise Control is complete"
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/cruise-control-scripts/dynamic_resources.sh
lines,31
function,1
function get_heap_size {

for,0

if,4
if [ "${MAX}" ]; then if [ "${MAX}" -lt "${POSSIBLE_HEAP}" ]; then if [ -z "$KAFKA_HEAP_OPTS" ] && [ -n "${STRIMZI_DYNAMIC_HEAP_PERCENTAGE}" ]; then if [ -n "$CALC_MAX_HEAP" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/cruise-control-scripts/cruise_control_run.sh
lines,60
function,0


for,0

if,5
if [ -z "$KAFKA_LOG4J_OPTS" ]; then if [ -n "$STRIMZI_JAVA_SYSTEM_PROPERTIES" ]; then if [ "$FIPS_MODE" = "disabled" ]; then if [ "$CRUISE_CONTROL_METRICS_ENABLED" = "true" ]; then if [ -z "$KAFKA_JVM_PERFORMANCE_OPTS" ]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/cruise-control-scripts/cruise_control_config_generator.sh
lines,42
function,0


for,0

if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/kafka-based/kafka/cruise-control-scripts/cruise_control_healthcheck.sh
lines,16
function,0

ARGS=()
for,0

if,2
if [ "$STRIMZI_CC_API_SSL_ENABLED" = true ] ; then if [ "$STRIMZI_CC_API_AUTH_ENABLED" = true ] ; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/artifacts/build.sh
lines,171
function,5
function dependency_check { function third_party_libs { function cruise_control { function fetch_and_unpack_kafka_binaries { function download_kafka_binaries_from_cdn {

for,6
>&2 echo "You need bash version >= 4 to build Strimzi. Refer to DEV_GUIDE.md for more information" command -v yq >/dev/null 2>&1 || { >&2 echo "You need yq installed to build Strimzi. Refer to DEV_GUIDE.md for more information"; exit 1; } for version_lib in "${libs[@]}" for kafka_version in "${!version_checksums[@]}" echo "Fetching and unpacking binary for Kafka $kafka_version" >&2 echo "No URL for Kafka version $kafka_version"
if,9
if [ -z ${BASH_VERSINFO+x} ] if [ "${BASH_VERSINFO[0]}" -lt 4 ] if [ ${version_binary_urls[$kafka_version]} ] if [ -f "$binary_file_path" ] if [[ "$expected_kafka_checksum" == "$(sha512sum "$binary_file_path")" ]] if [ $get_file -gt 0 ] if [ $do_checksum -gt 0 ] if [ ! -e $ignorelist_file ] if [[ "${cdn_code}" != "200" ]]; then
git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/artifacts/extract-jars.sh
lines,10
function,0


for,1
for jar in $(find $jars_dir -type f -name '*.jar')
if,0

git@github.com:strimzi/strimzi-kafka-operator.git,d9a12814196a1b4f75f92df90bbd6fa76f7e255b,strimzi-kafka-operator,4051,./strimzi-kafka-operator/docker-images/artifacts/find-colliding-classes.sh
lines,18
function,0


for,0

if,0

git@github.com:dromara/hmily.git,2d77b66818c5088f291d0ca5266d6e3768a7c22a,hmily,4050,
git@github.com:tianshiyeben/wgcloud.git,d5189c07aadcb41f08c1dc38d7464ca453e7ebf8,wgcloud,4047,./wgcloud/bin/agent/start.sh
lines,18
function,0


for,0

if,1
if [ ! -n "$PID" ];
git@github.com:tianshiyeben/wgcloud.git,d5189c07aadcb41f08c1dc38d7464ca453e7ebf8,wgcloud,4047,./wgcloud/bin/agent/stop.sh
lines,16
function,0


for,0

if,1
if [ ! -n "$PID" ];
git@github.com:tianshiyeben/wgcloud.git,d5189c07aadcb41f08c1dc38d7464ca453e7ebf8,wgcloud,4047,./wgcloud/bin/server/start.sh
lines,18
function,0


for,0

if,1
if [ ! -n "$PID" ];
git@github.com:tianshiyeben/wgcloud.git,d5189c07aadcb41f08c1dc38d7464ca453e7ebf8,wgcloud,4047,./wgcloud/bin/server/stop.sh
lines,16
function,0


for,0

if,1
if [ ! -n "$PID" ];
git@github.com:apache/calcite.git,e3b5028223d82e2432d037d56d2cee1315a6d7ab,calcite,4039,./calcite/redis/src/test/resources/start.sh
lines,45
function,0


for,0

if,1
if [[ -n "$pid" ]]
git@github.com:apache/calcite.git,e3b5028223d82e2432d037d56d2cee1315a6d7ab,calcite,4039,./calcite/redis/src/test/resources/stop.sh
lines,28
function,0


for,0

if,1
if [[ -n "$pid" ]]
git@github.com:PhilippC/keepass2android.git,9b3d7250ec5622b793b7b92cf22ba85a4001bef3,keepass2android,4038,./keepass2android/src/java/kp2akeytransform/jni/prep_build.sh
lines,5
function,0


for,0

if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/docker/src/main/DockerCompose/start-1c1d.sh
lines,28
function,1
function on_stop(){
function on_stop(){
for,0

if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/docker/src/main/DockerCompose/replace-conf-from-env.sh
lines,64
function,2
function process_single(){ function replace_configs(){
function process_single(){ function replace_configs(){
for,2
for v in $(env); do for f in ${target_files}; do
if,3
if [[ -n "${line}" ]]; then if [[ "${content:0:1}" != " if [[ "${v}" =~ "=" && "${v}" =~ "_" && ! "${v}" =~ "JAVA_" ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/docker/src/main/DockerCompose/do-docker-build.sh
lines,175
function,7
function print_usage(){ function build_single(){ function prepare_buildx(){ function build_iotdb(){ function check_build(){ function process_single(){ function main() {
function print_usage(){ function build_single(){ function prepare_buildx(){ function build_iotdb(){ function check_build(){ function process_single(){ function main() {
for,1
for b in $options ; do
if,9
if [[ -z "$build_what" ]]; then echo "-t is required."; print_usage; fi if [[ "$1" == "latest" ]]; then if [[ "$do_publish" == "true" ]]; then docker buildx version || if [[ $? -ne 0 ]]; then docker buildx inspect mybuilder || if [[ $? -ne 0 ]]; then if [[ "$do_build" == "false" ]]; then if [[ ! -d ${iotdb_zip_path} ]]; then mkdir ${iotdb_zip_path}; fi if [[ "$do_build" == "true" ]]; then return; fi if [[ ! -f ${zip_file} ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/docker/src/main/DockerCompose/entrypoint.sh
lines,57
function,1
function on_stop(){
function on_stop(){
for,0

if,1
if [[ "$start_what" != "confignode" ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/library-udf/src/assembly/tools/register-UDF.sh
lines,103
function,0


for,0

if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-connector/grafana-plugin/backend-compile.sh
lines,35
function,0


for,0

if,1
if [ $exists_env -eq 0 ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/code-coverage/copy-code-coverage-sources.sh
lines,41
function,0


for,4
for file in ../iotdb-core/*/target/*.exec for file in ../iotdb-core/*/target/classes for file in ../iotdb-client/*/target/*.exec for file in ../iotdb-client/*/target/classes
if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/confignode/src/assembly/resources/conf/confignode-env.sh
lines,274
function,1

calculate_heap_sizes()
for,1
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do
if,22
if [ $max_num -le 65535 ]; then if [ $? -ne 0 ]; then if [ "$somaxconn" -lt $SOMAXCONN ]; then if [ "$somaxconn" -lt $SOMAXCONN ]; then if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "65536" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$max_heap_size_in_mb" -gt "16384" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$JVM_VERSION" \< "1.8" ] ; then if [ "$JVM_VERSION" \< "1.8" ] && [ "$JVM_PATCH_VERSION" -lt 40 ] ; then if [ "${version_arr[0]}" = "1" ] ; then if [ "$?" = "1" ] ; then if [ "$ if [ "$?" = "1" ] ; then if [ "$ if [ ${JMX_LOCAL} = "false" ]; then echo "If you want to change this configuration, please check conf/confignode-env.sh(Unix or OS X, if you use Windows, check conf/confignode-env.bat)."
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/confignode/src/assembly/resources/sbin/start-confignode.sh
lines,176
function,1

launch_service() {
for,1
for f in "${CONFIGNODE_HOME}"/lib/*.jar; do
if,6
if [ $ if [ "$(id -u)" -ne 0 ]; then if [ "x$pidfile" != "x" ]; then if [ "x$foreground" == "xyes" ]; then if [ "x$JVM_ON_OUT_OF_MEMORY_ERROR_OPT" != "x" ]; then if [ "x$JVM_ON_OUT_OF_MEMORY_ERROR_OPT" != "x" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/confignode/src/assembly/resources/sbin/remove-confignode.sh
lines,60
function,1

launch_service() {
for,1
for f in ${CONFIGNODE_HOME}/lib/*.jar; do
if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/confignode/src/assembly/resources/sbin/stop-confignode.sh
lines,73
function,0


for,0

if,6
if type lsof >/dev/null 2>&1; then elif type netstat >/dev/null 2>&1; then if [ -z "$PID" ]; then if [ "$(id -u)" -ne 0 ]; then elif [[ "${PID_VERIFY}" =~ ${PID} ]]; then if [[ "${force}" == "yes" ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/test/resources/start-sync-test.sh
lines,54
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,4
if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/test/resources/stop-sync-test.sh
lines,29
function,0


for,0

if,1
if [ -z "$PIDS" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/conf/datanode-env.sh
lines,274
function,1

calculate_heap_sizes()
for,1
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do
if,21
if [ $max_num -le 65535 ]; then if [ $? -ne 0 ]; then if [ "$somaxconn" -lt $SOMAXCONN ]; then if [ "$somaxconn" -lt $SOMAXCONN ]; then if [ "$system_cpu_cores" -lt "1" ] if [ "$half_system_memory_in_mb" -gt "1024" ] if [ "$quarter_system_memory_in_mb" -gt "65536" ] if [ "$half_system_memory_in_mb" -gt "$quarter_system_memory_in_mb" ] if [ "$max_heap_size_in_mb" -gt "16384" ] if [ "$desired_yg_in_mb" -gt "$max_sensible_yg_in_mb" ] if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then if [ "$JVM_VERSION" \< "1.8" ] ; then if [ "$JVM_VERSION" \< "1.8" ] && [ "$JVM_PATCH_VERSION" -lt 40 ] ; then if [ "${version_arr[0]}" = "1" ] ; then if [ "$?" = "1" ] ; then if [ "$ if [ "$?" = "1" ] ; then if [ "$ if [ ${JMX_LOCAL} = "false" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/sbin/start-datanode.sh
lines,266
function,4

launch_service() check_tool_env() { get_real_path() { check_running_process() {
for,3
for f in "${IOTDB_HOME}"/lib/*.jar; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for pid in ${PIDS}
if,15
if [ $ if [ "$(id -u)" -ne 0 ]; then if [ "x$SHOW_VERSION" != "x" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ "x$IOTDB_ALLOW_HEAP_DUMP" == "xtrue" ]; then if [ "x$pidfile" != "x" ]; then if [ "x$foreground" == "xyes" ]; then if [ "x$JVM_ON_OUT_OF_MEMORY_ERROR_OPT" != "x" ]; then if [ "x$JVM_ON_OUT_OF_MEMORY_ERROR_OPT" != "x" ]; then if ! type lsof > /dev/null 2>&1 ; then if [ $? -eq 0 ] ; then if [ "${run_home_path}" == "" ]; then if [ "${run_home_path}" == "${current_home_path}" ]; then if [ $? -eq 0 ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/sbin/stop-datanode.sh
lines,74
function,0


for,0

if,6
if type lsof > /dev/null 2>&1 ; then elif type netstat > /dev/null 2>&1 ; then if [ -z "$PID" ]; then if [ "$(id -u)" -ne 0 ]; then elif [[ "${PID_VERIFY}" =~ ${PID} ]]; then if [[ "${force}" == "yes" ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/sbin/remove-datanode.sh
lines,65
function,1

launch_service()
for,1
for f in ${IOTDB_HOME}/lib/*.jar; do
if,0

git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/validate-tsfile.sh
lines,51
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/print-tsfile-resource-files.sh
lines,60
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,3
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/check-overlap-sequence-files-and-repair.sh
lines,51
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/settle-tsfile.sh
lines,48
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,3
if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/print-tsfile.sh
lines,51
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/overlap-statistic-tool.sh
lines,51
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/split-tsfile-tool.sh
lines,50
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/tsfile/print-iotdb-data-dir.sh
lines,51
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/schema/print-schema-log.sh
lines,50
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/datanode/src/assembly/resources/tools/schema/print-pb-tree-file.sh
lines,50
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,2
if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/node-commons/src/assembly/resources/sbin/stop-standalone.sh
lines,67
function,0


for,0

if,4
if [ -z "${IOTDB_HOME}" ]; then if [ -f "$IOTDB_HOME/sbin/stop-confignode.sh" ]; then if [ -f "$IOTDB_HOME/sbin/stop-datanode.sh" ]; then if [[ "${force}" == "yes" ]]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/node-commons/src/assembly/resources/sbin/start-standalone.sh
lines,43
function,0


for,0

if,3
if [ -z "${IOTDB_HOME}" ]; then if [ -f "$IOTDB_HOME/sbin/start-confignode.sh" ]; then if [ -f "$IOTDB_HOME/sbin/start-datanode.sh" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-core/node-commons/src/assembly/resources/sbin/iotdb-common.sh
lines,348
function,9

checkEnvVariables() checkConfigNodeEnvVariables() checkAllVariables() checkAllConfigNodeVariables() checkDataNodePortUsages () { checkConfigNodePortUsages () { initEnv() { initConfigNodeEnv() { get_iotdb_include() {
for,0

if,48
if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${IOTDB_HOME}" ]; then if [ -z "${IOTDB_DATA_HOME}" ]; then if [ -z "${IOTDB_CONF}" ]; then if [ -z "${IOTDB_LOG_DIR}" ]; then if [ -z "${IOTDB_LOG_CONFIG}" ]; then if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${CONFIGNODE_HOME}" ]; then if [ -z "${CONFIGNODE_DATA_HOME}" ]; then if [ -z "${CONFIGNODE_CONF}" ]; then if [ -z "${CONFIGNODE_LOG_DIR}" ]; then if [ -z "${CONFIGNODE_LOG_CONFIG}" ]; then if [ "$(id -u)" -ne 0 ]; then if [ -f "$IOTDB_CONF/iotdb-datanode.properties" ]; then elif [ -f "$IOTDB_HOME/conf/iotdb-datanode.properties" ]; then if type lsof >/dev/null 2>&1; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then elif type netstat >/dev/null 2>&1; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ $occupied = true ]; then if [ "$(id -u)" -ne 0 ]; then if [ -f "$CONFIGNODE_CONF/iotdb-confignode.properties" ]; then elif [ -f "$CONFIGNODE_HOME/conf/iotdb-confignode.properties" ]; then if type lsof >/dev/null 2>&1; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then elif type netstat >/dev/null 2>&1; then if [ -n "$PID" ]; then if [ -n "$PID" ]; then if [ $occupied = true ]; then if [ -f "$IOTDB_CONF/datanode-env.sh" ]; then if [ "x$PRINT_GC" != "x" ]; then elif [ -f "${IOTDB_HOME}/conf/datanode-env.sh" ]; then if [ "x$PRINT_GC" != "x" ]; then if [ -f "$CONFIGNODE_CONF/confignode-env.sh" ]; then if [ "x$PRINT_GC" != "x" ]; then elif [ -f "${CONFIGNODE_HOME}/conf/confignode-env.sh" ]; then if [ "x$PRINT_GC" != "x" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/cli/src/assembly/resources/sbin/start-cli.sh
lines,153
function,1

checkEnvVariables()
for,2
for f in ${IOTDB_HOME}/lib/*.jar; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do
if,6
if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ "${version_arr[0]}" = "1" ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/cli/src/assembly/resources/tools/export-tsfile.sh
lines,58
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,6
if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/cli/src/assembly/resources/tools/export-csv.sh
lines,58
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,6
if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/cli/src/assembly/resources/tools/import-csv.sh
lines,58
function,0


for,2
for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do for f in ${IOTDB_HOME}/lib/*.jar; do
if,6
if [ -z "${IOTDB_INCLUDE}" ]; then elif [ -r "$IOTDB_INCLUDE" ]; then if [ -z "${IOTDB_HOME}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then if [ -z $JAVA ] ; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/cli/src/assembly/resources/tools/load-tsfile.sh
lines,132
function,0


for,2
for f in ${IOTDB_HOME}/lib/*.jar; do for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do
if,6
if [ -z "${load_dir_param}" ]; then if [ -n "${sg_level_param}" ]; then if [ -n "${verify_param}" ]; then if [ -n "${on_success_param}" ]; then if [ -n "$JAVA_HOME" ]; then if [ -x "$java" ]; then
git@github.com:apache/iotdb.git,960952e0a7d1eaf8d589fcc394bbc997ce0f12ba,iotdb,4035,./iotdb/iotdb-client/client-py/release.sh
lines,41
function,0


for,0

if,2
if [ "$1" == "test" ]; then if [ "$1" == "release" ]; then
git@github.com:Yalantis/Phoenix.git,50728bc07b84c44863438128cf72b434c00bb1c9,Phoenix,4033,
git@github.com:oblac/jodd.git,64789830911f722d4ed0330edb95ab0bf9ae41dd,jodd,4026,./jodd/etc/codacy-checkstyle.sh
lines,12
function,0


for,0

if,0

git@github.com:oblac/jodd.git,64789830911f722d4ed0330edb95ab0bf9ae41dd,jodd,4026,./jodd/etc/codacy-pmd.sh
lines,7
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/bin/nifi-env.sh
lines,69
function,1

setOrDefault() {
for,0

if,1
if [ -n "$envvar" ] && [ "$NIFI_OVERRIDE_NIFIENV" = "true" ]
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/bin/nifi.sh
lines,485
function,10

warn() { die() { detectOS() { unlimitFD() { locateJava() { init() { install() { is_nonzero_integer() { run() { main() {
for,1
echo "NiFi is not running. Stopped waiting for it to initialize."
if,45
if ${aix}; then if [ -f /etc/os-release ]; then if [ "x${MAX_FD}" = "x" ]; then if [ "${os400}" = "false" ] && [ "${cygwin}" = "false" ]; then if [ "${MAX_FD_LIMIT}" != 'unlimited' ]; then if [ $? -eq 0 ]; then if [ "${MAX_FD}" = "maximum" -o "${MAX_FD}" = "max" ]; then if [ $? -ne 0 ]; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if [ "$1" = "env" ]; then if [ "x${TOOLS_JAR}" = "x" ]; then if [ "${darwin}" = "true" ] || [ "${cygwin}" = "true" ]; then if [ "x$2" != "x" ] ; then if [ ! -w "${initd_dir}" ]; then if [ ! -f "${SVC_FILE}" ]; then if [ "${ID}" = "opensuse" ] || [ "${ID}" = "sles" ]; then if [ -d "/run/systemd/system/" ] || [ ! -z "$(pidof systemd 2>/dev/null)" ]; then if [ "$1" -gt 0 ] 2>/dev/null; then if [ "${run_as_user}" = "$(whoami)" ]; then if $cygwin; then if [ -n "${run_as_user}" ]; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if ! id -u "${run_as_user}" >/dev/null 2>&1; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if [ "$preserve_environment" = "true" ]; then if [ "$1" = "run" ]; then if [ "$1" = "set-sensitive-properties-algorithm" ]; then if [ "$1" = "set-sensitive-properties-key" ]; then if [ "$1" = "set-single-user-credentials" ]; then if [ "$1" = "stateless" ]; then if [ "$1" = "start" ]; then if [ "$2" = "--wait-for-init" ]; then if is_nonzero_integer "$3" ; then if [ "$current_time" -ge "$endtime" ]; then if [ "$time_since_feedback" -ge "$WAIT_FOR_INIT_FEEDBACK_INTERVAL" ]; then if [ "$is_nifi_loaded" = "not_running" ]; then if [ "$not_running_counter" -ge 3 ]; then if [ "$is_nifi_loaded" = "true" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockermaven/integration-test.sh
lines,60
function,0


for,2
for i in $(seq 1 10) :; do echo "Waiting for NiFi startup - iteration: ${i}"
if,1
if docker exec "nifi-${TAG}-integration-test" bash -c " echo Running < /dev/tcp/${IP}/8443"; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/DockerBuild.sh
lines,40
function,0


for,0

if,1
if [ -z "${DISTRO_PATH}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/common.sh
lines,50
function,3

prop_replace () { uncomment() { prop_add_or_replace () {
for,0

if,1
if [ -z "${property_found}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/update_oidc_properties.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/toolkit.sh
lines,31
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/start.sh
lines,132
function,0


for,0

if,8
if [ ! -z "${NIFI_JVM_HEAP_INIT}" ]; then if [ ! -z "${NIFI_JVM_HEAP_MAX}" ]; then if [ ! -z "${NIFI_JVM_DEBUGGER}" ]; then if [ -z "${NIFI_WEB_PROXY_HOST}" ]; then echo 'NIFI_WEB_PROXY_HOST was not set but NiFi is configured to run in a secure mode. The NiFi UI may be inaccessible if using port mapping or connecting through a proxy.' if [ -n "${NIFI_NAR_LIBRARY_PROVIDER_NIFI_REGISTRY_URL}" ]; then if [ -n "${NIFI_SENSITIVE_PROPS_KEY}" ]; then if [ -n "${SINGLE_USER_CREDENTIALS_USERNAME}" ] && [ -n "${SINGLE_USER_CREDENTIALS_PASSWORD}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/update_login_providers.sh
lines,48
function,1

edit_property() {
for,0

if,1
if [ -n "${property_value}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/secure.sh
lines,81
function,0


for,0

if,3
if [ ! -f "${KEYSTORE_PATH}" ]; then if [ ! -f "${TRUSTSTORE_PATH}" ]; then if [ -n "${NODE_IDENTITY}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/sh/update_cluster_state_management.sh
lines,30
function,1

edit_property() {
for,0

if,1
if [ -n "${property_value}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-docker/dockerhub/DockerRun.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-stateless/nifi-stateless-resources/src/main/resources/bin/nifi-stateless-env.sh
lines,40
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-stateless/nifi-stateless-resources/src/main/resources/bin/nifi-stateless.sh
lines,162
function,4

detectOS() { locateJava() { init() { run() {
for,0

if,10
if ${aix}; then if [ -f /etc/os-release ]; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if [ "$1" = "env" ]; then if [ "x${TOOLS_JAR}" = "x" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-c2/minifi-c2-docker/dockerhub/DockerBuild.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-c2/minifi-c2-docker/dockerhub/DockerRun.sh
lines,19
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-c2/minifi-c2-assembly/src/main/resources/bin/c2.sh
lines,125
function,6

warn() { die() { detectOS() { locateJava() { init() { run() {
for,0

if,9
if ${aix}; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if $cygwin; then if [ "$1" = "debug" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-resources/src/main/resources/bin/minifi-env.sh
lines,33
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-resources/src/main/resources/bin/minifi.sh
lines,366
function,9

warn() { die() { detectOS() { unlimitFD() { locateJava() { init() { install() { run() { main() {
for,0

if,33
if ${aix}; then if [ -f /etc/os-release ]; then if [ "x${MAX_FD}" = "x" ]; then if [ "${os400}" = "false" ] && [ "${cygwin}" = "false" ]; then if [ "${MAX_FD_LIMIT}" != 'unlimited' ]; then if [ $? -eq 0 ]; then if [ "${MAX_FD}" = "maximum" -o "${MAX_FD}" = "max" ]; then if [ $? -ne 0 ]; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if [ "$1" = "env" ]; then if [ "x${TOOLS_JAR}" = "x" ]; then if [ "${darwin}" = "true" ] || [ "${cygwin}" = "true" ]; then if [ "x$2" != "x" ] ; then if [ ! -w "${initd_dir}" ]; then if [ ! -f "${SVC_FILE}" ]; then if [ "${ID}" = "opensuse" ] || [ "${ID}" = "sles" ]; then if [ -d "/run/systemd/system/" ] || [ ! -z "$(pidof systemd 2>/dev/null)" ]; then if [ "$run_as_user" = "$(whoami)" ]; then if $cygwin; then if [ -n "${run_as_user}" ]; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if ! id -u "${run_as_user}" >/dev/null 2>&1; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if [ "$preserve_environment" = "true" ]; then if [ "$1" = "run" ]; then if [ "$1" = "start" ] || [ "$1" = "restart" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-docker/dockerhub/DockerBuild.sh
lines,29
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-docker/dockerhub/sh/start.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-docker/dockerhub/DockerRun.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/minifi/minifi-toolkit/minifi-toolkit-assembly/src/main/resources/bin/config.sh
lines,122
function,6

warn() { die() { detectOS() { locateJava() { init() { run() {
for,0

if,8
if ${aix}; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if $cygwin; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/build-and-run.sh
lines,32
function,0


for,0

if,1
if [ "$SKIP_UI" == "skipUi" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-toolkit/nifi-registry-toolkit-assembly/src/main/resources/bin/persistence-toolkit.sh
lines,120
function,6

warn() { die() { detectOS() { locateJava() { init() { run() {
for,0

if,8
if ${aix}; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if $cygwin; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-docker-maven/dockermaven/integration-test.sh
lines,55
function,0


for,1
for i in $(seq 1 10) :; do
if,1
if docker exec ${container_name} bash -c " echo Running < /dev/tcp/${IP}/18080"; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/stop.sh
lines,23
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-resources/src/main/resources/bin/nifi-registry-env.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-resources/src/main/resources/bin/nifi-registry.sh
lines,357
function,9

warn() { die() { detectOS() { unlimitFD() { locateJava() { init() { install() { run() { main() {
for,0

if,31
if ${aix}; then if [ -f /etc/os-release ] if [ "x${MAX_FD}" = "x" ]; then if [ "${os400}" = "false" ] && [ "${cygwin}" = "false" ]; then if [ "${MAX_FD_LIMIT}" != 'unlimited' ]; then if [ $? -eq 0 ]; then if [ "${MAX_FD}" = "maximum" -o "${MAX_FD}" = "max" ]; then if [ $? -ne 0 ]; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if [ "$1" = "env" ]; then if [ "x${TOOLS_JAR}" = "x" ]; then if [ "${darwin}" = "true" ] || [ "${cygwin}" = "true" ]; then if [ "x$2" != "x" ] ; then if [ ! -w "${initd_dir}" ]; then if [ ! -f "${SVC_FILE}" ]; then if [ "${ID}" = "opensuse" ] || [ "${ID}" = "sles" ]; then if [ "${run_as_user}" = "$(whoami)" ]; then if $cygwin; then if [ -n "${run_as_user}" ]; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if ! id -u "${run_as_user}" >/dev/null 2>&1; then if [ -n "${TOOLS_JAR}" ]; then if [ -n "${run_as_user}" ]; then if [ "$1" = "run" ]; then if [ "$1" = "start" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/DockerBuild.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/common.sh
lines,28
function,1

prop_replace () {
for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/update_database.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/update_oidc_properties.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/update_flow_provider.sh
lines,51
function,1

add_property() {
for,0

if,2
if [ -n "${property_value}" ]; then if [ ! -z "$NIFI_REGISTRY_GIT_REPO" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/start.sh
lines,63
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/update_login_providers.sh
lines,48
function,1

edit_property() {
for,0

if,1
if [ -n "${property_value}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/update_bundle_provider.sh
lines,48
function,1

add_property() {
for,0

if,1
if [ -n "${property_value}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/secure.sh
lines,57
function,0


for,0

if,2
if [ ! -f "${KEYSTORE_PATH}" ]; then if [ ! -f "${TRUSTSTORE_PATH}" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-toolkit/nifi-toolkit-assembly/docker/DockerBuild.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-toolkit/nifi-toolkit-assembly/docker/tests/exit-codes.sh
lines,17
function,0


for,1
echo "Testing return values on invalid input for all commands:"
if,0

git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-toolkit/nifi-toolkit-assembly/docker/sh/docker-entrypoint.sh
lines,40
function,1

print_help () {
for,1
echo 'Options available include: ' $(for script in $(find "${toolkit_path}" -type f -name '*.sh'); do basename ${script} '.sh'; done)
if,2
if [ -z ${program} ]; then if ! [ -f "${toolkit_path}/${program}.sh" ]; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-toolkit/nifi-toolkit-assembly/src/main/resources/bin/encrypt-config.sh
lines,119
function,6

warn() { die() { detectOS() { locateJava() { init() { run() {
for,0

if,8
if ${aix}; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if $cygwin; then
git@github.com:apache/nifi.git,98eef74dd84952f2a6ae7793277d80985ab16b99,nifi,4016,./nifi/nifi-toolkit/nifi-toolkit-assembly/src/main/resources/bin/cli.sh
lines,127
function,6

warn() { die() { detectOS() { locateJava() { init() { run() {
for,0

if,9
if test -z "$SCRIPT_LINK"; then if ${aix}; then if $cygwin ; then if [ "x${JAVA}" = "x" ] && [ -r /etc/gentoo-release ] ; then if [ "x${JAVA}" = "x" ]; then if [ "x${JAVA_HOME}" != "x" ]; then if [ ! -d "${JAVA_HOME}" ]; then if [ "x${JAVA}" = "x" ]; then if $cygwin; then
git@github.com:luckybilly/CC.git,368b8dd029b997ee5a36fc3c6e2b51d4fd82021b,CC,4016,./CC/bintrayUpload.sh
lines,10
function,0


for,0

if,0

git@github.com:makovkastar/FloatingActionButton.git,06efd32191812222ea567fe8ae133309112e917f,FloatingActionButton,4015,
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/src/share/sample/scripting/scriptpad/src/scripts/memory.sh
lines,33
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/src/share/classes/com/alibaba/tenant/JGroupInitializer.sh
lines,257
function,4

check_prerequisitions() { cgroup_init() { show_help() { parse_args() {
for,4
for REQ in ${REQUIRED_TOOLS[*]}; do for SUBSYS in $(cut -d: -f2 /proc/1/cgroup) for CTRL in ${CONTROLLERS[*]}; do echo "Initialize the jgroup configuration for multi-tenant JVM (which requires root permission)"
if,22
if [ $? -ne 0 ]; then if [ -z "$IS_IN_DOCKER_CONTAINER" ]; then if [ ! -z "$(cat /proc/1/cgroup | awk -F/ '{print $2}')" ]; then if [ $DEV = "tmpfs" ]; then if [ -n "$(echo $ln | grep cgroup)" ]; then if [ -z "$CGROUP" ]; then if [ ! -w $CGROUP ] && [ ! -w $CGROUP/cpu/cpu.shares ]; then if [ "$IS_IN_DOCKER_CONTAINER" = "TRUE" ]; then if [ ! -z "$JG_ROOT" ] && [ ! -d "$CGROUP/$CTRL/$JG_ROOT" ]; then if [ ! -d "$CTRL_DIR" ]; then if [ $? -ne 0 ]; then if [ ! -z "$JG_ROOT" ]; then if [ -z `cat $ROOT_CPUSET_CPUS` ]; then if [ 0 != $? ]; then if [ ! -z "$JG_ROOT" ]; then if [ -z `cat $ROOT_CPUSET_MEMS` ]; then if [ 0 != $? ]; then if [ $? -eq 0 ]; then if [ $? -ne 0 ]; then if [ -z "$JG_GROUP" ] || [ -z "$JG_USER" ]; then if [ -z "$(cat /etc/passwd | awk -F: '{print $1}' | grep $JG_USER)" ]; then if [ -z "$(cat /etc/group | awk -F: '{print $1}' | grep $JG_GROUP)" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/src/solaris/bin/java-rmi.cgi.sh
lines,74
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/make/scripts/localelist.sh
lines,106
function,1

toJavaLocale()
for,3
LOCALES=`(for I in $LOCALE_LIST; do echo $I;done) | sort | uniq` for i in $LOCALES for locale in $LOCALES
if,4
if ($0 in javalocales) { if (a[3] != "") { } else if (a[2] != "") { if [ $index != $counter ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/make/scripts/genCharsetProvider.sh
lines,131
function,2

public $CLASS() { super("$PKG", new Aliases(), new Classes(), new Cache());
for,0

if,1
if (n > 2)
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/make/scripts/addNotices.sh
lines,45
function,0


for,0

if,1
if [ "x$COPYRIGHT_YEARS" != x ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/make/scripts/genExceptions.sh
lines,110
function,3

gen() { public $ARG_TYPE get$ARG_PROP() { public $ID() { }
for,0

if,2
public `if [ ${ABSTRACT:-0} = 1 ]; if [ $ARG_ID ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/ras/TestMiniHeapDumpOpts.sh
lines,78
function,0


for,0

if,6
if [ ! -f ${JMAP} ]; then if [ -z "$(${JMAP} -h 2>&1 | grep 'mini use minidump format (Dragonwell only)')" ]; then if [ $? != 0 ]; then exit 1; fi if [ $? != 0 ] || [ -z "${PID}" ]; then exit 1; fi if [ $? != 0 ] || [ ! -f "${PWD}/heap.bin" ]; then exit 1; fi if [ $? != 0 ]; then exit 1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/sampling/TestNative.sh
lines,63
function,0


for,0

if,5
if [ "${OS}" != "Linux" -a "${OS}" != "Darwin" ]; then if [ "x$TESTGCC" = "x" ]; then if [ "x$TESTGCC" = "x" ]; then if [ "x$TESTROOT" = "x" ]; then if [ "x$TESTJAVA" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/gc/configuration/TestGCHeapConfigurationEventWithZeroBasedOops.sh
lines,60
function,2

uses_64_bit_testjava() { uses_windows_or_linux() {
for,0

if,2
if [ -z "${TESTCLASSPATH}" ]; then if uses_windows_or_linux && uses_64_bit_testjava; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/gc/configuration/TestGCHeapConfigurationEventWithHeapBasedOops.sh
lines,63
function,2

uses_64_bit_testjava() { uses_windows_or_linux() {
for,0

if,2
if [ -z "${TESTCLASSPATH}" ]; then if uses_windows_or_linux && uses_64_bit_testjava; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/gc/configuration/TestGCHeapConfigurationEventWith32BitOops.sh
lines,61
function,2

uses_64_bit_testjava() { uses_windows_or_linux() {
for,0

if,2
if [ -z "${TESTCLASSPATH}" ]; then if uses_windows_or_linux && uses_64_bit_testjava; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/runtime/TestVMInfoEvent.sh
lines,35
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/io/MakeJAR.sh
lines,45
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ -z "${COMPILEJAVA}" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/jfr/event/os/TestInitialEnvironmentVariable.sh
lines,38
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/jdk/tools/launcher/JliLaunchTest.sh
lines,33
function,0


for,0

if,2
if [ "${OS}" != "Darwin" ]; then if [ "x$gcc_cmd" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/lib/security/java.policy/Ext_AllPolicy.sh
lines,86
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLConnection/UNCTest.sh
lines,47
function,0


for,1
echo "This test is not intended for this OS - passing test"
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLConnection/6212146/test.sh
lines,73
function,0


for,0

if,1
if [ -d jars ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URL/B5086147.sh
lines,56
function,0


for,0

if,2
if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ "$failures" != "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/Inet4Address/LookUpAllAddrsTest.sh
lines,147
function,2

long t = System.currentTimeMillis(); System.out.println("COST:" + (System.currentTimeMillis() - t) + " " + Arrays.toString(addresses));
for,3
GLIBC_VER_MAJOR=$(rpm -qa | sort | uniq | perl -e 'for (<>) { if ($_ =~ /^glibc-(\d+)\.(\d+)\D\S+/ ) { print "$1\n"; exit; } }') GLIBC_VER_MINOR=$(rpm -qa | sort | uniq | perl -e 'for (<>) { if ($_ =~ /^glibc-(\d+)\.(\d+)\D\S+/ ) { print "$2\n"; exit; } }') for (int i = 0; i < 10; ++i) {
if,11
if [ "${TESTSRC}" = "" ] if [ $? != 0 ] if [ $? != 0 ] GLIBC_VER_MAJOR=$(rpm -qa | sort | uniq | perl -e 'for (<>) { if ($_ =~ /^glibc-(\d+)\.(\d+)\D\S+/ ) { print "$1\n"; exit; } }') GLIBC_VER_MINOR=$(rpm -qa | sort | uniq | perl -e 'for (<>) { if ($_ =~ /^glibc-(\d+)\.(\d+)\D\S+/ ) { print "$2\n"; exit; } }') if [ $? != '0' ] if [ $GLIBC_VER_MAJOR -ge 2 ] && [ $GLIBC_VER_MINOR -ge 12 ] if [ "x" == "x`gdb --command=debug.gdb --arg $JAVA $TEST_CLASS 2>&1 | grep ' if [ "x" != "x`gdb --command=debug.gdb --arg $JAVA $TEST_CLASS 2>&1 | grep ' if [ "x" != "x`gdb --command=debug.gdb --arg $JAVA $TEST_CLASS 2>&1 | grep ' if [ "x" == "x`gdb --command=debug.gdb --arg $JAVA $TEST_CLASS 2>&1 | grep '
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/ServerSocket/AcceptCauseFileDescriptorLeak.sh
lines,48
function,0


for,0

if,1
if [ "$NOFILES" = "unlimited" ] || [ $NOFILES -ge 1024 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLPermission/nstest/lookup.sh
lines,62
function,0


for,1
// needed for HttpServer
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/DatagramSocket/SetDatagramSocketImplFactory/ADatagramSocket.sh
lines,52
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/InetAddress/ptr/lookup.sh
lines,72
function,0


for,0

if,2
if [ $? != 0 ]; then if [ "$OUT1" != "$OUT2" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLClassLoader/closetest/build.sh
lines,78
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLClassLoader/closetest/build2.sh
lines,58
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLClassLoader/sealing/checksealed.sh
lines,64
function,0


for,0

if,5
if [ x"$TESTJAVA" = x ]; then TESTJAVA=$1; fi if [ x"$COMPILEJAVA" = x ]; then COMPILEJAVA=$1; fi if [ x"$TESTSRC" = x ]; then TESTSRC=.; fi if [ $? != 0 ]; then exit 1; fi if [ $? != 0 ]; then exit 1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLClassLoader/B5077773.sh
lines,66
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/URLClassLoader/getresourceasstream/test.sh
lines,56
function,1

checkExit () {
for,0

if,1
if [ $? != 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/Authenticator/B4933582.sh
lines,50
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/net/Socket/OldSocketImpl.sh
lines,61
function,0


for,0

if,1
if [ "$result" -ne "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/annotation/loaderLeak/LoaderLeak.sh
lines,93
function,0


for,0

if,6
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTCLASSES}" = "" ] if [ $result -eq 0 ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Runtime/exec/setcwd.sh
lines,41
function,0


for,0

if,2
if [ x"$TESTJAVA" = x ]; then if [ x"$TESTCLASSES" = x ]; then TESTCLASSES=.; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Runtime/shutdown/ShutdownHooks.sh
lines,57
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ $? != 0 ] ; then if [ -f ${TESTCLASSES}/${FILENAME} ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/PendingAllGC.sh
lines,58
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/MemoryManagementConcMarkSweepGC.sh
lines,52
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/MemoryManagementSerialGC.sh
lines,52
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/MemoryTestAllGC.sh
lines,56
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/LowMemoryTest2.sh
lines,72
function,1

go() {
for,0

if,3
if [ ! -z "${TESTJAVA}" ] ; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/MemoryMXBean/MemoryManagementParallelGC.sh
lines,52
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/OperatingSystemMXBean/TestSystemLoadAvg.sh
lines,83
function,1

runOne()
for,0

if,3
if [ ! -z "${TESTJAVA}" ] ; then if [ $? -eq 0 ]; then elif [ $i -eq $MAX ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/management/RuntimeMXBean/TestInputArgument.sh
lines,54
function,1

runOne()
for,0

if,1
if [ ! -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineSetUp.sh
lines,70
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/ManifestTest.sh
lines,502
function,16

make_a_JAR() { expect_redef_line="isRedefineClassesSupported()=false" expect_retrans_line="isRetransformClassesSupported()=false" expect_set_nmp_line="isNativeMethodPrefixSupported()=false" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_redef_line="isRedefineClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_retrans_line="isRetransformClassesSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true" expect_set_nmp_line="isNativeMethodPrefixSupported()=true"
for,0

if,16
if [ -n "$boot_cp_line" ]; then if [ -n "$can_redef_line" ]; then if [ -n "$can_retrans_line" ]; then if [ -n "$can_set_nmp_line" ]; then if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then if [ -n "$to_be_deleted" ]; then if [ -f $FAIL_MARKER ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineBigClass.sh
lines,96
function,0


for,0

if,7
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$?" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineClassWithNativeMethod.sh
lines,87
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineMethodInBacktrace.sh
lines,91
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $RUN_RESULT != 0 ]; then if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/AppendToClassPathSetUp.sh
lines,66
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/BootClassPath/BootClassPathTest.sh
lines,94
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/MakeJAR.sh
lines,58
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/MakeJAR2.sh
lines,103
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineMethodWithAnnotations.sh
lines,86
function,0


for,0

if,5
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/appendToClassLoaderSearch/ClassUnloadTest.sh
lines,84
function,2

public static boolean doSomething() { Bar b = new Bar();
for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/appendToClassLoaderSearch/CommonSetup.sh
lines,98
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/appendToClassLoaderSearch/run_tests.sh
lines,102
function,1

go() {
for,2
echo "Creating jar files for simple tests..." echo "Setup for functional tests..."
if,5
if [ "${TESTSRC}" = "" ] if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/appendToClassLoaderSearch/CircularityErrorTest.sh
lines,80
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ "${COMPILEJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/MakeJAR4.sh
lines,46
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/AppendToBootstrapClassPathSetUp.sh
lines,63
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/ParallelTransformerLoader.sh
lines,79
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/VerifyLocalVariableTableOnRetransformTest.sh
lines,83
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/MakeJAR3.sh
lines,69
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/StressGetObjectSizeTest.sh
lines,70
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineSubclassWithTwoInterfaces.sh
lines,173
function,0


for,0

if,10
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$status" != 0 ]; then if [ "$status" != 0 ]; then if [ "$status" = 0 ]; then if [ $cnt = 2 ]; then if [ $cnt = 2 ]; then if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RedefineMethodAddInvoke.sh
lines,88
function,0


for,0

if,5
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/instrument/RetransformBigClass.sh
lines,96
function,0


for,0

if,7
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "$?" = 0 ]; then if [ "$result" = 0 ]; then if [ "$result" = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/StringCoding/CheckEncodings.sh
lines,70
function,2

expectPass() { runTest() {
for,2
for i in `xargs < locale_union.txt` ; do for i in FOO 1234 ZZ; do
if,1
if [ $1 -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/ProcessBuilder/InheritIO/InheritIO.sh
lines,84
function,0


for,1
for TEST_NAME in TestInheritIO TestRedirectInherit
if,7
if [ "x${TESTSRC}" = "x" ]; then if [ "x${TESTJAVA}" = "x" ]; then if [ "x${COMPILEJAVA}" = "x" ]; then if [ ${RES} != 0 ]; then if [ ${RES} != 0 ]; then if [ "x${OUT_RECEIVED}" != "x${OUT_EXPECTED}" ]; then if [ "x${ERR_RECEIVED}" != "x${ERR_EXPECTED}" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/System/MacEncoding/MacJNUEncoding.sh
lines,101
function,0


for,4
echo "Running test for C locale" echo "Running test for en_US.UTF-8 locale" echo "Test failed for C locale" echo "Test failed for en_US.UTF-8 locale"
if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ ${result1} -ne 0 ] ; then if [ ${result2} -ne 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Class/forName/NonJavaNames.sh
lines,110
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Class/getEnclosingClass/build.sh
lines,42
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Class/getEnclosingClass/make_src.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/Thread/UncaughtExceptions.sh
lines,205
function,38

Fail() { echo "FAIL: $1"; failed="${failed}."; } Die() { printf "%s\n" "$*"; exit 1; } Sys() { HorizontalRule() { Bottom() { Cleanup() { Sys rm -f Seppuku* OK.class; } checkOutput() { CheckCommandResults() { Run() { public static void seppuku() { throw new RuntimeException("Seppuku!"); } public void run() { seppuku(); } Thread t = new Seppuku(); t.start(); t.join(); if (! t.isAlive()) final Thread mainThread = currentThread(); new Thread() { public void run() { try { mainThread.join(); } if (! mainThread.isAlive()) }}.start(); seppuku();" final Thread mainThread = currentThread(); new Thread() { public void run() { try { mainThread.join(); } if (! mainThread.isAlive()) }}.start();" currentThread().setUncaughtExceptionHandler(new OK()); setDefaultUncaughtExceptionHandler(new NeverInvoked()); seppuku();" setDefaultUncaughtExceptionHandler(new OK()); seppuku();" Thread t = new Seppuku(); t.setUncaughtExceptionHandler(new OK()); t.start();" setDefaultUncaughtExceptionHandler(new OK()); new Seppuku().start();" setDefaultUncaughtExceptionHandler(new NeverInvoked()); new Seppuku() ).start();"
for,0

if,5
if test -n "$failed"; then if test -z "$expected"; then if (! t.isAlive()) if (! mainThread.isAlive()) if (! mainThread.isAlive())
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/ClassLoader/deadlock/TestCrossDelegate.sh
lines,121
function,0


for,1
for dir in $DIRS
if,6
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ] ; then if [ ${STATUS} -ne 0 ] if [ -d ${dir} ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/ClassLoader/deadlock/TestOneWayDelegate.sh
lines,117
function,0


for,1
for dir in $DIRS
if,6
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ] ; then if [ ${STATUS} -ne 0 ] if [ -d ${dir} ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/ClassLoader/Assert.sh
lines,83
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTCLASSES}" = "" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/lang/ClassLoader/getdotresource.sh
lines,37
function,0


for,0

if,3
if [ x"$TESTJAVA" = x ]; then if [ x"$TESTCLASSES" = x ]; then TESTCLASSES=.; fi if [ x"$TESTSRC" = x ]; then TESTSRC=.; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/ResourceBundle/Bug6299235Test.sh
lines,86
function,0


for,0

if,5
if [ -z "${TESTSRC}" ]; then if [ -z "${TESTJAVA}" ]; then if [ -d "${TESTJAVA}${FILESEP}jre" ]; then if [ -d "${JRE_EXT_DIR}" ]; then if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/ResourceBundle/Control/MissingResourceCauseTest.sh
lines,57
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/TimeZone/OldIDMappingTest.sh
lines,57
function,0


for,2
for I in "" " " no No NO false False FALSE Hello for I in true True TRUE yes Yes YES
if,4
if [ x"$I" != x ]; then if ! ${JAVA} ${D} ${TESTVMOPTS} -cp ${TESTCLASSES} OldIDMappingTest -new; then if [ "x$I" != x ]; then if ! ${JAVA} ${D} ${TESTVMOPTS} -cp ${TESTCLASSES} OldIDMappingTest -old; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/TimeZone/TimeZoneDatePermissionCheck.sh
lines,63
function,0


for,0

if,3
if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/TimeZone/Bug8066652.sh
lines,68
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $status -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/BreakIteratorProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/LocaleNameProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/NumberFormatProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/CalendarNameProviderTest.sh
lines,27
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/ClasspathTest.sh
lines,29
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/ExecTest.sh
lines,148
function,0


for,0

if,8
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ -d ${TESTJAVA}${FS}lib${FS}ext ] if [ $result -eq 0 ] if [ "$3" = "true" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/CalendarDataProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/TimeZoneNameProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/GenericTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/CurrencyNameProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/DecimalFormatSymbolsProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/DateFormatSymbolsProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/DateFormatProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/PluggableLocale/CollatorProviderTest.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/ServiceLoader/basic.sh
lines,154
function,1

go() {
for,2
for n in 2 3; do for p in FooProvider42 'blah blah' 9234 'X!' java.lang.Object; do
if,7
if [ -z "$TESTJAVA" ]; then if [ $ if [ \! -d $EXTD ]; then if [ $n = 3 ]; then if [ -z "$cp" ]; then cp="$TESTCLASSES"; else cp="$TESTCLASSES$SEP$cp"; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/zip/3GBZipFiles.sh
lines,138
function,5

die () { echo "$1" >&2; exit 1; } sys () { "$@" || die "Command $@ failed: rc=$?"; } cleanup () { cd "$currentDir" && rm -rf "$tmpDir"; } buildFile () testJarFile ()
for,2
for file in $filelist; do for file in $filelist; do
if,2
if test -z "${TESTJAVA-}"; then if test "$2" = "STORED"; then jarOpt="0"; else jarOpt=""; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/zip/ZipFile/deletetempjar.sh
lines,40
function,0


for,0

if,3
if [ "x$TESTJAVA" = x ]; then if [ $rc != 0 ]; then elif [ -f "$tmpfile" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Currency/PropertiesTest.sh
lines,143
function,1

run() {
for,0

if,9
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ -w ${TESTJAVA}${FS}jre${FS}lib ] if [ -d ${TESTJAVA}${FS}jre ] if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $COPIED -eq 1 ] if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Locale/data/deflocale.sh
lines,51
function,0


for,0

if,1
if [ "$lcctype" = "
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Locale/LocaleCategory.sh
lines,101
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $result -eq 0 ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Locale/LocaleProviders.sh
lines,317
function,4

mk() { public Locale[] getAvailableLocales() { public Locale[] getAvailableLocales() { runTest()
for,0

if,11
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ ! -d $d ]; then mkdir -p $d; fi if (!daylight && style==TimeZone.LONG) { if [ $result -eq 0 ] if [ "${WINVER}" = "5" ] if [ "${DEFLANG}" != "en" ] && [ "${DEFFMTLANG}" != "en" ]; then elif [ "${DEFLANG}" != "ja" ] && [ "${DEFFMTLANG}" != "ja" ]; then if [ "${DEFLANG}" = "en" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/spi/ResourceBundleControlProvider/UserDefaultControlTest.sh
lines,25
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Formatter/Basic.sh
lines,48
function,2

expectPass() { runTest() {
for,0

if,1
if [ $1 -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Formatter/genBasic.sh
lines,58
function,1

gen() {
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/prefs/CheckUserPrefsStorage.sh
lines,68
function,0


for,0

if,2
if [ "$result" -ne "0" ]; then if [ "$result" -ne "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/prefs/PrefsSpi.sh
lines,107
function,10

Die() { printf "%s\n" "$*"; exit 1; } Sys() { public StubPreferences() { super(null, ""); } public void removeNodeSpi() { } public String[] keysSpi() { return null; } public String[] childrenNamesSpi() { return null; } public void syncSpi() { } public void flushSpi() { } public Preferences userRoot() { return new StubPreferences(); } public Preferences systemRoot() { return new StubPreferences(); }
for,0

if,3
if [ -z "$TESTJAVA" ]; then if [ $ if [ -z "$COMPILEJAVA" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Calendar/GenericTimeZoneNamesTest.sh
lines,44
function,0


for,0

if,2
if ! ${TESTJAVA}/bin/java -esa ${TESTVMOPTS} -cp "${TESTCLASSES}" GenericTimeZoneNamesTest en-US; then if ! ${TESTJAVA}/bin/java -esa ${TESTVMOPTS} -cp "${TESTCLASSES}" -Djava.locale.providers=CLDR GenericTimeZoneNamesTest en-US; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/util/Calendar/NarrowNamesTest.sh
lines,41
function,0


for,1
for P in "JRE,SPI" "CLDR"
if,1
if ! ${TESTJAVA}/bin/java -esa ${TESTVMOPTS} -cp "${TESTCLASSES}" -Djava.locale.providers="${P}" NarrowNamesTest; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/charset/Charset/default.sh
lines,97
function,2

tolower() { go() {
for,0

if,8
if [ -z "$TESTJAVA" ]; then if [ $ if [ "$s" != Linux -a "$s" != SunOS ]; then if [ "x`locale -a | grep \^$L\$`" != "x$L" ]; then if [ $? != 0 ]; then elif [ "`tolower $cs`" != "`tolower $ecs`" ]; then if [ "$s" = Linux ]; then if [ "$s" = SunOS ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/charset/coders/CheckSJISMappingProp.sh
lines,76
function,2

expectPass() { runTest() {
for,1
for i in "ja" "ja_JP.PCK" "ja_JP.eucJP" ; do
if,1
if [ $1 -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/charset/spi/basic.sh
lines,132
function,0


for,2
for where in ext app; do for security in none minimal-policy cp-policy; do
if,9
if [ -z "$TESTJAVA" ]; then if [ $ if [ \! -d $EXTD ]; then if [ $ if [ $s != Linux -a $s != SunOS -a $s != Darwin -a $s != AIX ]; then if [ "x`locale -a | grep $L`" != "x$L" ]; then if [ $where = ext ]; then if (set -x; $JAVA ${TESTVMOPTS} $av Test $css) 2>&1; then if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/channels/AsynchronousChannelGroup/run_any_task.sh
lines,52
function,0


for,0

if,1
if [ -z "$TESTJAVA" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/channels/Selector/lots_of_updates.sh
lines,49
function,0


for,0

if,1
if [ "$NOFILES" = "unlimited" ] || [ $NOFILES -ge 10000 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/channels/SocketChannel/Open.sh
lines,38
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/channels/spi/SelectorProvider/inheritedChannel/run_tests.sh
lines,138
function,1

go() {
for,1
echo "Cannot find ${LAUNCHERLIB} - library not available for this system"
if,8
if [ "$os" != "Linux" -a "$os" != "SunOS" ]; then if [ -z "$TESTJAVA" ]; then if [ $? = 1 ]; then if [ "$os" = "SunOS" ]; then if [ "$os" = "Linux" ]; then if [ ! -f "${TESTSRC}/${LAUNCHERLIB}" ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/channels/spi/AsynchronousChannelProvider/custom_provider.sh
lines,71
function,1

go() {
for,0

if,3
if [ -z "$TESTJAVA" ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/Buffer/LimitDirectMemory.sh
lines,92
function,2

runTest() { launchFail() {
for,0

if,2
if [ $? -eq 0 ] if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/Buffer/genCopyDirectMemory.sh
lines,40
function,1

gen() {
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/Buffer/genBasic.sh
lines,38
function,1

gen() {
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/file/Files/delete_on_close.sh
lines,61
function,0


for,0

if,3
if [ -z "$TESTJAVA" ]; then if [ $? != 0 ]; then exit 1; fi if [ -f $TMPFILE ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/file/Files/walkFileTree/find.sh
lines,93
function,0


for,0

if,6
if [ -z "$TESTJAVA" ]; then if [ $? != 0 ]; then exit 1; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/nio/file/Path/MacPathTest.sh
lines,39
function,0


for,0

if,1
if [ "x$TESTJAVA" = x ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/cert/CertPathValidator/nameConstraints/generate.sh
lines,110
function,0


for,0

if,10
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/cert/CertPathValidator/indirectCRL/generate.sh
lines,219
function,0


for,0

if,20
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f root/top_crlissuer_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f dumca/dumca_cert.pem ]; then if [ ! -d sumca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob_cert.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then if [ ! -f root/top_crl.pem ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/subca_crl.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/cert/CertificateFactory/slowstream.sh
lines,54
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/cert/CertPathBuilder/selfIssued/generate.sh
lines,219
function,0


for,0

if,20
if [ ! -f root/root_cert.pem ]; then if [ ! -d root ]; then if [ ! -f root/top_crlissuer_cert.pem ]; then if [ ! -d root ]; then if [ ! -f subca/subca_cert.pem ]; then if [ ! -d subca ]; then if [ ! -f dumca/dumca_cert.pem ]; then if [ ! -d sumca ]; then if [ ! -f subca/alice/alice_cert.pem ]; then if [ ! -d subca/alice ]; then if [ ! -f subca/bob/bob_cert.pem ]; then if [ ! -d subca/bob ]; then if [ ! -f subca/susan/susan_cert.pem ]; then if [ ! -d subca/susan ]; then if [ ! -f root/top_crl.pem ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/subca_crl.pem ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/Security/ClassLoaderDeadlock/Deadlock.sh
lines,70
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/Security/ClassLoaderDeadlock/Deadlock2.sh
lines,118
function,0


for,0

if,6
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ -d testlib ] ; then if [ -d ${TESTJAVA}${FILESEP}lib${FILESEP}ext ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/security/Security/ClassLoaderDeadlock/ClassLoaderDeadlock.sh
lines,110
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ ! -d provider ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/rmi/activation/Activatable/extLoadedImpl/ext.sh
lines,55
function,0


for,1
for dir in `echo ${TESTCLASSPATH:-$TESTCLASSES} | sed -e "s/$PS/ /"` ; do cp $dir/*.class classes ; done
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/rmi/registry/readTest/readTest.sh
lines,129
function,0


for,0

if,3
if [ "$VER" -eq "5" ]; then if [ "$VER" -eq "5" ]; then if [ $result1 -eq 0 -a $result2 -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/FontClass/CreateFont/DeleteFont.sh
lines,67
function,0


for,0

if,5
if [ -z "${TESTSRC}" ]; then if [ -z "${TESTCLASSES}" ]; then if [ -z "${TESTJAVA}" ]; then if [ $? -ne 0 ] if [ $numfiles0 -ne $numfiles1 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/FontClass/CreateFont/fileaccess/TestFontFile.sh
lines,84
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ -f ${FILE_LOCATION}${FS}JDK64BIT -a ${OS} = "SunOS" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/GraphicsEnvironment/TestDetectHeadless/TestDetectHeadless.sh
lines,57
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/appletviewer/IOExceptionIfEncodedURLTest/IOExceptionIfEncodedURLTest.sh
lines,261
function,3

fail() pass() test()
for,11
then fail "test failed for "${URL}", see err file and CRs then fail "test failed for "${URL}", see err file and CRs then fail "test failed for "${URL}": syntax errors or inaccessible files" then echo "the test passed for "${URL} else fail "test failed for "${URL}": the appletviewer behaviour is unexpected: "$started", see err file" VAR="One value for Sun" VAR="A different value for Linux" VAR="A different value for MacOSX" VAR="A different value for Win32" VAR="A different value for Cygwin" VAR="A different value for AIX"
if,9
if [ $exception = "0" ]; if [ $exception = "0" ]; if [ $? = 0 ] ; if [ $started = "0" ]; if [ -z "${PWD}" ] ; then if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/JAWT/JAWT.sh
lines,172
function,0


for,1
echo "Test passed. This test is not for MacOS."
if,9
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ $? -eq '0' ] if [ `uname -p | grep -c 'sparc'` -gt '0' ] if [ "$?" -eq '0' ] if [ "$?" -eq '0' ] if [ "$?" -ne '0' ] if [ "$?" -ne '0' ] if [ "$?" -ne '0' ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/Toolkit/DesktopProperties/rfe4758438.sh
lines,83
function,0


for,0

if,5
if [ -z "${TESTJAVA}" ]; then if [ ${GNOME_DESKTOP_SESSION_ID:-nonset} = "nonset" ]; if [ ${GNOME_SESSION_NAME:-nonset} = "nonset" ]; if [ $SCHEMAS -eq 0 ]; if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/Toolkit/Headless/WrappedToolkitTest/WrappedToolkitTest.sh
lines,184
function,2

fail() pass()
for,0

if,11
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; then if [ -a *.java ]; then if [ -z "${STANDALONE}" ] ; if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then if [ ! $status -eq "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/Toolkit/AutoShutdown/ShowExitTest/ShowExitTest.sh
lines,194
function,2

fail() pass()
for,6
VAR="One value for Sun" VAR="A different value for Linux" VAR="A different value for MacOSX" VAR="A different value for Win32" VAR="A different value for Cygwin" VAR="A different value for AIX"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ; if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/Toolkit/AutoShutdown/EventQueuePush/EventQueuePushAutoshutdown.sh
lines,159
function,2

fail() pass()
for,0

if,5
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/Toolkit/BadDisplayTest/BadDisplayTest.sh
lines,35
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/awt/PrintJob/Text/stringwidth.sh
lines,64
function,1

checkstatus()
for,0

if,4
if [ $status -ne "0" ]; then if [ -z "${TESTCLASSES}" ]; then if [ $OS = SunOS -o $OS = Linux ] if [ -z "${TESTJAVA}" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/FileOutputStream/FileOpen.sh
lines,78
function,0


for,1
echo "This test is not intended for this OS - passing test"
if,1
if [ ! -d ${TMP} ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/File/MacPathTest.sh
lines,39
function,0


for,0

if,1
if [ "x$TESTJAVA" = x ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/File/basic.sh
lines,56
function,0


for,0

if,2
if [ "x$TESTJAVA" = x ]; then if $TESTJAVA/bin/java ${TESTVMOPTS} $* -classpath "$TESTCLASSES" Basic; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/File/GetXSpace.sh
lines,81
function,3

deny() { allow() { runTest() {
for,0

if,2
if [ $? -eq 0 ] if [ ${FAIL} -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/maskSyntheticModifier/run.sh
lines,49
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/serialver/nested/run.sh
lines,64
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/serialver/classpath/run.sh
lines,64
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/evolution/AddedExternField/run.sh
lines,33
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/evolution/RenamePackage/run.sh
lines,105
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ -d ${TESTCLASSES}/oclasses ] if [ -d ${TESTCLASSES}/nclasses ] if [ -d ${TESTCLASSES}/share ] if [ -f ${TESTCLASSES}/stream.ser ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/unnamedPackageSwitch/run.sh
lines,49
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/class/run.sh
lines,133
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/superclassDataLoss/run.sh
lines,56
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/resolveClass/consTest/run.sh
lines,53
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/resolveClass/deserializeButton/run.sh
lines,54
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/subclass/run.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/java/io/Serializable/packageAccess/run.sh
lines,54
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/script/ProviderTest.sh
lines,50
function,0


for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/script/CommonSetup.sh
lines,86
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/swing/LookAndFeel/8145547/DemandGTK3.sh
lines,80
function,0


for,1
echo "java execution failed for unknown reason, see logs"
if,4
if [ $? -ne 0 ] if [ "${HAVE_3}" = "0" ] if [ ${EXECRES} -ne 0 ] if [ -s logg ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/swing/LookAndFeel/8145547/DemandGTK2.sh
lines,87
function,0


for,1
echo "java execution failed for unknown reason, see logs"
if,5
if [ $? -ne 0 ] if [ "${HAVE_2}" = "0" ] if [ "${HAVE_3}" = "0" ] if [ ${EXECRES} -ne 0 ] if [ -s logg ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/crypto/SecretKeyFactory/FailOverTest.sh
lines,102
function,0


for,0

if,6
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? -ne 0 ]; then if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/security/auth/Subject/doAs/Test.sh
lines,85
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/xml/ws/xsanymixed/compile-wsdl.sh
lines,36
function,0


for,0

if,1
if [ "x$TESTJAVA" = x ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/xml/jaxp/common/8035437/run.sh
lines,44
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/rmi/ssl/SSLSocketParametersTest.sh
lines,56
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/print/applet/AppletPrintLookup.sh
lines,93
function,0


for,0

if,1
if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/print/PrintSE/PrintSE.sh
lines,51
function,1

createJavaPolicyFile()
for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/imageio/stream/StreamCloserLeak/run_test.sh
lines,229
function,2

fail() pass()
for,6
VAR="One value for Sun" VAR="A different value for Linux" VAR="A different value for AIX" VAR="A different value for MacOSX" VAR="A different value for Win32" VAR="A different value for Cygwin"
if,11
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -f TestApp.jar ] ; then if [ $? -ne "0" ] ; then if [ -f Test.jar ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ $? -ne 0 ] ; then if [ "x${cache_files}" != "x" ] ; then if [ $status -eq "0" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/imageio/stream/DeleteOnExitTest.sh
lines,69
function,0


for,0

if,5
if [ -z "${TESTSRC}" ]; then if [ -z "${TESTCLASSES}" ]; then if [ -z "${TESTJAVA}" ]; then if [ $? -ne 0 ] if [ $numfiles0 -ne $numfiles1 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/imageio/metadata/IIOMetadataFormat/runMetadataFormatTest.sh
lines,228
function,2

fail() pass()
for,4
VAR="One value for Sun" VAR="A different value for Linux" VAR="A different value for Win32" VAR="A different value for CYGWIN"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -d ./test_classes ] ; then if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/imageio/metadata/IIOMetadataFormat/runMetadataFormatThreadTest.sh
lines,229
function,2

fail() pass()
for,4
VAR="One value for Sun" VAR="A different value for Linux" VAR="A different value for Win32" VAR="A different value for CYGWIN"
if,6
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -d ./test_classes ] ; then if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/javax/imageio/spi/AppletContextTest/BadPluginConfigurationTest.sh
lines,280
function,3

fail() pass() clean()
for,0

if,11
if [ -n "${PLUGINDST_DIR}" -a -d "${PLUGINDST_DIR}" ] ; then if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; if [ -n "${STANDALONE}" ] ; if [ -a *.java ] ; if [ -z "${STANDALONE}" ] ; if [ -d META-INF ] ; then if [ ! -d META_INF ] ; then if [ -f ${PLUGINDST_DIR}/${TEST_PLUGIN} ] ; then if [ -f ${PLUGINDST_DIR}/${TEST_PLUGIN} ] ; then if [ $status -eq "0" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/multi-tenant/TestJGroupDebugMode.sh
lines,111
function,1

TenantConfiguration config = new TenantConfiguration() tenant.run(()-> {
for,0

if,9
if [ "${TESTSRC}" = "" ] if [ $? != 0 ]; then if [ ! -z "$(${JAVA} ${TEST_OPTS} -cp ${PWD} ${TEST_CLASS} | grep 'cgroup initialized successfully')" ]; then if [ -z "$(${JAVA} ${TEST_OPTS} -cp ${PWD} ${TEST_CLASS} | grep 'cgroup initialized successfully')" ]; then if [ -z "$(${JAVA} ${TEST_OPTS} -cp ${PWD} ${TEST_CLASS} | grep 'cgroup initialized successfully')" ]; then if [ ! -z "$(${JAVA} ${TEST_OPTS} -cp ${PWD} ${TEST_CLASS} | grep 'Created group with standard controllers:')" ]; then if [ ! -z "$(${JAVA} ${TEST_OPTS} -Dcom.alibaba.tenant.debugJGroup=false -cp ${PWD} ${TEST_CLASS} | grep 'Created group with standard controllers')" ]; then if [ -z "$(${JAVA} ${TEST_OPTS} -Dcom.alibaba.tenant.debugJGroup=tRue -cp ${PWD} ${TEST_CLASS} | grep 'Created group with standard controllers')" ]; then if [ -z "$(${JAVA} ${TEST_OPTS} -Dcom.alibaba.tenant.debugJGroup=trUE -cp ${PWD} ${TEST_CLASS} | grep 'Created group with standard controllers')" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/demo/zipfs/basic.sh
lines,74
function,1

go() {
for,0

if,4
if [ -z "${TESTJAVA}" ]; then if [ ! -r "${ZIPFS}" ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/start-Xvfb.sh
lines,87
function,1

usage() {
for,0

if,3
if [ ! -x "/usr/bin/X11/Xvfb" ]; then if [ ! -x ${WM} ] ; then if [ -x "${WM}" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/tools/launcher/6842838/Test6842838.sh
lines,76
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ]; then if [ "${TESTCLASSES}" = "" ]; then if [ ! -x ${JAVA_EXE} ]; then if [ ! -x ${LIBUMEM} ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/tools/launcher/MultipleJRE.sh
lines,476
function,11

IsWindows() { TestSyntax() { CreateMockVM() { CreateJar() { CreateZippyJar() { CreateUglyJar() { CreateFullJar() { CreateAlignedJar() { CommentZipFile() { LaunchVM() { TestLongMainClass() {
for,7
echo "Unexpected error message for invalid syntax $1" for i in 0 1 2 3 4 5 6 7 8 9 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do for i in 0 1 2 3 4 5 6 7 8 9 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do for i in 0 1 2 3 4 5 6 7 8 9 a b c d e f; do for j in 0 1 2 3 4 5 6 7 8 9 a b c d e f; do
if,29
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? -eq 0 ]; then if [ "$prefix" != "Error: Syntax error" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$1" != "" ]; then if [ "$ampersand" = "@" ]; then if [ "$line" = "(comment above this line)" ]; then if [ "$file" = "$1" ]; then if [ "$ampersand" = "@" ]; then if [ "$line" = "(zip file comment below this line)" ]; then if [ "$1" != "" ]; then if [ $? -ne 0 ]; then if [ "$prefix" != "Unable to locate" ]; then if [ $? != 0 ]; then if [ "$JVER" = "mklink" ]; then if [ $? -ne 0 ]; then if [ `IsWindows` = "true" ]; then if [ ${PATH_LENGTH} -lt ${MAXIMUM_PATH} ]; then if [ -x /usr/bin/zip ]; then if [ -x /usr/bin/zipnote ]; then if [ `IsWindows` = "false" ]; then if [ $? -eq 0 ]; then if [ `IsWindows` = "true" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/tools/launcher/ClassPathWildCard.sh
lines,166
function,7

EmitJavaFile() { printf " ps.flush(); ps.close();\n" printf " System.out.println(e.getMessage());\n" CreateClassFiles() { CreateJarFiles() { CheckFail() { ExecJava() {
for,0

if,5
if [ "${TESTJAVA}" = "" ]; then if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]; then if [ "${TESTCLASSES}" = "" ]; then if [ ! -f ${1}${OUTEXT} ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/oracle/net/sanity.sh
lines,66
function,0


for,0

if,3
if [ $? != 0 ]; then if [ ! -f /proc/net/sdp ]; then if [ -z "$TESTJAVA" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/alibaba/cds/testClassLoaderJVMTI.sh
lines,150
function,3

public static void throwError() { URL[] urls = new URL[] { CLASSES_DIR.toUri().toURL() }; ClassLoader parent = ClassLoader.getSystemClassLoader();
for,1
echo "Test only valid for x86"
if,6
if [ "${TESTSRC}" = "" ] if [ "x$(uname -m)" = "xaarch64" ]; if [ $? != '0' ] if [ $? != '0' ] if [ $? != '0' ] if [ $line -eq "2" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/alibaba/cds/testDelegatingClassLoaderJVMTI.sh
lines,167
function,6

public static void throwError() { testDelegatingClassLoader(); URL[] urls = new URL[] { CLASSES_DIR.toUri().toURL() }; ClassLoader parent = ClassLoader.getSystemClassLoader(); private static void testDelegatingClassLoader() throws Exception { new Thread(() -> { }, "waiter").start();
for,2
echo "Test only valid for x86" for (int i = 0; i < 100; i++) {
if,6
if [ "${TESTSRC}" = "" ] if [ "x$(uname -m)" = "xaarch64" ]; if [ $? != '0' ] if [ $? != '0' ] if [ $? != '0' ] if [ $line -eq "2" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/alibaba/wisp/bug/TestThreadStackTrace.sh
lines,149
function,19
function assert()
public static void foo() throws Exception { ExecutorService executor = Executors.newCachedThreadPool(); executor.execute(() -> { runningCoroutine = Thread.currentThread(); e.printStackTrace(); Thread mainThread = Thread.currentThread(); ts[0] = new Thread(() -> { if (ts[0].getStackTrace().length == 0 || mainThread.getStackTrace().length == 0 || Thread.currentThread().getStackTrace().length == 0) { runningCoroutine.getStackTrace(); done.countDown(); ts[0].start(); done.await(); executor.shutdown(); if (!result.get()) { WispEngine.current().execute(() -> { Thread.currentThread().getStackTrace(); latch.countDown(); latch.await(); foo(); function assert()
for,1
for (int i = 0; i < 5; i++) {
if,6
if [ "${TESTSRC}" = "" ] if (ts[0].getStackTrace().length == 0 || mainThread.getStackTrace().length == 0 if (!(e instanceof UnsupportedOperationException)) { if (!result.get()) { if [ $? != '0' ] if [[ $line -eq "2" ]]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/management/UnixOperatingSystemMXBean/GetMaxFileDescriptorCount.sh
lines,60
function,1

runOne()
for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/management/UnixOperatingSystemMXBean/GetOpenFileDescriptorCount.sh
lines,59
function,1

runOne()
for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/management/HotSpotDiagnosticMXBean/DumpHeap.sh
lines,59
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ] ; then if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/ProcessAttachTest.sh
lines,181
function,2

startDebuggee() stopDebuggee()
for,2
echo "Waiting for Debuggee to initialize..." echo "Waiting for port file to be written..."
if,13
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ "${OS}" = "CYGWIN" ]; then if [ "$OS" = "Windows" ]; then if [ ! -z "$out" ]; then if [ $? != 0 ] ; then if [ -r $TESTCLASSES/@debuggeeVMOptions ] ; then elif [ -r $TESTCLASSES/../@debuggeeVMOptions ] ; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ -f ${PORTFILE} ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures = 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/CommandCommentDelimiter.sh
lines,85
function,3

createJavaFile() dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/CatchPatternTest.sh
lines,127
function,9

createJavaFile() System.out.println(" loop: " + re.getMessage() + public void partOne() { public void partTwo() { $classname my = new $classname(); my.partOne(); my.partTwo(); dojdbCmds() mysetup()
for,2
for (int i = 0; i <= max; i++) { for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineChangeClassOrder.sh
lines,151
function,13

createJavaFile() new $1().hi(false); new $1().hi(true); // @1 breakpoint Foo1 foo1 = new Foo1(); // @1 commentout foo1.hi(); // @1 commentout Hack hack = getClass().getAnnotation(Hack.class); String class_annotation = hack.value(); Foo2 foo2 = new Foo2(); foo2.hi(); // @1 uncomment Foo1 foo1 = new Foo1(); // @1 uncomment foo1.hi(); public void hi() { System.out.println("Hello from " + getClass()); public void hi() { System.out.println("Hello from " + getClass()); String value(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,6
if (expected == isNewVersion) { if (hack != null) { if (isNewVersion) { if (class_annotation.equals("JUNK")) { if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/SuspendNoFlagTest.sh
lines,104
function,2

fail() pass()
for,0

if,5
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ -r $TESTCLASSES/@debuggeeVMOptions ] ; then elif [ -r $TESTCLASSES/../@debuggeeVMOptions ] ; then if [ $status -eq "0" ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/ImmutableResourceTest.sh
lines,114
function,2

fail() pass()
for,0

if,3
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineMulti.sh
lines,155
function,12

createJavaFile() // stat() calls version 2 of doSomething() instead of private void doSomething() { public void start() { doSomething(); // @1 breakpoint here line 16 // Redefinex myx = new Redefinex(); // myx.methodx1(); // line 22 $1 xxx = new $1(); xxx.start(); Redefinex() { public void methodx1() { a. add line breakpoint in start() re-execute method start(). dojdbCmds() mysetup()
for,3
for (int i=0; i < 3; i++) { // for (int i = 0; i < 5; i++) { for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/NotAField.sh
lines,97
function,4

createJavaFile() dojdbCmds() cmd print "java.lang.Class.reflectionFactory.hashCode()" mysetup()
for,0

if,5
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ -z "$TESTSRC" ] ; then if [ -r $TESTSRC/ShellScaffold.sh ] ; then elif [ -r $TESTSRC/../ShellScaffold.sh ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefinePop.sh
lines,102
function,3

createJavaFile() $1 mine = new $1(); mine.a4(); public void a4() { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/ZZZcleanup.sh
lines,56
function,1

mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbMissStep.sh
lines,101
function,8

createJavaFile() $classname dbb = new $classname(); System.out.println("ANSWER IS: " + dbb.getIntVal()); jj2 gus = new jj2(); System.out.println("ANSWER2 IS: " + gus.getIntVal()); public int getIntVal() { public int getIntVal() { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/redefineMethod/RedefineSetUp.sh
lines,62
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbVarargsTest.sh
lines,110
function,4

createJavaFile() dojdbCmds() cmd eval "$classname.varString();" mysetup()
for,2
for (int ii = 0; ii < ss.length; ii++) { for ii in . $TESTSRC $TESTSRC/.. ; do
if,4
if (ss == null) { if (ss.length == 0) { if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineClearBreakpoint.sh
lines,101
function,3

createJavaFile() public $1() { new $1(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/DeferredStepTest.sh
lines,184
function,11

createJavaFile() public void run() { System.out.println("Thread: " + Thread.currentThread().getName()); // line 9 public void run() { System.out.println("Thread: " + Thread.currentThread().getName()); // line 21 jj1 aRP = new jj1(); jj2 asRP = new jj2(); new Thread(aRP, "jj1 *").start(); new Thread(asRP, "jj2 **").start(); // new Thread(aRP, "jj3 ***").start(); // new Thread(asRP, "jj4 ****").start(); dojdbCmds() mysetup()
for,6
for ( int ii = 0; ii < 10; ii++) { // line 6 for (int ii = 0; ii < 10; ii++) { // line 18 for ii in . $TESTSRC $TESTSRC/.. ; do If this works right, you should see StepEvents/Breakpoint events for lines 8, 9, 6, 7, 8, 9, 6, .... for thread jj11 20, 21, 18, 19, 20, 21, 18, ... for thread jj2
if,3
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then Kill the test and rerun it if this happens.
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbLockTest.sh
lines,110
function,6

createJavaFile() sleeper xx = new sleeper(); xx.start(); public void run() { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineClasses.sh
lines,160
function,5

createJavaFile() public $1() { public void a1() { a2(); public void a2() { a3(); public void a3() { public void a4() { a1(); public void aa() { a4(); $1 untitled31 = new $1(); untitled31.aa(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbMethodExitTest.sh
lines,309
function,52

createJavaFile() new $classname(); public byte i_bytef() { return byteValue; } public char i_charf() { return charValue; } public double i_doublef() { return doubleValue; } public float i_floatf() { return floatValue; } public int i_intf() { return intValue; } public short i_shortf() { return shortValue; } public boolean i_booleanf() { return booleanValue; } public String i_stringf() { return stringValue; } public Class i_classf() { return classValue; } public ClassLoader i_classLoaderf() public Thread i_threadf() { return threadValue = Thread.currentThread(); } public ThreadGroup i_threadGroupf() { return threadGroupValue = threadValue.getThreadGroup(); } public int[] i_intArrayf() { return intArrayValue; } public Object i_nullObjectf() { return null; } public Object i_objectf() { return objectValue; } public void i_voidf() {} xx.i_bytef(); xx.i_charf(); xx.i_doublef(); xx.i_floatf(); xx.i_intf(); xx.i_shortf(); xx.i_booleanf(); xx.i_stringf(); xx.i_intArrayf(); xx.i_classf(); xx.i_classLoaderf(); xx.i_threadf(); xx.i_threadGroupf(); xx.i_nullObjectf(); xx.i_objectf(); xx.i_voidf(); stringValue.intern(); public static void bkpt() { public static String traceMethods() { public static String traceMethods1() { public static String traceExits() { public static String traceExits1() { public static String traceExit() { public static String traceExit1() { $classname xx = new $classname(); System.out.println("threadid="+Thread.currentThread().getId()); bkpt(); bkpt(); traceMethods(); traceMethods1(); bkpt(); traceExits(); traceExits1(); bkpt(); traceExit(); traceExit1(); bkpt(); dojdbCmds() mysetup()
for,4
// Prove it works for native methods too jdbFailIfNotPresent "trace method exit in effect for JdbMethodExitTest.bkpt" jdbFailIfNotPresent "trace go method exit in effect for JdbMethodExitTest.bkpt" for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/EvalArgs.sh
lines,318
function,10

createJavaFile() myjj1 = new jj1(); myjj2 = new jj2(); myoranges = new oranges(); gus(); static void gus() { jj1() { public String toString() { jj2() { super(); oranges() { dojdbCmds() cmd eval "$classname.myjj1.toString().equals("jj1name")" mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/ArrayLengthDumpTest.sh
lines,121
function,14

createJavaFile() public void bar() { public void foo() { ArrayLengthDumpTarg u[] = { new ArrayLengthDumpTarg(), new ArrayLengthDumpTarg(), new ArrayLengthDumpTarg(), new ArrayLengthDumpTarg(), new ArrayLengthDumpTarg(), new ArrayLengthDumpTarg() }; bar(); // @1 breakpoint ArrayLengthDumpTarg my = new ArrayLengthDumpTarg(); my.foo(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineException.sh
lines,119
function,3

createJavaFile() $1 mine = new $1(); mine.a1(); public void a1() { a2(); public void a2() { a3(); public void a3() throws Exception { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbReadTwiceTest.sh
lines,246
function,4

mkFiles() doit() failIfNot() clean()
for,0

if,9
if [ ! -z "$TESTJAVA" ] ; then if [ -z "$TESTCLASSES" ] ; then if [ -r c:/ ] ; then if [ $xx != $count ] ; then echo "Verify files are not read twice if cwd is ~" if [ ! -r c:/ ] ; then if [ ! -r c:/ ] ; then if [ "$canMakeUnreadable" = "Yes" ] if [ "$failed" = 1 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/StringConvertTest.sh
lines,211
function,16

createJavaFile() static String fred() { void gus() { return sbGrower.toString(); System.out.println("x3.toString = " + x3.toString()); System.out.println("x4.toString = " + x4.toString()); loc1.gus(); public String toString() { public int meth1() { dojdbCmds() cmd print "$classname.x1.toString()" cmd print "$classname.x2.toString()" cmd print "((Object)$classname.x3).toString()" cmd print "$classname.x4.toString()" cmd eval "sbTim.toString()" cmd print "this.toString()" mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JITDebug.sh
lines,142
function,2

fail() pass()
for,1
then fail "test failed for class=$TARGETCLASS!"
if,4
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ $status -ne "0" ]; if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineStep.sh
lines,101
function,3

createJavaFile() $1 mine = new $1(); a2(); public void a2() { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/CatchCaughtTest.sh
lines,85
function,6

createJavaFile() public void bar() { CatchCaughtTestTarg my = new CatchCaughtTestTarg(); my.bar(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineImplementor.sh
lines,97
function,6

createJavaFile() public void run() { Runnable r = new B(); r.run(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineIntConstantToLong.sh
lines,118
function,5

createJavaFile() public void doit() throws Exception { new $1().doit(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,3
if (r1 != r2) { // @1 breakpoint if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/BreakpointWithFullGC.sh
lines,129
function,6

createJavaFile() public static List<Object> objList = new ArrayList<Object>(); objList.add(new Object()); objList.clear(); System.gc(); dojdbCmds() mysetup()
for,4
for (int i = 0; i < numObjs; i++) { for (int i = 0; i < 10; i++) { for ii in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19; do for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/EvalArraysAsList.sh
lines,85
function,3

createJavaFile() dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/GetLocalVariables4Test.sh
lines,84
function,3

createJavaFile() dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/redefine/RedefineSetUp.sh
lines,68
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineAbstractClass.sh
lines,153
function,17

createJavaFile() MyConcreteClass foo = new MyConcreteClass(); foo.doWork(); foo.doWork(); public boolean checkFunc(); public boolean isMyInterface1(); public boolean checkFunc(); public boolean isMyInterface2(); public boolean checkFunc() { System.out.println("MyAbstractClass.checkFunc() called."); public boolean isMyInterface1() { System.out.println("MyAbstractClass.isMyInterface1() called."); public boolean isMyInterface2() { System.out.println("MyAbstractClass.isMyInterface2() called."); public void doWork() { // checkFunc() is called via invokevirtual here; MyConcreteClass System.out.println("In doWork() calling checkFunc(): " + checkFunc()); // checkFunc() is called via invokeinterface here; this call will System.out.println("In doWork() calling if1.checkFunc(): " + if1.checkFunc()); // checkFunc() is called via invokeinterface here; this call will System.out.println("In doWork() calling if2.checkFunc(): " + if2.checkFunc()); dojdbCmds() mysetup()
for,2
System.out.println("stop here for redefine"); // @1 breakpoint for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/JdbArgTest.sh
lines,69
function,2

fail() pass()
for,0

if,2
if [ ! -z "${TESTJAVA}" ] ; then if [ $? = 1 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/EvalInterfaceStatic.sh
lines,126
function,5

createJavaFile() static String staticMethod1() { static String staticMethod2() { System.out.println("base staticMethod1(): " + $classname.staticMethod1()); System.out.println("base staticMethod2(): " + $classname.staticMethod2()); System.out.println("overridden staticMethod2(): " + Extended$classname.staticMethod2()); System.out.println("base staticMethod3(): " + Extended$classname.staticMethod3()); gus(); static void gus() { static String staticMethod2() { static String staticMethod3() { dojdbCmds() cmd eval "$classname.staticMethod1()" cmd eval "$classname.staticMethod2()" cmd eval "Extended$classname.staticMethod1()" cmd eval "Extended$classname.staticMethod2()" cmd eval "Extended$classname.staticMethod3()" mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/connect/spi/JdiLoadedByCustomLoader.sh
lines,77
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${TESTSRC}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineAddPrivateMethod.sh
lines,79
function,4

createJavaFile() // @1 uncomment private static void test() {} dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineTTYLineNumber.sh
lines,101
function,6

createJavaFile() public void B() { public void A() { $1 untitled41 = new $1(); untitled41.A(); dojdbCmds() mysetup()
for,0

if,3
if [ -z "$TESTSRC" ] ; then if [ -r $TESTSRC/ShellScaffold.sh ] ; then elif [ -r $TESTSRC/../ShellScaffold.sh ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/Redefine-g.sh
lines,124
function,3

createJavaFile() public $1() { $1 kk = new $1(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineFinal.sh
lines,103
function,4

createJavaFile() throw new IllegalArgumentException(); $1() { new $1(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,3
if (i < 0 || j < 0) { // @1 breakpoint if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/NullLocalVariable.sh
lines,85
function,4

createJavaFile() e.printStackTrace(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/WatchFramePop.sh
lines,110
function,3

createJavaFile() $1 mine = new $1(); mine.a1(); public void a1() { a2(); // @1 breakpoint. We'll do a watch of watchMe here public void a2() { a3(); public void a3() { a4(); // We'll do a 'next' to here. The failure is that this public void a4() { dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/CatchAllTest.sh
lines,94
function,6

createJavaFile() public void bar() { CatchAllTestTarg my = new CatchAllTestTarg(); my.bar(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/PrivateTransportTest.sh
lines,213
function,2

fail() pass()
for,3
echo "cannot find dt_socket in ${libloc} for ${private_transport}" fail "cannot find dt_socket in ${libloc} for ${private_transport}" echo "test status for ${DEBUGGERFLAGS} was: $status"
if,15
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ -r $TESTCLASSES/@debuggeeVMOptions ] ; then elif [ -r $TESTCLASSES/../@debuggeeVMOptions ] ; then if [ ! -d ${jreloc} ] ; then if [ -f ${libloc}/dt_socket.dll ] ; then elif [ -f ${libloc}/libdt_socket.dylib ]; then if [ "${LD_LIBRARY_PATH}" = "" ] ; then elif [ -f ${libloc}/libdt_socket.so ] ; then if [ "$os" = "AIX" ] ; then if [ "${LIBPATH}" = "" ] ; then if [ "${LD_LIBRARY_PATH}" = "" ] ; then if [ "$is_windows" = "true" ]; then if [ "$is_cygwin" = "true" ]; then if [ $status -ne 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/GetLocalVariables3Test.sh
lines,82
function,3

createJavaFile() dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,2
if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/DeoptimizeWalk.sh
lines,112
function,3

createJavaFile() $1 mine = new $1(); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,3
a4(22); // it passes if this line is commented out if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/RedefineAnnotation.sh
lines,245
function,26

createJavaFile() MySubClass sub = new MySubClass(); MySubSubClass subsub = new MySubSubClass(); new $1().hi(false); new $1().hi(true); // @1 breakpoint + getClass()); Foo foo = getClass().getAnnotation(Foo.class); + getClass()); String class_annotation = foo.value(); Field my_field = getClass().getField("dummy_field"); + getClass() + ".dummy_field"); String field_annotation = foo.value(); + getClass()); Method my_method = getClass().getMethod("hi", params); + getClass() + ".hi()"); String method_annotation = foo.value(); throw new Error("FAIL: cannot find method 'hi' in " + getClass()); Method my_method = getClass().getMethod("hi", params); Annotation my_annotations[][] = my_method.getParameterAnnotations(); String method_parameter_annotation = foo.value(); throw new Error("FAIL: cannot find method 'hi' in " + getClass()); // this subclass exists just to make the RedefineClasses() code do a // this subclass exists just to make the RedefineClasses() code do a static final String method_annotation = "method hi() comment"; static final String new_method_annotation = "*NEW* method hi() comment"; String value(); dojdbCmds() mysetup()
for,2
System.out.println("Checking for NEW versions of annotations in " for ii in . $TESTSRC $TESTSRC/.. ; do
if,16
if (isNewVersion) { if (foo == null) { if (isNewVersion) { if (class_annotation.equals(Constants.new_class_annotation)) { if (foo == null) { if (isNewVersion) { if (field_annotation.equals(Constants.new_field_annotation)) { if (foo == null) { if (isNewVersion) { if (method_annotation.equals(Constants.new_method_annotation)) { if (my_annotations.length != 1) { if (my_annotation.length != 1) { if (isNewVersion) { if (method_parameter_annotation.equals( if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/oom/OomDebugTestSetup.sh
lines,46
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/ShellScaffold.sh
lines,1143
function,29

cleanup() killOrphans() findPid() setup() docompile() cmd() setBkpts() runToBkpt() contToBkpt() waitForJdbMsg() dofail() redefineClass() mydojdbCmds() startJdb() startDebuggee() dojstack() waitForFinish() grepForString() matchRegexp() failIfPresent() failIfNotPresent() jdbFailIfNotPresent() debuggeeFailIfNotPresent() jdbFailIfPresent() debuggeeFailIfPresent() debuggeeMatchRegexp() pass() runit() runitAfterSetup()
for,3
for ii in $allLines ; do dofail "Waited for jdb msg $1, but it never appeared" echo "--Fail: waitForJdbMsg timed out after $timeLimit seconds, looking for /$1/, in $nlines lines; exitting" >> $failFile
if,71
if [ -r "$failFile" ] ; then if [ -z "$isCygwin" ] ; then if [ -r "$jdk/bin/$jstack" ] ; then if [ ! -z "$winPid" ] ; then if [ ! -z "$toBeKilled" ] ; then if [ -z "$TESTCLASSES" ] ; then if [ ! -z "$TESTJAVA" ] ; then if [ -r $jdk/bin/dt_shmem.dll -o -r $jdk/jre/bin/dt_shmem.dll ] ; then if [ -w "$Temp" ] ; then elif [ -w "$TEMP" ] ; then if [ "$osname" = SunOS ] ; then if [ -f "$failFile" ]; then if [ -z "$pkg" ] ; then if [ -z "$classname" ] ; then if [ -z "$java" ] ; then if [ -z "$jdb" ] ; then if [ "$compile" = 0 ] ; then if [ -z "$javacCmd" ] ; then if [ $? != 0 ] ; then if [ -r vers1 ] ; then if [ ! -z "$compileOptions2" ] ; then if [ "$compileOptions2" = none ] ; then if [ $? = 0 ] ; then if [ $? != 0 ] ; then if [ -r vers2 ] ; then if [ $? = 0 ] ; then if [ $? != 0 ] ; then if [ -r vers3 ] ; then if [ $? = 0 ] ; then if [ $? != 0 ] ; then if [ -r vers4 ] ; then if [ $? = 0 ] ; then if [ $1 = quit -o -r "$failFile" ] ; then if [ $done = 1 ] ; then if [ $count = 30 -o $count = 60 ] ; then if [ $count = 60 ] ; then if [ -r $jdbOutFile ] ; then if [ $? = 0 ] ; then if [ $? = 0 ] ; then if [ ! -z "$allowExit" ] ; then if [ -r $jdbOutFile ] ; then if [ $? = 0 ] ; then if [ $? != 0 ] ; then if [ $myCount -gt $timeLimit ] ; then if [ ! -z "$jdbpid" ] ; then if [ ! -z "$2" ] ; then if [ -z "$1" ] ; then if [ ! -r "$jdb" -a ! -r "$jdb.exe" ] ; then if [ -z "$address" ] ; then if [ ! -z "$lastLine" ] ; then if [ -r $TESTCLASSES/../@debuggeeVMOptions ] ; then if [ ! -z "$args" ] ; then if [ -r "$jdk/bin/$jstack" ] ; then if [ ! -z "$realJdbPid" ] ; then if [ ! -z "$realDebuggeePid" ] ; then if [ -r "$jdk/lib/sa-jdi.jar" ] ; then if [ $? != 0 ] ; then if [ $? = 0 ] ; then if [ -r "$failFile" ] ; then if [ -r "$failFile" ] ; then if [ -z "$3" ] ; then if [ `tail -1 "$theFile" | wc -l | sed -e 's@ @@g'` = 0 ] ; then if [ "$theFile" != "$1" ]; then if [ -z "$3" ] ; then if [ `tail -1 "$theFile" | wc -l | sed -e 's@ @@g'` = 0 ] ; then if [ "$theFile" != "$1" ]; then if [ -r "$1" ] ; then if [ $? = 0 ] ; then if [ ! -r "$1" ] ; then if [ $? != 0 ] ; then if [ ! -r "$failFile" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/jdi/MixedSuspendTest.sh
lines,127
function,13

createJavaFile() MixedSuspendTarg mytarg = new MixedSuspendTarg(); mytarg.start(); lock.wait(); mytarg.suspend(); bkpt(); mytarg.resume(); public void run() { lock.notifyAll(); static void bkpt() { //System.out.println("bkpt reached, thread = " + this.getName()); dojdbCmds() mysetup()
for,1
for ii in . $TESTSRC $TESTSRC/.. ; do
if,3
if (!started) { if [ -z "$TESTSRC" ] ; then if [ -r "$ii/ShellScaffold.sh" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/tools/extcheck/TestExtcheckArgs.sh
lines,47
function,0


for,0

if,3
if [ "x$TESTJAVA" = x ]; then if [ $rc != 0 ]; then if [ $rc != 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/corba/cachedSocket/7056731.sh
lines,122
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/com/sun/corba/5036554/TestCorbaBug.sh
lines,112
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $ERROR = 0 ] if [ $STATUS = 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/ftp/MarkResetTest.sh
lines,55
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/http/HttpClient/RetryPost.sh
lines,68
function,0


for,0

if,2
if [ "$result" -ne "0" ]; then if [ "$result" -ne "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/protocol/jar/jarbug/run.sh
lines,84
function,0


for,0

if,1
if [ "$result" -ne "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/protocol/jar/B5105410.sh
lines,55
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/protocol/jar/getcontenttype.sh
lines,37
function,0


for,0

if,3
if [ x"$TESTJAVA" = x ]; then if [ x"$TESTCLASSES" = x ]; then TESTCLASSES=.; fi if [ x"$TESTSRC" = x ]; then TESTSRC=.; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/protocol/jar/copyin.sh
lines,31
function,0


for,1
for i in $*; do
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/www/protocol/file/DirPermissionDenied.sh
lines,45
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/InetAddress/nameservice/dns/cname.sh
lines,80
function,1

go() {
for,0

if,3
if [ $? != 0 ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/net/sdp/sanity.sh
lines,73
function,0


for,0

if,3
if [ "$OS" != "SunOS" ]; then if [ $? != 0 ]; then if [ -z "$TESTJAVA" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/text/IntHashtable/Bug4170614Test.sh
lines,80
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTCLASSES}" = "" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jdp/JdpTest.sh
lines,358
function,7

_do_compile(){ _app_start(){ _get_pid(){ _app_stop(){ _testme(){ _jcmd(){ _echo(){ test_01(){ test_02(){ test_03(){ test_04(){ test_05(){
for,3
for parm in "$@" echo "Undefined parameter $parm. Try --help for help" for i in `echo ${_testsuite} | sed -e "s/,/ /g"`
if,12
if [ ! -d ${_testclasses} ] if [ ! -f ${_testclasses}/JdpDoSomething.class -o ! -f ${_testclasses}/JdpClient.class -o ! -f ${_testclasses}/JdpUnitTest.class ] if [ "${npid}" != "" ] if [ "${cnt}" = "10" ] if [ "${_jtreg}" = "yes" ] if [ "${npid}" = "" ] if [ "x${TESTJAVA}" = "x" ] if [ "x${COMPILEJAVA}" = "x" ] if [ "${_compile}" = "yes" ] if [ "${_jtreg}" = "yes" ] if [ "${tt}" = "${_testclasses}" ] if [ -f ${_testsrc}/policy.tpl ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/RmiRegistrySslTest.sh
lines,64
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/PasswordFilePermissionTest.sh
lines,134
function,4

createJavaFile() createConfigFile() { createPasswordFile() { go() {
for,0

if,7
if [ -f "$1" ] ; then if [ -z "${TESTCLASSES}" ]; then if [ "$os" != "Linux" -a "$os" != "SunOS" ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? = 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/SSLConfigFilePermissionTest.sh
lines,128
function,4

createJavaFile() createManagementConfigFile() { createSSLConfigFile() { go() {
for,0

if,7
if [ -f "$1" ] ; then if [ -z "${TESTCLASSES}" ]; then if [ "$os" != "Linux" -a "$os" != "SunOS" ]; then if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? != 0 ]; then failures=`expr $failures + 1`; fi if [ $? = 0 ]; then failures=`expr $failures + 1`; fi if [ $failures -gt 0 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/GeneratePropertyPassword.sh
lines,132
function,2

generatePropertyPasswordFiles() restoreFilePermissions()
for,2
for f in $@ for f in $@
if,7
if [[ $OS == CYGWIN_NT* ]] ; then if [ -z "$SystemRoot" ] ; then if [ "$OS" = "Windows_NT" ]; then if [ ! -f "$REVOKEALL" ] ; then if [ -f "$f2" ] ; then if [ "$OS" = "Windows_NT" ]; then if [ "$OS" = "Windows_NT" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/RmiSslBootstrapTest.sh
lines,58
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/RmiBootstrapTest.sh
lines,59
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/bootstrap/RmiSslNoKeyStoreTest.sh
lines,58
function,0


for,1
echo Launching test for `basename $0 .sh`
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/management/jmxremote/RunTest.sh
lines,33
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/java2d/X11SurfaceData/SharedMemoryPixmapsTest/SharedMemoryPixmapsTest.sh
lines,51
function,0


for,0

if,1
if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/reflect/Reflection/GetCallerClassTest.sh
lines,68
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/nio/cs/Test4200310.sh
lines,41
function,0


for,0

if,1
if [ "$duplicates" != "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/nonUniqueAliases/NonUniqueAliases.sh
lines,100
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,6
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then echo "removing the alias NonUniqueName if it already exists" if [ ! $count0 = 1 ]; then if [ ! $count1 = 1 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/ShortRSAKey1024.sh
lines,114
function,0


for,2
echo "Removing the keypair if it already exists (for unknown reason)..." echo "This test is not intended for '$OS' - passing test"
if,5
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then echo "Removing the keypair if it already exists (for unknown reason)..." if [ "$?" -ne "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/AccessKeyStore.sh
lines,65
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/RSAEncryptDecrypt.sh
lines,83
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${SystemDrive}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/PublicKeyInterop.sh
lines,85
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/SignUsingSHA2withRSA.sh
lines,85
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/KeytoolChangeAlias.sh
lines,138
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,9
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $? -ne 0 ] ; then echo "Removing the alias '13579', if it is already present..." if [ $? ] ; then if [ $? -ne 0 ] ; then if [ ! $before = $after ]; then if [ $? -ne 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/IsSunMSCAPIAvailable.sh
lines,53
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/KeyStoreCompatibilityMode.sh
lines,66
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/mscapi/SignUsingNONEwithRSA.sh
lines,84
function,0


for,1
echo "This test is not intended for '$OS' - passing test"
if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/validator/samedn.sh
lines,83
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/validator/certreplace.sh
lines,86
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/Provider/Login.sh
lines,139
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/Provider/ConfigQuotedString.sh
lines,124
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/KeyStore/Basic.sh
lines,199
function,0


for,0

if,8
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ $ elif [ $ if [ "${TOKEN}" = "nss" ] ; then if [ "${RECOMPILE}" = "yes" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/KeyStore/ClientAuth.sh
lines,172
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ "${status}" != "0" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/KeyStore/SecretKeysBasic.sh
lines,171
function,0


for,1
for token in ${TOKENS}
if,7
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ ${token} = "nss" ] elif [ ${token} = "solaris" ] if [ -d ${TESTCLASSES}${FS}pkcs11_softtoken ] if [ $? != 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/KeyStore/Solaris.sh
lines,169
function,0


for,0

if,7
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ $ elif [ $ if [ "${RECOMPILE}" = "yes" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/pkcs11/Config/ReadConfInUTF16Env.sh
lines,38
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/runNameEquals.sh
lines,127
function,0


for,0

if,12
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ $? != 0 ]; then if [ $? != 0 ]; then if [ "${NATIVE}" = "true" ] ; then if [ $? != 0 ] ; then if [ "$OS" = "Linux" -a `arch` = "x86_64" ]; then if [ "$?" = "0" ]; then echo "Please manually check if this is the case. Treated as PASSED now." if [ $? != 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/config/dns.sh
lines,44
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/tools/ktcheck.sh
lines,94
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/tools/ktzero.sh
lines,74
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/tools/ktmissing.sh
lines,51
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/krb5/tools/ktarg.sh
lines,67
function,0


for,0

if,4
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then if [ $? = 0 ]; then exit 2; fi if [ $? = 0 ]; then exit 3; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/util/Pem/encoding.sh
lines,35
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/ssl/internal/TestRun.sh
lines,93
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/ssl/Stapling/StatusResponseManager.sh
lines,100
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/ssl/SSLSocketImpl/NotifyHandshakeTest.sh
lines,99
function,0


for,0

if,3
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ]; then if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/provider/PolicyFile/getinstance/getinstance.sh
lines,140
function,0


for,0

if,10
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ ! -d ${TESTCLASSES}${FS}boot ]; then if [ ! -d ${TESTCLASSES}${FS}app ]; then if [ $status1 -ne 0 ]; then if [ $status2 -ne 0 ]; then if [ $status1 -ne 0 ]; then if [ $status2 -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/provider/PolicyFile/GrantAllPermToExtWhenNoPolicy.sh
lines,102
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/provider/PolicyParser/PrincipalExpansionError.sh
lines,25
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/provider/certpath/DisabledAlgorithms/generate.sh
lines,255
function,0


for,0

if,12
if [ ! -f root/finished ]; then if [ ! -d root ]; then if [ ! -f subca/finished ]; then if [ ! -d subca ]; then if [ ! -f subca/alice/finished ]; then if [ ! -d subca/alice ]; then if [ ! -f root/revoked ]; then if [ ! -d root ]; then if [ ! -f root/index.txt ]; then if [ ! -f subca/revoked ]; then if [ ! -d subca ]; then if [ ! -f subca/index.txt ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/provider/KeyStore/DKSTest.sh
lines,76
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/newhelp.sh
lines,53
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/importreadall.sh
lines,62
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/resource.sh
lines,72
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $? -eq 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/AltProviderPath.sh
lines,122
function,0


for,0

if,8
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/selfissued.sh
lines,71
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/StorePasswordsByShell.sh
lines,132
function,0


for,1
for i in $PBE_ALGORITHMS; do
if,7
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $i = "default-PBE-algorithm" ]; then if [ $COUNTER -lt 5 ]; then if [ $? -ne 0 ]; then if [ $COUNTER -ne $COUNTER2 -o $COUNTER -lt 11 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/emptysubject.sh
lines,68
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/SecretKeyKS.sh
lines,73
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/keyalg.sh
lines,49
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/p12importks.sh
lines,118
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/standard.sh
lines,66
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/printssl.sh
lines,64
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/file-in-help.sh
lines,53
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/NoExtNPE.sh
lines,75
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/console.sh
lines,130
function,0


for,1
<R> means the RETURN (or ENTER key). Please wait for a little while
if,2
if [ "$ALT_PASS" = "" ]; then if [ "$J5" = "" -o "$JM" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/autotest.sh
lines,116
function,1

find_one() {
for,1
for TARGET_FILE in $@; do
if,8
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ "${COMPILEJAVA}" = "" ]; then if [ -e "$TARGET_FILE" ]; then if [ "$?" != "0" ]; then if [ $B32 = true ]; then if [ "$LIBNAME" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/i18n.sh
lines,75
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/CloneKeyAskPassword.sh
lines,94
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/readjar.sh
lines,57
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/trystore.sh
lines,65
function,0


for,1
echo "What? -protected works for JKS?"
if,3
if [ "${TESTJAVA}" = "" ] ; then if [ $? = 0 ]; then if [ $? != 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/StandardAlgName.sh
lines,94
function,0


for,0

if,6
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/keytool/ListKeychainStore.sh
lines,167
function,0


for,1
for i in X Y Z
if,11
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $RECOUNT -lt `expr $COUNT + 3` ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/certpolicy.sh
lines,80
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "$ERR" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/diffend.sh
lines,110
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/concise_jarsigner.sh
lines,247
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/collator.sh
lines,76
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "$ERR" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/AlgOptions.sh
lines,224
function,0


for,0

if,15
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $RESULT -eq 0 ]; then if [ $failed -eq 1 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/onlymanifest.sh
lines,70
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/passtype.sh
lines,72
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/newsize7.sh
lines,73
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/weaksize.sh
lines,60
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/emptymanifest.sh
lines,76
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/ec.sh
lines,83
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/checkusage.sh
lines,109
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/PercentSign.sh
lines,79
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/jvindex.sh
lines,76
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] ; then if [ "$ERR" = "" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/crl.sh
lines,71
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/oldsig.sh
lines,86
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/nameclash.sh
lines,66
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/jarsigner/samename.sh
lines,61
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/Alias.sh
lines,78
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/SaveAs.sh
lines,78
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/UpdatePermissions.sh
lines,78
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/OpenPolicy.sh
lines,77
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/UsePolicy.sh
lines,77
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/ChangeUI.sh
lines,77
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/security/tools/policytool/i18n.sh
lines,93
function,0


for,1
echo "Checking for $HOME/.java.policy"
if,4
if [ "${TESTSRC}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTJAVA}" = "" ] ; then if [ -f $HOME/.java.policy ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/classFileVersion/run.sh
lines,42
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/manifestClassPath/Util.sh
lines,131
function,18

WindowsOnly() { "$@"; } UnixOnly() { :; } UnixOnly() { "$@"; } WindowsOnly() { :; } Fail() { echo "FAIL: $1"; failed="${failed}."; } Die() { printf "%s\n" "$*"; exit 1; } Sys() { CheckFiles() { Report() { MkManifestWithClassPath() { HorizontalRule() { Test() { Failure() { Test failure "$@"; } Success() { Test success "$@"; } Bottom() { BadJarFile() { DefaultBootClassPath() { DiagnosticsInEnglishPlease() {
for,3
for f in "$@"; do test -r "$f" || Die "File $f not found"; done for jarfilename in "$@"; do pwd > "$jarfilename"; done for elt in `"$java" B | tr "${PS}" " "`; do
if,5
if test "$1" = "success" -a "$2" = 0; then elif test "$1" = "failure" -a "$2" != 0; then elif test "$1" = "success" -a "$2" != 0; then elif test "$1" = "failure" -a "$2" = 0; then if test -n "$failed"; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/manifestClassPath/run.sh
lines,140
function,7

Cleanup() { public int f(B b) { return b.g(); } public int g() { return 0; } public int f(A a) { return a.g(); } public int g() { return 0; } Main impl = new Main(); int result = stub.doIt(new A(), new B());
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/newrmic/equivalence/batch.sh
lines,91
function,0


for,0

if,3
if [ $ if [ "${TESTJAVA}" = "" ] if [ `cat $difflines | wc -l` -gt 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/newrmic/equivalence/run.sh
lines,84
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/extraCompilation/run.sh
lines,56
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/covariantReturns/run.sh
lines,44
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/defaultStubVersion/run.sh
lines,54
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/oldjavacRemoved/sunToolsJavacMain.sh
lines,49
function,0


for,0

if,2
if [ "${TESTJAVA}" = "" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/rmi/rmic/minimizeWrapperInstances/run.sh
lines,53
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcNewCapacityOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcCapacityOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatHelp.sh
lines,55
function,0


for,0

if,2
if [ $? != 0 ] if [ $? != 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatLineCounts3.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatOptions1.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatPrintCompilationOutput1.sh
lines,38
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatTimeStamp1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcOldCapacityOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatLineCounts1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatLineCounts2.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatSnap2.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatClassloadOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatLineCounts4.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatCompilerOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcOldOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatSnap1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcNewOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcMetaCapacityOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatFileURITest1.sh
lines,53
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatGcCauseOutput1.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstat/jstatClassOutput1.sh
lines,36
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jconsole/common.sh
lines,105
function,2

fail() pass()
for,0

if,3
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jconsole/WorkerDeadlockTest.sh
lines,29
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jconsole/ResourceCheckTest.sh
lines,29
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/hsdb/Basic.sh
lines,61
function,0


for,0

if,2
if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jhat/ParseTest.sh
lines,69
function,0


for,0

if,5
if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? = 0 ]; then failed=1; fi if [ $? = 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jmap/Basic.sh
lines,82
function,0


for,0

if,6
if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/clhsdb/Basic.sh
lines,68
function,0


for,0

if,3
if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jstack/Basic.sh
lines,60
function,0


for,0

if,2
if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/common.sh
lines,66
function,1

setup() {
for,0

if,3
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-fTest.sh
lines,58
function,0


for,0

if,2
if [ $? -eq 2 ]; then if [ $? != 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscriptTest.sh
lines,62
function,2

v *= 5; v.doubleValue(); new java.lang.Runnable() { run: function() { println('I am runnable'); }}.run();
for,0

if,3
if [ $? -eq 2 ]; then if (v != 0) { println('yes v != 0'); } if [ $? != 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-DTest.sh
lines,55
function,0


for,0

if,3
if [ $? -eq 2 ]; then if (sysProps["jrunscript.foo"] == "bar") { println("Passed"); exit(0); } if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-cpTest.sh
lines,73
function,2

try { v = new Packages.Hello(); } catch (e) { println(e); exit(1) } try { v = new Packages.Hello(); } catch (e) { println(e); exit(1) }
for,0

if,5
if [ $? -eq 2 ]; then if (v.string != 'hello') { println("Unexpected property value"); exit(1); } if [ $? -ne 0 ]; then if (v.string != 'hello') { println("unexpected property value"); exit(1); } if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-eTest.sh
lines,57
function,0


for,0

if,2
if [ $? -eq 2 ]; then if [ $? != 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-argsTest.sh
lines,60
function,0


for,0

if,6
if [ $? -eq 2 ]; then if (typeof(arguments) == 'undefined') { println("arguments expected"); exit(1); } if (arguments.length != 2) { println("2 arguments are expected here"); exit(1); } if (arguments[0] != 'hello') { println("First arg should be 'hello'"); exit(1); } if (arguments[1] != 'world') { println("Second arg should be 'world'"); exit(1); } if [ $? -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jrunscript/jrunscript-helpTest.sh
lines,58
function,0


for,0

if,2
if [ ! -s jrunscript-helpTest.out ] if [ ! -s jrunscript-helpTest.out ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/jinfo/Basic.sh
lines,106
function,0


for,0

if,15
if [ $isMacos = true -o $isAIX = true -o `uname -m` = ppc64 ]; then if [ $isLinux = true ]; then if [ $? = 0 ]; then if [ $ptrace_scope = 1 ]; then if [ $runSA = true ]; then if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if $isSolaris; then if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi if [ $? != 0 ]; then failed=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/common/CommonSetup.sh
lines,135
function,0


for,0

if,3
if [ -z "${TESTJAVA}" ]; then if [ -z "${TESTSRC}" ]; then if [ -z "${TESTCLASSES}" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/common/ApplicationSetup.sh
lines,210
function,4

startApplication() stopApplication() waitForApplication() { killApplication()
for,4
echo "INFO: waiting for $1 to initialize..." echo "INFO: waiting for $appJavaPid" echo "INFO: waiting for $appOtherPid" echo "INFO: waiting for $appJavaPid"
if,10
if [ -n "$out" ]; then if $isWindows; then if $isCygwin; then if [ -z "$appJavaPid" ]; then if [ $isWindows = false ]; then elif $isCygwin; then if [ -n "$appJavaPid" ]; then if [ $isWindows = false ]; then elif $isCygwin; then if [ -n "$appJavaPid" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/native2ascii/resources/ImmutableResourceTest.sh
lines,114
function,2

fail() pass()
for,0

if,3
if [ -z "${TESTJAVA}" ] ; then if [ -n "$1" ] ; then if [ $status -eq "0" ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/tools/native2ascii/Native2AsciiTests.sh
lines,129
function,1

check() {
for,0

if,8
if [ "${TESTSRC}" = "" ]; then TESTSRC=.; fi if [ "${TESTJAVA}" = "" ]; then TESTJAVA=$1; shift; fi if [ ${OS} = Windows ]; then if (set -x; diff -c $out.expected $out.1); then if [ $OS = Unix ]; then if $N2A -encoding ISO-8859-1 x.in x.in; then if [ $? != 0 ]; then if [ OS = Windows ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/misc/Cleaner/exitOnThrow.sh
lines,48
function,0


for,0

if,3
if [ -z "$TESTJAVA" ]; then if [ $ if $TESTJAVA/bin/java ${TESTVMOPTS} -cp $TESTCLASSES ExitOnThrow; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/jdk/test/sun/jvmstat/testlibrary/utils.sh
lines,225
function,9

setup() { verify_os() { kill_proc() { echo "kill_proc(): null pid: ignored" echo "kill_proc(): invalid pid: ${kill_pid}: ignored" mks_children() { kill_proc_common() { checkPort() freePort()
for,1
for child in ${children} ; do
if,13
if [ "${TESTJAVA}" = "" ] ; then if [ "${TESTCLASSES}" = "" ] ; then if [ "${TESTSRC}" = "" ] ; then if [ "${TMPDRIVE}" = "" ] ; then if [ "${kill_pid}" = "" ] if [ ${kill_pid} -le 0 ] if [ $? -ne 0 ] if [ $? -eq 0 ] if [ $? -eq 0 ] if [ $? -ne 0 ] if [ "${inuse}" = "" ] ; then if [ "`checkPort ${port1}`" = "inuse" \ if [ "`checkPort ${port1}`" = "inuse" \
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/src/scripts/start-debug-server64.sh
lines,43
function,0


for,0

if,2
if [ "$1" = "-help" ] ; then if [ ! -x ${JAVA_HOME}/bin/java -o ! -r ${JAVA_HOME}/lib/sa-jdi.jar ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/src/scripts/start-rmiregistry.sh
lines,42
function,0


for,1
echo " for use by the debug server."
if,2
if [ "$1" = "-help" ] ; then if [ ! -x ${JAVA_HOME}/bin/rmiregistry -o ! -r ${JAVA_HOME}/lib/sa-jdi.jar ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/src/scripts/start-debug-server.sh
lines,43
function,0


for,0

if,2
if [ "$1" = "-help" ] ; then if [ ! -x ${JAVA_HOME}/bin/java -o ! -r ${JAVA_HOME}/lib/sa-jdi.jar ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/src/scripts/start-rmiregistry64.sh
lines,42
function,0


for,1
echo " for use by the debug server."
if,2
if [ "$1" = "-help" ] ; then if [ ! -x ${JAVA_HOME}/bin/rmiregistry -o ! -r ${JAVA_HOME}/lib/sa-jdi.jar ] ;
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/heapdumpproc.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jsdbproc64.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/pmapproc64.sh
lines,29
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jhistoproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/dumpflagsproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/finalizerinfoproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jhistoproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/finalizerinfoproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/pmapproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jcoreproc.sh
lines,31
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/dumpsyspropsproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/permstatproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/hsdbproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/dumpflagsproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jstackproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jdbcore.sh
lines,45
function,1

usage()
for,0

if,1
if [ $
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/heapsumproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/start-debug-server-proc.sh
lines,35
function,0


for,0

if,1
if [ -f $STARTDIR/../lib/sa-jdi.jar ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/dumpsyspropsproc.sh
lines,29
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/heapdumpproc64.sh
lines,31
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/clhsdbproc.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/permstatproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/saenv.sh
lines,83
function,0


for,0

if,9
if [ "x$SA_JAVA" = "x" ]; then if [ "$OS" = "Linux" ]; then if [ "$ARCH" = "ia64" ] ; then elif [ "$ARCH" = "x86_64" ] ; then if [ -n "$SA_ALTROOT" ]; then if [ ! -f $LD_AUDIT_32 ]; then if [ "x$SA_DISABLE_VERS_CHK" != "x" ]; then if [ ! -z "$SA_TYPEDB" ]; then if [ ! -f $SA_TYPEDB ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jdbproc64.sh
lines,44
function,1

usage()
for,0

if,1
if [ $
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/soqlproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/start-rmiregistry.sh
lines,34
function,0


for,0

if,1
if [ -f $STARTDIR/sa.jar ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jcoreproc64.sh
lines,31
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/hsdb.sh
lines,32
function,0


for,0

if,1
if [ "x$SA_JAVA" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/start-debug-server-proc64.sh
lines,34
function,0


for,0

if,1
if [ -f $STARTDIR/sa.jar ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/pstackproc64.sh
lines,34
function,0


for,0

if,1
if [ $? -eq 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/clhsdbproc64.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/pstackproc.sh
lines,34
function,0


for,0

if,1
if [ $? -eq 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jdbproc.sh
lines,44
function,1

usage()
for,0

if,1
if [ $
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/heapsumproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jstackproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/soqlproc.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jsdbproc.sh
lines,30
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/jdbcore64.sh
lines,45
function,1

usage()
for,0

if,1
if [ $
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/saenv64.sh
lines,80
function,0


for,0

if,8
if [ "x$CPU" != "x" ]; then if [ "x$CPU" != "x" ]; then if [ -n "$SA_ALTROOT" ]; then if [ ! -f $LD_AUDIT_64 ]; then if [ "x$SA_JAVA" = "x" ]; then if [ "x$SA_DISABLE_VERS_CHK" != "x" ]; then if [ ! -z "$SA_TYPEDB" ]; then if [ ! -f $SA_TYPEDB ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/make/hsdbproc64.sh
lines,28
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/libproc/libproctest64.sh
lines,67
function,1

usage() {
for,0

if,2
if [ "$1" == "-help" ]; then if [ "x$SA_JAVA" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/libproc/libproctest.sh
lines,68
function,1

usage() {
for,0

if,2
if [ "$1" == "-help" ]; then if [ "x$SA_JAVA" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/multivm.sh
lines,58
function,1

doUsage()
for,0

if,5
if [ $ if [ sagdoit.java -nt ./workdir/sagdoit.class ] ; then if [ $? != 0 ] ; then if [ multivm.java -nt ./workdir/multivm.class ] ; then if [ $? != 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/runjpda.sh
lines,133
function,0


for,0

if,5
if [ $? = 0 ] ; then if [ $? != 0 ] ; then if [ ! core.satest -nt sagtarg.class ] ; then if [ "$OS" = "Linux" ]; then if [ "$dontkill" != "true" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/runsa.sh
lines,183
function,1

doUsage()
for,1
error " Do runsa.sh -help for more info"
if,13
if [ $ if [ $? = 0 ] ; then if [ -z "$jdk" ] ; then if [ ! -r $classesDir ] ; then if [ ! -r $classesDir ] ; then if [ sagclient.java -nt ./workdir/sagclient.class ] ; then if [ $? != 0 ] ; then if [ sagdoit.java -nt ./workdir/sagdoit.class ] ; then if [ $? != 0 ] ; then if [ "$do" = jdbx ] ; then if [ -r ./workdir/$clss.class ] ; then elif [ "$do" = jdb ] ; then elif [ "$do" = remote ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/runjdb.sh
lines,108
function,1

doUsage()
for,0

if,5
if [ ! -z "$args" ] ; then if [ $? = 0 ] ; then if [ -z "$jdk" ] ; then if [ -z "$sa" ] ; then if [ -z "$args" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/sasanity.sh
lines,76
function,1

usage() {
for,0

if,6
if [ "$1" == "" ]; then if [ "$1" == "-help" ]; then if [ SASanityChecker.java -nt ./workdir/SASanityChecker.class ] ; then if [ $? != 0 ] ; then if [ sagtarg.java -nt ./workdir/sagtarg.class ]; then if [ $? != 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/jstack.sh
lines,26
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/serialvm.sh
lines,58
function,1

doUsage()
for,0

if,5
if [ $ if [ sagdoit.java -nt ./workdir/sagdoit.class ] ; then if [ $? != 0 ] ; then if [ serialvm.java -nt ./workdir/serialvm.class ] ; then if [ $? != 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/agent/test/jdi/jstack64.sh
lines,26
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/build.sh
lines,92
function,0


for,1
for gm in gmake gnumake
if,5
if [ $ if [ "${JAVA_HOME-}" = "" -o ! -d "${JAVA_HOME-}" -o ! -d ${JAVA_HOME-}/jre/lib/ ]; then if [ "${ALT_BOOTDIR-}" = "" -o ! -d "${ALT_BOOTDIR-}" -o ! -d ${ALT_BOOTDIR-}/jre/lib/ ]; then if [ "${ALT_OUTPUTDIR-}" = "" -o ! -d "${ALT_OUTPUTDIR-}" ]; then if [ "${GNUMAKE-}" != "" ]; then break; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/linux/makefiles/adjust-mflags.sh
lines,87
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/aix/makefiles/adjust-mflags.sh
lines,87
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/aix/makefiles/build_vm_def.sh
lines,18
function,0


for,0

if,4
if [ "$CROSS_COMPILE_ARCH" != "" ]; then if (($2="d" || $2="D") && ($3 ~ /^__vft/ || $3 ~ /^gHotSpotVM/)) print "\t" $3 ";" if ($3 ~ /^UseSharedSpaces$/) print "\t" $3 ";" if ($3 ~ /^SharedArchivePath__9Arguments$/) print "\t" $3 ";"
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/bsd/makefiles/adjust-mflags.sh
lines,87
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/bsd/makefiles/build_vm_def.sh
lines,12
function,0


for,0

if,2
if [ "$CROSS_COMPILE_ARCH" != "" ]; then { if ($3 ~ /^_ZTV/ || $3 ~ /^gHotSpotVM/) print "\t" $3 }
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/solaris/makefiles/adjust-mflags.sh
lines,87
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/solaris/makefiles/build_vm_def.sh
lines,10
function,0


for,0

if,4
if ($2 == "U") next if ($3 ~ /^__1c.*__vtbl_$/ || $3 ~ /^gHotSpotVM/) print "\t" $3 ";" if ($3 ~ /^UseSharedSpaces$/) print "\t" $3 ";" if ($3 ~ /^__1cJArgumentsRSharedArchivePath_$/) print "\t" $3 ";"
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/windows/create_obj_files.sh
lines,161
function,1
function findsrc {

for,3
for sd in \ for e in ${Src_Dirs}; do for e in ${Src_Files}; do
if,9
if [ "x$HotSpotMksHome" != "x" ]; then BASE_PATHS="`if [ -d ${ALTSRC}/share/vm ]; then $FIND ${ALTSRC}/share/vm ! -name vm -prune -type d \! \( -name adlc -o -name c1 -o -name gc_implementation -o -name opto -o -name shark -o -name libadt -o -name jfr \); fi`" if [ -d "${ALTSRC}/${sd}" ]; then if [ "$ENABLE_JFR" = "true" ]; then if [ -d "${ALTSRC}/share/vm/gc_implementation" ]; then if [ -d "${ALTSRC}/share/vm/c1" ]; then if [ -d "${ALTSRC}/share/vm/opto" ]; then if [ -d "${ALTSRC}/share/vm/libadt" ]; then if [ "$chk" != 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/windows/get_msc_ver.sh
lines,93
function,0


for,0

if,5
if [ "x$HotSpotMksHome" != "x" ]; then if [ "x$FORCE_MSC_VER" != "x" ]; then if [ "${MSC_VER_MAJOR}" -eq 14 -a "${MSC_VER_MINOR}" -eq 0 -a "${MSC_VER_MICRO}" -eq 30701 ] ; then if [ "x$FORCE_LD_VER" != "x" ]; then if [ "x$cl_cmd" != "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/make/windows/build_vm_def.sh
lines,87
function,0


for,0

if,5
if [ "x$HOTSPOTMKSHOME" != "x" ]; then if [ ! -e $AWK ]; then if [ "$1" = "-nosa" ]; then if [ "x$1" != "x" ]; then if [ "x$LD_VER" != "x800" -a "x$LD_VER" != "x900" -a "x$LD_VER" != "x1000" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/serviceability/7170638/SDTProbesGNULinuxTest.sh
lines,68
function,0


for,1
for libjvm in $(find ${TESTJAVA} -name libjvm.so); do
if,3
if [ "${TESTJAVA}" = "" ]; then if [ "$?" != "0" ]; then if [ "$?" != "0" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/serviceability/sa/jmap-minidump/TestMiniDump.sh
lines,127
function,0


for,1
for (int i = 0; i < 1024 dragonwell8 find_bash.sh output.txt outputbashcleaned.txt process_bash.py 1024; ++i) {
if,13
if [ "${TESTSRC}" = "" ] if [ $? != '0' ]; then if [ $? != 0 ] || [ -z "${PID}" ]; then exit 1; fi if [ $? != 0 ] || [ ! -f "${PWD}/${DUMP}" ]; then exit 1; fi if [ $? != 0 ] || [ ${SIZE} -le "${FULL_DUMP_SIZE_THRESHOLD}" ]; then if [ $? != 0 ] || [ ! -f "${PWD}/${DUMP}" ]; then exit 1; fi if [ $? != 0 ] || [ ${SIZE} -lt "${FULL_DUMP_SIZE_THRESHOLDL}" ]; then if [ $? != 0 ] || [ ! -f "${PWD}/${DUMP}" ]; then exit 1; fi if [ $? != 0 ] || [ ${SIZE} -ge "${MINI_DUMP_SIZE_THRESHOLD}" ]; then if [ $? != 0 ] || [ ! -f "${PWD}/${DUMP}" ]; then exit 1; fi if [ $? != 0 ] || [ ${SIZE} -ge "${MINI_DUMP_SIZE_THRESHOLD}" ]; then if [ $? != 0 ]; then exit 1; fi if [ $? != 0 ]; then exit 1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/TestTieredCompilationInRecording.sh
lines,132
function,15

public static List<String> ls = new ArrayList<String>(); public String foo() { if (ls.size() > 100 && a.length < 100) { ls.clear(); public static void doBiz() throws Exception { TmpTestTieredCompilationInRecording a = new TmpTestTieredCompilationInRecording(); a.foo(); a.foo(); a.foo(); a.foo(); a.foo(); a.foo(); doBiz(); JWarmUp.notifyApplicationStartUpIsDone(); if (!JWarmUp.checkIfCompilationIsComplete()) { assert()
for,1
for (int i = 0; i < 12000; i++) {
if,8
if [ "${TESTSRC}" = "" ] if (ls.size() > 100 && a.length < 100) { if (args[0].equals("collection")) { } else if (args[0].equals("startup")) { if (!JWarmUp.checkIfCompilationIsComplete()) { if [ $? != '0' ] if [ 0 -eq $? ]; then if [ $has_foo2 -ne 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/TestNotifyDeopt.sh
lines,151
function,15

public static List<String> ls = new ArrayList<String>(); public String foo() { if (ls.size() > 100 && a.length < 100) { ls.clear(); public static void doBiz() { TmpTestNotifyDeopt a = new TmpTestNotifyDeopt(); a.foo(); a.foo(); ex.printStackTrace(); doBiz(); JWarmUp.notifyApplicationStartUpIsDone(); while (!JWarmUp.checkIfCompilationIsComplete()) { new Thread(()->doBiz()); JWarmUp.notifyJVMDeoptWarmUpMethods(); System.gc(); check_output()
for,3
for (int i = 0; i < 12000; i++) { for m in $deopt_methods for wm in $warmup_methods
if,9
if [ "${TESTSRC}" = "" ] if (ls.size() > 100 && a.length < 100) { if (args[0].equals("recording")) { } else if (args[0].equals("compilation")) { if [ $? != '0' ] if [ $deopt_time_warning -ne 1 ]; then if [ $deopt_method_messages -eq 0 ]; then if [ "${m}" = "${wm}" ]; then if [ $found -ne 1 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/TestNotDeoptJITMethod.sh
lines,137
function,12

public static List<String> ls = new ArrayList<String>(); if (ls.size() > 100 && a.length < 100) { ls.clear(); TmpTestNotDeoptJITMethod a = new TmpTestNotDeoptJITMethod(); ex.printStackTrace(); ex.printStackTrace(); ex.printStackTrace(); JWarmUp.notifyApplicationStartUpIsDone(); while (!JWarmUp.checkIfCompilationIsComplete()) { new Thread(()-> doBiz(1)).start(); JWarmUp.notifyJVMDeoptWarmUpMethods(); System.gc(); check_output()
for,1
for (int i = 0; i < 12000; i++) {
if,7
if [ "${TESTSRC}" = "" ] if (mode == 1 && index == 10000) { if (ls.size() > 100 && a.length < 100) { if (args[0].equals("recording")) { } else if (args[0].equals("compilation")) { if [ $? != '0' ] if [ 1 -ne $skip_messages ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/TestCheckIfCompilationIsComplete.sh
lines,126
function,11

public static List<String> ls = new ArrayList<String>(); public String foo() { if (ls.size() > 100 && a.length < 100) { ls.clear(); public static void doBiz() throws Exception { TmpTestCheckIfCompilationComplete a = new TmpTestCheckIfCompilationComplete(); a.foo(); a.foo(); doBiz(); JWarmUp.notifyApplicationStartUpIsDone(); while (!JWarmUp.checkIfCompilationIsComplete()) { assert()
for,1
for (int i = 0; i < 12000; i++) {
if,7
if [ "${TESTSRC}" = "" ] if (ls.size() > 100 && a.length < 100) { if (args[0].equals("recording")) { } else if (args[0].equals("compilation")) { if [ $? != '0' ] if [ 0 -eq $? ]; then if [ $notify_line_no -eq $(($i-1)) ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/issue9780156.sh
lines,196
function,6

public static void fooA() { c1.newInstance(); c2.newInstance(); c1.newInstance(); e.printStackTrace(); assert()
for,0

if,6
if [ "${TESTSRC}" = "" ] if [ $? != '0' ] if [ $? != '0' ] if [ $? != '0' ] if [ 0 -eq $? ]; then if [ $i -eq 3 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/jwarmup/TestDisableMethodData.sh
lines,173
function,23

public void bar() { } public void bar() { a++; } public void bar() { b++; } public static List<String> ls = new ArrayList<String>(); public String foo() { foo2(new TmpA()); foo2(new TmpB()); if (ls.size() > 2000) { ls.clear(); public static void doBiz() throws Exception { TmpTestDisableMethodData a = new TmpTestDisableMethodData(); a.foo(); a.foo(); doBiz(); TmpTestDisableMethodData a = new TmpTestDisableMethodData(); a.foo2(new TmpB()); System.gc(); JWarmUp.notifyApplicationStartUpIsDone(); while (!JWarmUp.checkIfCompilationIsComplete()) { System.gc(); a.foo2(new TmpB()); System.gc(); doBiz(); assert()
for,5
for (int i = 0; i < 22000; i++) { for (int i = 0; i < 9687; i++) { // and, wait for the deoptimization made by JWarmup. for (int i = 0; i < 5; i++) { for (int i = 0; i < 19687; i++) {
if,9
if [ "${TESTSRC}" = "" ] if (t instanceof TmpB) { if (ls.size() > 2000) { if (args[0].equals("recording")) { } else if (args[0].equals("compilation")) { if [ $? != '0' ] if [ 0 -eq $? ]; then if [ 0 -eq $? ]; then if [ $deopt_line_no -gt $recom_line_no ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/gc/TestDefaultGC.sh
lines,38
function,0


for,0

if,1
if [ "0" == $? ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/gc/parNew/testPrintYoungGenHisto.sh
lines,58
function,1

printYongGenHistoTest() {
for,0

if,2
if [[ $RESULT -gt 0 ]] ; then elif [[ $i -gt 60 ]] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/multi-tenant/TestParGCAllocatorLeak.sh
lines,138
function,4

int nofCpus = Runtime.getRuntime().availableProcessors(); threads[i] = new Thread(()->{ TenantContainer tenant = TenantContainer.create(new TenantConfiguration().limitHeap(32 dragonwell8 find_bash.sh output.txt outputbashcleaned.txt process_bash.py 1024 dragonwell8 find_bash.sh output.txt outputbashcleaned.txt process_bash.py 1024)); tenant.run(()->{ threads[i].start(); t.join();
for,2
for (int i = 0; i < nofCpus; ++i) { for MEM_SEC in `echo Internal Tenant`; do
if,8
if [ "${TESTSRC}" = "" ] if [ $? != '0' ] if [ -z "$PID" ] && [ "$(echo $PID | wc -w)" -gt 1 ] ; then if [ ! -z "$(echo $DIFF | grep +)" ] && [ -z "$(echo $DIFF | awk '{print $2}' | grep \ if [ ! -z "$(echo $DIFF | grep KB)" ]; then if [ -z $DIFF_V]; then if [ $DIFF_V -gt 1024 ]; then if [ ! -z "$(echo $DIFF | grep MB)" ] || [ ! -z "$(echo $DIFF | grep GB)" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/multi-tenant/TestTenantJVMOptions.sh
lines,85
function,3
function check_dependency_bool_bool() { function check_dependency_bool_bool_false() { function assert_invalid_jvm_options() {
function check_dependency_bool_bool() { function check_dependency_bool_bool_false() { function assert_invalid_jvm_options() {
for,0

if,4
if [ "${TESTSRC}" = "" ] if [ -z "$(${JAVA} ${FROM} -XX:+PrintFlagsFinal -version 2>&1 | grep ${TO} | grep '= true')" ]; then if [ -z "$(${JAVA} ${FROM} -XX:+PrintFlagsFinal -version 2>&1 | grep ${TO} | grep '= false')" ]; then if [ 0 -eq $? ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/test_env.sh
lines,218
function,0


for,0

if,22
if [ "${TESTJAVA}" = "" ] if [ "${COMPILEJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? != 0 ]; then if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $VM_BITS = "64" ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ] if [ $VM_BITS = "64" ] if [ $? = 0 ] if [ $? = 0 ] if [ $? = 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/premainWithWispMonitorTest.sh
lines,57
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/logCompilationTest.sh
lines,54
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/jniMonitorExitTest.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/attachTest.sh
lines,50
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/coroutineBreakpointSwitchToTest.sh
lines,67
function,0


for,0

if,1
if [ "x${gcc_cmd}" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/c1AssertFailTest.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/jniDetachThreadHoldingMonitorTest.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/coroutine/jvmtiWispMonitorTest.sh
lines,40
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/jni/CallWithJNIWeak/test.sh
lines,93
function,0


for,1
echo "Test passed; only valid for Linux and Solaris"
if,4
if [ "${TESTSRC}" = "" ] if [ "x$cc_cmd" = "x" ]; then if [ "x$cc_cmd" = "x" ]; then if [ "$JAVA_RETVAL" = "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/jni/ReturnJNIWeak/test.sh
lines,93
function,0


for,1
echo "Test passed; only valid for Linux and Solaris"
if,4
if [ "${TESTSRC}" = "" ] if [ "x$cc_cmd" = "x" ]; then if [ "x$cc_cmd" = "x" ]; then if [ "$JAVA_RETVAL" = "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/6626217/Test6626217.sh
lines,70
function,0


for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/6929067/Test6929067.sh
lines,134
function,0


for,1
echo "Test passed; only valid for Linux"
if,8
if [ "${TESTSRC}" = "" ] if [ "x$gcc_cmd" = "x" ]; then if [ "$?" = "0" ] if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$?" = "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/7162488/Test7162488.sh
lines,63
function,0


for,0

if,3
if [ "${TESTSRC}" = "" ] if [ "$?" != "0" ] if [ "$?" != "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/8233197/Test8233197.sh
lines,155
function,0


for,1
echo "Test passed; only valid for Linux"
if,8
if [ "${TESTSRC}" = "" ] if [ "x$gcc_cmd" == "x" ]; then if [ "$?" = "0" ] if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$COMP_FLAG" = "-m32" ]; then if [ "$?" = "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/InitialThreadOverflow/testme.sh
lines,70
function,0


for,1
echo "Test only valid for Linux"
if,3
if [ "${TESTSRC}" = "" ] if [ "${VM_OS}" != "linux" ] if [ "x$gcc_cmd" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/jsig/Test8017498.sh
lines,94
function,0


for,1
echo "Test passed; only valid for Linux"
if,4
if [ "${TESTSRC}" = "" ] if [ "x$gcc_cmd" = "x" ]; then if [ "$VM_BITS" = "64" ] if [ $? = 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/6888954/vmerrors.sh
lines,112
function,0


for,2
for re in \ for f in ${i2}.log ${i2}.out
if,1
if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/7110720/Test7110720.sh
lines,119
function,0


for,1
echo Skipping test for debug build.
if,9
if [ "${TESTSRC}" = "" ] if [ -f ${FILE_LOCATION}${FS}JDK64BIT -a ${OS} = "SunOS" ] if [ "$?" = "0" ]; then if [ "$?" = "0" ]; then if [ "$?" = "0" ]; then if [ "$?" = "1" ]; then if [ "$?" = "0" ]; then if [ "$?" = "1" ]; then if [ "${ok}" = "no" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/7107135/Test7107135.sh
lines,99
function,0


for,1
echo "Test passed; only valid for Linux"
if,3
if [ "${TESTSRC}" = "" ] if [ "x$gcc_cmd" = "x" ]; then if [ "$JAVA_RETVAL" = "0" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/runtime/StackGap/testme.sh
lines,71
function,0


for,1
echo "Test only valid for Linux"
if,3
if [ "${TESTSRC}" = "" ] if [ "${VM_OS}" != "linux" ] if [ "x$gcc_cmd" = "x" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/ciReplay/common.sh
lines,265
function,10

test_fail() { start_test() { positive_test() { negative_test() { common_tests() { nontiered_tests() { client_tests() { server_tests() { cleanup() { generate_replay() {
for,1
for core in $core_locations
if,15
if [ ${exit_code} -ne 0 ] if [ ${exit_code} -eq 0 ] if [ $tiered_available -eq 1 ] if [ "$level" -eq $2 ] if [ $server_available -eq 1 ] if [ $tiered_available -eq 1 ] if [ $client_available -eq 1 ] if [ $? -ne 0 ] if [ $is_int -ne 0 ] if [ $VM_OS != "windows" ] if [ $VM_OS = "solaris" ] if [ $VM_OS != "windows" ] if [ -n ${core_with_pid} ] if [ -r "$core" ] if [ -n "$core_file" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/ciReplay/TestVM.sh
lines,86
function,0


for,0

if,5
if [ "${TESTSRC}" = "" ] if [ ! -s ${replay_data} ] if [ $is_tiered -eq 1 ] if [ ! -s ${replay_data} ] if [ $level -gt $stop_level ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/ciReplay/TestSA.sh
lines,93
function,0


for,0

if,7
if [ "${TESTSRC}" = "" ] if [ -z "${core_file}" -o ! -r "${core_file}" ] if [ "$OS" = "Darwin" ] if [ ! -d "/cores" ] if [ ! -w "/cores" ] if [ ! -s ${replay_data} ] if [ -s replay.diff ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/ciReplay/TestVM_no_comp_level.sh
lines,74
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ ! -s ${replay_data} ] if [ $client_available -eq 1 ] if [ $server_available -eq 1 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/7070134/Test7070134.sh
lines,45
function,0


for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/7200264/Test7200264.sh
lines,129
function,0


for,0

if,13
if [ "${TESTSRC}" = "" ] if [ $? != 0 ] if [ $? != 0 ] if [ $COUNT -lt 4 ] if [ $COUNT -lt 4 ] if [ $SSE -gt 3 ] if [ $COUNT -lt 2 ] if [ $COUNT -lt 3 ] if [ $COUNT -lt 3 ] if [ $COUNT -lt 3 ] if [ $COUNT -lt 5 ] if [ $COUNT -lt 3 ] if [ $COUNT -lt 3 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/codecache/TestDefaultCodeCacheSize.sh
lines,38
function,0


for,0

if,1
if [ $CodeCache -gt 200000000 ];
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/7068051/Test7068051.sh
lines,45
function,0


for,0

if,1
if [ "${TESTSRC}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/5091921/Test7005594.sh
lines,108
function,0


for,1
grep "Could not reserve enough space for .*object heap" test.out
if,9
if [ "${TESTSRC}" = "" ] if [ -f "/proc/meminfo" ]; then elif [ -x "/usr/sbin/prtconf" ]; then elif [ -x "/usr/sbin/system_profiler" ]; then elif [ -n "$ROOTDIR" -a -x "$ROOTDIR/mksnt/sysinf" ]; then if [ $MEM -lt 2000 ]; then if [ $result -eq 95 ] if [ $result -eq 97 ] if [ $? = 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/5091921/Test6890943.sh
lines,60
function,0


for,0

if,2
if [ "${TESTSRC}" = "" ] if [ $result -eq 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/criticalnatives/argumentcorruption/Test8167409.sh
lines,89
function,0


for,1
echo "Test passed; only valid for Linux and Solaris"
if,4
if [ "${TESTSRC}" = "" ] if [ "x$cc_cmd" = "x" ]; then if [ "x$cc_cmd" = "x" ]; then if [ $VM_CPU = "aarch64" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/floatingpoint/8207838/TestFloatSyncJNIArgs.sh
lines,105
function,0


for,1
echo "Test passed; only valid for linux-aarch64"
if,6
if [ "${TESTSRC}" = "" ] if [ $VM_OS = "linux" -a $VM_CPU = "aarch64" ]; then if [ "x$gcc_cmd" = "x" ]; then if [ $? -ne 0 ] if [ $? -ne 0 ] if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/floatingpoint/8165673/TestFloatJNIArgs.sh
lines,105
function,0


for,1
echo "Test passed; only valid for linux-aarch64"
if,6
if [ "${TESTSRC}" = "" ] if [ $VM_OS = "linux" -a $VM_CPU = "aarch64" ]; then if [ "x$gcc_cmd" = "x" ]; then if [ $? -ne 0 ] if [ $? -ne 0 ] if [ $? -ne 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/native/TestDirtyInt.sh
lines,78
function,0


for,1
echo "Test passed; only valid for linux-sparc"
if,4
if [ -z "${TESTSRC}" ]; then if [ "$VM_OS" = "linux" -a "$VM_CPU" = "sparcv9" ]; then if [ -z "$gcc_cmd" ]; then if [ $? = 0 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/hotspot/test/compiler/6894807/Test6894807.sh
lines,65
function,0


for,0

if,4
if [ "${TESTSRC}" = "" ] if [ "${TESTJAVA}" = "" ] if [ "${TESTCLASSES}" = "" ] if [ $? = 0 ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/nashorn/bin/runopt.sh
lines,136
function,0


for,0

if,1
if [ -z $JFR_FILENAME ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/nashorn/bin/fixwhitespace.sh
lines,37
function,1

fix() {
for,0

if,1
if [ ! -z $1 ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/bootstrap/javac.sh
lines,42
function,0


for,0

if,1
if [ "`cat HelloWorld.tmp`" = "Hello World!" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/bootstrap/javadoc.sh
lines,43
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javadoc.gold.txt javadoc.tmp ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/bootstrap/javah.sh
lines,40
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.gold.h HelloWorld.h ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/javac.sh
lines,44
function,0


for,0

if,1
if [ "`cat HelloWorld.tmp`" = "Hello World!" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/javadoc.sh
lines,47
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javadoc.gold.txt javadoc.tmp ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/javap.sh
lines,46
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.javap.gold.txt javap.tmp ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/src.sh
lines,50
function,0


for,0

if,1
if diff ${TESTSRC}/src.gold.txt expect.lst ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/classes.sh
lines,50
function,0


for,0

if,1
if diff ${TESTSRC}/classes.gold.txt expect.lst ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/lib/javah.sh
lines,46
function,0


for,0

if,1
if diff ${TESTSRC}/../HelloWorld.gold.h HelloWorld.h ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/make/test/contents.sh
lines,42
function,0


for,0

if,1
if diff ${TESTSRC}/contents.gold.txt contents.tmp ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/doclint/tidy/util/tidy.sh
lines,53
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/versions/check.sh
lines,144
function,5

check() { check_target() { check_source_target() { fail() { pass() { checksrc14() { pass $* $TC/X.java; fail $* $TC/Y.java; } checksrc15() { pass $* $TC/X.java; pass $* $TC/Y.java; } checksrc16() { checksrc15 $* ; } checksrc17() { checksrc15 $* ; } checksrc18() { checksrc15 $* ; }
for,0

if,2
if "$JC" ${TESTTOOLVMOPTS} -d $TC $*; then if "$JC" ${TESTTOOLVMOPTS} -d $TC $*; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/Diagnostics.sh
lines,201
function,4

No() { NO="no"; "$@"; NO=""; } Warning() { Error() { Cleanup() {
for,0

if,3
if test "$gotwarning" = "yes" -a "$NO" = "no"; then elif test "$gotwarning" = "no" -a "$NO" != "no"; then if test "$NO" = "no"; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/Class-Path.sh
lines,198
function,6

Cleanup() { public static int f() { return B.g(); } public static int g() { return 0; } public static int f() { return A.g(); } public static int g() { return 0; } public static void main(String []a) { System.exit(A.f() + B.f()); }
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/Util.sh
lines,129
function,18

WindowsOnly() { "$@"; } UnixOnly() { :; } UnixOnly() { "$@"; } WindowsOnly() { :; } Fail() { echo "FAIL: $1"; failed="${failed}."; } Die() { printf "%s\n" "$*"; exit 1; } Sys() { CheckFiles() { Report() { MkManifestWithClassPath() { HorizontalRule() { Test() { Failure() { Test failure "$@"; } Success() { Test success "$@"; } Bottom() { BadJarFile() { DefaultBootClassPath() { DiagnosticsInEnglishPlease() {
for,3
for f in "$@"; do test -r "$f" || Die "File $f not found"; done for jarfilename in "$@"; do pwd > "$jarfilename"; done for elt in `"$java" ${TESTVMOPTS} B | tr "${PS}" " "`; do
if,5
if test "$1" = "success" -a "$2" = 0; then elif test "$1" = "failure" -a "$2" != 0; then elif test "$1" = "success" -a "$2" != 0; then elif test "$1" = "failure" -a "$2" = 0; then if test -n "$failed"; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/Class-Path2.sh
lines,111
function,6

Cleanup() { public static int f() { return B.g(); } public static int g() { return 0; } public static int f() { return A.g(); } public static int g() { return 0; } public static void main(String []a) { System.exit(A.f() + B.f()); }
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/Help.sh
lines,69
function,0


for,2
for opt in \ for opt in \
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/wcMineField.sh
lines,296
function,19

Cleanup() { echo 'public class Lib {public static void f(){}}' > Lib.java echo 'public class Lib2 {public static void g(){}}' > Lib2.java echo 'public class Lib3 {public static void h(){}}' > Lib3.java echo 'public class Spe1 {public static void f(){}}' > Spe1.java echo 'public class Spe2 {public static void f(){}}' > Spe2.java echo 'public class Spe3 {public static void f(){}}' > Spe3.java echo 'public class Spe4 {public static void f(){}}' > Spe4.java echo 'public class Main {public static void main(String[] a) {Lib.f();}}' > Main.java echo 'public class Main1 {public static void main(String[] a) {Lib2.g();}}' > Main1.java echo 'public class Main1b {public static void main(String[] a) {Spe1.f();}}' > Main1b.java echo 'public class Main2 {public static void main(String[] a) {Spe2.f();}}' > Main2.java echo 'public class Main3 {public static void main(String[] a) {Spe3.f();}}' > Main3.java echo 'public class Main4 {public static void main(String[] a) {Spe4.f();}}' > Main4.java echo 'public class Main5 {public static void main(String[] a) {Spe2.f(); Lib.f();}}' > Main5.java echo 'public class Main6 {public static void main(String[] a) {Lib3.h();}}' > Main6.java starDir() { speJar() { starJar() {
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javac/Paths/MineField.sh
lines,384
function,4

Cleanup() { echo 'public class Lib {public static void f(){}}' > Lib.java echo 'public class Main {public static void main(String[] a) {Lib.f();}}' > Main.java In() { cd "$1"; shift; "$@"; cd ..; }
for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javah/compareTest/CompareTest.sh
lines,43
function,0


for,1
for i in $(cat CompareTest.classes.fail) ; do
if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/langtools/test/tools/javah/ReadOldClass.sh
lines,77
function,0


for,0

if,1
if [ "${TESTJAVA}" = "" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/get_source.sh
lines,100
function,4

to_stderr() { error() { warning() { version_field() {
for,0

if,6
if expr 1 + $field >/dev/null 2> /dev/null; then if [ "x$hgwhere" = "x" ]; then if [ "x${hgversion}" = "x" ] ; then if [ $hgmajor -eq -1 -o $hgminor -eq -1 -o $hgrev -eq -1 ] ; then if [ $hgmajor -lt $reqdmajor -o \( $hgmajor -eq $reqdmajor -a $hgminor -lt $reqdminor \) -o \( $hgmajor -eq $reqdmajor -a $hgminor -eq $reqdminor -a $hgrev -lt $reqdrev \) ] ; then if [ $hgmajor -lt $rqstmajor -o \( $hgmajor -eq $rqstmajor -a $hgminor -lt $rqstminor \) -o \( $hgmajor -eq $rqstmajor -a $hgminor -eq $rqstminor -a $hgrev -lt $rqstrev \) ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/make/scripts/lic_check.sh
lines,224
function,0


for,1
echo "SUCCESS: The license header for "`pwd`"/"$1" has been verified."
if,16
if [ ! -d ${template_dir} ] ; then if [ -d $1 ] ; then if [ ${error_status} -ne 1 ] ; then if [ ! -f $1 ] ; then if [ "${check_copyright}" != "" ] ; then if [ ${length} -ne 5 ] ; then if [ "${check_year1}" = "" ] ; then if [ "${year2}" != "Oracle" ] ; then if [ ${length} -ne 5 ] ; then if [ "${check_year2}" = "" ] ; then if [ ${counter} -ne 0 ] ; then if [ "${trimmed_line}" = "${trimmed_prefix}" ] ; then if [ ${counter} -eq ${lines} ] ; then if [ -s ${tmpfile} ] ; then if [ "$?" = "0" ] ; then if [ ${error_status} -ne 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/make/scripts/hgforest.sh
lines,144
function,0


for,5
for i in ${subrepos} ; do for i in ${subrepos_extra} ; do for i in ${hgdirs} ; do for i in ${repos} ; do for i in ${repos_extra} ; do
if,13
if [ "${command}" = "clone" -o "${command}" = "fclone" ] ; then if [ -f .hg/hgrc ] ; then if [ "${pull_default}" = "" ] ; then if [ "${pull_default}" = "" ] ; then if [ ! -f ${i}/.hg/hgrc ] ; then if [ "${pull_extra_base}" != "" ] ; then if [ ! -f ${i}/.hg/hgrc ] ; then if [ "${repos}" = "" -a "${repos_extra}" = "" ] ; then if [ "${repos}" = "" ] ; then if [ "${command}" = "clone" -o "${command}" = "fclone" ] ; then if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then if [ "${repos_extra}" != "" ] ; then if [ `expr ${n} '%' ${at_a_time}` -eq 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/make/scripts/update_copyright_year.sh
lines,199
function,3

saneFileToCheck() updateFile() updateChangesetFiles()
for,1
for i in `cat ${files}` ; do
if,20
if [ "`uname -s`" = "SunOS" ] ; then if [ "$1" != "" ] ; then if [ "$1" != "" -a -f $1 ] ; then if [ "${isText}" != "" \ if [ `saneFileToCheck "$1"` = "true" ] ; then if ! diff -b -w $1.OLD $1 > /dev/null ; then \ if [ -f "${files}" -a -s "${files}" ] ; then if [ `updateFile "${i}"` = "true" ] ; then if [ ${count} -gt 0 ] ; then if [ ${previous} -ne 0 ] ; then if [ -s ${all_changesets} ] ; then if [ "${year}" = "2010" ] ; then if cat ${desc} | fgrep -i "Added tag" > /dev/null ; then elif cat ${desc} | fgrep -i rebrand > /dev/null ; then elif cat ${desc} | fgrep -i copyright > /dev/null ; then if cat ${desc} | fgrep -i "Added tag" > /dev/null ; then elif cat ${desc} | fgrep -i "copyright year" > /dev/null ; then if [ ${total} -gt 0 ] ; then if [ ${previous} -eq 0 ] ; then if [ ${previous} -ne 0 ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/make/devkit/createWindowsDevkit2019.sh
lines,211
function,1

echo-info() {
for,1
for f in $POTENTIAL_INI_FILES; do
if,7
if test "x$IS_CYGWIN" != "x"; then elif test "x$IS_WSL" != "x"; then if test "x$BUILD_ENV" = "xcygwin"; then elif test "x$BUILD_ENV" = "xwsl"; then if [ -d "$VSNNNCOMNTOOLS" ]; then if [ -f "$VS_INSTALL_DIR/$f" ]; then if [ -z "$VS_VERSION_SP" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/make.sh
lines,148
function,1

System.getProperties().list(System.out);
for,3
for exe in "${JAVA_EXES[@]}"; do for opt in "${VERSION_OPTS[@]}"; do for p in ${EXPECTED_PATTERN[*]}
if,10
if [ ! -f "dragonwell_version" ]; then if [ $ if [ "x"$ARCH = 'xx86_64' ]; then elif [ "x"$ARCH = 'xaarch64' ]; then if [ -z "$BUILD_NUMBER" ]; then if [ 0 -ne $? ]; then if [ 0 != $? ]; then RET=1; fi if [ 0 != $? ]; then RET=1; fi if [ 0 != $? ]; then RET=1; fi if [ 0 != $? ]; then RET=1; fi
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/autoconf/generated-configure.sh
lines,57277
function,131

as_required="as_fn_return () { (exit \$1); } as_fn_success () { as_fn_return 0; } as_fn_failure () { as_fn_return 1; } as_fn_ret_success () { return 0; } as_fn_ret_failure () { return 1; } as_fn_unset () as_fn_set_status () as_fn_exit () as_fn_mkdir_p () as_fn_executable_p () eval 'as_fn_append () as_fn_append () eval 'as_fn_arith () as_fn_arith () as_fn_error () ac_fn_c_try_compile () ac_fn_cxx_try_compile () ac_fn_c_try_cpp () ac_fn_cxx_try_cpp () ac_fn_objc_try_compile () ac_fn_cxx_check_header_mongrel () ac_fn_cxx_try_run () ac_fn_cxx_check_header_compile () ac_fn_cxx_compute_int () main () main () main () main () main () static long int longval () { return $2; } static unsigned long int ulongval () { return $2; } main () long int i = longval (); unsigned long int i = ulongval (); ac_fn_cxx_try_link () ac_fn_cxx_check_func () which can conflict with char $2 (); below. char $2 (); main () return $2 (); ac_fn_c_check_header_compile () cygwin_help() { msys_help() { apt_help() { yum_help() { port_help() { pkgutil_help() { pkgadd_help() { main () main () main () main () main () main () main () main () main () main () main () main () main () main () main () main () echo "int main() { }" > main.c main () main () main () main () main () main () main () main () main () XrmInitialize () main () main () char XOpenDisplay (); main () return XOpenDisplay (); char dnet_ntoa (); main () return dnet_ntoa (); char dnet_ntoa (); main () return dnet_ntoa (); char gethostbyname (); main () return gethostbyname (); char gethostbyname (); main () return gethostbyname (); char connect (); main () return connect (); char remove (); main () return remove (); char shmat (); main () return shmat (); char IceConnectionNumber (); main () return IceConnectionNumber (); int main () { main () return main (); char DGifGetCode (); main () return DGifGetCode (); char compress (); main () return compress (); main () char cos (); main () return cos (); char dlopen (); main () return dlopen (); main () main () echo "int alfa();" > conftest.h main () as_fn_error () as_fn_set_status () as_fn_exit () as_fn_unset () eval 'as_fn_append () as_fn_append () eval 'as_fn_arith () as_fn_arith () as_fn_mkdir_p () as_fn_executable_p () s/^ \('"$ac_word_re"'\)\(([^()]*)\)[ ]*\(.*\)/P["\1"]="\2"\ s/^ \('"$ac_word_re"'\)\(([^()]*)\)[ ]*\(.*\)/P["\1"]="\2"\
for,2316
for as_dir in $PATH for as_var in BASH_ENV ENV MAIL MAILPATH for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH for as_base in sh bash ksh sh5; do for ac_option | --program-transform | --program-transfor \ Try \`$0 --help' for more information" for ac_var in exec_prefix prefix bindir sbindir libexecdir datarootdir \ as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val" for ac_var in $ac_precious_vars; do VAR=VALUE. See below for descriptions of some of the useful variables. Defaults for the options are specified in brackets. -C, --config-cache alias for \`--cache-file=config.cache' for instance \`--prefix=\$HOME'. --oldincludedir=DIR C header files for non-gcc [/usr/include] --build=BUILD configure for building on BUILD [guessed] --target=TARGET configure for building compilers for TARGET [HOST] Deprecated. Option is kept for backwards --with-custom-make-dir use this directory for custom build/make files --with-target-bits build 32-bit or 64-bit binaries (for platforms that --with-devkit use this devkit for compilers, tools and resources --with-sys-root alias for --with-sysroot for backwards compatability --with-tools-dir alias for --with-toolchain-path for backwards --with-builddeps-conf use this configuration file for the builddeps --with-milestone Set milestone value for build [internal] --with-update-version Set update version value for build [b00] --with-build-number Set build number value for build [b00] --with-copyright-year Set copyright year value for build [current year] --with-add-source-root for each and every source directory, look in this additional source root for the same directory; if it for each and every source directory, look in this override source root for the same directory; if it use this langtools dir for the build --with-override-corba use this corba dir for the build --with-override-jaxp use this jaxp dir for the build --with-override-jaxws use this jaxws dir for the build --with-override-hotspot use this hotspot dir for the build --with-override-nashorn use this nashorn dir for the build --with-override-jdk use this jdk dir for the build --with-cups specify prefix directory for the cups package --with-cups-include specify directory for the cups include files --with-freetype specify prefix directory for the freetype package --with-freetype-include specify directory for the freetype include files --with-freetype-lib specify directory for the freetype library --with-alsa specify prefix directory for the alsa package --with-alsa-include specify directory for the alsa include files --with-alsa-lib specify directory for the alsa library --with-fontconfig specify prefix directory for the fontconfig package specify directory for the fontconfig include files --with-dxsdk Deprecated. Option is kept for backwards --with-dxsdk-lib Deprecated. Option is kept for backwards --with-dxsdk-include Deprecated. Option is kept for backwards use this java binary for running the sjavac BASENAME Override default value for BASENAME BASH Override default value for BASH CAT Override default value for CAT CHMOD Override default value for CHMOD CMP Override default value for CMP COMM Override default value for COMM CP Override default value for CP CUT Override default value for CUT DATE Override default value for DATE DIFF Override default value for DIFF DIRNAME Override default value for DIRNAME ECHO Override default value for ECHO EXPR Override default value for EXPR FILE Override default value for FILE FIND Override default value for FIND HEAD Override default value for HEAD LN Override default value for LN LS Override default value for LS MKDIR Override default value for MKDIR MKTEMP Override default value for MKTEMP MV Override default value for MV NAWK Override default value for NAWK PRINTF Override default value for PRINTF RM Override default value for RM SH Override default value for SH SORT Override default value for SORT TAIL Override default value for TAIL TAR Override default value for TAR TEE Override default value for TEE TOUCH Override default value for TOUCH TR Override default value for TR UNAME Override default value for UNAME UNIQ Override default value for UNIQ WC Override default value for WC WHICH Override default value for WHICH XARGS Override default value for XARGS AWK Override default value for AWK GREP Override default value for GREP EGREP Override default value for EGREP FGREP Override default value for FGREP SED Override default value for SED CYGPATH Override default value for CYGPATH READLINK Override default value for READLINK DF Override default value for DF SETFILE Override default value for SETFILE CPIO Override default value for CPIO UNZIP Override default value for UNZIP ZIP Override default value for ZIP LDD Override default value for LDD READELF Override default value for READELF HG Override default value for HG GIT Override default value for GIT STAT Override default value for STAT TIME Override default value for TIME DSYMUTIL Override default value for DSYMUTIL XATTR Override default value for XATTR CODESIGN Override default value for CODESIGN AS Override default value for AS AR Override default value for AR LIPO Override default value for LIPO STRIP Override default value for STRIP NM Override default value for NM GNM Override default value for GNM MCS Override default value for MCS OBJCOPY Override default value for OBJCOPY OBJDUMP Override default value for OBJDUMP BUILD_CC Override default value for BUILD_CC BUILD_CXX Override default value for BUILD_CXX BUILD_LD Override default value for BUILD_LD JTREGEXE Override default value for JTREGEXE XMKMF Path to xmkmf, Makefile generator for X Window System C compiler flags for FREETYPE, overriding pkg-config linker flags for FREETYPE, overriding pkg-config ALSA_CFLAGS C compiler flags for ALSA, overriding pkg-config ALSA_LIBS linker flags for ALSA, overriding pkg-config C compiler flags for LIBFFI, overriding pkg-config LIBFFI_LIBS linker flags for LIBFFI, overriding pkg-config CCACHE Override default value for CCACHE for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5 $as_echo_n "checking for $2... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: check for missing prerequisite headers?" >&5 $as_echo "$as_me: WARNING: $2: check for missing prerequisite headers?" >&2;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5 $as_echo_n "checking for $2... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5 $as_echo_n "checking for $2... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5 $as_echo_n "checking for $2... " >&6; } /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII The GNU C library defines this for functions which it implements { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5 $as_echo_n "checking for $2... " >&6; } for as_dir in $PATH for ac_pass in 1 2 for ac_arg for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do for ac_var in $ac_subst_vars for ac_var in $ac_subst_files for ac_signal in 1 2 13 15; do for ac_site_file in "$ac_site_file1" "$ac_site_file2" See \`config.log' for more details" "$LINENO" 5; } for ac_var in $ac_precious_vars; do for ac_dir in $TOPDIR/common/autoconf/build-aux "$srcdir"/$TOPDIR/common/autoconf/build-aux; do automatically build the freetype library into '<freetype_src>/lib64' for 64-bit builds or into '<freetype_src>/lib32' for 32-bit builds. and '--with-freetype-lib=<freetype_src>/lib32|64' for other builds." for toolchain in $VALID_TOOLCHAINS_all; do for ac_prog in basename { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in basename { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BASENAME=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BASENAME=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BASENAME" >&5 $as_echo_n "checking for BASENAME... " >&6; } as_fn_error $? "Could not find required tool for BASENAME" "$LINENO" 5 for ac_prog in bash { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in bash { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BASH=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BASH=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BASH" >&5 $as_echo_n "checking for BASH... " >&6; } as_fn_error $? "Could not find required tool for BASH" "$LINENO" 5 for ac_prog in cat { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cat { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CAT=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CAT=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CAT" >&5 $as_echo_n "checking for CAT... " >&6; } as_fn_error $? "Could not find required tool for CAT" "$LINENO" 5 for ac_prog in chmod { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in chmod { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CHMOD=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CHMOD=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CHMOD" >&5 $as_echo_n "checking for CHMOD... " >&6; } as_fn_error $? "Could not find required tool for CHMOD" "$LINENO" 5 for ac_prog in cmp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cmp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CMP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CMP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CMP" >&5 $as_echo_n "checking for CMP... " >&6; } as_fn_error $? "Could not find required tool for CMP" "$LINENO" 5 for ac_prog in comm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in comm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool COMM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool COMM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for COMM" >&5 $as_echo_n "checking for COMM... " >&6; } as_fn_error $? "Could not find required tool for COMM" "$LINENO" 5 for ac_prog in cp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CP" >&5 $as_echo_n "checking for CP... " >&6; } as_fn_error $? "Could not find required tool for CP" "$LINENO" 5 for ac_prog in cut { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cut { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CUT=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CUT=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CUT" >&5 $as_echo_n "checking for CUT... " >&6; } as_fn_error $? "Could not find required tool for CUT" "$LINENO" 5 for ac_prog in date { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in date { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool DATE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool DATE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DATE" >&5 $as_echo_n "checking for DATE... " >&6; } as_fn_error $? "Could not find required tool for DATE" "$LINENO" 5 for ac_prog in gdiff diff { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gdiff diff { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool DIFF=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool DIFF=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DIFF" >&5 $as_echo_n "checking for DIFF... " >&6; } as_fn_error $? "Could not find required tool for DIFF" "$LINENO" 5 for ac_prog in dirname { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in dirname { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool DIRNAME=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool DIRNAME=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DIRNAME" >&5 $as_echo_n "checking for DIRNAME... " >&6; } as_fn_error $? "Could not find required tool for DIRNAME" "$LINENO" 5 for ac_prog in echo { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in echo { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool ECHO=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool ECHO=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ECHO" >&5 $as_echo_n "checking for ECHO... " >&6; } as_fn_error $? "Could not find required tool for ECHO" "$LINENO" 5 for ac_prog in expr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in expr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool EXPR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool EXPR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for EXPR" >&5 $as_echo_n "checking for EXPR... " >&6; } as_fn_error $? "Could not find required tool for EXPR" "$LINENO" 5 for ac_prog in file { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in file { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool FILE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool FILE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for FILE" >&5 $as_echo_n "checking for FILE... " >&6; } as_fn_error $? "Could not find required tool for FILE" "$LINENO" 5 for ac_prog in find { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in find { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool FIND=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool FIND=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for FIND" >&5 $as_echo_n "checking for FIND... " >&6; } as_fn_error $? "Could not find required tool for FIND" "$LINENO" 5 for ac_prog in head { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in head { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool HEAD=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool HEAD=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for HEAD" >&5 $as_echo_n "checking for HEAD... " >&6; } as_fn_error $? "Could not find required tool for HEAD" "$LINENO" 5 for ac_prog in ln { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ln { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool LN=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool LN=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LN" >&5 $as_echo_n "checking for LN... " >&6; } as_fn_error $? "Could not find required tool for LN" "$LINENO" 5 for ac_prog in ls { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ls { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool LS=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool LS=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LS" >&5 $as_echo_n "checking for LS... " >&6; } as_fn_error $? "Could not find required tool for LS" "$LINENO" 5 for ac_prog in mkdir { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in mkdir { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool MKDIR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool MKDIR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MKDIR" >&5 $as_echo_n "checking for MKDIR... " >&6; } as_fn_error $? "Could not find required tool for MKDIR" "$LINENO" 5 for ac_prog in mktemp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in mktemp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool MKTEMP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool MKTEMP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MKTEMP" >&5 $as_echo_n "checking for MKTEMP... " >&6; } as_fn_error $? "Could not find required tool for MKTEMP" "$LINENO" 5 for ac_prog in mv { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in mv { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool MV=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool MV=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MV" >&5 $as_echo_n "checking for MV... " >&6; } as_fn_error $? "Could not find required tool for MV" "$LINENO" 5 for ac_prog in nawk gawk awk { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nawk gawk awk { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool NAWK=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool NAWK=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for NAWK" >&5 $as_echo_n "checking for NAWK... " >&6; } as_fn_error $? "Could not find required tool for NAWK" "$LINENO" 5 for ac_prog in printf { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in printf { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool PRINTF=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool PRINTF=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PRINTF" >&5 $as_echo_n "checking for PRINTF... " >&6; } as_fn_error $? "Could not find required tool for PRINTF" "$LINENO" 5 for ac_prog in rm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in rm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool RM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool RM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for RM" >&5 $as_echo_n "checking for RM... " >&6; } as_fn_error $? "Could not find required tool for RM" "$LINENO" 5 for ac_prog in sh { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in sh { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool SH=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool SH=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SH" >&5 $as_echo_n "checking for SH... " >&6; } as_fn_error $? "Could not find required tool for SH" "$LINENO" 5 for ac_prog in sort { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in sort { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool SORT=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool SORT=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SORT" >&5 $as_echo_n "checking for SORT... " >&6; } as_fn_error $? "Could not find required tool for SORT" "$LINENO" 5 for ac_prog in tail { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in tail { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TAIL=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TAIL=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TAIL" >&5 $as_echo_n "checking for TAIL... " >&6; } as_fn_error $? "Could not find required tool for TAIL" "$LINENO" 5 for ac_prog in tar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in tar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TAR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TAR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TAR" >&5 $as_echo_n "checking for TAR... " >&6; } as_fn_error $? "Could not find required tool for TAR" "$LINENO" 5 for ac_prog in tee { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in tee { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TEE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TEE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TEE" >&5 $as_echo_n "checking for TEE... " >&6; } as_fn_error $? "Could not find required tool for TEE" "$LINENO" 5 for ac_prog in touch { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in touch { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TOUCH=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TOUCH=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TOUCH" >&5 $as_echo_n "checking for TOUCH... " >&6; } as_fn_error $? "Could not find required tool for TOUCH" "$LINENO" 5 for ac_prog in tr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in tr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TR" >&5 $as_echo_n "checking for TR... " >&6; } as_fn_error $? "Could not find required tool for TR" "$LINENO" 5 for ac_prog in uname { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in uname { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool UNAME=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool UNAME=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for UNAME" >&5 $as_echo_n "checking for UNAME... " >&6; } as_fn_error $? "Could not find required tool for UNAME" "$LINENO" 5 for ac_prog in uniq { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in uniq { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool UNIQ=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool UNIQ=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for UNIQ" >&5 $as_echo_n "checking for UNIQ... " >&6; } as_fn_error $? "Could not find required tool for UNIQ" "$LINENO" 5 for ac_prog in wc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in wc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool WC=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool WC=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for WC" >&5 $as_echo_n "checking for WC... " >&6; } as_fn_error $? "Could not find required tool for WC" "$LINENO" 5 for ac_prog in which { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in which { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool WHICH=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool WHICH=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for WHICH" >&5 $as_echo_n "checking for WHICH... " >&6; } as_fn_error $? "Could not find required tool for WHICH" "$LINENO" 5 for ac_prog in xargs { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in xargs { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool XARGS=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool XARGS=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for XARGS" >&5 $as_echo_n "checking for XARGS... " >&6; } as_fn_error $? "Could not find required tool for XARGS" "$LINENO" 5 for ac_prog in gawk mawk nawk awk { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gawk mawk nawk awk { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool AWK=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool AWK=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AWK" >&5 $as_echo_n "checking for AWK... " >&6; } as_fn_error $? "Could not find required tool for AWK" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5 $as_echo_n "checking for grep that handles long lines and -e... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in grep ggrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5 $as_echo_n "checking for grep that handles long lines and -e... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in grep ggrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool GREP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool GREP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GREP" >&5 $as_echo_n "checking for GREP... " >&6; } as_fn_error $? "Could not find required tool for GREP" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5 $as_echo_n "checking for egrep... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in egrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5 $as_echo_n "checking for egrep... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in egrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool EGREP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool EGREP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for EGREP" >&5 $as_echo_n "checking for EGREP... " >&6; } as_fn_error $? "Could not find required tool for EGREP" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5 $as_echo_n "checking for fgrep... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in fgrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5 $as_echo_n "checking for fgrep... " >&6; } for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin for ac_prog in fgrep; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool FGREP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool FGREP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for FGREP" >&5 $as_echo_n "checking for FGREP... " >&6; } as_fn_error $? "Could not find required tool for FGREP" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5 $as_echo_n "checking for a sed that does not truncate output... " >&6; } for ac_i in 1 2 3 4 5 6 7; do for as_dir in $PATH for ac_prog in sed gsed; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5 $as_echo_n "checking for a sed that does not truncate output... " >&6; } for ac_i in 1 2 3 4 5 6 7; do for as_dir in $PATH for ac_prog in sed gsed; do for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool SED=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool SED=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SED" >&5 $as_echo_n "checking for SED... " >&6; } as_fn_error $? "Could not find required tool for SED" "$LINENO" 5 for ac_prog in cygpath { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cygpath { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CYGPATH=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CYGPATH=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CYGPATH" >&5 $as_echo_n "checking for CYGPATH... " >&6; } for ac_prog in greadlink readlink { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in greadlink readlink { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool READLINK=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool READLINK=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for READLINK" >&5 $as_echo_n "checking for READLINK... " >&6; } for ac_prog in df { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in df { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool DF=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool DF=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DF" >&5 $as_echo_n "checking for DF... " >&6; } for ac_prog in SetFile { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in SetFile { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool SETFILE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool SETFILE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SETFILE" >&5 $as_echo_n "checking for SETFILE... " >&6; } for ac_prog in cpio bsdcpio { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cpio bsdcpio { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CPIO=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CPIO=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CPIO" >&5 $as_echo_n "checking for CPIO... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for top-level directory" >&5 $as_echo_n "checking for top-level directory... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for presence of closed sources" >&5 $as_echo_n "checking for presence of closed sources... " >&6; } as_fn_error $? "You cannot build a client JVM for a 64-bit machine." "$LINENO" 5 as_fn_error $? "You cannot build a kernel JVM for a 64-bit machine." "$LINENO" 5 as_fn_error $? "You cannot build a minimal JVM for a 64-bit machine." "$LINENO" 5 new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for devkit" >&5 $as_echo_n "checking for devkit... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for sysroot" >&5 $as_echo_n "checking for sysroot... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for toolchain path" >&5 $as_echo_n "checking for toolchain path... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for extra path" >&5 $as_echo_n "checking for extra path... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for ac_prog in apt-get yum port pkgutil pkgadd { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&5 $as_echo "$as_me: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gmake { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&5 $as_echo "$as_me: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in make { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&5 $as_echo "$as_me: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gmake { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&5 $as_echo "$as_me: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in make { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&5 $as_echo "$as_me: Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring." >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in unzip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in unzip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool UNZIP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool UNZIP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for UNZIP" >&5 $as_echo_n "checking for UNZIP... " >&6; } as_fn_error $? "Could not find required tool for UNZIP" "$LINENO" 5 for ac_prog in zip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in zip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool ZIP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool ZIP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ZIP" >&5 $as_echo_n "checking for ZIP... " >&6; } as_fn_error $? "Could not find required tool for ZIP" "$LINENO" 5 for ac_prog in ldd { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ldd { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool LDD=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool LDD=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LDD" >&5 $as_echo_n "checking for LDD... " >&6; } for ac_prog in readelf greadelf { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in readelf greadelf { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool READELF=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool READELF=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for READELF" >&5 $as_echo_n "checking for READELF... " >&6; } for ac_prog in hg { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in hg { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool HG=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool HG=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for HG" >&5 $as_echo_n "checking for HG... " >&6; } for ac_prog in git { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in git { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool GIT=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool GIT=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GIT" >&5 $as_echo_n "checking for GIT... " >&6; } for ac_prog in stat { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in stat { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool STAT=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool STAT=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for STAT" >&5 $as_echo_n "checking for STAT... " >&6; } for ac_prog in time { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in time { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool TIME=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool TIME=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TIME" >&5 $as_echo_n "checking for TIME... " >&6; } for ac_prog in comm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in comm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool COMM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool COMM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for COMM" >&5 $as_echo_n "checking for COMM... " >&6; } as_fn_error $? "Could not find required tool for COMM" "$LINENO" 5 for ac_prog in dsymutil { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in dsymutil { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool DSYMUTIL=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool DSYMUTIL=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DSYMUTIL" >&5 $as_echo_n "checking for DSYMUTIL... " >&6; } as_fn_error $? "Could not find required tool for DSYMUTIL" "$LINENO" 5 for ac_prog in xattr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in xattr { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool XATTR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool XATTR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for XATTR" >&5 $as_echo_n "checking for XATTR... " >&6; } as_fn_error $? "Could not find required tool for XATTR" "$LINENO" 5 for ac_prog in codesign { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in codesign { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CODESIGN=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CODESIGN=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CODESIGN" >&5 $as_echo_n "checking for CODESIGN... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for supplied builddeps configuration file" >&5 $as_echo_n "checking for supplied builddeps configuration file... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for builddeps.conf files in sources..." >&5 $as_echo_n "checking for builddeps.conf files in sources...... " >&6; } echo Rewriting build for builddeps into $rewritten_build echo Rewriting target for builddeps into $rewritten_target for ac_prog in 7z unzip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in wget lftp ftp { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do headful_msg="include support for both headful and headless" new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: Using builddeps $resource for bootjdk" >&5 $as_echo "$as_me: Using builddeps $resource for bootjdk" >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } for JDK_TO_TRY in $ALL_JDKS_FOUND ; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boot JDK" >&5 $as_echo_n "checking for Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for java in Boot JDK" >&5 $as_echo_n "checking for java in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for javac in Boot JDK" >&5 $as_echo_n "checking for javac in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for javah in Boot JDK" >&5 $as_echo_n "checking for javah in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for javap in Boot JDK" >&5 $as_echo_n "checking for javap in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for jar in Boot JDK" >&5 $as_echo_n "checking for jar in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for rmic in Boot JDK" >&5 $as_echo_n "checking for rmic in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for native2ascii in Boot JDK" >&5 $as_echo_n "checking for native2ascii in Boot JDK... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking flags for boot jdk java command " >&5 $as_echo_n "checking flags for boot jdk java command ... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking flags for boot jdk java command for big workloads" >&5 $as_echo_n "checking flags for boot jdk java command for big workloads... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking flags for boot jdk java command for small workloads" >&5 $as_echo_n "checking flags for boot jdk java command for small workloads... " >&6; } for toolchain in $VALID_TOOLCHAINS; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for version in $VALID_VS_VERSIONS; do for i in $DEVKIT_VS_INCLUDE; do for i in $DEVKIT_VS_LIB; do for VS_VERSION in $VS_VERSIONS_PROBE_LIST; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do for edition in $VS_EDITIONS; do for VCVARSFILE in $VCVARSFILES; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: Could not succesfully extract the envionment variables needed for the VS setup." >&5 $as_echo "$as_me: Could not succesfully extract the envionment variables needed for the VS setup." >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Visual Studio variables" >&5 $as_echo_n "checking for Visual Studio variables... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $CC { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $SEARCH_LIST { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $TOOLCHAIN_CC_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking resolved symbolic links for CC" >&5 $as_echo_n "checking resolved symbolic links for CC... " >&6; } for ac_prog in $TOOLCHAIN_CC_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $TOOLCHAIN_CC_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for resolved symbolic links for CC" >&5 $as_echo_n "checking for resolved symbolic links for CC... " >&6; } for ac_prog in $CC { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $CC { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do See \`config.log' for more details" "$LINENO" 5; } $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5 for ac_option in --version -v -V -qversion; do for ac_file in $ac_files for ac_file in $ac_files '' See \`config.log' for more details" "$LINENO" 5; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5 $as_echo_n "checking for C compiler default output file name... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5 $as_echo_n "checking for suffix of executables... " >&6; } for ac_file in conftest.exe conftest conftest.*; do See \`config.log' for more details" "$LINENO" 5; } See \`config.log' for more details" "$LINENO" 5; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5 $as_echo_n "checking for suffix of object files... " >&6; } for ac_file in conftest.o conftest.obj conftest.*; do See \`config.log' for more details" "$LINENO" 5; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5 $as_echo_n "checking for $CC option to accept ISO C89... " >&6; } proper ANSI mode. Curiously '\x00'!='x' always comes out true, for an /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \ for ac_prog in $CXX { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $SEARCH_LIST { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $TOOLCHAIN_CXX_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking resolved symbolic links for CXX" >&5 $as_echo_n "checking resolved symbolic links for CXX... " >&6; } for ac_prog in $TOOLCHAIN_CXX_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $TOOLCHAIN_CXX_BINARY { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for resolved symbolic links for CXX" >&5 $as_echo_n "checking for resolved symbolic links for CXX... " >&6; } for ac_prog in $CXX { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in $CXX { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do $as_echo "$as_me:${as_lineno-$LINENO}: checking for C++ compiler version" >&5 for ac_option in --version -v -V -qversion; do for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp" for ac_c_preproc_warn_flag in '' yes for ac_c_preproc_warn_flag in '' yes See \`config.log' for more details" "$LINENO" 5; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for CXXCPP in "$CXX -E" "/lib/cpp" for ac_cxx_preproc_warn_flag in '' yes for ac_cxx_preproc_warn_flag in '' yes See \`config.log' for more details" "$LINENO" 5; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in as { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in as { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool AS=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool AS=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AS" >&5 $as_echo_n "checking for AS... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ar { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool AR=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool AR=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AR" >&5 $as_echo_n "checking for AR... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gcc objcc objc cc CC { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gcc objcc objc cc CC { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do $as_echo "$as_me:${as_lineno-$LINENO}: checking for Objective C compiler version" >&5 for ac_option in --version -v -V -qversion; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in lipo { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in lipo { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool LIPO=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool LIPO=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIPO" >&5 $as_echo_n "checking for LIPO... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool STRIP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool STRIP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for STRIP" >&5 $as_echo_n "checking for STRIP... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool NM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool NM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for NM" >&5 $as_echo_n "checking for NM... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gnm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gnm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool GNM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool GNM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNM" >&5 $as_echo_n "checking for GNM... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in mcs { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in mcs { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool MCS=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool MCS=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MCS" >&5 $as_echo_n "checking for MCS... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in strip { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool STRIP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool STRIP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for STRIP" >&5 $as_echo_n "checking for STRIP... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in nm { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool NM=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool NM=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for NM" >&5 $as_echo_n "checking for NM... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gobjcopy objcopy { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjcopy objcopy { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjcopy objcopy { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjcopy objcopy { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool OBJCOPY=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool OBJCOPY=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for OBJCOPY" >&5 $as_echo_n "checking for OBJCOPY... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in gobjdump objdump { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjdump objdump { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjdump objdump { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in gobjdump objdump { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool OBJDUMP=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool OBJDUMP=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for OBJDUMP" >&5 $as_echo_n "checking for OBJDUMP... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in clang cl cc gcc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in clang cl cc gcc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BUILD_CC=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BUILD_CC=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BUILD_CC" >&5 $as_echo_n "checking for BUILD_CC... " >&6; } for ac_prog in clang++ cl CC g++ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in clang++ cl CC g++ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BUILD_CXX=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BUILD_CXX=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BUILD_CXX" >&5 $as_echo_n "checking for BUILD_CXX... " >&6; } for ac_prog in cl cc gcc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cl cc gcc { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BUILD_CC=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BUILD_CC=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BUILD_CC" >&5 $as_echo_n "checking for BUILD_CC... " >&6; } as_fn_error $? "Could not find required tool for BUILD_CC" "$LINENO" 5 for ac_prog in cl CC g++ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in cl CC g++ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BUILD_CXX=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BUILD_CXX=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BUILD_CXX" >&5 $as_echo_n "checking for BUILD_CXX... " >&6; } as_fn_error $? "Could not find required tool for BUILD_CXX" "$LINENO" 5 new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do for ac_prog in ld { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ld { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool BUILD_LD=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool BUILD_LD=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BUILD_LD" >&5 $as_echo_n "checking for BUILD_LD... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for p in $PATH; do as_fn_error $? "Target CPU mismatch. We are building for $OPENJDK_TARGET_CPU but CL is for \"$COMPILER_CPU_TEST\"; expected \"80x86\" or \"x86\"." "$LINENO" 5 as_fn_error $? "Target CPU mismatch. We are building for $OPENJDK_TARGET_CPU but CL is for \"$COMPILER_CPU_TEST\"; expected \"x64\"." "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for broken SuSE 'ld' which only understands anonymous version tags in executables" >&5 $as_echo_n "checking for broken SuSE 'ld' which only understands anonymous version tags in executables... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for jtreg" >&5 $as_echo_n "checking for jtreg... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for jtreg" >&5 $as_echo_n "checking for jtreg... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for ac_prog in jtreg { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in jtreg { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool JTREGEXE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool JTREGEXE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for JTREGEXE" >&5 $as_echo_n "checking for JTREGEXE... " >&6; } as_fn_error $? "Could not find required tool for JTREGEXE" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5 $as_echo_n "checking for ANSI C header files... " >&6; } for (i = 0; i < 256; i++) for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \ for ac_header in stdio.h See \`config.log' for more details" "$LINENO" 5; } See \`config.log' for more details" "$LINENO" 5; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for target address size" >&5 $as_echo_n "checking for target address size... " >&6; } for ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for X" >&5 $as_echo_n "checking for X... " >&6; } for ac_var in incroot usrlibdir libdir; do for ac_extension in a so sl dylib la dll; do for ac_dir in $ac_x_header_dirs; do for ac_dir in `$as_echo "$ac_x_includes $ac_x_header_dirs" | sed s/include/lib/g` for ac_extension in a so sl dylib la dll; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dnet_ntoa in -ldnet" >&5 $as_echo_n "checking for dnet_ntoa in -ldnet... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dnet_ntoa in -ldnet_stub" >&5 $as_echo_n "checking for dnet_ntoa in -ldnet_stub... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for gethostbyname in -lnsl" >&5 $as_echo_n "checking for gethostbyname in -lnsl... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for gethostbyname in -lbsd" >&5 $as_echo_n "checking for gethostbyname in -lbsd... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for connect in -lsocket" >&5 $as_echo_n "checking for connect in -lsocket... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for remove in -lposix" >&5 $as_echo_n "checking for remove in -lposix... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for shmat in -lipc" >&5 $as_echo_n "checking for shmat in -lipc... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for IceConnectionNumber in -lICE" >&5 $as_echo_n "checking for IceConnectionNumber in -lICE... " >&6; } for ac_header in X11/extensions/shape.h X11/extensions/Xrender.h X11/extensions/XTest.h X11/Intrinsic.h { $as_echo "$as_me:${as_lineno-$LINENO}: Using builddeps $resource for cups" >&5 $as_echo "$as_me: Using builddeps $resource for cups" >&6;} for ac_header in cups/cups.h cups/ppd.h { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cups headers" >&5 $as_echo_n "checking for cups headers... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: Compiling freetype sources succeeded! (see freetype.log for build results)" >&5 $as_echo "$as_me: Compiling freetype sources succeeded! (see freetype.log for build results)" >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: User specified --with-freetype-src but building freetype failed. (see freetype.log for build results)" >&5 $as_echo "$as_me: User specified --with-freetype-src but building freetype failed. (see freetype.log for build results)" >&6;} new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: Using builddeps $resource for freetype2" >&5 $as_echo "$as_me: Using builddeps $resource for freetype2" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype" >&5 $as_echo_n "checking for freetype... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for FREETYPE" >&5 $as_echo_n "checking for FREETYPE... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype" >&5 $as_echo_n "checking for freetype... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype includes" >&5 $as_echo_n "checking for freetype includes... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype libraries" >&5 $as_echo_n "checking for freetype libraries... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: Using builddeps $resource for alsa" >&5 $as_echo "$as_me: Using builddeps $resource for alsa" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ALSA" >&5 $as_echo_n "checking for ALSA... " >&6; } for ac_header in alsa/asoundlib.h { $as_echo "$as_me:${as_lineno-$LINENO}: checking for fontconfig headers" >&5 $as_echo_n "checking for fontconfig headers... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for fontconfig headers" >&5 $as_echo_n "checking for fontconfig headers... " >&6; } for ac_header in fontconfig/fontconfig.h { $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -ljpeg" >&5 $as_echo_n "checking for main in -ljpeg... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for which giflib to use" >&5 $as_echo_n "checking for which giflib to use... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DGifGetCode in -lgif" >&5 $as_echo_n "checking for DGifGetCode in -lgif... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for compress in -lz" >&5 $as_echo_n "checking for compress in -lz... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for which zlib to use" >&5 $as_echo_n "checking for which zlib to use... " >&6; } as_fn_error $? "Invalid value for --with-zlib: ${with_zlib}, use 'system' or 'bundled'" "$LINENO" 5 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cos in -lm" >&5 $as_echo_n "checking for cos in -lm... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5 $as_echo_n "checking for dlopen in -ldl... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBFFI" >&5 $as_echo_n "checking for LIBFFI... " >&6; } See the pkg-config man page for more details. See the pkg-config man page for more details. See \`config.log' for more details" "$LINENO" 5; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for flag in $("$LLVM_CONFIG" --cxxflags); do for flag in $("${LLVM_CONFIG}" --ldflags); do for flag in $("${LLVM_CONFIG}" --libs ${llvm_components}); do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for possible_msvc_dll in $POSSIBLE_MSVC_DLL; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for possible_msvc_dll in $POSSIBLE_MSVC_DLL; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` for possible_msvc_dll in $POSSIBLE_MSVC_DLL; do new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $DLL_NAME" >&5 $as_echo_n "checking for $DLL_NAME... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for UCRT DLL dir" >&5 $as_echo_n "checking for UCRT DLL dir... " >&6; } new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` new_path=`cmd /c "for %A in (\"$input_path\") do @echo %~sA"|$TR \\\\\\\\ / | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'` { $as_echo "$as_me:${as_lineno-$LINENO}: checking for number of cores" >&5 $as_echo_n "checking for number of cores... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for memory size" >&5 $as_echo_n "checking for memory size... " >&6; } { $as_echo "$as_me:${as_lineno-$LINENO}: checking for appropriate number of jobs to run in parallel" >&5 $as_echo_n "checking for appropriate number of jobs to run in parallel... " >&6; } for ac_prog in ccache { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do for ac_prog in ccache { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: Will search for user supplied tool CCACHE=$tool_basename" >&5 $as_echo "$as_me: Will search for user supplied tool CCACHE=$tool_basename" >&6;} { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5 $as_echo_n "checking for $ac_word... " >&6; } for as_dir in $PATH for ac_exec_ext in '' $ac_executable_extensions; do { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CCACHE" >&5 $as_echo_n "checking for CCACHE... " >&6; } as_fn_error $? "Could not find required tool for CCACHE" "$LINENO" 5 for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue for as_dir in $PATH for as_var in BASH_ENV ENV MAIL MAILPATH Try \`$0 --help' for more information.";; Try \`$0 --help' for more information." ;; for ac_config_target in $ac_config_targets for ac_last_try in false false false false false :; do for (key in S) S_is_set[key] = 1 for (i = 2; i < nfields; i++) { for ac_last_try in false false :; do for (key in D) D_is_set[key] = 1 for ac_tag for ac_f printf "The following warnings were produced. Repeated here for convenience:\n"
if,5739
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then : if test -z "$BASH_VERSION$ZSH_VERSION" \ elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then if test "${PATH_SEPARATOR+set}" != set; then if test "x$as_myself" = x; then if test ! -f "$as_myself"; then if test x"${_as_can_reexec}" != xno && test "x$CONFIG_SHELL" != x; then if test "x$CONFIG_SHELL" = x; then as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then : if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then : if (eval "$as_required") 2>/dev/null; then : if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then : if { test -f "$as_shell" || test -f "$as_shell.exe"; } && if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then : $as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } && if test "x$CONFIG_SHELL" != x; then : if test x$as_have_required = xno; then : if test x${ZSH_VERSION+set} = xset ; then $0: under such a shell if you do have one." if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then : if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then : if test "$4"; then if expr a : '\(a\)' >/dev/null 2>&1 && if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then if test -d conf$$.dir; then if (echo >conf$$.file) 2>/dev/null; then if ln -s conf$$.file conf$$ 2>/dev/null; then elif ln conf$$.file conf$$ 2>/dev/null; then if mkdir -p . 2>/dev/null; then if test -n "$ac_prev"; then if test -n "$ac_prev"; then if test -n "$ac_unrecognized_opts"; then if test "x$host_alias" != x; then if test "x$build_alias" = x; then elif test "x$build_alias" != "x$host_alias"; then if test -z "$srcdir"; then if test ! -r "$srcdir/$ac_unique_file"; then if test ! -r "$srcdir/$ac_unique_file"; then if test "$ac_abs_confdir" = "$ac_pwd"; then if test "$ac_init_help" = "long"; then if test -n "$ac_init_help"; then --enable-openjdk-only suppress building custom source even if present Add a custom string to the version string if build additional source root for the same directory; if it override source root for the same directory; if it LDFLAGS linker flags, e.g. -L<lib dir> if you have libraries in a if test "$ac_init_help" = "recursive"; then if test -f "$ac_srcdir/configure.gnu"; then elif test -f "$ac_srcdir/configure"; then if $ac_init_version; then if { { ac_try="$ac_compile" if test -s conftest.err; then if { { ac_try="$ac_compile" if test -s conftest.err; then if { { ac_try="$ac_cpp conftest.$ac_ext" if test -s conftest.err; then if { { ac_try="$ac_cpp conftest.$ac_ext" if test -s conftest.err; then if { { ac_try="$ac_compile" if test -s conftest.err; then if eval \${$3+:} false; then : if eval \${$3+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_cpp "$LINENO"; then : if eval \${$3+:} false; then : if { { ac_try="$ac_link" if eval \${$3+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test "$cross_compiling" = yes; then if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_lo -le $ac_mid; then if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_mid -le $ac_hi; then if ac_fn_cxx_try_compile "$LINENO"; then : if (! f) if (($2) < 0) if (i != ($2)) if (i != ($2)) if ac_fn_cxx_try_run "$LINENO"; then : if { { ac_try="$ac_link" if test -s conftest.err; then if eval \${$3+:} false; then : Prefer <limits.h> to <assert.h> if __STDC__ is defined, since if ac_fn_cxx_try_link "$LINENO"; then : if eval \${$3+:} false; then : if ac_fn_c_try_compile "$LINENO"; then : running configure, to aid debugging if configure makes a mistake. if test $ac_must_keep_next = true; then if test -n "$ac_subst_files"; then if test -s confdefs.h; then if test -n "$CONFIG_SITE"; then elif test "x$prefix" != xNONE; then if test /dev/null != "$ac_site_file" && test -r "$ac_site_file"; then if test -r "$cache_file"; then if test /dev/null != "$cache_file" && test -f "$cache_file"; then if test "x$ac_old_val" != "x$ac_new_val"; then if test "$ac_old_val_w" != "$ac_new_val_w"; then if test "$ac_new_set" = set; then if $ac_cache_corrupted; then if test -f "$ac_dir/install-sh"; then elif test -f "$ac_dir/install.sh"; then elif test -f "$ac_dir/shtool"; then if test -z "$ac_aux_dir"; then if test "${with_custom_make_dir+set}" = set; then : if test "x$CONFIGURE_PRINT_TOOLCHAIN_LIST" != x; then if test "x$BASENAME" = x; then if ${ac_cv_path_BASENAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASENAME"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBASENAME" != xBASH; then if ${ac_cv_path_BASENAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASENAME"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BASENAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASENAME"; then if test "x$BASENAME" = x; then if test ! -x "$tool_specified"; then if test "x$BASENAME" = x; then if test "x$BASH" = x; then if ${ac_cv_path_BASH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASH"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBASH" != xBASH; then if ${ac_cv_path_BASH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASH"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BASH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BASH"; then if test "x$BASH" = x; then if test ! -x "$tool_specified"; then if test "x$BASH" = x; then if test "x$CAT" = x; then if ${ac_cv_path_CAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CAT"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCAT" != xBASH; then if ${ac_cv_path_CAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CAT"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CAT"; then if test "x$CAT" = x; then if test ! -x "$tool_specified"; then if test "x$CAT" = x; then if test "x$CHMOD" = x; then if ${ac_cv_path_CHMOD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHMOD"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCHMOD" != xBASH; then if ${ac_cv_path_CHMOD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHMOD"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CHMOD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHMOD"; then if test "x$CHMOD" = x; then if test ! -x "$tool_specified"; then if test "x$CHMOD" = x; then if test "x$CMP" = x; then if ${ac_cv_path_CMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CMP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCMP" != xBASH; then if ${ac_cv_path_CMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CMP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CMP"; then if test "x$CMP" = x; then if test ! -x "$tool_specified"; then if test "x$CMP" = x; then if test "x$COMM" = x; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCOMM" != xBASH; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$COMM" = x; then if test ! -x "$tool_specified"; then if test "x$COMM" = x; then if test "x$CP" = x; then if ${ac_cv_path_CP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCP" != xBASH; then if ${ac_cv_path_CP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CP"; then if test "x$CP" = x; then if test ! -x "$tool_specified"; then if test "x$CP" = x; then if test "x$CUT" = x; then if ${ac_cv_path_CUT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CUT"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCUT" != xBASH; then if ${ac_cv_path_CUT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CUT"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CUT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CUT"; then if test "x$CUT" = x; then if test ! -x "$tool_specified"; then if test "x$CUT" = x; then if test "x$DATE" = x; then if ${ac_cv_path_DATE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DATE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xDATE" != xBASH; then if ${ac_cv_path_DATE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DATE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_DATE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DATE"; then if test "x$DATE" = x; then if test ! -x "$tool_specified"; then if test "x$DATE" = x; then if test "x$DIFF" = x; then if ${ac_cv_path_DIFF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIFF"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xDIFF" != xBASH; then if ${ac_cv_path_DIFF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIFF"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_DIFF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIFF"; then if test "x$DIFF" = x; then if test ! -x "$tool_specified"; then if test "x$DIFF" = x; then if test "x$DIRNAME" = x; then if ${ac_cv_path_DIRNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIRNAME"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xDIRNAME" != xBASH; then if ${ac_cv_path_DIRNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIRNAME"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_DIRNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DIRNAME"; then if test "x$DIRNAME" = x; then if test ! -x "$tool_specified"; then if test "x$DIRNAME" = x; then if test "x$ECHO" = x; then if ${ac_cv_path_ECHO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ECHO"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xECHO" != xBASH; then if ${ac_cv_path_ECHO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ECHO"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_ECHO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ECHO"; then if test "x$ECHO" = x; then if test ! -x "$tool_specified"; then if test "x$ECHO" = x; then if test "x$EXPR" = x; then if ${ac_cv_path_EXPR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$EXPR"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xEXPR" != xBASH; then if ${ac_cv_path_EXPR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$EXPR"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_EXPR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$EXPR"; then if test "x$EXPR" = x; then if test ! -x "$tool_specified"; then if test "x$EXPR" = x; then if test "x$FILE" = x; then if ${ac_cv_path_FILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FILE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xFILE" != xBASH; then if ${ac_cv_path_FILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FILE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_FILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FILE"; then if test "x$FILE" = x; then if test ! -x "$tool_specified"; then if test "x$FILE" = x; then if test "x$FIND" = x; then if ${ac_cv_path_FIND+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FIND"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xFIND" != xBASH; then if ${ac_cv_path_FIND+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FIND"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_FIND+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FIND"; then if test "x$FIND" = x; then if test ! -x "$tool_specified"; then if test "x$FIND" = x; then if test "x$HEAD" = x; then if ${ac_cv_path_HEAD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HEAD"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xHEAD" != xBASH; then if ${ac_cv_path_HEAD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HEAD"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_HEAD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HEAD"; then if test "x$HEAD" = x; then if test ! -x "$tool_specified"; then if test "x$HEAD" = x; then if test "x$LN" = x; then if ${ac_cv_path_LN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LN"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xLN" != xBASH; then if ${ac_cv_path_LN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LN"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_LN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LN"; then if test "x$LN" = x; then if test ! -x "$tool_specified"; then if test "x$LN" = x; then if test "x$LS" = x; then if ${ac_cv_path_LS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LS"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xLS" != xBASH; then if ${ac_cv_path_LS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LS"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_LS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LS"; then if test "x$LS" = x; then if test ! -x "$tool_specified"; then if test "x$LS" = x; then if test "x$MKDIR" = x; then if ${ac_cv_path_MKDIR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKDIR"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xMKDIR" != xBASH; then if ${ac_cv_path_MKDIR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKDIR"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_MKDIR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKDIR"; then if test "x$MKDIR" = x; then if test ! -x "$tool_specified"; then if test "x$MKDIR" = x; then if test "x$MKTEMP" = x; then if ${ac_cv_path_MKTEMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKTEMP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xMKTEMP" != xBASH; then if ${ac_cv_path_MKTEMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKTEMP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_MKTEMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MKTEMP"; then if test "x$MKTEMP" = x; then if test ! -x "$tool_specified"; then if test "x$MKTEMP" = x; then if test "x$MV" = x; then if ${ac_cv_path_MV+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MV"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xMV" != xBASH; then if ${ac_cv_path_MV+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MV"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_MV+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MV"; then if test "x$MV" = x; then if test ! -x "$tool_specified"; then if test "x$MV" = x; then if test "x$NAWK" = x; then if ${ac_cv_path_NAWK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NAWK"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xNAWK" != xBASH; then if ${ac_cv_path_NAWK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NAWK"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_NAWK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NAWK"; then if test "x$NAWK" = x; then if test ! -x "$tool_specified"; then if test "x$NAWK" = x; then if test "x$PRINTF" = x; then if ${ac_cv_path_PRINTF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PRINTF"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xPRINTF" != xBASH; then if ${ac_cv_path_PRINTF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PRINTF"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_PRINTF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PRINTF"; then if test "x$PRINTF" = x; then if test ! -x "$tool_specified"; then if test "x$PRINTF" = x; then if test "x$RM" = x; then if ${ac_cv_path_RM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$RM"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xRM" != xBASH; then if ${ac_cv_path_RM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$RM"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_RM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$RM"; then if test "x$RM" = x; then if test ! -x "$tool_specified"; then if test "x$RM" = x; then if test "x$SH" = x; then if ${ac_cv_path_SH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SH"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSH" != xBASH; then if ${ac_cv_path_SH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SH"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_SH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SH"; then if test "x$SH" = x; then if test ! -x "$tool_specified"; then if test "x$SH" = x; then if test "x$SORT" = x; then if ${ac_cv_path_SORT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SORT"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSORT" != xBASH; then if ${ac_cv_path_SORT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SORT"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_SORT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SORT"; then if test "x$SORT" = x; then if test ! -x "$tool_specified"; then if test "x$SORT" = x; then if test "x$TAIL" = x; then if ${ac_cv_path_TAIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAIL"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTAIL" != xBASH; then if ${ac_cv_path_TAIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAIL"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TAIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAIL"; then if test "x$TAIL" = x; then if test ! -x "$tool_specified"; then if test "x$TAIL" = x; then if test "x$TAR" = x; then if ${ac_cv_path_TAR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAR"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTAR" != xBASH; then if ${ac_cv_path_TAR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAR"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TAR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TAR"; then if test "x$TAR" = x; then if test ! -x "$tool_specified"; then if test "x$TAR" = x; then if test "x$TEE" = x; then if ${ac_cv_path_TEE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TEE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTEE" != xBASH; then if ${ac_cv_path_TEE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TEE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TEE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TEE"; then if test "x$TEE" = x; then if test ! -x "$tool_specified"; then if test "x$TEE" = x; then if test "x$TOUCH" = x; then if ${ac_cv_path_TOUCH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TOUCH"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTOUCH" != xBASH; then if ${ac_cv_path_TOUCH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TOUCH"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TOUCH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TOUCH"; then if test "x$TOUCH" = x; then if test ! -x "$tool_specified"; then if test "x$TOUCH" = x; then if test "x$TR" = x; then if ${ac_cv_path_TR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TR"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTR" != xBASH; then if ${ac_cv_path_TR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TR"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TR"; then if test "x$TR" = x; then if test ! -x "$tool_specified"; then if test "x$TR" = x; then if test "x$UNAME" = x; then if ${ac_cv_path_UNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNAME"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xUNAME" != xBASH; then if ${ac_cv_path_UNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNAME"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_UNAME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNAME"; then if test "x$UNAME" = x; then if test ! -x "$tool_specified"; then if test "x$UNAME" = x; then if test "x$UNIQ" = x; then if ${ac_cv_path_UNIQ+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNIQ"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xUNIQ" != xBASH; then if ${ac_cv_path_UNIQ+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNIQ"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_UNIQ+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNIQ"; then if test "x$UNIQ" = x; then if test ! -x "$tool_specified"; then if test "x$UNIQ" = x; then if test "x$WC" = x; then if ${ac_cv_path_WC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WC"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xWC" != xBASH; then if ${ac_cv_path_WC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WC"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_WC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WC"; then if test "x$WC" = x; then if test ! -x "$tool_specified"; then if test "x$WC" = x; then if test "x$WHICH" = x; then if ${ac_cv_path_WHICH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WHICH"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xWHICH" != xBASH; then if ${ac_cv_path_WHICH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WHICH"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_WHICH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$WHICH"; then if test "x$WHICH" = x; then if test ! -x "$tool_specified"; then if test "x$WHICH" = x; then if test "x$XARGS" = x; then if ${ac_cv_path_XARGS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XARGS"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xXARGS" != xBASH; then if ${ac_cv_path_XARGS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XARGS"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_XARGS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XARGS"; then if test "x$XARGS" = x; then if test ! -x "$tool_specified"; then if test "x$XARGS" = x; then if test "x$AWK" = x; then if ${ac_cv_prog_AWK+:} false; then : if test -n "$AWK"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AWK"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xAWK" != xBASH; then if ${ac_cv_prog_AWK+:} false; then : if test -n "$AWK"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AWK"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_AWK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AWK"; then if test "x$AWK" = x; then if test ! -x "$tool_specified"; then if test "x$AWK" = x; then if test "x$GREP" = x; then if ${ac_cv_path_GREP+:} false; then : if test -z "$GREP"; then if test $ac_count -gt ${ac_path_GREP_max-0}; then if test -z "$ac_cv_path_GREP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xGREP" != xBASH; then if ${ac_cv_path_GREP+:} false; then : if test -z "$GREP"; then if test $ac_count -gt ${ac_path_GREP_max-0}; then if test -z "$ac_cv_path_GREP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_GREP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GREP"; then if test "x$GREP" = x; then if test ! -x "$tool_specified"; then if test "x$GREP" = x; then if test "x$EGREP" = x; then if ${ac_cv_path_EGREP+:} false; then : if echo a | $GREP -E '(a|b)' >/dev/null 2>&1 if test -z "$EGREP"; then if test $ac_count -gt ${ac_path_EGREP_max-0}; then if test -z "$ac_cv_path_EGREP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xEGREP" != xBASH; then if ${ac_cv_path_EGREP+:} false; then : if echo a | $GREP -E '(a|b)' >/dev/null 2>&1 if test -z "$EGREP"; then if test $ac_count -gt ${ac_path_EGREP_max-0}; then if test -z "$ac_cv_path_EGREP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_EGREP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$EGREP"; then if test "x$EGREP" = x; then if test ! -x "$tool_specified"; then if test "x$EGREP" = x; then if test "x$FGREP" = x; then if ${ac_cv_path_FGREP+:} false; then : if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1 if test -z "$FGREP"; then if test $ac_count -gt ${ac_path_FGREP_max-0}; then if test -z "$ac_cv_path_FGREP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xFGREP" != xBASH; then if ${ac_cv_path_FGREP+:} false; then : if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1 if test -z "$FGREP"; then if test $ac_count -gt ${ac_path_FGREP_max-0}; then if test -z "$ac_cv_path_FGREP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_FGREP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$FGREP"; then if test "x$FGREP" = x; then if test ! -x "$tool_specified"; then if test "x$FGREP" = x; then if test "x$SED" = x; then if ${ac_cv_path_SED+:} false; then : if test -z "$SED"; then if test $ac_count -gt ${ac_path_SED_max-0}; then if test -z "$ac_cv_path_SED"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSED" != xBASH; then if ${ac_cv_path_SED+:} false; then : if test -z "$SED"; then if test $ac_count -gt ${ac_path_SED_max-0}; then if test -z "$ac_cv_path_SED"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_SED+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SED"; then if test "x$SED" = x; then if test ! -x "$tool_specified"; then if test "x$SED" = x; then if test "x$CYGPATH" = x; then if ${ac_cv_path_CYGPATH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CYGPATH"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCYGPATH" != xBASH; then if ${ac_cv_path_CYGPATH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CYGPATH"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CYGPATH+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CYGPATH"; then if test "x$CYGPATH" = x; then if test ! -x "$tool_specified"; then if test "x$READLINK" = x; then if ${ac_cv_path_READLINK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READLINK"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xREADLINK" != xBASH; then if ${ac_cv_path_READLINK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READLINK"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_READLINK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READLINK"; then if test "x$READLINK" = x; then if test ! -x "$tool_specified"; then if test "x$DF" = x; then if ${ac_cv_path_DF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DF"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xDF" != xBASH; then if ${ac_cv_path_DF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DF"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_DF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DF"; then if test "x$DF" = x; then if test ! -x "$tool_specified"; then if test "x$SETFILE" = x; then if ${ac_cv_path_SETFILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SETFILE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSETFILE" != xBASH; then if ${ac_cv_path_SETFILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SETFILE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_SETFILE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$SETFILE"; then if test "x$SETFILE" = x; then if test ! -x "$tool_specified"; then if test "x$CPIO" = x; then if ${ac_cv_path_CPIO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CPIO"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCPIO" != xBASH; then if ${ac_cv_path_CPIO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CPIO"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CPIO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CPIO"; then if test "x$CPIO" = x; then if test ! -x "$tool_specified"; then if ${ac_cv_build+:} false; then : if ${ac_cv_host+:} false; then : if test "x$host_alias" = x; then if ${ac_cv_target+:} false; then : if test "x$target_alias" = x; then if test "${with_target_bits+set}" = set; then : if test "x$OPENJDK_BUILD_AUTOCONF_NAME" != "x$OPENJDK_TARGET_AUTOCONF_NAME"; then if test "x$with_target_bits" != x; then if test "x$COMPILE_TYPE" = "xcross"; then if test "x$with_target_bits" = x32 && test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$OPENJDK_TARGET_CPU_ARCH" = "xx86"; then elif test "x$OPENJDK_TARGET_CPU_ARCH" = "xsparc"; then elif test "x$with_target_bits" = x64 && test "x$OPENJDK_TARGET_CPU_BITS" = x32; then elif test "x$with_target_bits" = "x$OPENJDK_TARGET_CPU_BITS"; then if test "x$OPENJDK_TARGET_OS" = "xsolaris"; then if test "x$OPENJDK_TARGET_OS" = "xlinux"; then if test "x$OPENJDK_TARGET_OS" = "xwindows"; then if test "x$OPENJDK_TARGET_CPU_BITS" = "x64"; then if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then if test "x$OPENJDK_TARGET_CPU" = xx86; then elif test "x$OPENJDK_TARGET_OS" != xmacosx && test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$OPENJDK_TARGET_CPU" = xx86; then elif test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_CPU" = xx86_64; then elif test "x$OPENJDK_TARGET_CPU" = xsparcv9; then if test "x$OPENJDK_TARGET_OS" = xlinux && test "x$OPENJDK_TARGET_CPU" = xx86; then elif test "x$OPENJDK_TARGET_OS" != xmacosx && test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$OPENJDK_TARGET_CPU" = xx86; then elif test "x$OPENJDK_TARGET_OS" != xmacosx && test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_CPU_ARCH" = xsparc; then elif test "x$OPENJDK_TARGET_CPU_ARCH" = xx86; then elif test "x$OPENJDK_TARGET_OS" = xmacosx && test "x$TOOLCHAIN_TYPE" = xclang ; then if test "x$OPENJDK_TARGET_OS_API" = xposix; then if test "x$OPENJDK_TARGET_OS_API" = xwinapi; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$OPENJDK_TARGET_OS" = xlinux || test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$COMPILE_TYPE" = "xcross"; then if test "x$OPENJDK_TARGET_OS" = "xwindows"; then if test $SRC_ROOT_LENGTH -gt 100; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$CYGWIN_VERSION_OLD" != x; then if test "x$CYGPATH" = x; then if test "x$test_cygdrive_prefix" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x`echo $FIND_BINARY_OUTPUT | $GREP GNU`" != x; then elif test "x`echo $FIND_BINARY_OUTPUT | $GREP FIND`" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "${enable_openjdk_only+set}" = set; then : if test -d "$SRC_ROOT/jdk/src/closed"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if closed source is suppressed (openjdk-only)" >&5 $as_echo_n "checking if closed source is suppressed (openjdk-only)... " >&6; } if test "x$CLOSED_SOURCE_PRESENT" = xno; then if test "x$SUPPRESS_CLOSED_SOURCE" = "xyes"; then if test "x$SUPPRESS_CLOSED_SOURCE" = "xyes"; then if test "x$OPENJDK" = "xtrue"; then if test "${with_jdk_variant+set}" = set; then : if test "x$with_jdk_variant" = xnormal || test "x$with_jdk_variant" = x; then if test "${with_jvm_interpreter+set}" = set; then : if test "x$with_jvm_interpreter" = x; then if test "x$JVM_INTERPRETER" != xtemplate && test "x$JVM_INTERPRETER" != xcpp; then if test "${with_jvm_variants+set}" = set; then : if test "x$with_jvm_variants" = x; then if test "x$TEST_VARIANTS" != "x,"; then if test "x$JVM_VARIANT_CLIENT" = xtrue; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$JVM_VARIANT_KERNEL" = xtrue; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$JVM_VARIANT_MINIMAL1" = xtrue; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$COUNT_VARIANTS" != "x,1"; then if test "x$JVM_VARIANT_ZERO" = xtrue ; then if test "x$JVM_VARIANT_ZEROSHARK" = xtrue ; then if test "x$VAR_CPU" = xppc64 -o "x$VAR_CPU" = xppc64le ; then if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then if test "${enable_debug+set}" = set; then : if test "${with_debug_level+set}" = set; then : if test "x$ENABLE_DEBUG" = xyes; then if test "x$DEBUG_LEVEL" != xrelease && \ if test "x$JVM_VARIANT_SERVER" = xtrue; then if test "x$JVM_VARIANT_CLIENT" = xtrue; then if test "x$JVM_VARIANT_MINIMAL1" = xtrue; then if test "x$JVM_VARIANT_KERNEL" = xtrue; then if test "x$JVM_VARIANT_ZERO" = xtrue; then if test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then if test "x$JVM_VARIANT_CORE" = xtrue; then if test "x$MACOSX_UNIVERSAL" = xtrue; then if test "${with_devkit+set}" = set; then : if test "x$with_devkit" = xyes; then elif test "x$with_devkit" != x && test "x$with_devkit" != xno; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test -f "$DEVKIT_ROOT/devkit.info"; then if test "x$DEVKIT_NAME" = x; then if test "x$DEVKIT_EXTRA_PATH" = x; then if test "x$DEVKIT_TOOLCHAIN_PATH" = x; then if test "x$DEVKIT_SYSROOT" = x; then if test "x$DEVKIT_VS_VERSION" = x; then if test "x$DEVKIT_VS_INCLUDE" = x; then if test "x$DEVKIT_VS_LIB" = x; then if test "x$DEVKIT_MSVCR_DLL" = x; then if test "x$DEVKIT_VCRUNTIME_1_DLL" = x; then if test "x$DEVKIT_MSVCP_DLL" = x; then if test "x$DEVKIT_UCRT_DLL_DIR" = x; then if test "x$DEVKIT_NAME" != x; then if test "x$DEVKIT_EXTRA_PATH" != x; then if test "x$EXTRA_PATH" = x; then if test "x$DEVKIT_TOOLCHAIN_PATH" = x; then if test "x$DEVKIT_TOOLCHAIN_PATH" != x; then if test "x$TOOLCHAIN_PATH" = x; then if test "x$DEVKIT_SYSROOT" != x; then elif test -d "$DEVKIT_ROOT/$host_alias/libc"; then elif test -d "$DEVKIT_ROOT/$host/sys-root"; then if test "x$DEVKIT_ROOT" != x; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "${with_sys_root+set}" = set; then : if test "${with_sysroot+set}" = set; then : if test "${with_tools_dir+set}" = set; then : if test "x$with_tools_dir" != x; then if test "x$TOOLCHAIN_PATH" = x; then if test "${with_toolchain_path+set}" = set; then : if test "x$with_toolchain_path" != x; then if test "x$TOOLCHAIN_PATH" = x; then if test "${with_extra_path+set}" = set; then : if test "x$with_extra_path" != x; then if test "x$EXTRA_PATH" = x; then if test "x$EXTRA_PATH" != x; then if test "x$PATH" = x; then if test "x$OPENJDK_BUILD_OS" = "xsolaris"; then if test "${with_xcode_path+set}" = set; then : if test "${with_conf_name+set}" = set; then : if test "x$CURDIR" = "x$SRC_ROOT" || test "x$CURDIR" = "x$SRC_ROOT/common" \ if test "x${CONF_NAME}" = x; then if test ! -d "$OUTPUT_ROOT"; then if test "x${CONF_NAME}" = x; then if test ! -e "$OUTPUT_ROOT/spec.gmk"; then if test "x$filtered_files" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if ${ac_cv_prog_PKGHANDLER+:} false; then : if test -n "$PKGHANDLER"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PKGHANDLER"; then if test "x$MAKE" != x; then if test ! -f "$MAKE"; then if test "x$MAKE_CANDIDATE" != x; then if test "x$IS_GNU_MAKE" = x; then if test "x$IS_MODERN_MAKE" = x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_MAKE_CORRECT_ENV" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$FOUND_MAKE" = x; then if ${ac_cv_path_CHECK_GMAKE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHECK_GMAKE"; then if test "x$MAKE_CANDIDATE" != x; then if test "x$IS_GNU_MAKE" = x; then if test "x$IS_MODERN_MAKE" = x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_MAKE_CORRECT_ENV" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$FOUND_MAKE" = x; then if ${ac_cv_path_CHECK_MAKE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHECK_MAKE"; then if test "x$MAKE_CANDIDATE" != x; then if test "x$IS_GNU_MAKE" = x; then if test "x$IS_MODERN_MAKE" = x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_MAKE_CORRECT_ENV" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$FOUND_MAKE" = x; then if test "x$TOOLCHAIN_PATH" != x; then if ${ac_cv_path_CHECK_TOOLSDIR_GMAKE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHECK_TOOLSDIR_GMAKE"; then if test "x$MAKE_CANDIDATE" != x; then if test "x$IS_GNU_MAKE" = x; then if test "x$IS_MODERN_MAKE" = x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_MAKE_CORRECT_ENV" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$FOUND_MAKE" = x; then if ${ac_cv_path_CHECK_TOOLSDIR_MAKE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CHECK_TOOLSDIR_MAKE"; then if test "x$MAKE_CANDIDATE" != x; then if test "x$IS_GNU_MAKE" = x; then if test "x$IS_MODERN_MAKE" = x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_MAKE_CORRECT_ENV" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$FOUND_MAKE" = x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if find supports -delete" >&5 $as_echo_n "checking if find supports -delete... " >&6; } if test -f $DELETEDIR/TestIfFindSupportsDelete; then if test "x$UNZIP" = x; then if ${ac_cv_path_UNZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNZIP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xUNZIP" != xBASH; then if ${ac_cv_path_UNZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNZIP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_UNZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$UNZIP"; then if test "x$UNZIP" = x; then if test ! -x "$tool_specified"; then if test "x$UNZIP" = x; then if test "x$ZIP" = x; then if ${ac_cv_path_ZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ZIP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xZIP" != xBASH; then if ${ac_cv_path_ZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ZIP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_ZIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ZIP"; then if test "x$ZIP" = x; then if test ! -x "$tool_specified"; then if test "x$ZIP" = x; then if test "x$LDD" = x; then if ${ac_cv_path_LDD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LDD"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xLDD" != xBASH; then if ${ac_cv_path_LDD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LDD"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_LDD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LDD"; then if test "x$LDD" = x; then if test ! -x "$tool_specified"; then if test "x$LDD" = "x"; then if test "x$READELF" = x; then if ${ac_cv_path_READELF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READELF"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xREADELF" != xBASH; then if ${ac_cv_path_READELF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READELF"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_READELF+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$READELF"; then if test "x$READELF" = x; then if test ! -x "$tool_specified"; then if test "x$HG" = x; then if ${ac_cv_path_HG+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HG"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xHG" != xBASH; then if ${ac_cv_path_HG+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HG"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_HG+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$HG"; then if test "x$HG" = x; then if test ! -x "$tool_specified"; then if test "x$GIT" = x; then if ${ac_cv_path_GIT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GIT"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xGIT" != xBASH; then if ${ac_cv_path_GIT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GIT"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_GIT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GIT"; then if test "x$GIT" = x; then if test ! -x "$tool_specified"; then if test "x$STAT" = x; then if ${ac_cv_path_STAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STAT"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSTAT" != xBASH; then if ${ac_cv_path_STAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STAT"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_STAT+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STAT"; then if test "x$STAT" = x; then if test ! -x "$tool_specified"; then if test "x$TIME" = x; then if ${ac_cv_path_TIME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TIME"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xTIME" != xBASH; then if ${ac_cv_path_TIME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TIME"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_TIME+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TIME"; then if test "x$TIME" = x; then if test ! -x "$tool_specified"; then if test "x$IS_GNU_TIME" != x; then if test "x$OPENJDK_TARGET_OS" = "xwindows"; then if test "x$COMM" = x; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCOMM" != xBASH; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_COMM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$COMM"; then if test "x$COMM" = x; then if test ! -x "$tool_specified"; then if test "x$COMM" = x; then if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then if test "x$DSYMUTIL" = x; then if ${ac_cv_path_DSYMUTIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DSYMUTIL"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xDSYMUTIL" != xBASH; then if ${ac_cv_path_DSYMUTIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DSYMUTIL"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_DSYMUTIL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DSYMUTIL"; then if test "x$DSYMUTIL" = x; then if test ! -x "$tool_specified"; then if test "x$DSYMUTIL" = x; then if test "x$XATTR" = x; then if ${ac_cv_path_XATTR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XATTR"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xXATTR" != xBASH; then if ${ac_cv_path_XATTR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XATTR"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_XATTR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XATTR"; then if test "x$XATTR" = x; then if test ! -x "$tool_specified"; then if test "x$XATTR" = x; then if test "x$CODESIGN" = x; then if ${ac_cv_path_CODESIGN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CODESIGN"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCODESIGN" != xBASH; then if ${ac_cv_path_CODESIGN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CODESIGN"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CODESIGN+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CODESIGN"; then if test "x$CODESIGN" = x; then if test ! -x "$tool_specified"; then if test "x$CODESIGN" != "x"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if openjdk_codesign certificate is present" >&5 $as_echo_n "checking if openjdk_codesign certificate is present... " >&6; } if test "x$CODESIGN" = x; then if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then if test -n "$ac_tool_prefix"; then if ${ac_cv_path_PKG_CONFIG+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PKG_CONFIG"; then if test -z "$ac_cv_path_PKG_CONFIG"; then if ${ac_cv_path_ac_pt_PKG_CONFIG+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_pt_PKG_CONFIG"; then if test "x$ac_pt_PKG_CONFIG" = x; then if test -n "$PKG_CONFIG"; then if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then if test "${with_builddeps_conf+set}" = set; then : if test "${with_builddeps_server+set}" = set; then : if test "${with_builddeps_dir+set}" = set; then : if test "${with_builddeps_group+set}" = set; then : if test "x$with_builddeps_server" != x || test "x$with_builddeps_conf" != x; then if test "x$with_builddeps_conf" != x; then if test -s $builddepsfile; then if test -s $builddepsfile; then if test "x$rewritten_build" = x; then if test "x$rewritten_target" = x; then if ${ac_cv_prog_BDEPS_UNZIP+:} false; then : if test -n "$BDEPS_UNZIP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BDEPS_UNZIP"; then if test "x$BDEPS_UNZIP" = x7z; then if ${ac_cv_prog_BDEPS_FTP+:} false; then : if test -n "$BDEPS_FTP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BDEPS_FTP"; then if test "${enable_headful+set}" = set; then : if test "x$SUPPORT_HEADFUL" = xyes; then if test "x$SUPPORT_HEADFUL" = xno; then if test "${enable_hotspot_test_in_build+set}" = set; then : if test "x$enable_hotspot_test_in_build" = "xyes"; then if test "${with_cacerts_file+set}" = set; then : if test "x$with_cacerts_file" != x; then if test "${enable_unlimited_crypto+set}" = set; then : if test "x$enable_unlimited_crypto" = "xyes"; then if test "${enable_jfr+set}" = set; then : if test "x$enable_jfr" = "xno"; then elif test "x$enable_jfr" = "xyes" -o "x$enable_jfr" = "xauto"; then if test "x$JVM_VARIANT_MINIMAL1" = "xtrue" -o "x$JVM_VARIANT_ZERO" = "xtrue"; then if test "x$enable_jfr" = "xyes"; then elif test "x$OPENJDK_TARGET_OS" = xaix; then if test "x$enable_jfr" = "xyes"; then if test "${with_milestone+set}" = set; then : if test "x$with_milestone" = xyes; then elif test "x$with_milestone" != x; then if test "x$MILESTONE" = x; then if test "${with_update_version+set}" = set; then : if test "x$with_update_version" = xyes; then elif test "x$with_update_version" != x; then if test "${ if test "${with_user_release_suffix+set}" = set; then : if test "x$with_user_release_suffix" = xyes; then elif test "x$with_user_release_suffix" != x; then if test "${with_build_number+set}" = set; then : if test "x$with_build_number" = xyes; then elif test "x$with_build_number" != x; then if test "x$JDK_BUILD_NUMBER" = x; then if test "x$USER_RELEASE_SUFFIX" = x; then if test "${with_vendor_name+set}" = set; then : if test "x$with_vendor_name" = xyes; then elif ! [[ $with_vendor_name =~ ^[[:print:]]*$ ]] ; then elif test "x$with_vendor_name" != x; then if test "${with_vendor_url+set}" = set; then : if test "x$with_vendor_url" = xyes; then elif ! [[ $with_vendor_url =~ ^[[:print:]]*$ ]] ; then elif test "x$with_vendor_url" != x; then if test "${with_vendor_bug_url+set}" = set; then : if test "x$with_vendor_bug_url" = xyes; then elif ! [[ $with_vendor_bug_url =~ ^[[:print:]]*$ ]] ; then elif test "x$with_vendor_bug_url" != x; then if test "${with_vendor_vm_bug_url+set}" = set; then : if test "x$with_vendor_vm_bug_url" = xyes; then elif ! [[ $with_vendor_vm_bug_url =~ ^[[:print:]]*$ ]] ; then if test "${with_copyright_year+set}" = set; then : if test "x$with_copyright_year" = xyes; then elif test "x$with_copyright_year" != x; then if test "x$JDK_UPDATE_VERSION" != x; then if test "${with_boot_jdk+set}" = set; then : if test "x$BOOT_JDK_FOUND" = xno; then if test "x$with_boot_jdk" != x; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$with_boot_jdk" != x && test "x$BOOT_JDK_FOUND" = xno; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$with_builddeps_server" != x || test "x$with_builddeps_conf" != x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" != x; then if test -d ${resource}; then if test ! -f $installdir/$filename.unpacked; then if test ! -d $installdir; then if test ! -d $installdir; then if test ! -f $tmpfile; then if test "x$BDEPS_FTP" = xwget; then if test "x$BDEPS_FTP" = xlftp; then if test "x$BDEPS_FTP" = xftp; then if test "x$FTPSERVER" != "x$FTPUSERPWD"; then if test "x$VALID_TOOL" != xyes; then if test ! -s $installdir/$filename; then if test -f $installdir/$filename.unpacked; then if test "x$depdir" = x; then if test "x$theroot" != x; then if test "x$thecflags" != x; then if test "x$thelibs" != x; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$JAVA_HOME" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test ! -d "$JAVA_HOME_PROCESSED"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test -x /usr/libexec/java_home; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if ${ac_cv_path_JAVAC_CHECK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$JAVAC_CHECK"; then if ${ac_cv_path_JAVA_CHECK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$JAVA_CHECK"; then if test "x$JAVAC_CHECK" = x; then if test "x$BINARY" != x; then if test "x$OPENJDK_BUILD_OS" != xwindows; then if test "x$READLINK_TESTED" != yes; then if test "x$ISGNU" = x; then if test "x$READLINK" != x; then if test "x$ISLINK" == x; then if test -x "$BOOT_JDK/bin/javac" && test -x "$BOOT_JDK/bin/java"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ProgramW6432" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$PROGRAMW6432" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$PROGRAMFILES" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ProgramFiles" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then elif test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then elif test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$ALL_JDKS_FOUND" != x; then if test "x$BOOT_JDK_FOUND" = xno; then if test -d "$BOOT_JDK"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xmaybe; then if test ! -x "$BOOT_JDK/bin/java"; then if test ! -x "$BOOT_JDK/bin/javac"; then if test ! -f "$BOOT_JDK/jre/lib/rt.jar" && test ! -f "$BOOT_JDK/../Classes/classes.jar"; then if test "x$FOUND_VERSION_78" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$BOOT_JDK_FOUND" = xno; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test ! -f "$BOOT_RTJAR"; then if test -f "$BOOT_RTJAR"; then if test ! -x $JAVA; then if test ! -x $JAVAC; then if test ! -x $JAVAH; then if test ! -x $JAVAP; then if test ! -x $JAR; then if test ! -x $RMIC; then if test ! -x $NATIVE2ASCII; then if "$JAVA" -d64 -version > /dev/null 2>&1; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if Boot JDK is 32 or 64 bits" >&5 $as_echo_n "checking if Boot JDK is 32 or 64 bits... " >&6; } if test "${with_boot_jdk_jvmargs+set}" = set; then : $ECHO "Check if jvm arg is ok: -XX:-PrintVMOptions -XX:-UnlockDiagnosticVMOptions -XX:-LogVMOutput" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: $with_boot_jdk_jvmargs" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -Xms64M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "x$BOOT_JDK_BITS" = x32; then $ECHO "Check if jvm arg is ok: -Xmx$JVM_MAX_HEAP" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -XX:ThreadStackSize=$STACK_SIZE" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -XX:PermSize=32m" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -XX:MaxPermSize=160m" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -XX:+UseSerialGC" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -Xms32M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -Xmx512M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "${with_add_source_root+set}" = set; then : if test "${with_override_source_root+set}" = set; then : if test "${with_adds_and_overrides+set}" = set; then : if test "x$with_adds_and_overrides" != x; then if test "x$with_add_source_root" != x; then if ! test -d $with_add_source_root; then if test -f $with_add_source_root/langtools/make/Makefile; then if test -f $with_add_source_root/corba/make/Makefile; then if test -f $with_add_source_root/jaxp/make/Makefile; then if test -f $with_add_source_root/jaxws/make/Makefile; then if test -f $with_add_source_root/hotspot/make/Makefile; then if test -f $with_add_source_root/nashorn/make/Makefile; then if test -f $with_add_source_root/jdk/make/Makefile; then if test "x$with_override_source_root" != x; then if ! test -d $with_override_source_root; then if test -f $with_override_source_root/langtools/make/Makefile; then if test -f $with_override_source_root/corba/make/Makefile; then if test -f $with_override_source_root/jaxp/make/Makefile; then if test -f $with_override_source_root/jaxws/make/Makefile; then if test -f $with_override_source_root/hotspot/make/Makefile; then if test -f $with_override_source_root/nashorn/make/Makefile; then if test -f $with_override_source_root/jdk/make/Makefile; then if test "${with_override_langtools+set}" = set; then : if test "${with_override_corba+set}" = set; then : if test "${with_override_jaxp+set}" = set; then : if test "${with_override_jaxws+set}" = set; then : if test "${with_override_hotspot+set}" = set; then : if test "${with_override_nashorn+set}" = set; then : if test "${with_override_jdk+set}" = set; then : if test "x$with_override_langtools" != x; then if ! test -f $LANGTOOLS_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if langtools should be overridden" >&5 $as_echo_n "checking if langtools should be overridden... " >&6; } if test "x$with_override_corba" != x; then if ! test -f $CORBA_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if corba should be overridden" >&5 $as_echo_n "checking if corba should be overridden... " >&6; } if test "x$with_override_jaxp" != x; then if ! test -f $JAXP_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if jaxp should be overridden" >&5 $as_echo_n "checking if jaxp should be overridden... " >&6; } if test "x$with_override_jaxws" != x; then if ! test -f $JAXWS_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if jaxws should be overridden" >&5 $as_echo_n "checking if jaxws should be overridden... " >&6; } if test "x$with_override_hotspot" != x; then if ! test -f $HOTSPOT_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if hotspot should be overridden" >&5 $as_echo_n "checking if hotspot should be overridden... " >&6; } if test "x$with_override_nashorn" != x; then if ! test -f $NASHORN_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if nashorn should be overridden" >&5 $as_echo_n "checking if nashorn should be overridden... " >&6; } if test "x$with_override_jdk" != x; then if ! test -f $JDK_TOPDIR/make/Makefile; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if JDK should be overridden" >&5 $as_echo_n "checking if JDK should be overridden... " >&6; } if test "${with_import_hotspot+set}" = set; then : if test "x$with_import_hotspot" != x; then if ! (test -d $HOTSPOT_DIST/lib && test -d $HOTSPOT_DIST/jre/lib); then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if hotspot should be imported" >&5 $as_echo_n "checking if hotspot should be imported... " >&6; } if test "${with_toolchain_type+set}" = set; then : if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test $? -ne 0; then if test $XCODE_MAJOR_VERSION -ge 5; then if test "x$with_toolchain_type" = xlist; then elif test "x$with_toolchain_type" != x; then if test "x${VALID_TOOLCHAINS/$with_toolchain_type/}" = "x${VALID_TOOLCHAINS}"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$TOOLCHAIN_TYPE" = "x$DEFAULT_TOOLCHAIN"; then if test "x$OPENJDK_BUILD_OS" = "xwindows" \ if ${ac_cv_path_CYGWIN_LINK+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CYGWIN_LINK"; then if test "x$CYGWIN_LINK" != x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the first found link.exe is actually the Cygwin link tool" >&5 $as_echo_n "checking if the first found link.exe is actually the Cygwin link tool... " >&6; } if test $? -eq 0 ; then if test "${with_toolchain_version+set}" = set; then : if test "x$with_toolchain_version" = xlist; then elif test "x$DEVKIT_VS_VERSION" != x; then if test "x$VS_DESCRIPTION" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then elif test "x$with_toolchain_version" != x; then if test "x${VALID_VS_VERSIONS/$with_toolchain_version/}" = "x${VALID_VS_VERSIONS}"; then if test "x$with_tools_dir" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$VS_ENV_CMD" = x; then if test "x$VS_COMNTOOLS" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$PROGRAMFILES" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$PROGRAMFILES_X86" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$VS_EDITIONS" != x; then if test -d "$VS_BASE/$edition"; then if test -d "$VS_BASE"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test -f "$VS_BASE/$VCVARSFILE"; then if test "x$VS_ENV_CMD" = x; then if test "x$SDK_INSTALL_DIR" != x; then if test "x$ProgramW6432" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -d "$WIN_SDK_BASE"; then if test ! -d "$WIN_SDK_BASE/lib"; then elif test -f "$WIN_SDK_BASE/Bin/SetEnv.Cmd"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$PROGRAMW6432" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -d "$WIN_SDK_BASE"; then if test ! -d "$WIN_SDK_BASE/lib"; then elif test -f "$WIN_SDK_BASE/Bin/SetEnv.Cmd"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$PROGRAMFILES" != x; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -d "$WIN_SDK_BASE"; then if test ! -d "$WIN_SDK_BASE/lib"; then elif test -f "$WIN_SDK_BASE/Bin/SetEnv.Cmd"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -d "$WIN_SDK_BASE"; then if test ! -d "$WIN_SDK_BASE/lib"; then elif test -f "$WIN_SDK_BASE/Bin/SetEnv.Cmd"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -d "$WIN_SDK_BASE"; then if test ! -d "$WIN_SDK_BASE/lib"; then elif test -f "$WIN_SDK_BASE/Bin/SetEnv.Cmd"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$VS_ENV_CMD" != x; then if test "$TOOLCHAIN_VERSION" -gt 2013; then if test "x$DEVKIT_VS_VERSION" = x; then if test "x$VS_ENV_CMD" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test ! -s $VS_ENV_TMP_DIR/set-vs-env.sh; then if test "x$VCINSTALLDIR" != x || test "x$WindowsSDKDir" != x \ if test "x$VS_INCLUDE" = x || test "x$VS_LIB" = x; then if test -z "$WINDOWSSDKDIR"; then if test "x$VS_ENV_CMD" = x; then if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then if test -n "$XCODE_PATH"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking Determining if we need to set DEVELOPER_DIR" >&5 $as_echo_n "checking Determining if we need to set DEVELOPER_DIR... " >&6; } if test -n "$DEVELOPER_DIR"; then if test ! -d "$DEVELOPER_DIR"; then if test ! -f "$DEVELOPER_DIR"/usr/bin/xcodebuild; then if ${ac_cv_path_XCODEBUILD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$XCODEBUILD"; then if test -z "$XCODEBUILD"; then if test "${XC_VERSION_PARTS[0]}" != "6" -a "${XC_VERSION_PARTS[0]}" != "9" -a "${XC_VERSION_PARTS[0]}" != "10" -a "${XC_VERSION_PARTS[0]}" != "11" -a "${XC_VERSION_PARTS[0]}" != "12" ; then if test -L "/usr/bin/gcc" -o -L "/usr/bin/g++"; then if test -n "$SDKPATH"; then if test ! -f "$SDKPATH/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h"; then if test -n "$SDKPATH"; then if test -d "$SDKPATH/System/Library/Frameworks/JavaVM.framework/Frameworks" ; then if test "x$OPENJDK_BUILD_OS" = xsolaris; then if test "x$TOOLCHAIN_PATH" != x; then if test "x$CC" != x; then if test "x`basename $CC`" = "x$CC"; then if ${ac_cv_path_POTENTIAL_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$POTENTIAL_CC"; then if test "x$POTENTIAL_CC" != x; then if test ! -x "$CC"; then if test -n "$TOOLCHAIN_PATH"; then if ${ac_cv_path_TOOLCHAIN_PATH_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TOOLCHAIN_PATH_CC"; then if test "x$CC" = x; then if ${ac_cv_path_POTENTIAL_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$POTENTIAL_CC"; then if test "x$CC" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS" != xwindows; then if test "x$READLINK_TESTED" != yes; then if test "x$ISGNU" = x; then if test "x$READLINK" != x; then if test "x$ISLINK" == x; then if test "x$TEST_COMPILER" = "x$SYMLINK_ORIGINAL"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if CC is disguised ccache" >&5 $as_echo_n "checking if CC is disguised ccache... " >&6; } if test "x$COMPILER_BASENAME" = "xccache"; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_PROPER_COMPILER_CC+:} false; then : if test -n "$PROPER_COMPILER_CC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PROPER_COMPILER_CC"; then if test -z "$PROPER_COMPILER_CC"; then if ${ac_cv_prog_ac_ct_PROPER_COMPILER_CC+:} false; then : if test -n "$ac_ct_PROPER_COMPILER_CC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_PROPER_COMPILER_CC"; then if test "x$ac_ct_PROPER_COMPILER_CC" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS" != xwindows; then if test "x$READLINK_TESTED" != yes; then if test "x$ISGNU" = x; then if test "x$READLINK" != x; then if test "x$ISLINK" == x; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xgcc; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test $? -ne 0; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_CC+:} false; then : if test -n "$CC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CC"; then if test -z "$CC"; then if ${ac_cv_prog_ac_ct_CC+:} false; then : if test -n "$ac_ct_CC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_CC"; then if test "x$ac_ct_CC" = x; then if test -s conftest.err; then if { { ac_try="$ac_link_default" if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no; if test -z "$ac_file"; then : if { { ac_try="$ac_link" if test "$cross_compiling" != yes; then if { ac_try='./conftest$ac_cv_exeext' if test "$cross_compiling" = maybe; then if ${ac_cv_objext+:} false; then : if { { ac_try="$ac_compile" if ${ac_cv_c_compiler_gnu+:} false; then : if ac_fn_c_try_compile "$LINENO"; then : if test $ac_compiler_gnu = yes; then if ${ac_cv_prog_cc_g+:} false; then : if ac_fn_c_try_compile "$LINENO"; then : if ac_fn_c_try_compile "$LINENO"; then : if ac_fn_c_try_compile "$LINENO"; then : if test "$ac_test_CFLAGS" = set; then elif test $ac_cv_prog_cc_g = yes; then if test "$GCC" = yes; then if test "$GCC" = yes; then if ${ac_cv_prog_cc_c89+:} false; then : if ac_fn_c_try_compile "$LINENO"; then : if test "x$ac_cv_prog_cc_c89" != xno; then : if test "x$CXX" != x; then if test "x`basename $CXX`" = "x$CXX"; then if ${ac_cv_path_POTENTIAL_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$POTENTIAL_CXX"; then if test "x$POTENTIAL_CXX" != x; then if test ! -x "$CXX"; then if test -n "$TOOLCHAIN_PATH"; then if ${ac_cv_path_TOOLCHAIN_PATH_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$TOOLCHAIN_PATH_CXX"; then if test "x$CXX" = x; then if ${ac_cv_path_POTENTIAL_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$POTENTIAL_CXX"; then if test "x$CXX" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS" != xwindows; then if test "x$READLINK_TESTED" != yes; then if test "x$ISGNU" = x; then if test "x$READLINK" != x; then if test "x$ISLINK" == x; then if test "x$TEST_COMPILER" = "x$SYMLINK_ORIGINAL"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if CXX is disguised ccache" >&5 $as_echo_n "checking if CXX is disguised ccache... " >&6; } if test "x$COMPILER_BASENAME" = "xccache"; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_PROPER_COMPILER_CXX+:} false; then : if test -n "$PROPER_COMPILER_CXX"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$PROPER_COMPILER_CXX"; then if test -z "$PROPER_COMPILER_CXX"; then if ${ac_cv_prog_ac_ct_PROPER_COMPILER_CXX+:} false; then : if test -n "$ac_ct_PROPER_COMPILER_CXX"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_PROPER_COMPILER_CXX"; then if test "x$ac_ct_PROPER_COMPILER_CXX" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS" != xwindows; then if test "x$READLINK_TESTED" != yes; then if test "x$ISGNU" = x; then if test "x$READLINK" != x; then if test "x$ISLINK" == x; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xgcc; then if test $? -ne 0; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test $? -ne 0; then if test -z "$CXX"; then if test -n "$CCC"; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_CXX+:} false; then : if test -n "$CXX"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CXX"; then if test -z "$CXX"; then if ${ac_cv_prog_ac_ct_CXX+:} false; then : if test -n "$ac_ct_CXX"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_CXX"; then if test "x$ac_ct_CXX" = x; then if test -s conftest.err; then if ${ac_cv_cxx_compiler_gnu+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_compiler_gnu = yes; then if ${ac_cv_prog_cxx_g+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test "$ac_test_CXXFLAGS" = set; then elif test $ac_cv_prog_cxx_g = yes; then if test "$GXX" = yes; then if test "$GXX" = yes; then if test "x$CC_VERSION_NUMBER" != "x$CXX_VERSION_NUMBER"; then if [[ "$CC_VERSION_NUMBER" =~ (.*\.){3} ]] ; then if [[ "$CC_VERSION_NUMBER" =~ [0-9]{6} ]] ; then if test -n "$CPP" && test -d "$CPP"; then if test -z "$CPP"; then if ${ac_cv_prog_CPP+:} false; then : if ac_fn_c_try_cpp "$LINENO"; then : if ac_fn_c_try_cpp "$LINENO"; then : if $ac_preproc_ok; then : if ac_fn_c_try_cpp "$LINENO"; then : if ac_fn_c_try_cpp "$LINENO"; then : if $ac_preproc_ok; then : if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test -z "$CXXCPP"; then if ${ac_cv_prog_CXXCPP+:} false; then : if ac_fn_cxx_try_cpp "$LINENO"; then : if ac_fn_cxx_try_cpp "$LINENO"; then : if $ac_preproc_ok; then : if ac_fn_cxx_try_cpp "$LINENO"; then : if ac_fn_cxx_try_cpp "$LINENO"; then : if $ac_preproc_ok; then : if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if ${ac_cv_prog_LD+:} false; then : if test -n "$LD"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test "$as_dir/$ac_word$ac_exec_ext" = "$CYGWIN_LINK"; then if test $ac_prog_rejected = yes; then if test $ if test -n "$LD"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the found link.exe is actually the Visual Studio linker" >&5 $as_echo_n "checking if the found link.exe is actually the Visual Studio linker... " >&6; } if test $? -eq 0 ; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$AS" = x; then if ${ac_cv_path_AS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AS"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xAS" != xBASH; then if ${ac_cv_path_AS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AS"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_AS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AS"; then if test "x$AS" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if ${ac_cv_prog_AR+:} false; then : if test -n "$AR"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AR"; then if test "x$AR" = x; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_AR+:} false; then : if test -n "$AR"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AR"; then if test -z "$AR"; then if ${ac_cv_prog_ac_ct_AR+:} false; then : if test -n "$ac_ct_AR"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_AR"; then if test "x$ac_ct_AR" = x; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xAR" != xBASH; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_AR+:} false; then : if test -n "$AR"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AR"; then if test -z "$AR"; then if ${ac_cv_prog_ac_ct_AR+:} false; then : if test -n "$ac_ct_AR"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_AR"; then if test "x$ac_ct_AR" = x; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_AR+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$AR"; then if test "x$AR" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_OBJC+:} false; then : if test -n "$OBJC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJC"; then if test -z "$OBJC"; then if ${ac_cv_prog_ac_ct_OBJC+:} false; then : if test -n "$ac_ct_OBJC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_OBJC"; then if test "x$ac_ct_OBJC" = x; then if test -s conftest.err; then if ${ac_cv_objc_compiler_gnu+:} false; then : if ac_fn_objc_try_compile "$LINENO"; then : if test $ac_compiler_gnu = yes; then if ${ac_cv_prog_objc_g+:} false; then : if ac_fn_objc_try_compile "$LINENO"; then : if ac_fn_objc_try_compile "$LINENO"; then : if ac_fn_objc_try_compile "$LINENO"; then : if test "$ac_test_OBJCFLAGS" = set; then elif test $ac_cv_prog_objc_g = yes; then if test "$GOBJC" = yes; then if test "$GOBJC" = yes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$LIPO" = x; then if ${ac_cv_path_LIPO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LIPO"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xLIPO" != xBASH; then if ${ac_cv_path_LIPO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LIPO"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_LIPO+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LIPO"; then if test "x$LIPO" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if ${ac_cv_prog_MT+:} false; then : if test -n "$MT"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/bin/mt"; then if test $ac_prog_rejected = yes; then if test $ if test -n "$MT"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if ${ac_cv_prog_RC+:} false; then : if test -n "$RC"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/bin/rc"; then if test $ac_prog_rejected = yes; then if test $ if test -n "$RC"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if ${ac_cv_prog_DUMPBIN+:} false; then : if test -n "$DUMPBIN"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$DUMPBIN"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if ${ac_cv_prog_MSBUILD+:} false; then : if test -n "$MSBUILD"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MSBUILD"; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$STRIP" = x; then if ${ac_cv_path_STRIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSTRIP" != xBASH; then if ${ac_cv_path_STRIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_STRIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test "x$STRIP" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$NM" = x; then if ${ac_cv_path_NM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xNM" != xBASH; then if ${ac_cv_path_NM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_NM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test "x$NM" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$GNM" = x; then if ${ac_cv_path_GNM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GNM"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xGNM" != xBASH; then if ${ac_cv_path_GNM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GNM"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_GNM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$GNM"; then if test "x$GNM" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$MCS" = x; then if ${ac_cv_path_MCS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MCS"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xMCS" != xBASH; then if ${ac_cv_path_MCS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MCS"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_MCS+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$MCS"; then if test "x$MCS" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then elif test "x$OPENJDK_TARGET_OS" != xwindows; then if test "x$STRIP" = x; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_STRIP+:} false; then : if test -n "$STRIP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test -z "$STRIP"; then if ${ac_cv_prog_ac_ct_STRIP+:} false; then : if test -n "$ac_ct_STRIP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_STRIP"; then if test "x$ac_ct_STRIP" = x; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xSTRIP" != xBASH; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_STRIP+:} false; then : if test -n "$STRIP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test -z "$STRIP"; then if ${ac_cv_prog_ac_ct_STRIP+:} false; then : if test -n "$ac_ct_STRIP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_STRIP"; then if test "x$ac_ct_STRIP" = x; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_STRIP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$STRIP"; then if test "x$STRIP" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if ${ac_cv_path_OTOOL+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OTOOL"; then if test "x$OTOOL" = "x"; then if test "x$NM" = x; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_NM+:} false; then : if test -n "$NM"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test -z "$NM"; then if ${ac_cv_prog_ac_ct_NM+:} false; then : if test -n "$ac_ct_NM"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_NM"; then if test "x$ac_ct_NM" = x; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xNM" != xBASH; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_NM+:} false; then : if test -n "$NM"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test -z "$NM"; then if ${ac_cv_prog_ac_ct_NM+:} false; then : if test -n "$ac_ct_NM"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_NM"; then if test "x$ac_ct_NM" = x; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_NM+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$NM"; then if test "x$NM" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_TARGET_OS" = xsolaris || test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$OBJCOPY" = x; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_OBJCOPY+:} false; then : if test -n "$OBJCOPY"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJCOPY"; then if test -z "$OBJCOPY"; then if ${ac_cv_prog_ac_ct_OBJCOPY+:} false; then : if test -n "$ac_ct_OBJCOPY"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_OBJCOPY"; then if test "x$ac_ct_OBJCOPY" = x; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xOBJCOPY" != xBASH; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_OBJCOPY+:} false; then : if test -n "$OBJCOPY"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJCOPY"; then if test -z "$OBJCOPY"; then if ${ac_cv_prog_ac_ct_OBJCOPY+:} false; then : if test -n "$ac_ct_OBJCOPY"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_OBJCOPY"; then if test "x$ac_ct_OBJCOPY" = x; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_OBJCOPY+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJCOPY"; then if test "x$OBJCOPY" = x; then if test ! -x "$tool_specified"; then if test -n "$OBJCOPY"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OBJDUMP" = x; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_OBJDUMP+:} false; then : if test -n "$OBJDUMP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJDUMP"; then if test -z "$OBJDUMP"; then if ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then : if test -n "$ac_ct_OBJDUMP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_OBJDUMP"; then if test "x$ac_ct_OBJDUMP" = x; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xOBJDUMP" != xBASH; then if test -n "$ac_tool_prefix"; then if ${ac_cv_prog_OBJDUMP+:} false; then : if test -n "$OBJDUMP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJDUMP"; then if test -z "$OBJDUMP"; then if ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then : if test -n "$ac_ct_OBJDUMP"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$ac_ct_OBJDUMP"; then if test "x$ac_ct_OBJDUMP" = x; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_OBJDUMP+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$OBJDUMP"; then if test "x$OBJDUMP" = x; then if test ! -x "$tool_specified"; then if test "x$OBJDUMP" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$TOOLCHAIN_TYPE" != "xmicrosoft"; then if test "x$COMPILE_TYPE" = "xcross"; then if test "x$OPENJDK_BUILD_OS" = xmacosx; then if test "x$BUILD_CC" = x; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBUILD_CC" != xBASH; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$BUILD_CC" = x; then if test ! -x "$tool_specified"; then if test "x$BUILD_CXX" = x; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBUILD_CXX" != xBASH; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$BUILD_CXX" = x; then if test ! -x "$tool_specified"; then if test "x$BUILD_CC" = x; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBUILD_CC" != xBASH; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BUILD_CC+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CC"; then if test "x$BUILD_CC" = x; then if test ! -x "$tool_specified"; then if test "x$BUILD_CC" = x; then if test "x$BUILD_CXX" = x; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBUILD_CXX" != xBASH; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BUILD_CXX+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_CXX"; then if test "x$BUILD_CXX" = x; then if test ! -x "$tool_specified"; then if test "x$BUILD_CXX" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$BUILD_LD" = x; then if ${ac_cv_path_BUILD_LD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_LD"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xBUILD_LD" != xBASH; then if ${ac_cv_path_BUILD_LD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_LD"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_BUILD_LD+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$BUILD_LD"; then if test "x$BUILD_LD" = x; then if test ! -x "$tool_specified"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$new_path" = x \ if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$test_shortpath" = x; then if test -f "${new_path}.exe"; then elif test -f "${new_path}.cmd"; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $input_to_shortpath | $GREP ^/usr/bin/`" = x; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x \ if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x`$ECHO $new_path | $GREP ^/bin/`" != x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -z "$is_absolute_path"; then if test -f "$p/$path" && test -x "$p/$path"; then if test "x$new_path" = x; then if test "x$has_space" != x; then if test "x$arguments" != xEOL; then if test "x$complete" != "x$new_complete"; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$TOOLCHAIN_TYPE" = xclang; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$OPENJDK_TARGET_CPU" = "xx86"; then if test "x$COMPILER_CPU_TEST" != "x80x86" -a "x$COMPILER_CPU_TEST" != "xx86"; then elif test "x$OPENJDK_TARGET_CPU" = "xx86_64"; then if test "x$COMPILER_CPU_TEST" != "xx64"; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_OS" = xlinux && test "x$TOOLCHAIN_TYPE" = xgcc; then if $CXX -Xlinker -version-script=version-script.map main.c 2>&5 >&5; then if test "${with_jtreg+set}" = set; then : if test "x$with_jtreg" = xno; then if test "x$with_jtreg" != xyes; then if test "x$JT_HOME" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test ! -f "$JTREGEXE"; then if test "x$JTREGEXE" = x; then if ${ac_cv_path_JTREGEXE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$JTREGEXE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xJTREGEXE" != xBASH; then if ${ac_cv_path_JTREGEXE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$JTREGEXE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_JTREGEXE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$JTREGEXE"; then if test "x$JTREGEXE" = x; then if test ! -x "$tool_specified"; then if test "x$JTREGEXE" = x; then if test "x$TOOLCHAIN_TYPE" = xxlc; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$OPENJDK_TARGET_OS" = xaix; then elif test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$OPENJDK_TARGET_OS" = xlinux; then elif test "x$OPENJDK_TARGET_OS" = xsolaris; then elif test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$OPENJDK_TARGET_OS" = xaix; then if test "x$OPENJDK_TARGET_OS" != xwindows; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$VARIANT" = xOPT; then -d \"JDK_FVER=\$(JDK_MINOR_VERSION),\$(JDK_MICRO_VERSION),\$(if \$(COOKED_JDK_UPDATE_VERSION),\$(COOKED_JDK_UPDATE_VERSION),0),\$(COOKED_BUILD_NUMBER)\"" if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$SYSROOT" != "x"; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then elif test "x$TOOLCHAIN_TYPE" = xgcc; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if ${ac_cv_header_stdc+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_cv_header_stdc = yes; then if (eval "$ac_cpp conftest.$ac_ext") 2>&5 | if test $ac_cv_header_stdc = yes; then if (eval "$ac_cpp conftest.$ac_ext") 2>&5 | if test $ac_cv_header_stdc = yes; then if test "$cross_compiling" = yes; then : if (XOR (islower (i), ISLOWER (i)) if ac_fn_cxx_try_run "$LINENO"; then : if test $ac_cv_header_stdc = yes; then if eval test \"x\$"$as_ac_Header"\" = x"yes"; then : if test "x$OPENJDK_TARGET_OS" = xsolaris || test "x$OPENJDK_TARGET_OS" = xaix; then elif test "x$COMPILE_TYPE" = xreduced; then if test "x$OPENJDK_TARGET_OS" != xwindows; then if test "x$ac_cv_header_stdio_h" = xyes; then : if test "x$COMPILE_TYPE" = xreduced; then elif test "x$COMPILE_TYPE" = xcross; then if ${ac_cv_sizeof_int_p+:} false; then : if ac_fn_cxx_compute_int "$LINENO" "(long int) (sizeof (int *))" "ac_cv_sizeof_int_p" "$ac_includes_default"; then : if test "$ac_cv_type_int_p" = yes; then if test "x$ac_cv_sizeof_int_p" = x; then if test "x$TESTED_TARGET_CPU_BITS" != "x$OPENJDK_TARGET_CPU_BITS"; then if ${ac_cv_sizeof_int_p+:} false; then : if ac_fn_cxx_compute_int "$LINENO" "(long int) (sizeof (int *))" "ac_cv_sizeof_int_p" "$ac_includes_default"; then : if test "$ac_cv_type_int_p" = yes; then if test "x$TESTED_TARGET_CPU_BITS" != "x$OPENJDK_TARGET_CPU_BITS"; then if ${ac_cv_c_bigendian+:} false; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test -n "$ac_prev"; then if test -z "$ac_arch" || test "$ac_arch" = "$ac_word"; then elif test "x$ac_word" = "x-arch"; then if test $ac_cv_c_bigendian = unknown; then if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_cv_c_bigendian = unknown; then if ac_fn_cxx_try_compile "$LINENO"; then : if ac_fn_cxx_try_compile "$LINENO"; then : if test $ac_cv_c_bigendian = unknown; then if test "$cross_compiling" = yes; then : if ac_fn_cxx_try_compile "$LINENO"; then : if grep BIGenDianSyS conftest.$ac_objext >/dev/null; then if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then if test "$ac_cv_c_bigendian" = unknown; then if ac_fn_cxx_try_run "$LINENO"; then : if test "x$ENDIAN" = xuniversal_endianness; then if test "x$ENDIAN" != "x$OPENJDK_TARGET_CPU_ENDIAN"; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$TOOLCHAIN_TYPE" = xsolstudio; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then elif test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$TOOLCHAIN_TYPE" = xgcc; then elif test "x$TOOLCHAIN_TYPE" = xclang; then elif test "x$TOOLCHAIN_TYPE" = xsolstudio; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_CPU_BITS" = "x64" && test "x$DEBUG_LEVEL" = "xfastdebug"; then elif test "x$TOOLCHAIN_TYPE" = xclang; then elif test "x$TOOLCHAIN_TYPE" = xsolstudio; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$OPENJDK_TARGET_CPU_ARCH" = "xx86"; then if test "x$OPENJDK_TARGET_CPU_BITS" = "x32"; then elif test "x$OPENJDK_TARGET_CPU_ARCH" = "xsparc"; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then elif test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$OPENJDK_TARGET_CPU_ARCH" = "xsparc"; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then elif test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_OS" != xmacosx; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$CXXSTD_CXXFLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$CXXSTD_CXXFLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then if test "x$CFLAGS" != "x${ADDED_CFLAGS}"; then if test "x$CXXFLAGS" != "x${ADDED_CXXFLAGS}"; then if test "x$LDFLAGS" != "x${ADDED_LDFLAGS}"; then if test "x$ASFLAGS" != "x"; then if test "${with_extra_cflags+set}" = set; then : if test "${with_extra_cxxflags+set}" = set; then : if test "${with_extra_ldflags+set}" = set; then : if test "${with_extra_asflags+set}" = set; then : if test "x$TOOLCHAIN_TYPE" = xgcc; then if [[ "$REFERENCE_VERSION" =~ (.*\.){3} ]] ; then if [[ "$REFERENCE_VERSION" =~ [0-9]{6} ]] ; then if test $COMPARABLE_ACTUAL_VERSION -ge $COMPARABLE_REFERENCE_VERSION ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C compiler supports \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"" >&5 $as_echo_n "checking if the C compiler supports \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"... " >&6; } if ac_fn_c_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if both compilers support \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"" >&5 $as_echo_n "checking if both compilers support \"$NO_DELETE_NULL_POINTER_CHECKS_CFLAG -Werror\"... " >&6; } if test "x$C_COMP_SUPPORTS" = "xyes" -a "x$CXX_COMP_SUPPORTS" = "xyes"; then supports=yes; fi if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C compiler supports \"$NO_LIFETIME_DSE_CFLAG -Werror\"" >&5 $as_echo_n "checking if the C compiler supports \"$NO_LIFETIME_DSE_CFLAG -Werror\"... " >&6; } if ac_fn_c_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$NO_LIFETIME_DSE_CFLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$NO_LIFETIME_DSE_CFLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if both compilers support \"$NO_LIFETIME_DSE_CFLAG -Werror\"" >&5 $as_echo_n "checking if both compilers support \"$NO_LIFETIME_DSE_CFLAG -Werror\"... " >&6; } if test "x$C_COMP_SUPPORTS" = "xyes" -a "x$CXX_COMP_SUPPORTS" = "xyes"; then supports=yes; fi if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C compiler supports \"-Wformat-overflow -Werror\"" >&5 $as_echo_n "checking if the C compiler supports \"-Wformat-overflow -Werror\"... " >&6; } if ac_fn_c_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"-Wformat-overflow -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"-Wformat-overflow -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if both compilers support \"-Wformat-overflow -Werror\"" >&5 $as_echo_n "checking if both compilers support \"-Wformat-overflow -Werror\"... " >&6; } if test "x$C_COMP_SUPPORTS" = "xyes" -a "x$CXX_COMP_SUPPORTS" = "xyes"; then supports=yes; fi if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$COMPILER_FP_CONTRACT_OFF_FLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$COMPILER_FP_CONTRACT_OFF_FLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then if test "x$COMPILER_FP_CONTRACT_OFF_FLAG" = x; then if test "$OPENJDK_TARGET_CPU_ARCH" = "x86" || { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$M_NO_FUSED_ADD_FLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$M_NO_FUSED_ADD_FLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$NO_STRICT_ALIASING_FLAG -Werror\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$NO_STRICT_ALIASING_FLAG -Werror\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then if test "x$M_NO_FUSED_ADD_FLAG" != "x" && test "x$NO_STRICT_ALIASING_FLAG" != "x"; then elif test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$OPENJDK_TARGET_CPU_ARCH" = xx86; then elif test "x$TOOLCHAIN_TYPE" = xxlc; then elif test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$TOOLCHAIN_VERSION" = "x2010"; then if test "x$OPENJDK_TARGET_CPU_ENDIAN" = xlittle; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_CPU" = xppc64le; then if test "x$DEBUG_LEVEL" = xrelease; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then elif test "x$OPENJDK_TARGET_OS" = xaix; then elif test "x$OPENJDK_TARGET_OS" = xbsd; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$TOOLCHAIN_TYPE" = xgcc; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test "x$TOOLCHAIN_TYPE" = xmicrosoft; then if test "x$OPENJDK_TARGET_CPU_BITS" = "x32"; then if test "x$OPENJDK_TARGET_CPU_BITS" = "x64"; then if test "x$TOOLCHAIN_TYPE" = xgcc -o "x$TOOLCHAIN_TYPE" = xclang; then if test -n "$HAS_GNU_HASH"; then if test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$DEBUG_LEVEL" = "xrelease"; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$JVM_VARIANT_SERVER" = xtrue; then elif test "x$JVM_VARIANT_CLIENT" = xtrue; then elif test "x$JVM_VARIANT_MINIMAL1" = xtrue; then if test "x$TOOLCHAIN_TYPE" = xsolstudio; then if test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test "x$OPENJDK_TARGET_CPU_BITS" != "x32"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C compiler supports \"$ZERO_ARCHFLAG\"" >&5 $as_echo_n "checking if the C compiler supports \"$ZERO_ARCHFLAG\"... " >&6; } if ac_fn_c_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"$ZERO_ARCHFLAG\"" >&5 $as_echo_n "checking if the C++ compiler supports \"$ZERO_ARCHFLAG\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if both compilers support \"$ZERO_ARCHFLAG\"" >&5 $as_echo_n "checking if both compilers support \"$ZERO_ARCHFLAG\"... " >&6; } if test "x$C_COMP_SUPPORTS" = "xyes" -a "x$CXX_COMP_SUPPORTS" = "xyes"; then supports=yes; fi if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C compiler supports \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"" >&5 $as_echo_n "checking if the C compiler supports \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"... " >&6; } if ac_fn_c_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the C++ compiler supports \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"" >&5 $as_echo_n "checking if the C++ compiler supports \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$supports" = "xyes" ; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if both compilers support \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"" >&5 $as_echo_n "checking if both compilers support \"${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}\"... " >&6; } if test "x$C_COMP_SUPPORTS" = "xyes" -a "x$CXX_COMP_SUPPORTS" = "xyes"; then supports=yes; fi if test "x$supports" = "xyes" ; then if test "${enable_debug_symbols+set}" = set; then : { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we should generate debug symbols" >&5 $as_echo_n "checking if we should generate debug symbols... " >&6; } if test "x$enable_debug_symbols" = "xyes" && test "x$OBJCOPY" = x; then if test "x$enable_debug_symbols" = "xyes"; then elif test "x$enable_debug_symbols" = "xno"; then if test "x$OBJCOPY" != x; then elif test "x$OPENJDK_TARGET_OS" = xaix || test "x$OPENJDK_TARGET_OS" = xmacosx || test "x$OPENJDK_TARGET_OS" = xwindows; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we should zip debug-info files" >&5 $as_echo_n "checking if we should zip debug-info files... " >&6; } if test "${enable_zip_debug_info+set}" = set; then : if test "x${enable_zip_debug_info}" = "xno"; then elif test "x${enable_zip_debug_info}" = "xyes"; then if test "${with_native_debug_symbols+set}" = set; then : if test "x$NATIVE_DEBUG_SYMBOLS" = x; then if test "x$NATIVE_DEBUG_SYMBOLS" = xzipped; then if test "x$OPENJDK_TARGET_OS" = xsolaris || test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$OBJCOPY" = x; then elif test "x$NATIVE_DEBUG_SYMBOLS" = xnone; then elif test "x$NATIVE_DEBUG_SYMBOLS" = xinternal; then elif test "x$NATIVE_DEBUG_SYMBOLS" = xexternal; then if test "x$OPENJDK_TARGET_OS" = xsolaris || test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$OBJCOPY" = x; then elif test "x$NATIVE_DEBUG_SYMBOLS" != x; then if test "x$OPENJDK_BUILD_OS" = xwindows; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if fixpath can be created" >&5 $as_echo_n "checking if fixpath can be created... " >&6; } if test "x$OPENJDK_BUILD_OS_ENV" = xwindows.cygwin; then elif test "x$OPENJDK_BUILD_OS_ENV" = xwindows.msys; then if test ! -x $OUTPUT_ROOT/fixpath.exe; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if fixpath.exe works" >&5 $as_echo_n "checking if fixpath.exe works... " >&6; } if test ! -x $OUTPUT_ROOT/fixpath2.exe; then if test "x$OPENJDK_TARGET_OS" = xlinux; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x$OPENJDK_TARGET_OS" = xaix; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x$OPENJDK_TARGET_OS" = xbsd; then if test "x$OPENJDK" = "xfalse"; then if test "x$SUPPORT_HEADFUL" = xno; then if test "${enable_macosx_runtime_support+set}" = set; then : if test "x$enable_macosx_runtime_support" != x; then if test "x$OPENJDK_TARGET_OS" = "xlinux"; then if test "x$SYSROOT" != "x"; then if test "x$x_includes" = xNONE; then if test -f "$SYSROOT/usr/X11R6/include/X11/Xlib.h"; then elif test -f "$SYSROOT/usr/include/X11/Xlib.h"; then if test "x$x_libraries" = xNONE; then if test -f "$SYSROOT/usr/X11R6/lib/libX11.so"; then elif test "$SYSROOT/usr/lib64/libX11.so" && test "x$OPENJDK_TARGET_CPU_BITS" = x64; then elif test -f "$SYSROOT/usr/lib/libX11.so"; then if test "${with_x+set}" = set; then : if test "x$with_x" = xno; then *,NONE | NONE,*) if ${ac_cv_have_x+:} false; then : if mkdir conftest.dir; then if (export CC; ${XMKMF-xmkmf}) >/dev/null 2>/dev/null && test -f Makefile; then if test ! -f "$ac_im_usrlibdir/libX11.$ac_extension" && if test "$ac_x_includes" = no; then if ac_fn_cxx_try_cpp "$LINENO"; then : if test -r "$ac_dir/X11/Xlib.h"; then if test "$ac_x_libraries" = no; then if ac_fn_cxx_try_link "$LINENO"; then : if test -r "$ac_dir/libX11.$ac_extension"; then if test "$have_x" != yes; then if test "$no_x" = yes; then if test -n "$x_includes"; then if test -n "$x_libraries"; then if ac_fn_cxx_try_link "$LINENO"; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "$ISC" = yes; then if ac_fn_cxx_try_link "$LINENO"; then : if ${ac_cv_lib_dnet_dnet_ntoa+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_dnet_dnet_ntoa" = xyes; then : if test $ac_cv_lib_dnet_dnet_ntoa = no; then if ${ac_cv_lib_dnet_stub_dnet_ntoa+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_dnet_stub_dnet_ntoa" = xyes; then : if test "x$ac_cv_func_gethostbyname" = xyes; then : if test $ac_cv_func_gethostbyname = no; then if ${ac_cv_lib_nsl_gethostbyname+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_nsl_gethostbyname" = xyes; then : if test $ac_cv_lib_nsl_gethostbyname = no; then if ${ac_cv_lib_bsd_gethostbyname+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_bsd_gethostbyname" = xyes; then : if test "x$ac_cv_func_connect" = xyes; then : if test $ac_cv_func_connect = no; then if ${ac_cv_lib_socket_connect+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_socket_connect" = xyes; then : if test "x$ac_cv_func_remove" = xyes; then : if test $ac_cv_func_remove = no; then if ${ac_cv_lib_posix_remove+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_posix_remove" = xyes; then : if test "x$ac_cv_func_shmat" = xyes; then : if test $ac_cv_func_shmat = no; then if ${ac_cv_lib_ipc_shmat+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_ipc_shmat" = xyes; then : if ${ac_cv_lib_ICE_IceConnectionNumber+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_ICE_IceConnectionNumber" = xyes; then : if test "x$COMPILE_TYPE" = xcross; then if test "x$no_x" = xyes && test "x$X11_NOT_NEEDED" != xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "x$OPENJDK_TARGET_OS" = xsolaris; then if test "x${OPENJDK_TARGET_OS}" = xsolaris; then if test "`uname -r`" = "5.10"; then if test "`${EGREP} -c XLinearGradient ${OPENWIN_HOME}/share/include/X11/extensions/Xrender.h`" = "0"; then if eval test \"x\$"$as_ac_Header"\" = x"yes"; then : if test "x$X11_A_OK" = xno && test "x$X11_NOT_NEEDED" != xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "${with_cups+set}" = set; then : if test "${with_cups_include+set}" = set; then : if test "x$CUPS_NOT_NEEDED" = xyes; then if test "x${with_cups}" != x || test "x${with_cups_include}" != x; then if test "x${with_cups}" = xno || test "x${with_cups_include}" = xno; then if test "x${with_cups}" != x; then if test "x${with_cups_include}" != x; then if test "x$CUPS_FOUND" = xno; then if test "x$with_builddeps_server" != x || test "x$with_builddeps_conf" != x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" != x; then if test -d ${resource}; then if test ! -f $installdir/$filename.unpacked; then if test ! -d $installdir; then if test ! -d $installdir; then if test ! -f $tmpfile; then if test "x$BDEPS_FTP" = xwget; then if test "x$BDEPS_FTP" = xlftp; then if test "x$BDEPS_FTP" = xftp; then if test "x$FTPSERVER" != "x$FTPUSERPWD"; then if test "x$VALID_TOOL" != xyes; then if test ! -s $installdir/$filename; then if test -f $installdir/$filename.unpacked; then if test "x$depdir" = x; then if test "x$theroot" != x; then if test "x$thecflags" != x; then if test "x$thelibs" != x; then if test "x$CUPS_FOUND" = xno; then if eval test \"x\$"$as_ac_Header"\" = x"yes"; then : if test "x$CUPS_FOUND" = xno; then if test -s $SYSROOT/opt/sfw/cups/include/cups/cups.h; then elif test -s $SYSROOT/opt/csw/include/cups/cups.h; then if test "x$CUPS_FOUND" = xno; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "${with_freetype+set}" = set; then : if test "${with_freetype_include+set}" = set; then : if test "${with_freetype_lib+set}" = set; then : if test "${with_freetype_src+set}" = set; then : if test "${enable_freetype_bundling+set}" = set; then : if test "x$FREETYPE_NOT_NEEDED" = xyes; then if test "x$with_freetype" != x || test "x$with_freetype_include" != x || test "x$with_freetype_lib" != x || test "x$with_freetype_src" != x; then if test "x$enable_freetype_bundling" != x; then if test "x$with_freetype_src" != x; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -d $FREETYPE_SRC_PATH; then if test "x$BUILD_FREETYPE" = xyes && ! test -s $vcxproj_path; then if test "x$BUILD_FREETYPE" = xyes && test "x$MSBUILD" == x ; then if test "x$BUILD_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -s "$freetype_lib_path_unix/freetype.dll"; then if test -s "$freetype_lib_path_unix/freetype.lib"; then if test "x$BUILD_FREETYPE" = xyes; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$with_freetype" != x || test "x$with_freetype_include" != x || test "x$with_freetype_lib" != x; then if test "x$BUNDLE_FREETYPE" = x; then if test "x$with_freetype" != x; then if test "x$with_freetype_include" != x; then if test "x$with_freetype_lib" != x; then if test "x$POTENTIAL_FREETYPE_INCLUDE_PATH" != x && test "x$POTENTIAL_FREETYPE_LIB_PATH" != x; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$POTENTIAL_FREETYPE_INCLUDE_PATH" = x ; then if test "x$BUNDLE_FREETYPE" = x; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$with_builddeps_server" != x || test "x$with_builddeps_conf" != x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" != x; then if test -d ${resource}; then if test ! -f $installdir/$filename.unpacked; then if test ! -d $installdir; then if test ! -d $installdir; then if test ! -f $tmpfile; then if test "x$BDEPS_FTP" = xwget; then if test "x$BDEPS_FTP" = xlftp; then if test "x$BDEPS_FTP" = xftp; then if test "x$FTPSERVER" != "x$FTPUSERPWD"; then if test "x$VALID_TOOL" != xyes; then if test ! -s $installdir/$filename; then if test -f $installdir/$filename.unpacked; then if test "x$depdir" = x; then if test "x$theroot" != x; then if test "x$thecflags" != x; then if test "x$thelibs" != x; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$BUNDLE_FREETYPE" = xyes; then if test "x$SYSROOT" = x; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$PKG_CONFIG" != x; then if test -n "$FREETYPE_CFLAGS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test -n "$FREETYPE_LIBS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test $pkg_failed = yes; then if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then if test $_pkg_short_errors_supported = yes; then elif test $pkg_failed = untried; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$BUNDLE_FREETYPE" = xyes; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test -s "$POTENTIAL_FREETYPE_INCLUDE_PATH/ft2build.h"; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/$FREETYPE_LIB_NAME"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then if ! test -s "$POTENTIAL_FREETYPE_LIB_PATH/freetype.lib"; then elif test "x$OPENJDK_TARGET_OS" = xsolaris && test "x$OPENJDK_TARGET_CPU" = xx86_64 && test -s "$POTENTIAL_FREETYPE_LIB_PATH/amd64/$FREETYPE_LIB_NAME"; then if test "x$FOUND_FREETYPE" = xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$FOUND_FREETYPE" != xyes; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "x$FREETYPE_CFLAGS" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test -d $FREETYPE_INCLUDE_PATH/freetype2/freetype; then if test "x$FREETYPE_LIBS" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$OPENJDK_TARGET_OS" = xwindows; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can compile and link with freetype" >&5 $as_echo_n "checking if we can compile and link with freetype... " >&6; } if ac_fn_cxx_try_link "$LINENO"; then : if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we should bundle freetype" >&5 $as_echo_n "checking if we should bundle freetype... " >&6; } if test "x$BUNDLE_FREETYPE" = xyes; then if test "${with_alsa+set}" = set; then : if test "${with_alsa_include+set}" = set; then : if test "${with_alsa_lib+set}" = set; then : if test "x$ALSA_NOT_NEEDED" = xyes; then if test "x${with_alsa}" != x || test "x${with_alsa_include}" != x || test "x${with_alsa_lib}" != x; then if test "x${with_alsa}" = xno || test "x${with_alsa_include}" = xno || test "x${with_alsa_lib}" = xno; then if test "x${with_alsa}" != x; then if test "x${with_alsa_include}" != x; then if test "x${with_alsa_lib}" != x; then if test "x$ALSA_FOUND" = xno; then if test "x$with_builddeps_server" != x || test "x$with_builddeps_conf" != x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" = x; then if test "x$resource" != x; then if test -d ${resource}; then if test ! -f $installdir/$filename.unpacked; then if test ! -d $installdir; then if test ! -d $installdir; then if test ! -f $tmpfile; then if test "x$BDEPS_FTP" = xwget; then if test "x$BDEPS_FTP" = xlftp; then if test "x$BDEPS_FTP" = xftp; then if test "x$FTPSERVER" != "x$FTPUSERPWD"; then if test "x$VALID_TOOL" != xyes; then if test ! -s $installdir/$filename; then if test -f $installdir/$filename.unpacked; then if test "x$depdir" = x; then if test "x$theroot" != x; then if test "x$thecflags" != x; then if test "x$thelibs" != x; then if test "x$SYSROOT" = x; then if test "x$ALSA_FOUND" = xno; then if test -n "$ALSA_CFLAGS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test -n "$ALSA_LIBS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test $pkg_failed = yes; then if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then if test $_pkg_short_errors_supported = yes; then elif test $pkg_failed = untried; then if test "x$ALSA_FOUND" = xno; then if test "x$ac_cv_header_alsa_asoundlib_h" = xyes; then : if test "x$ALSA_FOUND" = xno; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if test "${with_fontconfig+set}" = set; then : if test "${with_fontconfig_include+set}" = set; then : if test "x$FONTCONFIG_NOT_NEEDED" = xyes; then if (test "x${with_fontconfig}" != x && test "x${with_fontconfig}" != xno) || \ if test "x${with_fontconfig}" = xno || test "x${with_fontconfig_include}" = xno; then if test "x${with_fontconfig}" != x; then if test -s "${with_fontconfig}/include/fontconfig/fontconfig.h"; then if test "x${with_fontconfig_include}" != x; then if test -s "${with_fontconfig_include}/fontconfig/fontconfig.h"; then if test "x$FONTCONFIG_FOUND" = xno; then if test "x$ac_cv_header_fontconfig_fontconfig_h" = xyes; then : if test "x$FONTCONFIG_FOUND" = xno; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$PKGHANDLER_COMMAND" != x; then if ${ac_cv_lib_jpeg_main+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_jpeg_main" = xyes; then : if test "${with_giflib+set}" = set; then : if test "x${with_giflib}" = "x"; then if test "x${with_giflib}" = "xbundled"; then elif test "x${with_giflib}" = "xsystem"; then if test "x$ac_cv_header_gif_lib_h" = xyes; then : if ${ac_cv_lib_gif_DGifGetCode+:} false; then : LIBS="-lgif $LIBS" if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_gif_DGifGetCode" = xyes; then : LIBS="-lgif $LIBS" if test "${with_zlib+set}" = set; then : if ${ac_cv_lib_z_compress+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_z_compress" = xyes; then : if test "x$OPENJDK_TARGET_OS" = xmacosx; then if test "x${ZLIB_FOUND}" != "xyes"; then if test "x${with_zlib}" = "x"; then if test "x${with_zlib}" = "xbundled"; then elif test "x${with_zlib}" = "xsystem"; then if test "x${ZLIB_FOUND}" = "xyes"; then if ac_fn_cxx_try_link "$LINENO"; then : if test "x$has_altzone" = xyes; then if ${ac_cv_lib_m_cos+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_m_cos" = xyes; then : if ${ac_cv_lib_dl_dlopen+:} false; then : if ac_fn_cxx_try_link "$LINENO"; then : if test "x$ac_cv_lib_dl_dlopen" = xyes; then : if test "${with_stdc__lib+set}" = set; then : if test "x$with_stdc__lib" != xdynamic && test "x$with_stdc__lib" != xstatic \ if test "x$OPENJDK_TARGET_OS" = xlinux; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if dynamic link of stdc++ is possible" >&5 $as_echo_n "checking if dynamic link of stdc++ is possible... " >&6; } if ac_fn_cxx_try_link "$LINENO"; then : { $as_echo "$as_me:${as_lineno-$LINENO}: checking if static link of stdc++ is possible" >&5 $as_echo_n "checking if static link of stdc++ is possible... " >&6; } if ac_fn_cxx_try_link "$LINENO"; then : if test "x$has_static_libstdcxx" = xno && test "x$has_dynamic_libstdcxx" = xno; then if test "x$with_stdc__lib" = xstatic && test "x$has_static_libstdcxx" = xno; then if test "x$with_stdc__lib" = xdynamic && test "x$has_dynamic_libstdcxx" = xno; then if test "x$with_stdc__lib" = xdynamic || test "x$has_static_libstdcxx" = xno || test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then if test "x$JVM_VARIANT_ZERO" = xtrue || test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then if test -n "$LIBFFI_CFLAGS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test -n "$LIBFFI_LIBS"; then elif test -n "$PKG_CONFIG"; then if test -n "$PKG_CONFIG" && \ if test $pkg_failed = yes; then if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then if test $_pkg_short_errors_supported = yes; then Consider adjusting the PKG_CONFIG_PATH environment variable if you elif test $pkg_failed = untried; then if test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then if ${ac_cv_prog_LLVM_CONFIG+:} false; then : if test -n "$LLVM_CONFIG"; then if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$LLVM_CONFIG"; then if test "x$LLVM_CONFIG" != xllvm-config; then if echo "${flag}" | grep -q '^-[ID]'; then if test "${flag}" != "-D_DEBUG" ; then if test "${LLVM_CFLAGS}" != "" ; then if echo "${flag}" | grep -q '^-L'; then if test "${LLVM_LDFLAGS}" != ""; then if echo "${flag}" | grep -q '^-l'; then if test "${LLVM_LIBS}" != ""; then if test "x$TOOLCHAIN_TYPE" = xsolstudio && test "x$LIBCXX" = x; then if test "x$OPENJDK_TARGET_OS" = xmacosx && test "x$LIBCXX" = x ; then if test "x$TOOLCHAIN_TYPE" = xgcc; then elif test "x$TOOLCHAIN_TYPE" = xclang; then if test "x$OPENJDK_TARGET_OS" = "xwindows"; then if test "${with_msvcr_dll+set}" = set; then : if test "x$with_msvcr_dll" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then elif test "x$DEVKIT_MSVCR_DLL" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$MSVC_DLL" = x; then if test "x$VCINSTALLDIR" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "$VS_VERSION" -lt 2017; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$VS100COMNTOOLS" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$CYGWIN_VC_INSTALL_DIR" != x; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$POSSIBLE_MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "${with_msvcp_dll+set}" = set; then : if test "x$MSVCP_NAME" != "x"; then if test "x$with_msvcp_dll" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then elif test "x$DEVKIT_MSVCP_DLL" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$MSVC_DLL" = x; then if test "x$VCINSTALLDIR" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "$VS_VERSION" -lt 2017; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$VS100COMNTOOLS" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$CYGWIN_VC_INSTALL_DIR" != x; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$POSSIBLE_MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "${with_vcruntime_1_dll+set}" = set; then : if test "x$VCRUNTIME_1_NAME" != "x" && test "x$OPENJDK_TARGET_CPU" = xx86_64; then if test "x$with_vcruntime_1_dll" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then elif test "x$DEVKIT_VCRUNTIME_1_DLL" != x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$MSVC_DLL" = x; then if test "x$VCINSTALLDIR" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "$VS_VERSION" -lt 2017; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$VS100COMNTOOLS" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "x$CYGWIN_VC_INSTALL_DIR" != x; then if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then if test "x$POSSIBLE_MSVC_DLL" = x; then if test -n "$POSSIBLE_MSVC_DLL" -a -e "$POSSIBLE_MSVC_DLL"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if test "x$OPENJDK_TARGET_CPU_BITS" = x32; then if $ECHO "$MSVC_DLL_FILETYPE" | $GREP "$CORRECT_MSVCR_ARCH" 2>&1 > /dev/null; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$MSVC_DLL" = x; then if test "${with_ucrt_dll_dir+set}" = set; then : if test "x$USE_UCRT" = "xtrue"; then if test "x$with_ucrt_dll_dir" != x; then if test -z "$(ls -d "$with_ucrt_dll_dir/"*.dll 2> /dev/null)"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then elif test "x$DEVKIT_UCRT_DLL_DIR" != "x"; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test "x$test_shortpath" = x; then if test "x$has_forbidden_chars" != x; then if test "x$path_after_shortmode" != "x$input_to_shortpath"; then if test "x$test_cygdrive_prefix" = x; then if test "x`$ECHO $new_path | $GREP ^/usr/bin/`" = x; then if test "x$original_basename" != "x$fixed_basename"; then if test "x$path" != "x$new_path"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$has_colon" = x; then if test "x$has_forbidden_chars" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then elif test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$path" != "x$new_path"; then if test "x$has_space" != x; then if test ! -f "$path" && test ! -d "$path"; then if test "x$dll_subdir" = "xx86_64"; then if test -z "$(ls -d "$UCRT_DLL_DIR/"*.dll 2> /dev/null)"; then if test -z "$UCRT_DLL_DIR" \ if test "${with_dxsdk+set}" = set; then : if test "${with_dxsdk_lib+set}" = set; then : if test "${with_dxsdk_include+set}" = set; then : if test "x$OPENJDK_TARGET_OS" = "xwindows"; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if elliptic curve crypto implementation is present" >&5 $as_echo_n "checking if elliptic curve crypto implementation is present... " >&6; } if test -d "${SRC_ROOT}/jdk/src/share/native/sun/security/ec/impl"; then if test "${with_num_cores+set}" = set; then : if test "x$with_num_cores" = x; then if test -f /proc/cpuinfo; then elif test -x /usr/sbin/psrinfo; then elif test -x /usr/sbin/system_profiler; then elif test "x$OPENJDK_BUILD_OS" = xaix ; then if test -n "$NUM_LCPU"; then elif test -n "$NUMBER_OF_PROCESSORS"; then if test "x$FOUND_CORES" = xyes; then if test "${with_memory_size+set}" = set; then : if test "x$with_memory_size" = x; then if test -f /proc/meminfo; then elif test -x /usr/sbin/prtconf; then elif test -x /usr/sbin/system_profiler; then elif test "x$OPENJDK_BUILD_OS" = xwindows; then if test "x$FOUND_MEM" = xyes; then if test "${with_jobs+set}" = set; then : if test "x$with_jobs" = x; then if test "$memory_gb" -lt "$NUM_CORES"; then if test "$JOBS" -gt "4"; then if test "$JOBS" -gt "16"; then if test "$JOBS" -eq "0"; then if test "${with_sjavac_server_java+set}" = set; then : if test "x$with_sjavac_server_java" != x; then if test "x$FOUND_VERSION" = x; then $ECHO "Check if jvm arg is ok: -verbosegc" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then $ECHO "Check if jvm arg is ok: -Xverbose:gc" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "2500"; then $ECHO "Check if jvm arg is ok: -d64" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$JVM_ARG_OK" = true; then if test "$JVM_64BIT" = true; then if test "$MEMORY_SIZE" -gt "17000"; then $ECHO "Check if jvm arg is ok: -Xms10G -Xmx10G" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "10000" && test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms6G -Xmx6G" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "5000" && test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms1G -Xmx3G" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "3800" && test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms1G -Xmx2500M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "2500" && test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms1000M -Xmx1500M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$MEMORY_SIZE" -gt "1000" && test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms400M -Xmx1100M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "$JVM_ARG_OK" = false; then $ECHO "Check if jvm arg is ok: -Xms256M -Xmx512M" >&5 if test "x$FOUND_VERSION" != x && test "x$FOUND_WARN" = x; then if test "${enable_sjavac+set}" = set; then : if test "x$ENABLE_SJAVAC" = xyes; then if test "${enable_precompiled_headers+set}" = set; then : if test "x$ENABLE_PRECOMPH" = xno; then if test "x$ENABLE_PRECOMPH" = xyes; then if test "x$TOOLCHAIN_TYPE" = xgcc; then if test ! -f conftest.hpp.gch; then if test "${enable_ccache+set}" = set; then : if test "x$enable_ccache" = xyes; then if test "x$TOOLCHAIN_PATH" != x; then if test "x$CCACHE" = x; then if ${ac_cv_path_CCACHE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CCACHE"; then if test "x$try_remove_var" = "x$CONFIGURE_OVERRIDDEN_VARIABLES"; then if test "xCCACHE" != xBASH; then if ${ac_cv_path_CCACHE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CCACHE"; then if test "x$tool_basename" = "x$tool_specified"; then if ${ac_cv_path_CCACHE+:} false; then : if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then if test -n "$CCACHE"; then if test "x$CCACHE" = x; then if test ! -x "$tool_specified"; then if test "x$CCACHE" = x; then elif test "x$enable_ccache" = xno; then elif test "x$enable_ccache" = x; then if test "${with_ccache_dir+set}" = set; then : if test "x$with_ccache_dir" != x; then if test "x$CCACHE" = x; then if test "x$CCACHE" != x; then if test "x$CCACHE" != x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if ccache supports precompiled headers" >&5 $as_echo_n "checking if ccache supports precompiled headers... " >&6; } if test "x$HAS_GOOD_CCACHE" = x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if C-compiler supports ccache precompiled headers" >&5 $as_echo_n "checking if C-compiler supports ccache precompiled headers... " >&6; } if ac_fn_cxx_try_compile "$LINENO"; then : if test "x$CC_KNOWS_CCACHE_TRICK" = xyes; then if test "x$CCACHE" != x; then if test "x$SET_CCACHE_DIR" != x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.cygwin"; then if test `$STAT -c '%a' "$file_to_test"` -lt 400; then if test "x$CONFIGURE_OVERRIDDEN_VARIABLES" != x; then { $as_echo "$as_me:${as_lineno-$LINENO}: checking if build directory is on local disk" >&5 $as_echo_n "checking if build directory is on local disk... " >&6; } if test "x$DF" = x; then if test "x$OPENJDK_BUILD_OS_ENV" = "xwindows.msys"; then if test "x$IS_NETWORK_DISK" = x; then if $DF -l $OUTPUT_ROOT > /dev/null 2>&1; then if test -e $OUTPUT_ROOT/spec.gmk; then if diff "$cache_file" confcache >/dev/null 2>&1; then :; else if test -w "$cache_file"; then if test "x$cache_file" != "x/dev/null"; then if test ! -f "$cache_file" || test -h "$cache_file"; then if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then : if test -z "$BASH_VERSION$ZSH_VERSION" \ elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then if test "${PATH_SEPARATOR+set}" != set; then if test "x$as_myself" = x; then if test ! -f "$as_myself"; then if test "$4"; then if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then : if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then : if expr a : '\(a\)' >/dev/null 2>&1 && if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then if test -d conf$$.dir; then if (echo >conf$$.file) 2>/dev/null; then if ln -s conf$$.file conf$$ 2>/dev/null; then elif ln conf$$.file conf$$ 2>/dev/null; then if mkdir -p . 2>/dev/null; then if $ac_cs_silent; then if \$ac_cs_recheck; then if $ac_need_defaults; then if test -n "$CONFIG_FILES"; then if test "x$ac_cr" = x; then if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then if test $ac_delim_n = $ac_delim_num; then elif $ac_last_try; then if (S_is_set[key]) { if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then if test "x$srcdir" = x.; then if test -n "$CONFIG_HEADERS"; then if test -z "$ac_tt"; then elif $ac_last_try; then if (arg[1] == " if (D_is_set[macro]) { if (defundef == "undef") { if test x"$ac_file" != x-; then if test x"$ac_file" != x-; then if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then if test "$no_create" != yes; then if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then if test -e ./config.log; then if test -e "$OUTPUT_ROOT/configure.log.old"; then if test -e "$OUTPUT_ROOT/configure.log"; then if test -e ./configure.log; then if test "x$CONFIGURE_COMMAND_LINE" != x; then if test "x$OPENJDK_BUILD_OS" = "xwindows"; then if test "x$CCACHE_STATUS" != "x"; then if test "x$BUILDING_MULTIPLE_JVM_VARIANTS" = "xyes"; then if test "x$FOUND_ALT_VARIABLES" != "x"; then if test "x$OUTPUT_DIR_IS_LOCAL" != "xyes"; then if test "x$IS_RECONFIGURE" = "xyes"; then if test "x$UNSUPPORTED_TOOLCHAIN_VERSION" = "xyes"; then if test -e "./config.log"; then if test -e "$CONFIG_LOG_PATH/config.log"; then if test $? -eq 0; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/autoconf/build-aux/install.sh
lines,5
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/autoconf/autogen.sh
lines,85
function,2

generate_configure_script() { TIMESTAMP=`nawk 'BEGIN{print srand()}'`
for,0

if,5
if test "x`uname -s`" = "xSunOS"; then if test "x$TIMESTAMP" = "x%s"; then if test "x$CUSTOM_CONFIG_DIR" = "x"; then if test "x${AUTOCONF}" = x; then if test -e $custom_hook; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/hide_important_warnings_from_javac.sh
lines,41
function,0


for,2
EXP="${EXP}|Note: Recompile with -Xlint:deprecation for details." EXP="${EXP}|Note: Recompile with -Xlint:unchecked for details."
if,1
if [ -x /usr/bin/ggrep ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/shell-tracer.sh
lines,47
function,0


for,0

if,1
if [ "$TIME_CMD" != "-" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/compare-objects.sh
lines,235
function,2

findnew() { compare() {
for,2
for i in demo hotspot jobjc for F in `${CAT} $COMPARE_ROOT/list.old`
if,22
if [ "x$1" = "x-h" ] || [ "x$1" = "x--help" ] || [ "x$1" == "x" ]; then if [ -f $NEW/spec.sh ]; then elif [ -f $NEW/../../spec.sh ]; then elif [ -f $OLD/spec.sh ]; then elif [ -f $OLD/../../spec.sh ]; then if [ "`${GREP} -c "/$full" $COMPARE_ROOT/list.new`" -eq 1 ] if [ "`${GREP} -c "$medium" $COMPARE_ROOT/list.new`" -eq 1 ] if [ "`${GREP} -c "/$short" $COMPARE_ROOT/list.new`" -eq 1 ] if [ -n "$dir" -a "$dir" != "$arg_1" ] if [ "`${GREP} $dir $COMPARE_ROOT/list.new | ${GREP} -c "/$short"`" -eq 1 ] if [ "`${GREP} "lib$dir/" $COMPARE_ROOT/list.new | ${GREP} -c "/$short"`" -eq 1 ] if [ "`${GREP} "${dir}_objs" $COMPARE_ROOT/list.new | ${GREP} -c "/$short"`" -eq 1 ] if [ "`${ECHO} $full | ${GREP} -c $i`" -gt 0 ] if [ "`${GREP} $i $COMPARE_ROOT/list.new | ${GREP} -c "/$short"`" -eq 1 ] if [ -n "$demo" -a "$dir" != "$demo" ] if [ "`${GREP} $demo $COMPARE_ROOT/list.new | ${GREP} -c "/$short"`" -eq 1 ] if [ $res -eq 0 ] if [ $res -eq 0 ] if [ $cntold -gt 0 -a $cntnew -gt 0 ] if [ "${IGNORE}" ] && [ "`${ECHO} $F | ${GREP} ${IGNORE}`" ] if [ "$PATTERN" ] && [ `${ECHO} $F | ${GREP} -c $PATTERN` -eq 0 ] if [ "$n" ]
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/logger.sh
lines,45
function,0


for,0

if,0

git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/test_builds.sh
lines,184
function,2

error() checkErrors()
for,7
for i in ${repolist} ; do for i in ${t1} ${t2} ${t3} ; do for i in ${repolist} ; do for i in ${repolist} ; do for i in ${repolist} ; do for i in ${t1} ${t2} ; do for i in ${t1} ${t2} ; do
if,9
if [ -s ${errMessages} ] ; then if [ "${os}" = "SunOS" ] ; then elif [ "${os}" = "Darwin" ] ; then elif [ "${os}" = "Linux" -a "${arch}" = "x86_64" ] ; then if [ ! -d ${J7} ] ; then if [ "${option}" = "clobber" ] ; then if [ ! -d ${t0}/.hg ] ; then if [ ! -d ${i}/.hg ] ; then if [ "${option}" = "clean" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/boot_cycle.sh
lines,77
function,0


for,0

if,2
if ! test -x $BOOT_CYCLE_1_DIR/images/j2sdk-image/bin/java ; then if ! test -x $BOOT_CYCLE_2_DIR/images/j2sdk-image/bin/java ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/hgforest.sh
lines,398
function,3

usage() { safe_interrupt () { nice_exit () {
for,11
echo " HGFOREST_FIFOS : (boolean) Default behaviour for FIFO detection. Does not override FIFOs disabled" echo "Waiting for processes ( `cat ${tmp}/.*.pid ${tmp}/*.pid 2> /dev/null | tr '\n' ' '`) to terminate nicely!" > ${status_output} for i in ${subrepos} ; do for i in ${subrepos_extra} ; do for i in ${subrepos_extra} ; do for i in . ${subrepos} ${subrepos_extra} ; do for i in ${repos} ; do for i in ${repos} ; do for i in ${repos} ${repos_extra} ; do for j in ${repos_extra} ; do for rc in ${rcfiles} ; do
if,39
if [ ${qflag} = "true" ] ; then if [ ${vflag} = "true" ] ; then if [ $ if [ "${HGFOREST_DEBUG:-false}" = "true" ] ; then if [ ${while_subshell} = "1" -o ${on_windows} = "1" ]; then if [ -d ${tmp} ]; then if [ "`ls ${tmp}/*.pid`" != "" ]; then if [ -d ${tmp} ]; then if [ "`ls -A ${tmp} 2> /dev/null`" != "" ]; then if [ "${HGFOREST_DEBUG:-false}" != "true" ] ; then if [ "${command}" = "clone" -o "${command}" = "fclone" -o "${command}" = "tclone" ] ; then if [ ! -f .hg/hgrc ] ; then if [ "${pull_default}" = "" ] ; then if [ ! -f ${i}/.hg/hgrc ] ; then if [ -n "${command_args}" ] ; then if [ "x${pull_default}" = "x${pull_default_tail}" ] ; then if [ ! -f ${i}/.hg/hgrc ] ; then if [ "x${pull_default}" = "x${pull_default_tail}" ] ; then if [ -f ${pull_default}/${i}/.hg/hgrc -a ! -f ${i}/.hg/hgrc ] ; then if [ "${repos}" = "" -a "${repos_extra}" = "" ] ; then if [ -d ${i}/.hg ] ; then if [ "${repos}" = "" ] ; then if [ -h ${i}/.hg/store/lock -o -f ${i}/.hg/store/lock ] ; then if [ "${locked}" != "" ] ; then if [ "${command}" = "serve" ] ; then if [ "${i}" != "." ] ; then if [ ${have_fifos} = "true" ]; then if [ "${i}" = "${j}" ] ; then if [ "${command}" = "clone" -o "${command}" = "fclone" -o "${command}" = "tclone" ] ; then if [ "${parent_path}" != "." ] ; then if [ "${sflag}" = "true" ] ; then if [ `expr ${times} '%' 10` -eq 0 ] ; then if [ ${have_fifos} = "true" ]; then if [ "${sflag}" = "true" ] ; then if [ "${have_fifos}" = "true" ]; then if [ ${n} -ge ${at_a_time} ] ; then if [ ${n} -lt ${at_a_time} ] ; then if [ -d ${tmp} ]; then if [ "${exit_code}" != "0" ] ; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/compare.sh
lines,1411
function,14

diff_text() { -e '/[<>].*public com\.apple\.jobjc\.Pointer<com\.apple\.jobjc\..*itemsPtr();/d' \ compare_dirs() { compare_files() { compare_permissions() { compare_file_types() { compare_general_files() { compare_zip_file() { compare_all_zip_files() { compare_all_jar_files() { compare_bin_file() { print_binary_diff_header() { compare_all_libs() { compare_all_execs() {
for,15
for f in `cd $OTHER_DIR && $FIND . -type f` for f in `cd $OTHER_DIR && $FIND . ! -type d` for f in $GENERAL_FILES for pack in $($FIND $THIS_UNZIPDIR \( -name "*.pack" -o -name "*.pack.gz" \) -a ! -name pie.jar.pack.gz); do for pack in $($FIND $OTHER_UNZIPDIR \( -name "*.pack" -o -name "*.pack.gz" \) -a ! -name pie.jar.pack.gz); do for zip in $($FIND $THIS_UNZIPDIR -name "*.jar" -o -name "*.zip"); do for zip in $($FIND $OTHER_UNZIPDIR -name "*.jar" -o -name "*.zip"); do for file in $DIFFING_FILES; do for i in $(cat $WORK_DIR/$ZIP_FILE.difflist) ; do for f in $ZIPS; do for f in $ZIPS; do for l in $LIBS; do for e in $EXECS; do echo "[FILTER] List filenames in the image to compare, works for jars, zips, libs and execs" echo "Cannot locate images for this build. Are you sure you have run 'make images'?"
if,193
if [ -z "$SRC_ROOT" ]; then if [ "$OPENJDK_TARGET_OS" = "macosx" ]; then elif [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ ! -e "$COMPARE_EXCEPTIONS_INCLUDE" ]; then if [[ "$THIS_FILE" = *"META-INF/MANIFEST.MF" ]]; then if test "x$SUFFIX" = "xjava"; then if test "x$SUFFIX" = "xclass"; then if $GREP -R -e '[0-9]\{4\}_[0-9]\{2\}_[0-9]\{2\}_[0-9]\{2\}_[0-9]\{2\}-b[0-9]\{2\}' \ if test "x$SUFFIX" = "xproperties"; then if test -n "$TMP"; then if [ -s $WORK_DIR/dirs_diff ]; then if [ "$ONLY_OTHER" ]; then if [ "$ONLY_THIS" ]; then if [ -s $WORK_DIR/files_diff ]; then if [ "$ONLY_OTHER" ]; then if [ "$ONLY_THIS" ]; then if [ ! -f ${OTHER_DIR}/$f ]; then continue; fi if [ ! -f ${THIS_DIR}/$f ]; then continue; fi if [ "$OP" != "$TP" ] if [ -z "$found" ]; then echo ; found="yes"; fi if [ -z "$found" ]; then if [ ! -f ${OTHER_DIR}/$f ]; then continue; fi if [ ! -f ${THIS_DIR}/$f ]; then continue; fi if [ "$f" = "./src.zip" ] || [[ "$f" = *"/Home/src.zip" ]] || [[ "$f" = *"/lib/JObjC.jar" ]] if [ "`echo $OF | $GREP -ic zip`" -gt 0 -a "`echo $TF | $GREP -ic zip`" -gt 0 ] if [ "$OF" != "$TF" ] if [ -z "$found" ]; then echo ; found="yes"; fi if [ -z "$found" ]; then if [ -e $OTHER_DIR/$f ]; then if [ "$(basename $f)" = "release" ]; then elif [ "x$SUFFIX" = "xhtml" ]; then if [ -n "$DIFF_OUT" ]; then if [ "$SHOW_DIFFS" = "true" ]; then if [ -n "$OTHER_ZIP_FILE" ]; then if [ "$THIS_SUFFIX" != "$OTHER_SUFFIX" ]; then if $CMP $OTHER_ZIP $THIS_ZIP > /dev/null if [ "$OPENJDK_TARGET_OS" = "solaris" ]; then if [ -n "$ONLY_OTHER" ]; then if [ -n "$ONLY_THIS" ]; then if [ "$OPENJDK_TARGET_OS" = "solaris" ]; then if [[ "$ACCEPTED_JARZIP_CONTENTS $EXCEPTIONS" != *"$file"* ]]; then if [ -s "$WORK_DIR/$ZIP_FILE.diffs" ]; then if [ -n "$SHOW_DIFFS" ]; then if [ -f "${OTHER_UNZIPDIR}/$i.javap" ]; then elif [ -f "${OTHER_UNZIPDIR}/$i.cleaned" ]; then if [ -n "$ZIPS" ]; then if [ -f "$OTHER_DIR/$f" ]; then if [ "$?" != "0" ]; then if [ -n "$ZIPS" ]; then if [ -f "$OTHER_DIR/$f" ]; then if [ "$?" != "0" ]; then if [[ "$STRIP_BEFORE_COMPARE" = *"$BIN_FILE"* ]]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$NAME" = "java.exe" ] && [ -f "$OTHER/tmp/java/java/obj64/java.diz" ]; then elif [ -f "${OTHER_FILE_BASE}.diz" ]; then if [ ! -f "$OTHER_DIZ_FILE" ]; then if [ -n "$OTHER_DIZ_FILE" ]; then if [ -f "${THIS_FILE/.dll/}.diz" ]; then if [ ! -f "$THIS_DIZ_FILE" ]; then if [ -n "$THIS_DIZ_FILE" ]; then if [ -z "$SKIP_BIN_DIFF" ]; then if cmp $OTHER_FILE $THIS_FILE > /dev/null; then if [ -n "$VERBOSE" ]; then if [[ "$ACCEPTED_BIN_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_BIN_DIFF" != *"$BIN_FILE"* ]]; then if [ -n "$STAT" ]; then if [ $THIS_SIZE -ne $OTHER_SIZE ]; then if [[ "$ACCEPTED_SMALL_SIZE_DIFF" = *"$BIN_FILE"* ]] && [ "$DIFF_SIZE_REL" -gt 98 ] \ elif [ "$OPENJDK_TARGET_OS" = "windows" ] \ elif [ "$OPENJDK_TARGET_OS" = "windows" ] \ if [[ "$ACCEPTED_SIZE_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SIZE_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SIZE_DIFF $ACCEPTED_SIZE_DIFF" = *"$BIN_FILE"* ]]; then if [[ "$SORT_SYMBOLS" = *"$BIN_FILE"* ]]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then elif [ "$OPENJDK_TARGET_OS" = "solaris" ]; then if [ -s $WORK_FILE_BASE.symbols.diff ]; then if [[ "$ACCEPTED_SYM_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SYM_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_SYM_DIFF $ACCEPTED_SYM_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$LDD_CMD" ]; then if [ -s $WORK_FILE_BASE.deps.diff ]; then if [ -s $WORK_FILE_BASE.deps.diff.uniq ]; then if [[ "$ACCEPTED_DEP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF $ACCEPTED_DEP_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$FULLDUMP_CMD" ] && [ -z "$SKIP_FULLDUMP_DIFF" ]; then if [ -s $WORK_FILE_BASE.fulldump.diff ]; then if [[ "$ACCEPTED_ELF_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_ELF_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF $ACCEPTED_DEP_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$DIS_CMD" ] && [ -z "$SKIP_DIS_DIFF" ]; then if [ -z "$DIS_DIFF_FILTER" ]; then if [ -s $WORK_FILE_BASE.dis.diff ]; then if [[ "$ACCEPTED_DIS_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DIS_DIFF" != *"$BIN_FILE"* ]]; then if [[ "$KNOWN_DEP_DIFF $ACCEPTED_DEP_DIFF" = *"$BIN_FILE"* ]]; then if [ -n "$DIFF_BIN$DIFF_SIZE$DIFF_SYM$DIFF_DEP$DIFF_ELF$DIFF_DIS" ] || [ -n "$VERBOSE" ]; then if [ -n "$BIN_MSG" ]; then echo -n "$BIN_MSG:"; fi if [ -n "$SIZE_MSG" ]; then echo -n "$SIZE_MSG:"; fi if [ -n "$SYM_MSG" ]; then echo -n "$SYM_MSG:"; fi if [ -n "$DEP_MSG" ]; then echo -n "$DEP_MSG:"; fi if [ -n "$ELF_MSG" ]; then echo -n "$ELF_MSG:"; fi if [ -n "$DIS_MSG" ]; then echo -n "$DIS_MSG:"; fi if [ "$SHOW_DIFFS" = "true" ]; then if [ -s "$WORK_FILE_BASE.symbols.diff" ]; then if [ -s "$WORK_FILE_BASE.deps.diff" ]; then if [ -s "$WORK_FILE_BASE.fulldump.diff" ]; then if [ -s "$WORK_FILE_BASE.dis.diff" ]; then if [ -z "$SKIP_BIN_DIFF" ]; then echo -n " Binary :"; fi if [ -z "$SKIP_SIZE_DIFF" ]; then echo -n " Size :"; fi if [ -z "$SKIP_SYM_DIFF" ]; then echo -n " Symbols :"; fi if [ -z "$SKIP_DEP_DIFF" ]; then echo -n " Deps :"; fi if [ -z "$SKIP_FULLDUMP_DIFF" ]; then echo -n " Fulldump :"; fi if [ -z "$SKIP_DIS_DIFF" ]; then echo -n " Disass :"; fi if [ -n "$LIBS" ]; then if [ -f "$OTHER_DIR/$l" ]; then if [ "$?" != "0" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ -n "$EXECS" ]; then if [ -f "$OTHER_DIR/$e" ]; then if [ "$?" != "0" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$(uname -o)" = "Cygwin" ]; then if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "-?" ] || [ "$1" = "/h" ] || [ "$1" = "/?" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]; then if [ "$OPENJDK_TARGET_OS" != "windows" ]; then if [ -z "$FILTER" ]; then if [ "$CMP_2_ZIPS" = "true" ]; then if [ "$CMP_NAMES" = "false" ] && [ "$CMP_TYPES" = "false" ] && [ "$CMP_PERMS" = "false" ] && [ "$CMP_GENERAL" = "false" ] && [ "$CMP_ZIPS" = "false" ] && [ "$CMP_JARS" = "false" ] && [ "$CMP_LIBS" = "false" ] && [ "$CMP_EXECS" = "false" ]; then if [ -z "$FILTER" ]; then if [ -z "$OTHER" ]; then if [ -d "$OTHER" ]; then if [ ! -d "$OTHER" ]; then if [ -d "$THIS/install/j2sdk-image" ]; then elif [ -d "$THIS/deploy/j2sdk-image" ]; then elif [ -d "$THIS/images/j2sdk-image" ]; then if [ -d "$THIS/images/j2sdk-overlay-image" ]; then if [ -d "$THIS/install/j2sdk-image" ]; then if [ -d "$THIS/images/j2sdk-bundle" ]; then if [ -d "$OTHER/j2sdk-image" ]; then if [ -f "$OTHER/j2sdk-image/LICENSE" ]; then elif [ -d "$OTHER/install/j2sdk-image" ]; then elif [ -d "$OTHER/deploy/j2sdk-image" ]; then elif [ -d "$OTHER/images/j2sdk-image" ]; then if [ -d "$OTHER/j2sdk-bundle" ]; then elif [ -d "$OTHER/images/j2sdk-bundle" ]; then if [ -z "$THIS_J2SDK" ] || [ -z "$THIS_J2RE" ]; then if [ -z "$THIS_J2SDK_OVERLAY" ]; then if [ -z "$OTHER_J2SDK" ] && [ -n "$OTHER_J2SDK_OVERLAY" ] && [ -z "$THIS_J2SDK_OVERLAY" ]; then if [ -z "$THIS_J2SDK_BUNDLE" ] && [ -n "$OTHER_J2SDK_BUNDLE" ]; then if [ -d "$THIS/docs" ]; then if [ -d "$OTHER/docs" ]; then if [ -z "$THIS_DOCS" ]; then if [ -z "$OTHER_DOCS" ]; then if [ -d "$OTHER/images" ]; then if [ "$OPENJDK_TARGET_OS" = "windows" ]; then if [ "$OPENJDK_TARGET_CPU" = "x86_64" ]; then if [ "$CMP_NAMES" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ -n "$THIS_J2SDK_BUNDLE" ] && [ -n "$OTHER_J2SDK_BUNDLE" ]; then if [ -n "$THIS_DOCS" ] && [ -n "$OTHER_DOCS" ]; then if [ "$CMP_PERMS" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ -n "$THIS_J2SDK_BUNDLE" ] && [ -n "$OTHER_J2SDK_BUNDLE" ]; then if [ "$CMP_TYPES" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ -n "$THIS_J2SDK_BUNDLE" ] && [ -n "$OTHER_J2SDK_BUNDLE" ]; then if [ "$CMP_GENERAL" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ -n "$THIS_J2SDK_BUNDLE" ] && [ -n "$OTHER_J2SDK_BUNDLE" ]; then if [ -n "$THIS_DOCS" ] && [ -n "$OTHER_DOCS" ]; then if [ "$CMP_ZIPS" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_SEC_BIN" ] && [ -n "$OTHER_SEC_BIN" ]; then if [ -n "$(echo $THIS_SEC_BIN | $FILTER)" ]; then if [ -n "$THIS_SEC_WINDOWS_BIN" ] && [ -n "$OTHER_SEC_WINDOWS_BIN" ]; then if [ -n "$(echo $THIS_SEC_WINDOWS_BIN | $FILTER)" ]; then if [ -n "$THIS_JGSS_WINDOWS_BIN" ] && [ -n "$OTHER_JGSS_WINDOWS_BIN" ]; then if [ -n "$(echo $THIS_JGSS_WINDOWS_BIN | $FILTER)" ]; then if [ "$CMP_JARS" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ "$CMP_LIBS" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ "$OPENJDK_TARGET_OS" = "macosx" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ "$CMP_EXECS" = "true" ]; then if [ -n "$THIS_J2SDK" ] && [ -n "$OTHER_J2SDK" ]; then if [ -n "$THIS_J2SDK_OVERLAY" ] && [ -n "$OTHER_J2SDK_OVERLAY" ]; then if [ -n "$REGRESSIONS" ]; then
git@github.com:dragonwell-project/dragonwell8.git,6284cfd69ae66fcd62b2e9ba21c7a7805ef9f35e,dragonwell8,4013,./dragonwell8/common/bin/update-build-readme.sh
lines,62
function,3

locate_markdown_processor() { verify_source_code() { process_source() {
for,0

if,4
if [ -z "$MARKDOWN" ]; then if [ -z "$MARKDOWN" ]; then if [ "x$MARKDOWN_VERSION" != "xThis is Markdown, version 1.0.1." ]; then if [ "x$TOO_LONG_LINES" != x ]; then
git@github.com:rubenlagus/TelegramBots.git,f343d17ae4d3b793cb70ed51bd2cc2e05c2a6e4a,TelegramBots,4013,
git@github.com:BoltsFramework/Bolts-Android.git,54e9cb8bdd4950aa4d418dcbc0ea65414762aef5,Bolts-Android,4009,./Bolts-Android/scripts/publish_snapshot.sh
lines,25
function,0


for,0

if,3
if [ "$TRAVIS_REPO_SLUG" != "$REPO_SLUG" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:gz-yami/mall4j.git,4b7697fe6042ded7171879f251aad951cc76b907,mall4j,3997,
git@github.com:lcodecorex/TwinklingRefreshLayout.git,e3091242898af87ddc6e7452576ab99e94a81ef1,TwinklingRefreshLayout,3994,
git@github.com:failsafe-lib/failsafe.git,e8d99288a91df892340d325ad4562d064d405296,failsafe,3993,./failsafe/bin/push-javadoc.sh
lines,66
function,3

build () { patchFavIcon () { commit() {
for,4
echo "Building Javadocs for $1" commit && echo "Published Javadocs for $1" for f in $1/*.html ; do for d in $1/* ; do
if,4
if [ "$1" != "core" ]; then if [ -f "$f" ]; then if [ "$DIFF" != "" ] if [ -d $d ]; then echo "descending to "$d ; patchFavIcon $d ../$2 ; fi ;
git@github.com:qstumn/BadgeView.git,3b8607626a12c48192c30f0dfdd9b950c4532558,BadgeView,3993,
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/opengrok-indexer/src/test/resources/sources/script/bazaar.sh
lines,25
function,0


for,0

if,0

git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/opengrok-indexer/src/test/resources/analysis/sh/truncated.sh
lines,0
function,0


for,0

if,0

git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/opengrok-indexer/src/test/resources/analysis/sh/sample.sh
lines,271
function,4

fail() warn() info() timeinfo()
for,3
for xref; do for dir in $dirs; do for xref in $xrefs; do
if,9
if [[ $SCM_MODE == "unknown" ]];then if [ -z "$xrefs" ]; then if [ ! -d $dir ]; then if [ "$reldir" = "$pwd" ]; then if [ -z "$clobber" ]; then if [ -z "$noflg" -a -z "$clobber" ]; then if [ $? -ne 0 ]; then if [ "$nfiles" -eq 1 ]; then if [ -n "$clobber" ]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/install-bitkeeper.sh
lines,11
function,0


for,0

if,1
if [ `uname -m` = "x86_64" ]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/release.sh
lines,50
function,0


for,0

if,6
if (( $ if (( $ if ! echo "$VERSION" | grep '^[0-9]\+\.[0-9]\+\.[0-9]\+$' >/dev/null; then if [[ ! -d $PWD/opengrok-indexer ]]; then if (( $? != 0 )); then if [[ $ver == $VERSION ]]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/javadoc.sh
lines,40
function,0


for,0

if,4
if [[ -z "$OPENGROK_BUILD_DIR" ]]; then if [[ -n $OPENGROK_REF && $OPENGROK_REF == refs/heads/* ]]; then if [[ "${OPENGROK_REPO_SLUG}" != "oracle/opengrok" || if [[ -d ./javadoc ]]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/install-universal_ctags.sh
lines,11
function,0


for,0

if,0

git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/install-python-packages.sh
lines,11
function,0


for,0

if,1
if [[ $? != 0 ]]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/docker.sh
lines,95
function,0


for,6
echo "Building docker image for release ($TAGS)" echo "Building docker image for master" echo "Not pushing Docker image for pull requests" echo "Not pushing Docker image for non main repository" for tag in $TAGS; do echo "Pushing Docker image for tag $tag"
if,9
if [[ -n $OPENGROK_REF && $OPENGROK_REF == refs/tags/* ]]; then if [[ -n $OPENGROK_TAG ]]; then if [[ -z $VERSION ]]; then if [[ -z $VERSION_SHORT ]]; then if [[ -n "$OPENGROK_PULL_REQUEST" ]]; then if [[ "$OPENGROK_REPO_SLUG" != "oracle/opengrok" ]]; then if [[ -z $DOCKER_USERNAME ]]; then if [[ -z $DOCKER_PASSWORD ]]; then if [ -n "$DOCKER_PASSWORD" -a -n "$DOCKER_USERNAME" -a -n "$TAGS" ]; then
git@github.com:oracle/opengrok.git,c89376d86fc2bb9dea3ab070d48f03851da66f79,opengrok,3979,./opengrok/dev/ref2tag.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/probedemo/auto_deploy.sh
lines,71
function,0


for,0

if,1
if ! [ -x "$(command -v sshpass)" ]; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/nacosdemo/dockerfiles/simple/docker-entrypoint.sh
lines,7
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/jupyterdockerfiles/docker-entrypoint.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/prometheusgrafana/undeploy.sh
lines,21
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/prometheusgrafana/deploy.sh
lines,48
function,0


for,0

if,5
if [ ! -f "node-exporter.yaml" ];then if [ ! -f "rbac-setup.yaml" ];then if [ ! -f "configmap.yaml" ];then if [ ! -f "prometheus.yaml" ];then if [ ! -f "grafana.yaml" ];then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/wait-for-it/wait-for-it.sh
lines,161
function,4

echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } usage() wait_for() wait_for_wrapper()
for,4
Timeout in seconds, zero for no timeout echoerr "$cmdname: waiting $TIMEOUT seconds for $HOST:$PORT" echoerr "$cmdname: waiting for $HOST:$PORT without a timeout" echoerr "$cmdname: timeout occurred after waiting $TIMEOUT seconds for $HOST:$PORT"
if,14
echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } -s | --strict Only execute subcommand if the test succeeds if [[ $TIMEOUT -gt 0 ]]; then if [[ $result -eq 0 ]]; then if [[ $QUIET -eq 1 ]]; then if [[ $RESULT -ne 0 ]]; then if [[ $HOST == "" ]]; then break; fi if [[ $PORT == "" ]]; then break; fi if [[ $TIMEOUT == "" ]]; then break; fi if [[ "$HOST" == "" || "$PORT" == "" ]]; then if [[ $CHILD -gt 0 ]]; then if [[ $TIMEOUT -gt 0 ]]; then if [[ $CLI != "" ]]; then if [[ $RESULT -ne 0 && $STRICT -eq 1 ]]; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/storageclass-demo/clean.sh
lines,11
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/wait-for-it-demo/docker/wait-for-it.sh
lines,161
function,4

echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } usage() wait_for() wait_for_wrapper()
for,4
Timeout in seconds, zero for no timeout echoerr "$cmdname: waiting $TIMEOUT seconds for $HOST:$PORT" echoerr "$cmdname: waiting for $HOST:$PORT without a timeout" echoerr "$cmdname: timeout occurred after waiting $TIMEOUT seconds for $HOST:$PORT"
if,14
echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi } -s | --strict Only execute subcommand if the test succeeds if [[ $TIMEOUT -gt 0 ]]; then if [[ $result -eq 0 ]]; then if [[ $QUIET -eq 1 ]]; then if [[ $RESULT -ne 0 ]]; then if [[ $HOST == "" ]]; then break; fi if [[ $PORT == "" ]]; then break; fi if [[ $TIMEOUT == "" ]]; then break; fi if [[ "$HOST" == "" || "$PORT" == "" ]]; then if [[ $CHILD -gt 0 ]]; then if [[ $TIMEOUT -gt 0 ]]; then if [[ $CLI != "" ]]; then if [[ $RESULT -ne 0 && $STRICT -eq 1 ]]; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/mysql-master-slave/docker-build/master/docker-entrypoint.sh
lines,206
function,3

file_env() { _check_config() { _get_config() {
for,4
for arg; do for i in {30..0}; do for f in /docker-entrypoint-initdb.d/*; do echo 'MySQL init process done. Ready for start up.'
if,21
if [ "${1:0:1}" = '-' ]; then if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then if [ "${!var:-}" ]; then elif [ "${!fileVar:-}" ]; then if ! errors="$("${toRun[@]}" 2>&1 >/dev/null)"; then if [ "$1" = 'mysqld' -a -z "$wantHelp" -a "$(id -u)" = '0' ]; then if [ "$1" = 'mysqld' -a -z "$wantHelp" ]; then if [ ! -d "$DATADIR/mysql" ]; then if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then if command -v mysql_ssl_rsa_setup > /dev/null && [ ! -e "$DATADIR/server-key.pem" ]; then if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then if [ "$i" = 0 ]; then if [ -z "$MYSQL_INITDB_SKIP_TZINFO" ]; then if [ ! -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then if [ ! -z "$MYSQL_ROOT_HOST" -a "$MYSQL_ROOT_HOST" != 'localhost' ]; then if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then if [ "$MYSQL_DATABASE" ]; then if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then if [ "$MYSQL_DATABASE" ]; then if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then if ! kill -s TERM "$pid" || ! wait "$pid"; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/mysql-master-slave/docker-build/slave/docker-entrypoint.sh
lines,214
function,3

file_env() { _check_config() { _get_config() {
for,4
for arg; do for i in {30..0}; do for f in /docker-entrypoint-initdb.d/*; do echo 'MySQL init process done. Ready for start up.'
if,23
if [ "${1:0:1}" = '-' ]; then if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then if [ "${!var:-}" ]; then elif [ "${!fileVar:-}" ]; then if ! errors="$("${toRun[@]}" 2>&1 >/dev/null)"; then if [ "$1" = 'mysqld' -a -z "$wantHelp" -a "$(id -u)" = '0' ]; then if [ "$1" = 'mysqld' -a -z "$wantHelp" ]; then if [ ! -d "$DATADIR/mysql" ]; then if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then if command -v mysql_ssl_rsa_setup > /dev/null && [ ! -e "$DATADIR/server-key.pem" ]; then if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then if [ "$i" = 0 ]; then if [ -z "$MYSQL_INITDB_SKIP_TZINFO" ]; then if [ ! -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then if [ ! -z "$MYSQL_ROOT_HOST" -a "$MYSQL_ROOT_HOST" != 'localhost' ]; then if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then if [ "$MYSQL_DATABASE" ]; then if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then if [ "$MYSQL_DATABASE" ]; then if [ "$MYSQL_MASTER_SERVICE_HOST" -a "$MYSQL_REPLICATION_USER" -a "$MYSQL_REPLICATION_PASSWORD" ]; then if [ "$MASTER_LOG_FILE" -a "$MASTER_LOG_POS" ]; then if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then if ! kill -s TERM "$pid" || ! wait "$pid"; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/spring-cloud-tutorials/jaeger-service-provider/full.sh
lines,17
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/nginx-clojure-tutorials/files/tutorials-deploy.sh
lines,50
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/javacv-tutorials/yolo-demo/make.sh
lines,29
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/javacv-tutorials/simple-grab-push/make.sh
lines,27
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/rabbitmq_docker_files/image/startrabbit.sh
lines,55
function,1

change_default_user() {
for,0

if,5
if [ -z $RABBITMQ_DEFAULT_USER ] && [ -z $RABBITMQ_DEFAULT_PASS ]; then if [ -z "$CLUSTERED" ]; then if [ -z "$CLUSTER_WITH" ]; then if [ -z "$RAM_NODE" ]; then if [ -z "$HA_ENABLE" ]; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/prometheusdemo/files/import_dashboard.sh
lines,4876
function,1

"expr": "time() - node_boot_time_seconds{instance=~\"$node\"}",
for,2
"Idle - Waiting for something to happen": " "description": "Dashboard for Spring Boot 1.x apps using Micrometer and Prometheus",
if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/files/install-go.sh
lines,38
function,1

func main() {
for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/files/create_shakespeare_index.sh
lines,55
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/files/install-grpc-gateway.sh
lines,31
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/files/install-grpc.sh
lines,80
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/object-tutorials/script/kubernetes/clean.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/object-tutorials/script/kubernetes/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-indexer-tutorials/scripts/kubernetes/clean.sh
lines,12
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-indexer-tutorials/scripts/kubernetes/deploy.sh
lines,12
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-tutorials/script/kubernetes/clean.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-tutorials/script/kubernetes/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-tutorials/script/build_send.sh
lines,13
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-tutorials/script/build_local.sh
lines,14
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/prometheus/webhook/script/bootstrap.sh
lines,6
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/prometheus/webhook/build.sh
lines,7
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/prometheus/webhook/clean.sh
lines,3
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-unit-tutorials/script/kubernetes/clean.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/client-go-unit-tutorials/script/kubernetes/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/test001/swagger/git_push.sh
lines,52
function,0


for,0

if,5
if [ "$git_user_id" = "" ]; then if [ "$git_repo_id" = "" ]; then if [ "$release_note" = "" ]; then if [ "$git_remote" = "" ]; then if [ "$GIT_TOKEN" = "" ]; then
git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/leader-tutorials/script/kubernetes/clean.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/leader-tutorials/script/kubernetes/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/kubernetes-object-tutorials/script/kubernetes/clean.sh
lines,4
function,0


for,0

if,0

git@github.com:zq2599/blog_demos.git,666c60ad3ad46fb006a6cae917af14575349c2ac,blog_demos,3966,./blog_demos/tutorials/kubernetes-object-tutorials/script/kubernetes/deploy.sh
lines,6
function,0


for,0

if,0

git@github.com:xcltapestry/XCL-Charts.git,dda6b9ff5816758ec18716fa0c17280422aafb15,XCL-Charts,3966,
git@github.com:mybatis/spring-boot-starter.git,aefb62c8e44b7f28060b7d65af8f8b00a8bdc73d,spring-boot-starter,3964,./spring-boot-starter/scripts/get_latest_version.sh
lines,28
function,0


for,0

if,0

git@github.com:mybatis/spring-boot-starter.git,aefb62c8e44b7f28060b7d65af8f8b00a8bdc73d,spring-boot-starter,3964,./spring-boot-starter/mybatis-spring-boot-samples/run_fatjars.sh
lines,68
function,0


for,2
for target in ${targets}; do for i in $(seq 10); do
if,5
if [[ "${target}" == *web* ]]; then if [ "$(ps -p "${pid}" | grep -c "")" = "2" ] && [ "$(lsof -i:${SERVER_PORT})" = "" ]; then if [ "${statusCode}" = "200" ]; then resultCode=0; else resultCode=${statusCode}; fi if [ ! "${line}" = "" ]; then if [ "${resultCode}" = "0" ]; then
git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/ga.sh
lines,60
function,2

usage() exit_on_err()
for,0

if,2
if [[ $ if [[ ${OPTION_SILENT} -eq 1 ]]; then
git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/greys.sh
lines,333
function,13

exit_on_err() default() check_permission() reset_for_env() get_local_version() get_remote_version() to_comparable_version() update_if_necessary() usage() parse_arguments() attach_jvm() active_console() main()
for,0

if,12
if [[ $(to_comparable_version ${local_version}) < $(to_comparable_version ${remote_version}) ]]; then if [[ ${OPTION_TAR_ENABLE} -eq 0 ]]; then if [ -z ${TARGET_PID} ];then if [ ! -z ${TARGET_PID} ]; then if type ${JAVA_HOME}/bin/java 2>&1 >> /dev/null; then elif type telnet 2>&1 >> /dev/null; then elif type nc 2>&1 >> /dev/null; then if [[ ${OPTION_CHECK_PERMISSION} -eq 1 ]]; then if [[ ${OPTION_UPDATE_IF_NECESSARY} -eq 1 ]]; then if [[ ${greys_local_version} = ${DEFAULT_VERSION} ]]; then if [[ ${OPTION_ATTACH_JVM} -eq 1 ]]; then if [[ ${OPTION_ACTIVE_CONSOLE} -eq 1 ]]; then
git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/greys-packages.sh
lines,50
function,1

exit_on_err()
for,0

if,0

git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/install-local.sh
lines,35
function,1

exit_on_err()
for,0

if,1
if [[ ! -x ${GREYS_LIB_HOME} ]]; then
git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/install.sh
lines,44
function,1

exit_on_err()
for,1
[[ -z $(grep "desc : write for july" ${TEMP_GREYS_FILE}) ]] \
if,0

git@github.com:oldmanpushcart/greys-anatomy.git,383d17d4dbc2f0cfcf73ce5b1477204b86f1992a,greys-anatomy,3959,./greys-anatomy/bin/gs.sh
lines,138
function,8

reset_for_env() parse_arguments() get_local_version() default() exit_on_err() greys_nc() usage() main()
for,0

if,0

git@github.com:killme2008/aviatorscript.git,44feeb1e061031d3266f352cf57cb535eb48449d,aviatorscript,3959,
git@github.com:rengwuxian/RxJavaSamples.git,f9e47c2e8347f124bc03ebe10e758f26a9b841b8,RxJavaSamples,3954,
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/version.sh
lines,50
function,0


for,0

if,4
if [[ $MVNVER =~ $MVNVER_MATCHER ]]; then if [[ $GITVER =~ $GITVER_MATCHER ]]; then if [[ "$SUFFIX" == "" ]]; then elif [[ "$SUFFIX" == "SNAPSHOT" ]]; then
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/gpg-wrap.sh
lines,6
function,0


for,0

if,1
if [ "$1" == "--version" ]; then
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/mac-cmake.sh
lines,29
function,0


for,1
echo " ARCH: Architecture to build for (x86_64 or arm64)"
if,1
if [ "$
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/deb-build.sh
lines,87
function,0


for,1
echo " GPG_ID: id for package signing"
if,9
if [ "$ if [[ "${ARCH}" != "amd64" ]]; then if [ ! -f /var/lib/schroot/tarballs/"${DIST}"-amd64-"${ARCH}".tgz ]; then if debian-distro-info --all | grep -Fqxi "${DIST}"; then elif ubuntu-distro-info --all | grep -Fqxi "${DIST}"; then if debian-distro-info --all | grep -Fqxi "${DIST}"; then elif ubuntu-distro-info --all | grep -Fqxi "${DIST}"; then if [ ! -f /var/lib/schroot/tarballs/"${DIST}"-amd64.tgz ]; then if [[ "${ARCH}" != "amd64" ]]; then
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/install/mac/build-dmg.sh
lines,17
function,0


for,0

if,0

git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/deb-gen-source.sh
lines,47
function,0


for,0

if,3
if [ "$ if debian-distro-info --all | grep -Fqxi "${DIST}"; then elif ubuntu-distro-info --all | grep -Fqxi "${DIST}"; then
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/resources/deb-prepare.sh
lines,36
function,0


for,0

if,2
if lsb_release -i -s == "Ubuntu"; then elif lsb_release -i -s == "Debian"; then
git@github.com:jitsi/jitsi.git,77b1f5e65ad7c06cbfe6dce5f77b2f303980c240,jitsi,3953,./jitsi/debian/libjitsi-ver.sh
lines,5
function,1

LIBJITSI_MVN_VER=$(xmllint --xpath "//*[local-name()='dependency' and ./*[local-name()='artifactId' and text()='libjitsi']]/*[local-name()='version']/text()" pom.xml)
for,0

if,0

git@github.com:will-che/flink-recommandSystem-demo.git,3aa7e4b95c2627b031ef6c2779802239b074e780,flink-recommandSystem-demo,3949,./flink-recommandSystem-demo/resources/docker/docker-compose/generator.sh
lines,30
function,4
function create_kafka_topic { function send_messages_to_kafka { function rand { function generator_message {

for,0

if,0

git@github.com:orhanobut/hawk.git,0d22dde128b1ab5f50ac20d802db79cf402aa150,hawk,3948,
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/resources/ffdec.sh
lines,126
function,2

search_jar_file() { check_java_version () {
for,2
for f in $JAR_FILE_CANDIDATES ; do for JRE_PATH in $LOOKUP_JRE_DIRS; do
if,14
if [ "$JVER1" -gt $REQ_JVER1 ]; then elif [ "$JVER1" -lt $REQ_JVER1 ]; then if [ "$JVER2" -gt $REQ_JVER2 ]; then elif [ "$JVER2" -lt $REQ_JVER2 ]; then if [ "$JVER3" -gt $REQ_JVER3 ]; then elif [ "$JVER3" -lt $REQ_JVER3 ]; then if [ "$JVER4" -lt $REQ_JVER4 ]; then if [ "${JAR_FILE:0:1}" != '/' ] ; then if [ -n "$STACK_SIZE" ]; then if [ -n "$MEMORY" ]; then if [ "$(uname)" = "Darwin" ]; then if [ -x "$(which java)" ]; then if [ -x "$JRE_PATH/bin/java" ]; then if [ -x "$(which xmessage)" ]; then
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/resources/translator.sh
lines,105
function,2

search_jar_file() { check_java_version () {
for,2
for f in $JAR_FILE_CANDIDATES ; do for JRE_PATH in $LOOKUP_JRE_DIRS; do
if,12
if [ $JVER1 -gt $REQ_JVER1 ]; then elif [ $JVER1 -lt $REQ_JVER1 ]; then if [ $JVER2 -gt $REQ_JVER2 ]; then elif [ $JVER2 -lt $REQ_JVER2 ]; then if [ $JVER3 -gt $REQ_JVER3 ]; then elif [ $JVER3 -lt $REQ_JVER3 ]; then if [ $JVER4 -lt $REQ_JVER4 ]; then if [ ${JAR_FILE:0:1} != '/' ] ; then if [ "`uname`" = "Darwin" ]; then if [ -x "`which java`" ]; then if [ -x "$JRE_PATH/bin/java" ]; then if [ -x "`which xmessage`" ]; then
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/cicd_scripts/script.sh
lines,198
function,0


for,1
for (( i=0; i<$NUM_FILES; i++ ))
if,10
if [ -z ${GITHUB_ACCESS_TOKEN+x} ]; then if [ $CICD_REFTYPE = "tag" ]; then if [[ $CICD_REFNAME =~ ^version.* ]] ; then if [ "$CICD_REFNAME" == "$NIGHTLY_BRANCH" ] && [ "$CICD_EVENTNAME" != "pull_request" ]; then if [ "$DO_DEPLOY" == 1 ]; then if [ ! -f $FILE_PATH ]; then if [ "$CURL_STATUS" != 0 ]; then if [ "$CURL_STATUS" != 55 ] && [ "$CURL_STATUS" != 56 ]; then if [ "$NUM_RETRY" == "$MAX_RETRY" ]; then if [ -n "$DEPLOY_RELEASE_TO_REMOVE" ]; then
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/cicd_scripts/before_install.sh
lines,38
function,0


for,0

if,2
if [ ! -f "$tools_dir/cached.txt" ]; then if ! [ -z ${website_password+x} ]; then
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/make-metainfo-changelog.sh
lines,144
function,7

find_metainfo_entry_line() { get_date_from_line() { get_release_from_line() { get_latest_metainfo_release() { process_line() { get_changelog_until_version() { print_with_indent() {
for,0

if,11
if [[ $line =~ $RELEASE_PATTERN_METAINFO ]]; then if [[ $line =~ $RELEASE_PATTERN_CHANGELOG ]]; then if [ "$start_parsing" == 'true' ]; then if [[ $line =~ $RELEASE_PATTERN_CHANGELOG ]]; then elif [[ $line =~ $CHANGELOG_TYPE_PATTERN ]]; then elif [[ $line =~ $CHANGELOG_ENTRY_PATTERN ]]; then if [ "$current_type" == 'entry' ] && [ "$previous_type" != 'entry' ]; then if [ "$current_type" != 'entry' ] && [ "$previous_type" == 'entry' ]; then if [ "$current_type" == 'release' ] && [ "$previous_type" == 'none' ]; then if [ "$start_parsing" == 'true' ]; then if [ "$previous_type" == 'entry' ]; then
git@github.com:jindrapetrik/jpexs-decompiler.git,41acb496ae2f5f7dcb098645147213f0bb21bc0c,jpexs-decompiler,3942,./jpexs-decompiler/git_eol_normalization.sh
lines,9
function,0


for,0

if,0

git@github.com:Piasy/BigImageViewer.git,067f8eb86ee522190ab473f36a1b0de11c21a663,BigImageViewer,3940,
git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/Minecraft/launchClient.sh
lines,75
function,0


for,0

if,6
if ! [[ $port =~ ^-?[0-9]+$ ]]; then if [ \( $port -lt 0 \) -o \( $port -gt 65535 \) ]; then if ! [[ $scorepolicy =~ ^-?[0-9]+$ ]]; then if [ ! -d "run/config" ]; then if [ $replaceable -gt 0 ]; then if [ $env -gt 0 ]; then
git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/.travis/ci_ubuntu14.04.sh
lines,60
function,0


for,0

if,0

git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/.travis/ci_macosx.sh
lines,31
function,0


for,0

if,0

git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/scripts/docker/build.sh
lines,123
function,0


for,0

if,9
if [ $verbose_mode ]; then if ! [[ $boost =~ ^-?[0-9,_]+$ ]]; then if ! [[ $python =~ ^-?[0-9,.]+$ ]]; then if [ $interactive -gt 0 ]; then if [ $result -ne 0 ]; then if [ $run_tests -gt 0 ]; then if [ $swallow_display -gt 0 ]; then if [ $result -ne 0 ]; then if [ $result -eq 0 ]; then
git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/scripts/docker/console_startup.sh
lines,7
function,1

python3 -c "import malmo.minecraftbootstrap;malmo.minecraftbootstrap.launch_minecraft()"
for,0

if,0

git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/scripts/python-wheel/linux_macos_wheel.sh
lines,16
function,0


for,0

if,1
if [ "$
git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/scripts/malmo_build.sh
lines,395
function,0


for,3
echo "Building Malmo for $DIST version $VERSION." for i in ${deps[@]} echo "Malmo tests failed!! Please inspect /home/$USER/build_logs/test_malmo.log for details."
if,42
-s Use static linking of Boost (will also build Boost if building) if [ $LIGHT_WEIGHT ] && [ -z $INSTALL_ONLY ]; then echo "Can't strip out Mono, Torch and Lua if you are building." if [ $VERBOSE_MODE ]; then if [ "$KERNEL" == 'Darwin' ]; then elif [ "$KERNEL" == 'Linux' ]; then if [ -f /etc/os-release ]; then if [ "$DIST" == 'ubuntu' ]; then if [ "$VERSION" -ge 15 ]; then elif [ "$VERSION" -ge 14 ]; then if [ -z "$INSTALL_ONLY" ]; then elif [ "$DIST" == 'debian' ]; then if [ "$VERSION" -ge 8 ]; then elif [ "$VERSION" -ge 7 ]; then if [ -z "$INSTALL_ONLY" ]; then if [ -z "$INSTALL_ONLY" ] && [ "$STATIC_BOOST" ]; then if [ -z "$INSTALL_ONLY" ] && [ -z "$DOWNLOAD_XSD" ]; then if [ -z "$INSTALL_ONLY" ]; then if [ $result -ne 0 ]; then if [ "$INSTALL_TORCH" ] && [ -z "$LIGHT_WEIGHT" ]; then if [ $result -ne 0 ]; then if [ -z "$LIGHT_WEIGHT" ]; then if [ "$DIST" == 'debian' ] || [ "$DIST" == 'ubuntu' ]; then if [ "$VERSION" -ne 7 ]; then if [ "$VERSION" -ge 8 ] && [ "&DIST" == 'debian' ]; then elif [ "$DIST" == 'fedora' ]; then if [ $result -ne 0 ]; then if [ -z "$INSTALL_ONLY" ] && [ "$STATIC_BOOST" ]; then if [ $result -ne 0 ]; then if [ $DOWNLOAD_XSD ]; then if [ $result -ne 0 ]; then if [ -z "$INSTALL_ONLY" ]; then if [ $result -ne 0 ]; then if [ -z "$LIGHT_WEIGHT" ]; then if [ "$BUILD_ALE" ] && [ -z "$LIGHT_WEIGHT" ]; then if [ $result -ne 0 ]; then if [ "$INSTALL_ONLY" ]; then if [ "$BUILD_ALE" ]; then if [ "$STATIC_BOOST" ]; then if [ $result -ne 0 ]; then if [ $result -ne 0 ]; then if [ $result -eq 0 ]; then
git@github.com:microsoft/malmo.git,b59258d812a2600c0c615358684fcf660d83455c,malmo,3939,./malmo/MalmoEnv/package.sh
lines,3
function,0


for,0

if,0

git@github.com:LSPosed/LSPatch.git,c9c5708d2f469f46e839a96fc2f9632e4414a075,LSPatch,3938,
git@github.com:code4craft/tiny-spring.git,2e0a2ba49c703f33fcca359a97af86094b4ded0d,tiny-spring,3936,
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/example/sequence-split-merge/deploy/jdrpc.client.test.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/example/sequence-split-merge/deploy/start-all.sh
lines,55
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/example/sequence-split-merge/deploy/jstart.drpc.topology.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/example/sequence-split-merge/deploy/start.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/example/sequence-split-merge/deploy/stop-all.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/dev-tools/add_apache_license.sh
lines,0
function,0


for,0

if,1
find . -name \*.java -exec sh -c "if ! grep -q 'LICENSE-2.0' '{}';then echo '{}' && mv '{}' tmp && cp LICENSEHEADER.txt '{}' && cat tmp >> '{}' && rm tmp;fi" \;
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-utility/performance-test/deploy/heron.start.sh
lines,3
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-utility/jstorm-flux/flux-examples/start.sh
lines,1
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/other/genthrift.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/docs/jstorm-doc/build_doc.sh
lines,65
function,0


for,2
echo "Redcarpet is needed for Markdown parsing and table of contents generation." echo "Pygments is needed for syntax highlighting of the code examples."
if,4
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if $HAS_JEKYLL; then
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/docs/jstorm-doc/deploy.sh
lines,45
function,0


for,2
echo "Redcarpet is needed for Markdown parsing and table of contents generation." echo "Pygments is needed for syntax highlighting of the code examples."
if,3
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/genthrift.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/scripts/start-JstormYarn.sh
lines,1
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/scripts/upgradeJstorm.sh
lines,1
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/scripts/clusterCrontab.sh
lines,31
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/scripts/start_jstorm.sh
lines,27
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/src/main/resources/start_jstorm.sh
lines,27
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/external-dependency/setup/setup.sh
lines,0
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/jstorm-on-yarn/external-dependency/setup/start_jstorm.sh
lines,19
function,0


for,0

if,0

git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/bin/check_jstorm_Supervisor.sh
lines,13
function,0


for,0

if,1
if [ $SP -lt 1 ];then
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/bin/start.sh
lines,80
function,1
function startJStorm()
function startJStorm()
for,0

if,8
if [ -e ~/.bashrc ] if [ -e ~/.bash_profile ] if [ "x$JAVA_HOME" != "x" ] if [ "x$JSTORM_HOME" != "x" ] if [ "x$JSTORM_CONF_DIR" != "x" ] if [ $? -eq 0 ] if [ "X${NIMBUS_HOST}" != "X" ] if [ "X${NIMBUS_HOST}" != "X" ] && [ "X${NIMBUS_HOST_START_SUPERVISOR}" != "X" ]
git@github.com:alibaba/jstorm.git,0e228558b43f452c7a82400e24d2d9772d09c41e,jstorm,3928,./jstorm/bin/stop.sh
lines,15
function,1
function killJStorm()
function killJStorm()
for,0

if,0

git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd/ndk-build.sh
lines,34
function,0


for,0

if,7
if [ ! -d "$ANDROID_SDK" ]; then if [ ! -d "$ANDROID_NDK" ]; then if [ -z "$OSMAND_ARCHITECTURES_SET" ]; then if [[ "$(uname -a)" =~ Linux ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then if [[ "$(uname -a)" =~ Darwin ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then
git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd/old-ndk-build.sh
lines,22
function,0


for,0

if,4
if [ -d "$ANDROID_HOME" ]; then if [ -d "$ANDROID_NDK" ]; then if [ ! -d "$ANDROID_SDK_ROOT" ]; then if [ ! -d "$ANDROID_NDK_ROOT" ]; then
git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd/full-ndk-build.sh
lines,35
function,0


for,1
echo WARNING: exporting a bash ARRAY to environment, this might not work depending on your bash version. See BUGS section of "bash(1)" for details.
if,7
if [ ! -d "$ANDROID_SDK" ]; then if [ ! -d "$ANDROID_NDK" ]; then if [ -z "$OSMAND_ARCHITECTURES_SET" ]; then if [[ "$(uname -a)" =~ Linux ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then if [[ "$(uname -a)" =~ Darwin ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then
git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd/ndebug.sh
lines,29
function,0


for,0

if,2
if [ -z "$nativelib" ]; then if [ ! -f "$nativelib" ]; then
git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd-java/collect_legacy_libs.sh
lines,37
function,2
function copyLibs { function compile {

for,0

if,4
if [[ "$(uname -a)" =~ Linux ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then if [ -d "$CORE_LOC/binaries/$1/$2" ]; then if [ ! -d "$CORE_LOC/targets/$ARCH-linux-$COMPILER-$ARCH-linux-$COMPILER-release.baked" ]; then
git@github.com:osmandapp/OsmAnd.git,d5b6abc0b706e21d9eed7997718c7b1d0c5334d9,OsmAnd,3926,./OsmAnd/OsmAnd-java/collect_libs.sh
lines,43
function,2
function copyLibs { function compile {

for,0

if,7
if [[ "$(uname -a)" =~ Linux ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then if [[ "$(uname -a)" =~ Darwin ]]; then if [[ -z "$OSMAND_BUILD_CPU_CORES_NUM" ]]; then if [ -d "$ROOT_LOC/binaries/$1/$2" ]; then if [ ! -d "$ROOT_LOC/amd64-linux-gcc-release.makefile" ]; then if [ ! -d "$ROOT_LOC/baked/i686-linux-gcc-release.makefile" ]; then
git@github.com:JoanZapata/android-iconify.git,faa8c541398e2b38a3c800c93017131fd078cc01,android-iconify,3920,
git@github.com:google/open-location-code.git,817c0086479ac263d328f903605db8233a018546,open-location-code,3915,./open-location-code/cpp/clang_check.sh
lines,38
function,0


for,1
for FILE in `ls *.cc *.h`; do
if,5
if hash $CLANG_FORMAT 2>/dev/null; then elif hash clang-format 2>/dev/null; then if [ ! -f ".clang-format" ]; then if [ $? -ne 0 ]; then if [ -z "$TRAVIS" ]; then
git@github.com:google/open-location-code.git,817c0086479ac263d328f903605db8233a018546,open-location-code,3915,./open-location-code/dart/checks.sh
lines,63
function,0


for,1
for FILE in `find -- find_bash.sh open-location-code output.txt outputbashcleaned.txt process_bash.py | egrep "\.dart$"`; do
if,7
if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -z "$TRAVIS" ]; then if [ $? -ne 0 ]; then if [ "$TRAVIS" != "" ]; then if [ $RETURN -ne 0 ]; then
git@github.com:google/open-location-code.git,817c0086479ac263d328f903605db8233a018546,open-location-code,3915,./open-location-code/js/checks.sh
lines,59
function,0


for,0

if,5
if [ `basename "$PWD"` != "js" ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ -v TRAVIS ]; then
git@github.com:google/open-location-code.git,817c0086479ac263d328f903605db8233a018546,open-location-code,3915,./open-location-code/python/format_check.sh
lines,25
function,0


for,0

if,3
if [ $? -eq 1 ]; then if [ $? -eq 0 ]; then if [ -z "$TRAVIS" ]; then
git@github.com:google/open-location-code.git,817c0086479ac263d328f903605db8233a018546,open-location-code,3915,./open-location-code/c/clang_check.sh
lines,35
function,0


for,1
for FILE in `ls *.[ch] */*.[ch]`; do
if,5
if hash $CLANG_FORMAT 2>/dev/null; then elif hash clang-format 2>/dev/null; then if [ ! -f ".clang-format" ]; then if [ $? -ne 0 ]; then if [ -z "$TRAVIS" ]; then
git@github.com:jboss-javassist/javassist.git,700be6f6f9546e8af049b1a763ce27f1fde5955d,javassist,3907,
git@github.com:pqpo/SmartCropper.git,d710fdff4bc97b079d54c017b5345e17c33fc992,SmartCropper,3905,
git@github.com:discord-jda/JDA.git,2d97b27b49cd2e653a41fd39d8c2f22af894be53,JDA,3894,
git@github.com:ddd-by-examples/library.git,98d7004b5aef366ba5d661ae0cb544af1cfd33f1,library,3894,
git@github.com:bluelinelabs/Conductor.git,2ffafaee79d73f7a4cbb52c4f2250a8e536bdd51,Conductor,3883,
git@github.com:binIoter/GuideView.git,39d131a88bd2e7eb8b0b12cd353e3a11dcdaa59c,GuideView,3876,
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.2.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/latest/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.4.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.6.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.5.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/entrypoint.sh
lines,3
function,0


for,0

if,0

git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.1.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/docker/0.3.0/test.sh
lines,33
function,0


for,1
echo "status is incorrect, waiting for next turn"
if,1
if [[ "$status_code" -eq 200 ]] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/dubbo-admin-distribution/src/bin-distribution-check.sh
lines,61
function,0


for,3
for i in "${files[@]}"; do for i in BOOT-INF/lib/*.jar; do for i in "${licenses[@]}"; do
if,7
if [ ! -f "BOOT-INF/lib/$file" ]; then if [ $(grep -c $jar LICENSE) -eq 0 ]; then echo "Step 3: if a project is Apache Licensed and has NOTICE, it should be listed in NOTICE" licenses=($(echo $(grep "Apache 2.0" LICENSE | awk -F ' ' '{if ($0 ~ /^.*\*/) printf "%s,%s\\n",$3,$5}'))) license=$(echo $i | awk -F ',' '{print $2}' | awk '{if (toupper($0) ~ /.*LICENSE.*/) print $0}') if [ $(curl --write-out %{http_code} --head --output /dev/null -s $notice | grep -c 200) -ne 0 ] \ if [ $(grep -c $name NOTICE) -eq 0 ]; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/dubbo-admin-distribution/src/bin/shutdown.sh
lines,31
function,0


for,0

if,1
if [ -z "$pid" ] ; then
git@github.com:apache/dubbo-admin.git,fdd3a6e4d907aff65693fee132585404fcfe7724,dubbo-admin,3876,./dubbo-admin/dubbo-admin-distribution/src/bin/startup.sh
lines,67
function,0


for,0

if,8
if [ -z "$JAVA_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ -z "$JAVA_HOME" ]; then if [ ! -d "${BASE_DIR}/logs" ]; then if [ ! -f "${BASE_DIR}/logs/start.out" ]; then
git@github.com:kestra-io/kestra.git,92de3944723eb925c71821c4cef2257d0c86aa36,kestra,3876,./kestra/docker/usr/local/bin/docker-entrypoint.sh
lines,5
function,0


for,0

if,0

git@github.com:kestra-io/kestra.git,92de3944723eb925c71821c4cef2257d0c86aa36,kestra,3876,./kestra/gradle/jar/selfrun.sh
lines,27
function,0


for,0

if,1
if [ "${KESTRA_CONFIGURATION}" ]; then
git@github.com:apache/maven.git,16888062d05d142cd5cacc2469100bbfdc6ab01f,maven,3875,./maven/deploySite.sh
lines,23
function,0


for,0

if,0

git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/test/resources/scripts/check_file_deleted.sh
lines,5
function,0


for,0

if,0

git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/test/resources/echo.sh
lines,2
function,0


for,0

if,0

git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/test/resources/kill_red5.sh
lines,2
function,0


for,0

if,0

git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/fix_mongodb_for_upgrading_from_2.4.1_and_earlier.sh
lines,163
function,27

usage() { run_mongo() { run_mongo_auth() { mongo_backup(){ mongocon() { for appsettings in $(seq 0 $(run_mongo "clusterdb" 'db.AppSettings.count()'-1)); do appName=`run_mongo "clusterdb" 'db.AppSettings.find()['$appsettings'].appName'|tr '[:upper:]' '[:lower:]'` for broadcast in $(seq 0 $(run_mongo "$appName" 'db.broadcast.count()'-1)); do broadcastObjectId=`run_mongo "$appName" 'db.broadcast.find()['$broadcast']._id'` for vod in $(seq 0 $(run_mongo $appName"VoD" 'db.vod.count()'-1)); do vodObjectId=`run_mongo $appName"VoD" "db.vod.find()['$vod']._id"` appObjectId=`run_mongo "clusterdb" 'db.AppSettings.find()['$appsettings']._id'` if [ `run_mongo "serverdb" 'db.user.count()'` = "0" ]; then run_mongo "serverdb" "db.user.drop()" for x in $(seq 0 $(run_mongo "serverdb" 'db.user.count()'-1)); do users=`run_mongo "serverdb" 'db.user.find()['$x']._id'` for appsettings in $(seq 0 $(run_mongo_auth "clusterdb" 'db.AppSettings.count()'-1)); do appName=`run_mongo_auth "clusterdb" 'db.AppSettings.find()['$appsettings'].appName'|tr '[:upper:]' '[:lower:]'` for broadcast in $(seq 0 $(run_mongo_auth "$appName" 'db.broadcast.count()'-1)); do broadcastObjectId=`run_mongo_auth "$appName" 'db.broadcast.find()['$broadcast']._id'` for vod in $(seq 0 $(run_mongo_auth $appName"VoD" 'db.vod.count()'-1)); do vodObjectId=`run_mongo_auth $appName"VoD" "db.vod.find()['$vod']._id"` appObjectId=`run_mongo_auth "clusterdb" 'db.AppSettings.find()['$appsettings']._id'` if [ `run_mongo_auth "serverdb" 'db.user.count()'` = "0" ]; then run_mongo_auth "serverdb" "db.user.drop()" for x in $(seq 0 $(run_mongo_auth "serverdb" 'db.user.count()'-1)); do users=`run_mongo_auth "serverdb" 'db.user.find()['$x']._id'`
for,8
for appsettings in $(seq 0 $(run_mongo "clusterdb" 'db.AppSettings.count()'-1)); do for broadcast in $(seq 0 $(run_mongo "$appName" 'db.broadcast.count()'-1)); do for vod in $(seq 0 $(run_mongo $appName"VoD" 'db.vod.count()'-1)); do for x in $(seq 0 $(run_mongo "serverdb" 'db.user.count()'-1)); do for appsettings in $(seq 0 $(run_mongo_auth "clusterdb" 'db.AppSettings.count()'-1)); do for broadcast in $(seq 0 $(run_mongo_auth "$appName" 'db.broadcast.count()'-1)); do for vod in $(seq 0 $(run_mongo_auth $appName"VoD" 'db.vod.count()'-1)); do for x in $(seq 0 $(run_mongo_auth "serverdb" 'db.user.count()'-1)); do
if,15
if [ -z "$MONGODB_USERNAME" ] && [ -z "$MONGODB_PASSWORD" ]; then elif [ ! -z "$MONGODB_USERNAME" ] && [ ! -z "$MONGODB_PASSWORD" ]; then if [ $? != 0 ]; then if [ -z "$MONGODB_USERNAME" ] && [ -z "$MONGODB_PASSWORD" ]; then if [ "$q" ]; then if [ "$q" ]; then if [ "$q" ]; then if [ `run_mongo "serverdb" 'db.user.count()'` = "0" ]; then if [ ! -z "$MONGODB_USERNAME" ] && [ ! -z "$MONGODB_PASSWORD" ]; then if [ "$q" ]; then if [ "$q" ]; then if [ "$q" ]; then if [ `run_mongo_auth "serverdb" 'db.user.count()'` = "0" ]; then if [ -z "$MONGODB_IP" ]; then if ! [ -x "$(command -v mongo)" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/shutdown.sh
lines,29
function,0


for,0

if,2
if [ "$1" == "force" ]; then if [ -z "$RED5_HOME" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/enable_ssl.sh
lines,458
function,14

usage() { ipt_remove() { ipt_restore() { distro () { get_password() { output() { delete_alias() { get_freedomain(){ get_new_certificate(){ renew_certificate(){ auth_tomcat(){ create_cron_job(){ generate_password(){ check_domain_name(){
for,4
echo "Usage commands for different scenarios:" echo "- Install SSL for your custom domain with Let's Encrypt. Just type:" echo "- Install SSL for your custom domain and authenticate options with Let's Encrypt. Just type:" echo "$now > Waiting for DNS validation."
if,37
if [ "$iptab" ]; then if [ "$IPT" ]; then if [ -f "$os_release" ]; then if [ -z "$password" ] if ! [ -x "$(command -v sudo)" ]; then if [ $OUT -ne 0 ]; then if [ -d $TEMP_DIR ]; then if [ -f "$1" ]; then if [ ! -z "$FULL_CHAIN_FILE" ] && [ -f "$FULL_CHAIN_FILE" ]; then if [ ! -z "$PRIVATE_KEY_FILE" ] && [ -f "$PRIVATE_KEY_FILE" ]; then if [ ! -z "$CHAIN_FILE" ] && [ -f "$CHAIN_FILE" ]; then if [ "$fullChainFileExist" != "$privateKeyFileExist" ]; then if [ "$chainFileExist" != "$privateKeyFileExist" ]; then if [ ! -z $get_license_key ]; then if [ `cat $INSTALL_DIRECTORY/conf/red5.properties | egrep "rtmps.keystorepass=ams-[0-9]*.antmedia.cloud"|wc -l` == "0" ]; then if [ $? != 0 ]; then elif [ $check_api == 400 ]; then elif [ $check_api == 401 ]; then if [ "$fullChainFileExist" == false ]; then if [ "$ID" == "ubuntu" ]; then elif [ "$ID" == "centos" ] || [ "$ID" == "rocky" ] || [ "$ID" == "almalinux" ]; then if [ -z "$email" ]; then if [ "$dns_validate" == "route53" ]; then elif [ "$dns_validate" == "custom" ]; then elif [ "$freedomain" == "true" ]; then if [ "$dns_validate" == "route53" ]; then elif [ "$dns_validate" == "custom" ]; then elif [ "$freedomain" == "true" ]; then if [ ! -d "$TEMP_DIR" ]; then if [ "$fullChainFileExist" == false ]; then if [ $(grep -E "enable_ssl.sh" /tmp/cronfile | wc -l) -ne "0" ]; then if [ -z "$domain" ]; then if [ "$helpRequest" == "true" ] if [ ! -d "$INSTALL_DIRECTORY" ]; then if [ "$renew_flag" == "true" ] elif [ "$renew_flag" == "false" ] if [ "$fullChainFileExist" == false ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/change_server_mode.sh
lines,67
function,1

usage() {
for,0

if,3
if [ -z "$MODE" ]; then if [ "$OS_NAME" = "Darwin" ]; then if [ "$OS_NAME" = "Darwin" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/conf/functions.sh
lines,139
function,1

change_server_mode() {
for,2
for i in $LIST_APPS; do for i in $LIST_APPS; do
if,12
if [ "$OS_NAME" = "Darwin" ]; then if [ $MODE = "cluster" ]; then if [ -z "$DB_URL" ]; then if [[ $DB_URL =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ || $DB_URL =~ ^localhost$ || $DB_URL =~ ^mongo.*$ ]]; then elif [[ $DB_URL =~ ^redis.*$ ]]; then if [ -z "$DB_URL" ]; then elif [[ $DB_URL =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ || $DB_URL =~ ^localhost$ || $DB_URL =~ ^mongo.*$ ]]; then elif [[ $DB_URL =~ ^redis.*$ ]]; then if [ "$OS_NAME" != "Darwin" ]; then if [ ! -z "${3}" ]; then if [ ! -z "${4}" ]; then if [ "$OS_NAME" != "Darwin" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/create_app.sh
lines,163
function,2

usage() { check_result() {
for,2
echo "-f: war file path for custom app deployment" echo "Please set mongodb host, username and password for cluster mode. "
if,12
if [ $OUT -ne 0 ]; then if [ -z "$APP_NAME" ]; then if [ ! -z "$2" ]; then if [[ -z "$APP_NAME" ]]; then if [[ -z "$WAR_FILE" ]]; then if [[ -z "$AS_WAR" ]]; then if [[ "$IS_CLUSTER" == "true" ]]; then if [[ -z "$MONGO_HOST" ]]; then if [[ "$OS_NAME" == 'Darwin' ]]; then if [[ $MONGO_HOST == \'*\' ]]; then if [[ "$IS_CLUSTER" == "true" ]]; then if [[ $AS_WAR == "true" ]]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/delete_app.sh
lines,58
function,2

usage() { check_result() {
for,0

if,2
if [ $OUT -ne 0 ]; then if [[ -z "$APP_NAME" ]]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/start.sh
lines,261
function,1

replaceCandidateAddressWithServer() {
for,5
for i in $LIST_APPS; do for applist in $LIST_APPS; do for applist in $LIST_APPS; do for applist in $LIST_APPS; do for JAVA in "${JAVA_HOME}/bin/java" "${JAVA_HOME}/Home/bin/java" "/usr/bin/java" "/usr/local/bin/java"
if,25
if [ -z "$RED5_HOME" ]; then if [ "$OS_NAME" = "Darwin" ]; then if [ "$USE_PUBLIC_IP_AS_SERVER_NAME" = "true" ]; then if [ $(grep -E "settings.replaceCandidateAddrWithServerAddr" $1 | wc -l) -eq "0" ]; then if [ ! -z "$DB_USERNAME" ] && [ ! -z "$DB_PASSWORD" ]; then if [ ! -z "${SERVER_MODE}" ]; then if [ ! -z "${LICENSE_KEY}" ]; then if [ ! -z "${KAFKA_URL}" ]; then if [ ! -z "${TURN_URL}" ]; then if [ $(grep -E "settings.webrtc.stunServerURI" $applist/WEB-INF/red5-web.properties | wc -l) -eq "0" ]; then if [ ! -z "${TURN_USERNAME}" ]; then if [ $(grep -E "settings.webrtc.turnServerUsername" $applist/WEB-INF/red5-web.properties | wc -l) -eq "0" ]; then if [ ! -z ${TURN_PASSWORD} ]; then if [ $(grep -E "settings.webrtc.turnServerCredential" $applist/WEB-INF/red5-web.properties | wc -l) -eq "0" ]; then if [ -z "$JAVA_HOME" ]; then if [ -z "$JVM_OPTS" ]; then if [ -z "$RED5_MAINCLASS" ]; then if [ -z "$RED5_OPTS" ]; then if [ -x "$JAVA" ] if [ ! -x "$JAVA" ] if [ ! -d "/var/log/antmedia" ] if [ $OUT -ne 0 ]; then if [ ! -L "${RED5_HOME}/log" ] if [ "$RED5_MAINCLASS" = "org.red5.server.Bootstrap" ]; then elif [ "$RED5_MAINCLASS" = "org.red5.server.Shutdown" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/install_tensorflow_plugin.sh
lines,37
function,1

check() {
for,1
echo "There is a problem in installing the tensorflow plugin. Please check the logs and if you don\'t resolve the problem, ask for help from community or support@antmedia.io"
if,3
if ! [ -x "$(command -v sudo)" ]; then if [ $OUT -ne 0 ]; then echo "There is a problem in installing the tensorflow plugin. Please check the logs and if you don\'t resolve the problem, ask for help from community or support@antmedia.io"
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/server/start-debug.sh
lines,10
function,0


for,0

if,1
if [ -z "$RED5_HOME" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/src/main/assembly/show_enterprise_feature_message.sh
lines,11
function,0


for,0

if,1
if [ "$OS_NAME" = "Darwin" ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/repackage_enterprise.sh
lines,5
function,0


for,0

if,0

git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/redeploy.sh
lines,48
function,0


for,0

if,3
if [ $OUT -ne 0 ]; then if [ $OUT -ne 0 ]; then if [ $OUT -ne 0 ]; then
git@github.com:ant-media/Ant-Media-Server.git,986622a82bc9ecd7f0978500eaad4c307449c32a,Ant-Media-Server,3869,./Ant-Media-Server/repackage_community.sh
lines,5
function,0


for,0

if,0

git@github.com:h2database/h2database.git,12b314dbe520558b3dc976ae47735b32cb2b814d,h2database,3868,./h2database/h2/src/installer/buildRelease.sh
lines,18
function,0


for,0

if,0

git@github.com:h2database/h2database.git,12b314dbe520558b3dc976ae47735b32cb2b814d,h2database,3868,./h2database/h2/src/installer/h2.sh
lines,3
function,0


for,0

if,0

git@github.com:h2database/h2database.git,12b314dbe520558b3dc976ae47735b32cb2b814d,h2database,3868,./h2database/h2/build.sh
lines,18
function,0


for,0

if,7
if [ -z "$JAVA_HOME" ] ; then if [[ "$OSTYPE" == "darwin"* ]]; then if [ -d "/System/Library/Frameworks/JavaVM.framework/Home" ] ; then if [ -z "$JAVA_HOME" ] ; then if [ "$1" = "clean" ] ; then rm -rf temp bin ; fi if [ ! -d "temp" ] ; then mkdir temp ; fi if [ ! -d "bin" ] ; then mkdir bin ; fi
git@github.com:databricks/learning-spark.git,6b34161e2c1351500784a0d500c664c90846cacf,learning-spark,3864,./learning-spark/bin/fakelogs.sh
lines,15
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/script/h2/h2.sh
lines,90
function,2

start(){ stop(){
for,1
for CMD in "$@";do true; done
if,6
if [[ "$JAVA_HOME" != "" ]];then if [[ $? -eq 0 ]] if [[ $? -eq 0 ]]; if [[ ! -f "$H2_PID_FILE" ]] if [[ "start" == $CMD ]]; then elif [[ "stop" == $CMD ]]; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/script/build.sh
lines,20
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/script/debug.sh
lines,7
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/script/quick_start.sh
lines,108
function,2

start(){ stop(){
for,1
for CMD in "$@";do true; done
if,6
if [[ -n $BISTOURY_AGENT_APP_LIB_CLASS ]]; then if [[ ! -w "$BISTOURY_TMP_DIR" ]] ; then if [[ "start" == $CMD ]] && [[ ! -n $JAVA_HOME ]]; then if [[ "start" == $CMD ]] && [[ ! -n $BISTOURY_AGENT_APP_LIB_CLASS ]]; then if [[ "start" == $CMD ]] && [[ -n "$APP_PID" && -n "$JAVA_HOME" ]]; then elif [[ "stop" == $CMD ]]; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/script/quick_start_build.sh
lines,46
function,0


for,0

if,1
if [[ ! -w "$BISTOURY_PACKAGE_DIR" ]] ; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/bistoury-agent.sh
lines,162
function,3

resetEvn(){ start(){ stop(){
for,3
for CMD in "$@";do true; done for line in $lines; do for javaHome in ${javaHomes[@]}
if,14
if [[ "$JAVA_HOME" != "" ]];then if [[ ! -w "$ARTHAS_INPUT_RC_DIR" ]] ; then if [ ! -f "$ARTHAS_INPUT_RC_PATH" ];then if [[ ! -n $BISTOURY_APP_LIB_CLASS ]]; then if [[ -n $LOCAL_IP ]]; then if [[ -n $APP_PID ]]; then if [[ (-z $JAVA_VERSION) && ($line = *"version"*) ]] if [[ $ver = "1."* ]] if [[ "$JAVA_VERSION" -lt 9 ]];then if [ -f $toolsJar ] && [ -f $saJdiJar ]; then if [ -z $tempClassPath ]; then if [[ $? -eq 0 ]] if [[ $? -eq 0 ]]; if [[ ! -f "$BISTOURY_PID_FILE" ]]
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/base.sh
lines,26
function,0


for,1
for i in "$BISTOURY_BIN_DIR"/../lib/*
if,3
if [[ ! -w "$BISTOURY_PID_DIR" ]] ; then if [[ ! -w "$BISTOURY_LOG_DIR" ]] ; then if [[ ! -w "$BISTOURY_STORE_DIR" ]] ; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/qjtool-base.sh
lines,13
function,0


for,0

if,1
if [[ "$JAVA_HOME" != "" ]];then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/bistoury-agent-env.sh
lines,8
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/qjtop.sh
lines,2
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/qjmxcli.sh
lines,2
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/qjdump.sh
lines,173
function,2

USAGE() START()
for,0

if,17
if [ $ if [[ ! -w "$LOGDIR" ]] ; then if [[ x"$PID" == x ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ `${JAVA_HOME}/bin/java -version 2>&1 | egrep "1\.[78]\."` ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $? != 0 ]]; then if [[ $NEED_HEAP_DUMP == 1 ]]; then if [[ $? != 0 ]]; then if [[ x"$GCLOG" == x ]]; then if [[ $? != 0 ]]; then if [[ $CLOSE_COMPRESS == 1 ]]; then if [[ $? != 0 ]]; then if [[ $NEED_HEAP_DUMP == 1 ]]; then if [[ $? != 0 ]]; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-dist/bin/qjmap.sh
lines,2
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-ui/src/bin/bistoury-ui.sh
lines,91
function,2

start(){ stop(){
for,1
for CMD in "$@";do true; done
if,7
if [[ "$JAVA_HOME" != "" ]];then if [[ -n $LOCAL_IP ]]; then if [[ -f "$BISTOURY_PID_FILE" ]]; then if kill -0 `cat "$BISTOURY_PID_FILE"` > /dev/null 2>&1; then if [[ $? -eq 0 ]] if [[ $? -eq 0 ]]; if [[ ! -f "$BISTOURY_PID_FILE" ]]
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-ui/src/bin/base.sh
lines,21
function,0


for,1
for i in "$BISTOURY_BIN_DIR"/../lib/*
if,2
if [[ ! -w "$BISTOURY_PID_DIR" ]] ; then if [[ ! -w "$BISTOURY_LOG_DIR" ]] ; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-ui/src/bin/bistoury-ui-env.sh
lines,5
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-proxy/src/bin/base.sh
lines,20
function,0


for,1
for i in "$BISTOURY_BIN_DIR"/../lib/*
if,2
if [[ ! -w "$BISTOURY_PID_DIR" ]] ; then if [[ ! -w "$BISTOURY_LOG_DIR" ]] ; then
git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-proxy/src/bin/bistoury-proxy-env.sh
lines,5
function,0


for,0

if,0

git@github.com:qunarcorp/bistoury.git,b83b87032c3a394df31300a4fe3a1123cf6d7917,bistoury,3861,./bistoury/bistoury-proxy/src/bin/bistoury-proxy.sh
lines,91
function,2

start(){ stop(){
for,1
for CMD in "$@";do true; done
if,7
if [[ "$JAVA_HOME" != "" ]];then if [[ -n $LOCAL_IP ]]; then if [[ -f "$BISTOURY_PID_FILE" ]]; then if kill -0 `cat "$BISTOURY_PID_FILE"` > /dev/null 2>&1; then if [[ $? -eq 0 ]] if [[ $? -eq 0 ]]; if [[ ! -f "$BISTOURY_PID_FILE" ]]
git@github.com:aurelhubert/ahbottomnavigation.git,9241f2a1d9f2321d9fcc1f98e2cdcbea5ddd0ba4,ahbottomnavigation,3858,
git@github.com:zzhoujay/RichText.git,4737a3ceada1135496441975df6371c17d3dd2c4,RichText,3853,
git@github.com:NotFound9/interviewGuide.git,2d117250c7df32ce37fd8f635c37bd221310531d,interviewGuide,3826,
git@github.com:MiguelCatalan/MaterialSearchView.git,53e163c90da5d25b0d88aa182f91027487bee043,MaterialSearchView,3822,
git@github.com:ikarus23/MifareClassicTool.git,fa327c247788687aecbbc6e52ed436923d2f8128,MifareClassicTool,3820,./MifareClassicTool/tools/key-file-converter/prox-keys2mct-keys.sh
lines,34
function,0


for,0

if,0

git@github.com:mercyblitz/tech-weekly.git,92ffe0b6b3d1f22634eb8b3d111e48f4bdc38b3a,tech-weekly,3816,
git@github.com:zendesk/maxwell.git,4d617f0f98020af56fa9320cf6322437ce2e02a8,maxwell,3783,./maxwell/src/test/travis.sh
lines,14
function,0


for,0

if,0

git@github.com:AlmasB/FXGL.git,76cdf21f723876973d1d34435d5008480b7bce61,FXGL,3783,./FXGL/.github/.ci/notify-fxgl-builder.sh
lines,24
function,0


for,0

if,0

git@github.com:AlmasB/FXGL.git,76cdf21f723876973d1d34435d5008480b7bce61,FXGL,3783,./FXGL/.github/.ci/notify-fxgl-dialogue-editor-builder.sh
lines,24
function,0


for,0

if,0

git@github.com:AlmasB/FXGL.git,76cdf21f723876973d1d34435d5008480b7bce61,FXGL,3783,./FXGL/.github/.ci/fxgl-local-install.sh
lines,6
function,0


for,0

if,0

git@github.com:lzyzsd/CircleProgress.git,8ecd5b87d747f5a486313b0f56e4f197b13f93de,CircleProgress,3783,
git@github.com:roboguice/roboguice.git,d96250c41149e13a159d26a532365c3f7034c07e,roboguice,3781,./roboguice/guice/util/compareBuilds.sh
lines,105
function,3
function cleanAndBuild { function findAndCompareJars { function compareJars {

for,2
for ANT in `find ./build/dist/* -name "*-snapshot.jar" ` echo "Some things don't match -- see above for details."
if,4
if [ $ANT = "./build/dist/guice-snapshot.jar" ]; then if [ $? -eq 0 ]; then if [ "$TRAVIS_JDK_VERSION" == "oraclejdk8" ] && \ if [ $RETVAL -eq 0 ]; then
git@github.com:roboguice/roboguice.git,d96250c41149e13a159d26a532365c3f7034c07e,roboguice,3781,./roboguice/guice/util/publish-snapshot-on-commit.sh
lines,17
function,0


for,0

if,1
if [ "$TRAVIS_REPO_SLUG" == "google/guice" ] && \
git@github.com:roboguice/roboguice.git,d96250c41149e13a159d26a532365c3f7034c07e,roboguice,3781,./roboguice/guice/util/generate-latest-docs.sh
lines,30
function,0


for,0

if,2
if [ "$TRAVIS_REPO_SLUG" == "google/guice" ] && \ cp lib/build/jdiff/*.gif $HOME/api-diffs-latest/
git@github.com:jacoco/jacoco.git,eea740644aac4395cd755f350e3565a4f59e1e39,jacoco,3779,
git@github.com:crate/crate.git,3f4e361c75f8c9f8ae2a86c9b209c73e70c5b12d,crate,3772,./crate/devs/tools/create_tag.sh
lines,98
function,1
function checkBuild() {
function checkBuild() {
for,2
echo "No notes for revision $VERSION found in CHANGES.txt" git tag -a "$VERSION" -m "Tag release for revision $VERSION"
if,5
if [ $? != 0 ] if [ -n "$CLEAN" ] if [ "$LOCAL_COMMIT" != "$ORIGIN_COMMIT" ] if [ "$VERSION" == "$EXISTS" ] if [ -z "$REV_NOTE" ]
git@github.com:crate/crate.git,3f4e361c75f8c9f8ae2a86c9b209c73e70c5b12d,crate,3772,./crate/blackbox/bootstrap.sh
lines,45
function,0


for,0

if,3
if hash python3.9 2> /dev/null; then elif hash python3 2> /dev/null; then if [ ! -f "$DIR/.venv/bin/pip" ]; then
git@github.com:rovo89/XposedInstaller.git,8f8f2d7072d1f7b02f237e4ac864e767b7aa6e4c,XposedInstaller,3771,
git@github.com:amirzaidi/Launcher3.git,5605dd10845b2ed841cadaf3dddcb0205c057c60,Launcher3,3756,
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/chunjun-dev/app/clean_maven.sh
lines,27
function,0


for,0

if,0

git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/chunjun-docker/docker/docker-entrypoint.sh
lines,169
function,6

drop_privs_cmd() { copy_plugins_if_required() { set_config_option() { prepare_configuration() { maybe_enable_jemalloc() { set_host_aliases() {
for,1
for target_plugin in $(echo "$ENABLE_BUILT_IN_PLUGINS" | tr ';' ' '); do
if,14
if [ $(id -u) != 0 ]; then elif [ -x /sbin/su-exec ]; then if [ -z "$ENABLE_BUILT_IN_PLUGINS" ]; then if [ ! -e "${FLINK_HOME}/opt/${target_plugin}" ]; then if grep -E "^${escaped_option}:.*" "${CONF_FILE}" > /dev/null; then if [ -n "${FLINK_PROPERTIES}" ]; then if [ "${DISABLE_JEMALLOC:-false}" == "false" ]; then if [[ $KUBERNETES_HOST_ALIASES != "" ]]; then if [ "$1" = "help" ]; then elif [ "$1" = "jobmanager" ]; then elif [ "$1" = ${COMMAND_STANDALONE} ]; then elif [ "$1" = ${COMMAND_HISTORY_SERVER} ]; then elif [ "$1" = "taskmanager" ]; then elif [ "$1" = "$COMMAND_NATIVE_KUBERNETES" ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/chunjun-docker/docker-build/docker-entrypoint.sh
lines,57
function,0


for,1
for file in $files; do
if,4
if [[ $FILE == *.sql ]]; if [[ $MODE == standalone ]] if [[ $MODE == local ]]; echo "default web monitor URL is localhost:8081, using the real port if you defined in standalone mode."
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/chunjun-e2e/src/test/resources/docker/flink/standalone/entrypoint.sh
lines,21
function,0


for,0

if,0

git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/build/build.sh
lines,77
function,1

help() {
for,0

if,3
if [[ $find_build == "" ]] ; then if [[ "true" == "$is_clear" && -d $PLUGINS_DIR ]]; then if [[ -z $modules ]]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-yarn-perjob.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-local.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-kubernetes-session.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-yarn-session.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-standalone.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/submit.sh
lines,105
function,0


for,0

if,8
if [ -n "${JAVA_HOME}" ]; then if [ `command -v java` ]; then if [[ $CHUNJUN_HOME && -z $CHUNJUN_HOME ]];then if [ -d "$CHUNJUN_HOME/chunjun-dist" ]; then if [ $CHUNJUN_DEPLOY_MODE -eq 1 ]; then if [[ $ARGS == *.sql* ]]; if [ ! -z $FLINK_HOME ] && [ -d $FLINK_HOME ]; if [ ! -z $HADOOP_HOME ] && [ -d $HADOOP_HOME ];
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-docker.sh
lines,33
function,0


for,0

if,1
if [ -z $CHUNJUN_HOME ] || [ ! -d $CHUNJUN_HOME ];then
git@github.com:DTStack/chunjun.git,e5c0066acf116c1bba89b1301735241698f4c547,chunjun,3750,./chunjun/bin/chunjun-kubernetes-application.sh
lines,43
function,0


for,0

if,1
if [ "$iteration" -gt 100 ]; then
git@github.com:lygttpod/SuperTextView.git,fb5fe50581cdacc1acbd36001012e8cdf9b7d072,SuperTextView,3750,
git@github.com:sofastack/sofa-rpc.git,d9c2fac118b60c0a7e52652720bb936947159bf0,sofa-rpc,3749,./sofa-rpc/example/src/test/java/com/alipay/sofa/rpc/protobuf/gen.sh
lines,27
function,0


for,0

if,0

git@github.com:sofastack/sofa-rpc.git,d9c2fac118b60c0a7e52652720bb936947159bf0,sofa-rpc,3749,./sofa-rpc/registry/registry-nacos/src/test/scripts/stop-nacos-server.sh
lines,7
function,0


for,0

if,1
if [ -f "$shutdown_script" ]; then
git@github.com:sofastack/sofa-rpc.git,d9c2fac118b60c0a7e52652720bb936947159bf0,sofa-rpc,3749,./sofa-rpc/registry/registry-nacos/src/test/scripts/start-nacos-server.sh
lines,10
function,0


for,0

if,0

git@github.com:sofastack/sofa-rpc.git,d9c2fac118b60c0a7e52652720bb936947159bf0,sofa-rpc,3749,./sofa-rpc/tools/change_version.sh
lines,61
function,0


for,0

if,3
if [ -z "$1" ]; then if [ "$(uname)" == "Darwin" ]; then if [ -f "$version_java_file" ]; then
git@github.com:sofastack/sofa-rpc.git,d9c2fac118b60c0a7e52652720bb936947159bf0,sofa-rpc,3749,./sofa-rpc/tools/check_format.sh
lines,14
function,0


for,0

if,1
if [ -n "$git_status" ]; then
git@github.com:timehop/sticky-headers-recyclerview.git,f5a9e9b8f5d96734e20439b0a41381865fa52fb7,sticky-headers-recyclerview,3743,
git@github.com:sunfusheng/MarqueeView.git,8dbe328af7d1bf7364f33698f710747630461ee2,MarqueeView,3738,
git@github.com:linyiqun/DataMiningAlgorithm.git,6f5caa12cae4535d936a9b6d533e18640881966c,DataMiningAlgorithm,3735,
git@github.com:willowtreeapps/spruce-android.git,06924982d71c5fa73582678e4331a3f88e0b92dc,spruce-android,3723,
git@github.com:diffplug/spotless.git,d346ef8f74d29b0df9dc308560cb7a72281123bb,spotless,3716,
git@github.com:andOTP/andOTP.git,6c54b8811f950375c774b2eefebcf1f9fa13d433,andOTP,3713,
git@github.com:tonikelope/megabasterd.git,fc4830c60dbc0d8e3e30f976dd1e7e25a3283593,megabasterd,3709,
git@github.com:yanzhenjie/NoHttp.git,ae6deb24e17e82b1915ab66aab0fd17deaf5e424,NoHttp,3708,
git@github.com:Exrick/xboot.git,5277af0ea7db3cf085f8ef3be21329df5bb12cd9,xboot,3703,
git@github.com:logisim-evolution/logisim-evolution.git,b7c028e9fb36b0aa872f0f07cbce51cbbaa94cf1,logisim-evolution,3699,./logisim-evolution/artwork/update_assets.sh
lines,86
function,2
function svg_to_png { function generate_png_icons {
src_pngs=()
for,4
for width in ${SIZES[*]}; do for width in ${SIZES[*]}; do src_pngs+=("${DEST_DIR}/logisim-icon-${width}.png"); done for icon in ${src_pngs[*]}; do for suffix in "" "-circ"; do
if,0

git@github.com:stylefeng/Guns.git,9597d2af9e972a8941c0efd8012537b2aec25ff3,Guns,3694,
git@github.com:jbloch/effective-java-3e-source-code.git,bdc828a7af2bdfac28e3c38bd7d1a2ae05736ccc,effective-java-3e-source-code,3693,
git@github.com:TheoKanning/openai-java.git,442cf130f6fbedbdcb70ce9d96ce572faf54c9e9,openai-java,3691,
git@github.com:knowm/XChange.git,937607eaee8909485475c29e73b6afe8cecb98ba,XChange,3688,
git@github.com:648540858/wvp-GB28181-pro.git,12c4128e814d4bae84608172ccc92f6a66aa2254,wvp-GB28181-pro,3683,./wvp-GB28181-pro/bootstrap.sh
lines,91
function,3

start() stop() restart()
for,0

if,5
if [ -f $PID_FILE ]; then if [ ! -z "$PID" ] && kill -0 $PID 2>/dev/null; then if [ $RUNNING == "Y" ]; then if [ -z "$JARFILE" ] if [ $RUNNING == "Y" ]; then
git@github.com:ryanhoo/StylishMusicPlayer.git,f01f604a14527e1403fcf2f77f0bec5863d13662,StylishMusicPlayer,3681,
git@github.com:lilishop/lilishop.git,14dcd3dc189d6b008ffed1ccf7444fc0957ee841,lilishop,3678,./lilishop/docker-image.sh
lines,0
function,0


for,0

if,0

git@github.com:lilishop/lilishop.git,14dcd3dc189d6b008ffed1ccf7444fc0957ee841,lilishop,3678,./lilishop/pushGithub.sh
lines,18
function,0


for,0

if,0

git@github.com:Ereza/CustomActivityOnCrash.git,927fdc3d8de2c565deb648c4d9db9dbe75fe7b9a,CustomActivityOnCrash,3678,
git@github.com:mpusher/mpush.git,f8d5c97f30b2bde12f1b60d11709ae1b75587a2e,mpush,3676,./mpush/bin/mp.sh
lines,241
function,0


for,0

if,25
if [ -e "$MP_BIN/../libexec/env-mp.sh" ]; then if [ "x$JMXLOCALONLY" = "x" ] if [ "x$JMXDISABLE" = "x" ] || [ "$JMXDISABLE" = 'false' ] if [ "x$JMXPORT" = "x" ] if [ "x$JMXAUTH" = "x" ] if [ "x$JMXSSL" = "x" ] if [ "x$JMXLOG4J" = "x" ] if [ "x$SERVER_JVM_FLAGS" != "x" ] if [ "x$2" != "x" ] if [ "x$(dirname "$MP_CFG")" != "x$MP_CFG_DIR" ] if $cygwin if [ -z "$MP_PID_FILE" ]; then if [ ! -d "$MP_DATA_DIR" ]; then if [ ! -w "$MP_LOG_DIR" ] ; then if [ -f "$MP_PID_FILE" ]; then if kill -0 `cat "$MP_PID_FILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if [ $? -eq 0 ]; if [ ! -f "$MP_PID_FILE" ] if [ $? -gt 0 ]; then if [ $? != 0 ]; then if [ -w "$MP_PID_FILE" ]; then if [ $SLEEP -gt 0 ]; then if [ $SLEEP -eq 0 ]; then if ! [ $clientPortAddress ]
git@github.com:mpusher/mpush.git,f8d5c97f30b2bde12f1b60d11709ae1b75587a2e,mpush,3676,./mpush/bin/set-env.sh
lines,36
function,0


for,0

if,0

git@github.com:mpusher/mpush.git,f8d5c97f30b2bde12f1b60d11709ae1b75587a2e,mpush,3676,./mpush/bin/rsa.sh
lines,36
function,0


for,0

if,2
if [ -e "$MP_BIN/../libexec/env-mp.sh" ]; then if [ $1 -gt 1024 ] ;then
git@github.com:mpusher/mpush.git,f8d5c97f30b2bde12f1b60d11709ae1b75587a2e,mpush,3676,./mpush/bin/env-mp.sh
lines,102
function,0


for,2
for i in "${MPUSH_PREFIX}"/lib/*.jar for j in "${MPUSH_PREFIX}"/lib/plugins/*.jar
if,11
if [ "x$MP_CFG_DIR" = "x" ] if [ -e "${MPUSH_PREFIX}/conf" ]; then if [ "x${MP_DATA_DIR}" = "x" ] if [ "x${MP_LOG_DIR}" = "x" ] if [ -f "${MP_BIN_DIR}/set-env.sh" ]; then if [ "x$MP_CFG" = "x" ] if [ -f "$MP_BIN_DIR/java.env" ] if [ "x${MP_LOG4J_PROP}" = "x" ] if [ "$JAVA_HOME" != "" ]; then if [ -e "${MPUSH_PREFIX}"/lib/plugins/*.jar ]; then if $cygwin
git@github.com:yangfuhai/ASimpleCache.git,7935b04751aa57299cfb8b89e5b1e12a2d96e7cb,ASimpleCache,3675,
git@github.com:JavaNoober/BackgroundLibrary.git,add5d38e64af896bd8ab0bc4ad7f7100fe7acfda,BackgroundLibrary,3667,
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/build_image.sh
lines,172
function,0


for,4
for arg in "$@" echo "-bt, --buildtype specify to created image for codebuild. Possible values: production, dev, codebuild." echo "-t, --tag specify tag name for docker image" echo "-lf, --use-local-serve-folder specify this option for the benchmark image if the current 'serve' folder should be used during automated benchmarks"
if,20
echo "-lf, --use-local-serve-folder specify this option for the benchmark image if the current 'serve' folder should be used during automated benchmarks" if test $ if [[ $PYTHON_VERSION = 3.8 || $PYTHON_VERSION = 3.9 || $PYTHON_VERSION = 3.10 || $PYTHON_VERSION = 3.11 ]]; then if [ "${CUDA_VERSION}" == "cu121" ]; elif [ "${CUDA_VERSION}" == "cu118" ]; elif [ "${CUDA_VERSION}" == "cu117" ]; elif [ "${CUDA_VERSION}" == "cu116" ]; elif [ "${CUDA_VERSION}" == "cu113" ]; elif [ "${CUDA_VERSION}" == "cu111" ]; elif [ "${CUDA_VERSION}" == "cu102" ]; elif [ "${CUDA_VERSION}" == "cu101" ] elif [ "${CUDA_VERSION}" == "cu92" ]; if [ "${MACHINE}" == "gpu" ] && $BUILD_WITH_IPEX ; if [ "${BUILD_TYPE}" == "dev" ] && ! $USE_CUSTOM_TAG ; if [ "${BUILD_TYPE}" == "codebuild" ] && ! $USE_CUSTOM_TAG ; if [ "$USE_CUSTOM_TAG" = true ] if [[ $UPDATE_BASE_IMAGE == true && $MACHINE == "gpu" ]]; if [ "${BUILD_TYPE}" == "production" ] elif [ "${BUILD_TYPE}" == "ci" ] elif [ "${BUILD_TYPE}" == "benchmark" ]
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/dockerd-entrypoint.sh
lines,12
function,0


for,0

if,1
if [[ "$1" = "serve" ]]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/promote-docker.sh
lines,40
function,0


for,0

if,1
if [[ ${DRY_RUN} = "disabled" ]]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/start.sh
lines,54
function,0


for,2
for arg in "$@" echo "To stop docker container for TorchServe use command : docker container stop $container_id"
if,2
if test $ if [ ! "$response" == 200 ]
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/test_container_model_prediction.sh
lines,58
function,1

assert_expected() {
for,2
echo "Waiting 10s for container to come up..." for EXPECTED in {0..9}
if,1
if [ "${PREDICTION}" = "${EXPECTED}" ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/test_container_python_version.sh
lines,23
function,1

assert_py_version() {
for,0

if,1
if ! grep -q "Python ${EXPECTED_VERSION}" "${tmpfile}"
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/test_build_image_tagging.sh
lines,105
function,0


for,2
for img in json.load(file) digests = set(img["digest"] for img in images_to_test)
if,4
if f'{img["repo"]}:{img["tag"]}' in tags_to_test if len(images_to_test) == 0: if len(images_to_test) != len(tags_to_test): if len(digests) != 1:
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/docker/test_container_health.sh
lines,25
function,1

healthcheck() {
for,1
echo "Waiting 5s for container to come up..."
if,1
if [ "${RESPONSE}" == '"Healthy"' ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/kubernetes/EKS/setup_efs.sh
lines,55
function,0


for,4
echo "Obtaining VPC ID for $CLUSTER_NAME" echo "Obtaining CIDR BLOCK for $VPC_ID" echo "Waiting 30s for before procedding" for subnet in ${subnets[@]}
if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/kubernetes/kserve/build_image.sh
lines,59
function,0


for,3
for arg in "$@" echo "-g, --gpu specify for gpu build" echo "-t, --tag specify tag name for docker image"
if,3
if [[ "${MACHINE}" == "gpu" ]] && [[ "$BUILD_NIGHTLY" == true ]] ; elif [[ "${MACHINE}" == "cpu" ]] && [[ "$BUILD_NIGHTLY" == true ]] ; if [ "$USE_CUSTOM_TAG" = true ]
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/kubernetes/kserve/dockerd-entrypoint.sh
lines,8
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/text_classification/run_script.sh
lines,4
function,0


for,0

if,1
if [ ! -d ".data" ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/dcgan_fashiongen/create_mar.sh
lines,42
function,1
function cleanup {

for,0

if,1
if [ "$TS_RUN_IN_DOCKER" = true ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/nmt_transformer/create_mar.sh
lines,110
function,0


for,0

if,6
if [ $ if [ $1 == "en2fr_model" ] || [ $1 == "en2de_model" ] || [ $1 == "de2en_model" ] if [ ! -d "fairseq-build" ] if [ ! -d "model_store" ] if [ $model_name == "en2fr_model" ] elif [ $model_name == "en2de_model" ]
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/speech2text_wav2vec2/archive_model.sh
lines,6
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/text_to_speech_synthesizer/create_mar.sh
lines,17
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/LLM/llama2/chat_app/package_llama.sh
lines,46
function,0


for,0

if,4
if [ -z "$1" ]; then if [ -n "$2" ]; then if [ "$MODEL_GENERATION" = "true" ]; then if [ "$MODEL_GENERATION" = "true" ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/asr_rnnt_emformer/02_configure_server.sh
lines,5
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/asr_rnnt_emformer/01_create_model_archive.sh
lines,29
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/examples/asr_rnnt_emformer/00_save_jit_model.sh
lines,11
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/ts_scripts/spellcheck.sh
lines,20
function,0


for,1
for src in $sources; do
if,2
if [[ -z "$@" ]]; then if [ ! "$sources_arg" ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/ts_scripts/push_nightly.sh
lines,18
function,0


for,0

if,1
if [ -z "$PYPI_TOKEN" ]; then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/ts_scripts/get_aws_credential.sh
lines,14
function,0


for,0

if,0

git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/benchmarks/install_dependencies.sh
lines,129
function,0


for,2
echo "Installing pip packages for GPU" echo "Installing pip packages for CPU"
if,3
if [[ $1 = True ]] if [ $(ls -1d $CELLAR/* | wc -l) -gt 1 ];then if [[ $1 = True ]]
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/benchmarks/mac_install_dependencies.sh
lines,23
function,0


for,0

if,1
if [ $(ls -1d /usr/local/Cellar/jmeter/* | wc -l) -gt 1 ];then
git@github.com:pytorch/serve.git,ea87a4896b2b3edf1995418bb4f801fb66fb0757,serve,3667,./serve/benchmarks/upload_results_to_s3.sh
lines,27
function,0


for,1
for dir in $(ls `pwd`/)
if,1
if [ "$1" = "True" ]
git@github.com:CameraKit/blurkit-android.git,f0d181a3850db20f495d5b2c7b825d1fd790d7f2,blurkit-android,3659,
git@github.com:JeremyLiao/LiveEventBus.git,88ec25bbc77afa62de24684abae66ad9de4d184b,LiveEventBus,3657,
git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/jetty-home/src/main/resources/bin/jetty.sh
lines,711
function,7

usage() findDirectory() running() started() pidKill() readConfig() dumpEnv() CONFIGS=()
for,7
for L in "$@"; do echo "Looking for $STATEFILE" for ((T = 0; T < $STARTTIMEOUT; T++)) (( DEBUG )) && echo "Timeout $STARTTIMEOUT expired waiting for start state from $STATEFILE" for CONFIG in {/etc,~/etc}/default/${NAME}{,9} $HOME/.${NAME}rc; do for XMLFILE in "$CONF/"*.xml echo "WARNING: Disable console-capture module for best DEBUG results"
if,56
if [ -r "$PIDFILE" ] ; then if kill -0 "$PID" 2>/dev/null ; then if (( DEBUG )) ; then if [ -r $STATEFILE ] ; then if running "$PIDFILE" ; then if [ -r $PIDFILE ] ; then if [ -z "$PID" ] ; then if kill -0 "$PID" 2>/dev/null ; then if (( TIMEOUT-- == 0 )) ; then if [ $UID != 0 ] if [ -f "$CONFIG" ] ; then if [ -z "$JETTY_HOME" ] if [ ! -f "$JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ] if [ -z "$JETTY_HOME" ]; then if [ -z "$JETTY_BASE" ]; then if [ -d "$RUN_DIR/start.d" -o -f "$RUN_DIR/start.ini" ]; then if [ ! -r "$JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ] if [ -z "$JETTY_CONF" ] if [ -f $ETC/${NAME}.conf ] elif [ -f "$JETTY_BASE/etc/jetty.conf" ] elif [ -f "$JETTY_HOME/etc/jetty.conf" ] if [ -z "$JETTY_RUN" ] if [ ! -d "$JETTY_RUN" ] ; then if ! mkdir $JETTY_RUN if [ -z "$JETTY_START_LOG" ] if [ -z "$JETTY_PID" ] if [ -z "$JETTY_STATE" ] if [ -f "$JETTY_CONF" ] && [ -r "$JETTY_CONF" ] if expr "$CONF" : ' if [ -d "$CONF" ] if [ -r "$XMLFILE" ] && [ -f "$XMLFILE" ] if [ -z "$JAVA" ] if [ -z "$JAVA" ] if [ "$JETTY_LOGS" ] if [ -z "$JETTY_START_TIMEOUT" ] if [ ! -f "$START_INI" -a ! -d "$START_D" ] if (( DEBUG )) if expr "${RUN_ARGS[*]}" : '.*/etc/console-capture.xml.*' > /dev/null if (( NO_START )); then if ! touch "$JETTY_PID" if ! touch "$JETTY_STATE" if [ $UID -eq 0 ] && type start-stop-daemon > /dev/null 2>&1 if [ -n "$JETTY_USER" ] if running $JETTY_PID if [ -n "$JETTY_USER" ] && [ `whoami` != "$JETTY_USER" ] if [ "$JETTY_SHELL" ] if expr "${JETTY_ARGS[*]}" : '.*jetty\.state=.*' >/dev/null if started "$JETTY_STATE" "$JETTY_PID" "$JETTY_START_TIMEOUT" if [ $UID -eq 0 ] && type start-stop-daemon > /dev/null 2>&1; then if (( TIMEOUT-- == 0 )); then if [ ! -r "$JETTY_PID" ] ; then if [ ! -f $JETTY_SH ]; then if [ ! -f $JETTY_HOME/bin/jetty.sh ]; then if running "$JETTY_PID" if running "$JETTY_PID" if running "$JETTY_PID"
git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/demos/demo-jetty-webapp/src/main/webapp/cgi-bin/hello.sh
lines,4
function,0


for,0

if,0

git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/scripts/looptest.sh
lines,18
function,0


for,0

if,0

git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/scripts/clirr-gen-master-index.sh
lines,25
function,0


for,0

if,1
if [ ! -d "target/clirr" ] ; then
git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/scripts/query-git-stats.sh
lines,32
function,0


for,0

if,0

git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/scripts/git-log-csv.sh
lines,5
function,0


for,0

if,0

git@github.com:eclipse/jetty.project.git,78f3b5c9fbc8a46c6457a8aff3bcb7f31603c8f9,jetty.project,3657,./jetty.project/scripts/release-jetty.sh
lines,192
function,5
function gitFindRemoteByUrl() {
requiredExecutable() { proceedyn() { function gitFindRemoteByUrl() { VER_CURRENT=`sed -e "s/xmlns/ignore/" pom.xml | xmllint --xpath "/project/version/text()" -` reportMavenTestFailures() {
for,10
for GREMOTE in $(git remote); do echo "ERROR: Unable to determine git remote id for $GIT_REMOTE_URL" for index in ${!failarray[@]}; do if proceedyn "Update VERSION.txt for $VER_RELEASE? (Y/n)" y; then echo " target/version-tag.txt - for the tag commit message" if proceedyn "Update project.versions for $VER_RELEASE? (Y/n)" y; then if proceedyn "Update working directory for $VER_NEXT? (Y/n)" y; then echo "Update VERSION.txt for $VER_NEXT" echo "Update project.versions for $VER_NEXT" if proceedyn "Commit updates in working directory for $VER_NEXT? (Y/n)" y; then
if,15
if [ $? != 0 ] ; then if [ $? -eq 0 ] ; then if [ -z "$GIT_REMOTE_ID" ] ; then if [ $? -eq 0 ] ; then if [ ! -d "$ALT_DEPLOY_DIR" ] ; then if [ ${ if proceedyn "Are you sure you want to release using above? (y/N)" n; then if proceedyn "Update VERSION.txt for $VER_RELEASE? (Y/n)" y; then if proceedyn "Update project.versions for $VER_RELEASE? (Y/n)" y; then if proceedyn "Commit $VER_RELEASE updates? (Y/n)" y; then if proceedyn "Create Tag $TAG_NAME? (Y/n)" y; then if proceedyn "Build/Deploy from tag $TAG_NAME? (Y/n)" y; then if proceedyn "Update working directory for $VER_NEXT? (Y/n)" y; then if proceedyn "Commit updates in working directory for $VER_NEXT? (Y/n)" y; then if proceedyn "Push git commits to remote $GIT_REMOTE_ID? (Y/n)" y; then
git@github.com:promeG/TinyPinyin.git,3936593e3368173b34e873cfd17283a8bf5761c1,TinyPinyin,3654,
git@github.com:stfalcon-studio/ChatKit.git,d10cfe3393a9d6ce150e817b22b019dcd17c55fa,ChatKit,3645,
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/cleanup-dockers.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/build-docker.sh
lines,112
function,4

realpath() { cleanup() { setup_scratch_dir() { run_build() {
for,2
for element in $EXTRA_ARGS; do echo "Script to build heron docker image for different platforms"
if,4
if [ -d $SCRATCH_DIR ]; then if [ ! -f "$1" ]; then if [ $element = '-s' ] || [ $element = '--squash' ]; then if [ $DOCKER_SQUASH = true ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/build-artifacts.sh
lines,178
function,14

realpath() { heron_git_release() { heron_git_rev() { heron_build_host() { heron_build_user() { heron_build_time() { heron_build_timestamp() { heron_tree_status() { cleanup() { generate_source() { verify_source_exists() { setup_scratch_dir() { setup_output_dir() { run_build() {
for,1
echo "Script to build heron artifacts for different platforms"
if,9
if [[ $? != 0 ]]; if [ "${git_release}" = "HEAD" ]; if [[ $? != 0 ]]; if [[ $? != 0 ]]; if [[ $? == 0 ]]; if [ -f $SRC_TAR ]; then if [ ! -f $1 ]; then if [ -z "$SOURCE_TARBALL" ]; then if [ $TARGET_PLATFORM = "darwin" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/test-platform.sh
lines,54
function,1
function copyFileToDest() {
function copyFileToDest() {
for,1
echo "Building heron with version $HERON_VERSION for platform $TARGET_PLATFORM"
if,1
if [ -f $2 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/build-base.sh
lines,101
function,5

realpath() { cleanup() { setup_scratch_dir() { setup_output_dir() { run_build() {
for,1
echo "Script to build heron base docker image for different platforms"
if,3
if [ -d $SCRATCH_DIR ]; then if [ ! -f "$1" ]; then if [ "$TARGET_PLATFORM" == "debian11" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/ci-docker.sh
lines,150
function,6

realpath() { cleanup() { setup_scratch_dir() { build_exec_image() { publish_exec_image() { docker_image() {
for,0

if,8
if [ -d $SCRATCH_DIR ]; then if [ ! -f "$1" ]; then if [ "$INPUT_TARGET_PLATFORM" == "latest" ]; then if [ "$HERON_VERSION" == "nightly" ]; then if [ "$INPUT_TARGET_PLATFORM" == "latest" ]; then if [ "$HERON_VERSION" == "nightly" ]; then if [ "$OPERATION" == "build" ]; then elif [ "$OPERATION" == "publish" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/dev-env-run.sh
lines,41
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/compile-docker.sh
lines,61
function,3

realpath() { verify_dockerfile_exists() { dockerfile_path_for_platform() {
for,0

if,1
if [ ! -f $1 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/dev-env-create.sh
lines,91
function,4

realpath() { verify_dockerfile_exists() { dockerfile_path_for_platform() { copy_extra_files() {
for,1
echo "Building docker image for Heron development environment on $TARGET_PLATFORM"
if,1
if [ ! -f $1 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/compile-platform.sh
lines,70
function,1
function copyFileToDest() {
function copyFileToDest() {
for,4
echo "Building heron with version $HERON_VERSION for platform $TARGET_PLATFORM" for file in ./bazel-bin/scripts/packages/*.tar.gz; do for file in ./bazel-bin/scripts/packages/*.sh; do for file in ./bazel-bin/scripts/images/*.tar; do
if,1
if [ -f $2 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/test-unittest.sh
lines,175
function,14

realpath() { heron_git_release() { heron_git_rev() { heron_build_host() { heron_build_user() { heron_build_time() { heron_build_timestamp() { heron_tree_status() { cleanup() { generate_source() { verify_source_exists() { setup_scratch_dir() { setup_output_dir() { run_build() {
for,1
echo "Script to test heron artifacts for different platforms"
if,9
if [[ $? != 0 ]]; if [ "${git_release}" = "HEAD" ]; if [[ $? != 0 ]]; if [[ $? != 0 ]]; if [[ $? == 0 ]]; if [ -f $SRC_TAR ]; then if [ ! -f $1 ]; then if [ -z "$SOURCE_TARBALL" ]; then if [ $TARGET_PLATFORM = "darwin" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/test-docker.sh
lines,59
function,3

realpath() { verify_dockerfile_exists() { dockerfile_path_for_platform() {
for,0

if,1
if [ ! -f $1 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/scripts/build-exec-docker.sh
lines,96
function,4

realpath() { cleanup() { setup_scratch_dir() { build_exec_image() {
for,0

if,2
if [ -d $SCRATCH_DIR ]; then if [ ! -f "$1" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/dist/scripts/install-zookeeper.sh
lines,49
function,0


for,0

if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/dist/scripts/zookeeper-ruok.sh
lines,27
function,0


for,0

if,1
if [ "$status" == "imok" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/dist/scripts/generate-zookeeper-config.sh
lines,162
function,6
function print_servers() { function validate_env() { function create_config() { function create_data_dirs() { function create_log_props () { function create_java_env() {
function print_servers() { function validate_env() { function create_config() { function create_data_dirs() { function create_log_props () { function create_java_env() {
for,1
for (( i=1; i<=$ZK_REPLICAS; i++ ))
if,8
if [ -z $ZK_REPLICAS ]; then if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then if [ $ZK_REPLICAS -gt 1 ]; then if [ ! -d $ZK_DATA_DIR ]; then if [ ! -d $ZK_DATA_LOG_DIR ]; then if [ ! -d $ZK_LOG_DIR ]; then if [ ! -f $ID_FILE ]; then if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/dist/scripts/start-zookeeper.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/dist/scripts/wait-for-zookeeper.sh
lines,36
function,0


for,0

if,2
if [ "$ if [ "$status" = "imok" ] && [ "$writestatus" == "rw" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/base/scripts/install-zookeeper.sh
lines,48
function,0


for,0

if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/base/scripts/zookeeper-ruok.sh
lines,27
function,0


for,0

if,1
if [ "$status" == "imok" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/base/scripts/generate-zookeeper-config.sh
lines,162
function,6
function print_servers() { function validate_env() { function create_config() { function create_data_dirs() { function create_log_props () { function create_java_env() {
function print_servers() { function validate_env() { function create_config() { function create_data_dirs() { function create_log_props () { function create_java_env() {
for,1
for (( i=1; i<=$ZK_REPLICAS; i++ ))
if,8
if [ -z $ZK_REPLICAS ]; then if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then if [ $ZK_REPLICAS -gt 1 ]; then if [ ! -d $ZK_DATA_DIR ]; then if [ ! -d $ZK_DATA_LOG_DIR ]; then if [ ! -d $ZK_LOG_DIR ]; then if [ ! -f $ID_FILE ]; then if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/base/scripts/start-zookeeper.sh
lines,32
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/docker/base/scripts/wait-for-zookeeper.sh
lines,36
function,0


for,0

if,2
if [ "$ if [ "$status" = "imok" ] && [ "$writestatus" == "rw" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/release/maven/maven-pom-version.sh
lines,175
function,0


for,0

if,1
if [ "$1" = "" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/website2/website/scripts/build-site.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/website2/website/scripts/compile-docker.sh
lines,56
function,3

realpath() { verify_dockerfile_exists() { dockerfile_path_for_platform() {
for,0

if,1
if [ ! -f $1 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/website2/website/scripts/python-doc-gen.sh
lines,55
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/website2/website/scripts/javadocs.sh
lines,62
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/website2/website/scripts/publish_site.sh
lines,56
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release/release.sh
lines,342
function,11
function set_release_name() { function trim_empty_lines() { function release_note_editor() { function create_release_commit() { function apply_cherry_picks() { function create_release() { function push_release_candidate() { function cleanup_branches() { function do_release() { function abandon_release() { function usage() {
function set_release_name() { function trim_empty_lines() { function release_note_editor() { function create_release_commit() { function apply_cherry_picks() { function create_release() { function push_release_candidate() { function cleanup_branches() { function do_release() { function abandon_release() { function usage() {
for,11
for i in $@; do echo "Creating new release branch ${branch_name} for release ${release_name}" for repo in ${RELEASE_REPOSITORIES}; do echo "Destroying the release branches for release ${tag_name}" for i in $RELEASE_REPOSITORIES; do for i in $MASTER_REPOSITORIES; do for i in $RELEASE_REPOSITORIES; do release branch for release named RELEASE_NAME, cutting it at The typical workflow for the release manager is: 1. Create the release branch using the decided name for the release 2. Push to the repository and wait for the continuous integration
if,9
if [ -z "${relnotes}" ]; then if [ -n "${version_info}" ]; then if [ -f "${changelog_path}" ]; then if [ "$(git rev-parse HEAD)" == "${previous_head}" ]; then if [ -n "$(git branch --list --column ${branch_name})" ]; then if [ "$answer" = "y" -o "$answer" = "Y" ]; then if [ "$answer" = "y" -o "$answer" = "Y" ]; then 4. Either abandon or release the branch depending on if too much problems are reported or if the release is considered viable. The
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release/common.sh
lines,64
function,5
function git_get_branch() { function git_commit_msg() { function get_release_candidate() { function get_release_name() { function get_release_branch() {
function git_get_branch() { function git_commit_msg() { function get_release_candidate() { function get_release_name() { function get_release_branch() {
for,0

if,1
if [ -z "$(get_release_name)" -o -z "$(get_release_candidate)" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release/relnotes.sh
lines,169
function,9
function get_last_release() { function get_release_notes_commits() { function extract_release_note() { function get_release_notes() { function wrap_text() { function format_release_notes() { function release_notes() { function create_release_notes() { function create_revision_information() {
function get_last_release() { function get_release_notes_commits() { function extract_release_note() { function get_release_notes() { eval "RELNOTES_${i}=()" function wrap_text() { function format_release_notes() { function release_notes() { function create_release_notes() { function create_revision_information() {
for,4
for i in "${RELNOTES_TYPES[@]}"; do for i in $@; do for (( i=1; $i <= $ for (( i=0; $i < $length; i=$i+1 )); do
if,3
if [[ "$relnote" =~ $regex ]]; then if [[ ! "$(echo $relnote_text | awk '{print tolower($0)}')" =~ ^(none|n/a)?.?$ ]]; then if (( "${nb_relnotes}" > 0 )); then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release/status.sh
lines,136
function,2
function die { function disable_e_and_execute {

for,0

if,12
if [ -z ${HERON_BUILD_VERSION+x} ]; if [ -d .git ]; if [ "${build_version}" = "HEAD" ]; if [ -d .git ]; if [ -z ${HERON_GIT_REV+x} ]; if [ -z ${HERON_BUILD_HOST+x} ]; if [ -z ${HERON_BUILD_TIME+x} ]; if [ -z ${HERON_BUILD_TIMESTAMP+x} ]; if [ -z ${HERON_BUILD_USER+x} ]; if [ -d .git ]; if [ -z ${HERON_TREE_STATUS+x} ]; if [[ $status == 0 ]];
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/packages/package_info_generator.sh
lines,65
function,0


for,1
for i in "${@}"; do
if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/packages/tests_template_bin.sh
lines,119
function,1
function usage() {
function usage() {
for,2
echo " --user configure for user install, expands to" >&2 for opt in "${@}"; do
if,5
if [ -L "${bin}/test-runner" ]; then if [ -L "${bin}/topology-test-runner" ]; then if [ -L "${bin}/http-server" ]; then if [ -d "${base}" -a -x "${base}/bin/test-runner" ]; then if [ -d "${base}" -a -x "${base}/bin/topology-test-runner" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/packages/bin_common.sh
lines,99
function,6
function set_untar_flags { function untar { function test_write() { function check_unzip() { function check_tar() { function check_java() {
function test_write() { function check_unzip() { function check_tar() { function check_java() {
for,3
echo "See $getting_started_url for more information on" >&2 echo "See $getting_started_url for more information on" >&2 echo "See $getting_started_url for more information on" >&2
if,5
if (( $ if ! which unzip >/dev/null; then if ! which tar >/dev/null; then if [ -z "${JAVA_HOME-}" ]; then if [ ! -x "${JAVA_HOME}/bin/java" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/packages/template_bin.sh
lines,136
function,1
function usage() {
function usage() {
for,3
echo " --user configure for user install, expands to" >&2 for opt in "${@}"; do See ${getting_started_url} for how to use Heron.
if,7
echo -n "Cleaning up symlinks in ${bin}, if present." if [ -L "${bin}/heron" ]; then if [ -L "${bin}/heron-explorer" ]; then if [ -L "${bin}/heron-tracker" ]; then if [ -L "${bin}/heron-ui" ]; then if [ -L "${bin}/heron-apiserver" ]; then if [ -d "${base}" -a -x "${base}/bin/heron" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/run_integration_test.sh
lines,116
function,0


for,0

if,6
if [ "$1" != "" ]; then if [ "$1" == "--help" ] || [ "$1" == "-h" ];then if [ "$2" != "" ]; then if [ "$LANGUAGE" = "all" ] || [ "$LANGUAGE" = "scala" ]; then if [ "$LANGUAGE" = "all" ] || [ "$LANGUAGE" = "java" ]; then if [ "$LANGUAGE" = "all" ] || [ "$LANGUAGE" = "python" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/publish.sh
lines,34
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/setup-intellij.sh
lines,177
function,1
function write_jar_entry() {
function write_jar_entry() {
for,6
for content_dir in `find . -maxdepth 1 -type d -path './[^.]*' | cut -d '/' -f 2 | grep -v out`; do for source in ${heron_java_paths}; do for jar in ${heron_thirdparty_deps}; do for path_pair in ${GENERATED_PATHS}; do for jar in ${heron_resolved_deps}; do for jar in ${heron_binary_paths}; do
if,11
if [ "$content_dir" == "heron" ]; then if [[ $source == *"javatests" ]]; then elif [[ $source == *"tests/"* ]]; then if [[ -f "$source/xxBUILD" ]]; then if [[ $ if [[ $root_file == *.jar ]]; then if [[ "$root_file" = /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]]; then if [[ -z "${source_path}" ]]; then if [[ $protocol == "file" ]]; then if [[ jar != "$javac_jar" ]]; then if [ -n "$IDEA" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/travis/build.sh
lines,124
function,0


for,0

if,3
if [ "$JARS" ]; then if [ "$EGGS" ]; then if [ "$WHEELS" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/travis/ci.sh
lines,46
function,0


for,0

if,1
if [ -z ${DISABLE_INTEGRATION_TESTS+x} ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/travis/test.sh
lines,109
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/travis/k8s.sh
lines,108
function,6
function bazel_file { function kind_images { function install_helm3 { function action { function create_cluster { function get_image {

for,0

if,2
if [ -z "$(kind get clusters)" ]; then if [ -f "$expected" ] && [ -z "${NO_CACHE-}" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/travis/check.sh
lines,36
function,0


for,0

if,1
if [ -z "$THIRD_PARTIES" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/compile/errors.sh
lines,265
function,1

Usage();
for,2
-- find_bash.sh incubator-heron output.txt outputbashcleaned.txt process_bash.py distributed with this work for additional information -- find_bash.sh incubator-heron output.txt outputbashcleaned.txt process_bash.py KIND, either express or implied. See the License for the
if,44
$ok = 0 if $ $ok = 0 if (!$m && !$p && !$e && !$d); if (!$ok || $options{help}) { $list = 1, $listfile = $options{'list'} if ( $options{'list'} ne '' ); $className .= '::' if $className; $base = oct($base) if $base =~ /^0/; if ( ! $list ) { open MSG_OUT, ">$errorMsgName" or die "Couldn't open $errorMsgName" if ($m); open INFO_OUT, ">$errorInfoName" or die "Couldn't open $errorInfoName" if ($p); open ENUM_OUT, ">$errorEnumName" or die "Couldn't open $errorEnumName" if ($e); open DEF_OUT, ">$errorDefName" or die "Couldn't open $errorDefName" if ($d); open INFOBAKW_OUT, ">$errorInfoBakwName" or die "Couldn't open $errorInfoBakwName" if ($p); print MSG_OUT MakeStdHeader($fileName, $errorMsgName) if ($m); print INFO_OUT MakeStdHeader($fileName, $errorInfoName) if ($p); print ENUM_OUT MakeStdHeader($fileName, $errorEnumName) if ($e); print DEF_OUT MakeStdHeader($fileName, $errorDefName) if ($d); print INFOBAKW_OUT MakeStdHeader($fileName, $errorInfoBakwName) if ($p); print MSG_OUT "static char* ${baseName}_errmsg[] = {\n" if ($m); print INFO_OUT "heron::error::error_info_t ${arrayPrefix}error_info[] = {\n" if ($p); print ENUM_OUT "enum {\n" if ($e); print INFOBAKW_OUT "heron::error::error_info_t ${baseName}_error_info_bakw[] = {\n" if ($p); if ($line =~ /\s*(\S*)\s*(.*)/) { if ( $list ) { print MSG_OUT sprintf("/* %-25s --/ incubator-heron/ \"%s\",\n", $m ? $eTag : $dTag, $msg) if ($m); print INFO_OUT sprintf(" { %-25s, \"%s\" },\n", $p ? $eTag : $dTag, $msg) if ($p); print ENUM_OUT sprintf(" %-25s = 0x%x,\n", $eTag, $base + $num) if ($e); print INFOBAKW_OUT " { $eTag, \"$eTag\" },\n" if ($p); return if ( $list ); if ($m) { print INFO_OUT "};\n\n" if ($p); print INFO_OUT sprintf("const sp_uint32 %-25s = %d;", "${uBaseName}_ERRCNT", $num+1) if ($p); print ENUM_OUT sprintf(" %-25s = 0x%x,\n", "${uBaseName}_ERRMIN", $base) if ($e); print ENUM_OUT sprintf(" %-25s = 0x%x\n", "${uBaseName}_ERRMAX", $base + $num) if ($e); close MSG_OUT, or die "Couldn't close $errorMsgName" if ($m); close INFO_OUT, or die "Couldn't close $errorInfoName" if ($p); close ENUM_OUT, or die "Couldn't close $errorEnumName" if ($e); close DEF_OUT, or die "Couldn't close $errorDefName" if ($d); close INFOBAKW_OUT, or die "Couldn't close $errorInfoBakwName" if ($p); next if $line =~ /^\s*\ if ($line =~ /^\s*(\S+)\s*=\s*([0-9A-Fa-fxX]+)\s*(".*")\s*(\S*)\s*{/) { } elsif ($line =~ /^\s*}/) { die "missing }" if defined $baseName; if ( $list ) { close LIST if ( $list );
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/run_integration_topology_test.sh
lines,67
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/setup-eclipse.sh
lines,147
function,2
function generate_py_source_dirs() { function generate_source_dirs() {
function generate_py_source_dirs() { function generate_source_dirs() {
for,3
for pysrcdir in $py_dir_list; do for srcdir in $dir_list; do for jarfile in `find $DIR/../bazel-bin/ -name \*.jar | cut -d '/' -f 4-`; do
if,1
if [ ! -d $DIR/../bazel-bin ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/ci/build_release_packages.sh
lines,64
function,0


for,0

if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/ci/build_maven_artifacts.sh
lines,108
function,0


for,2
echo "Run Maven template for poms ... " echo "Build directories for jars ... "
if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/ci/build_docker_image.sh
lines,66
function,0


for,0

if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/ci/setup_bazel.sh
lines,44
function,0


for,0

if,1
if [ "$
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/get_all_heron_paths.sh
lines,119
function,11
function get_heron_python_paths() { function get_heron_thirdparty_dependencies() { function get_heron_bazel_deps(){ function get_package_of() { function get_heron_java_paths() { function get_heron_source_paths() { function get_target_of() { function get_consuming_target() { function get_containing_library() { function collect_generated_binary_deps() { function collect_generated_paths() {
function get_heron_python_paths() { function get_heron_thirdparty_dependencies() { function get_heron_bazel_deps(){ function get_package_of() { function get_heron_java_paths() { function get_heron_source_paths() { function get_target_of() { function get_consuming_target() { function get_containing_library() { function collect_generated_binary_deps() { function collect_generated_paths() {
for,4
local heron_resolved_deps=`for dep in $bazel_ext_deps; do bazel query "$dep" --output xml | grep "<label" | grep "\.jar" | sed 's/<label value="//' | sed 's/"\/\>//'| sort -u | sed 's/\/\/third_party/$MODULE_DIR\/third_party/' | sed "s|\@bazel_tools\/\/third_party\:|$bazel_third_party_base|" ; done`; for i in ${package_list}; do [[ -n $generating_target ]] || echo "Couldn't get generating target for ${target}" 1>&2 for path in $(find bazel-bin/ -name "*.java" | sed 's|/\{0,1\}bazel-bin/\{1,2\}|//|' | uniq); do
if,3
if [ "${result}" -eq "0" ] ; then if [[ "$1" =~ ^$i ]]; then if [ "$(uname -s | tr 'A-Z' 'a-z')" != "darwin" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/shutils/common.sh
lines,104
function,8
function die { function __assert_task_name { function __secs_to_readable_date { function __secs_to_duration { function start_timer { function end_timer { function print_timer_summary { function pathadd {
TIMINGS=()
for,4
for ((i = 0; i < ${ [ -n "$start" ] || die "end_timer called for task '$1' before calling start_timer" echo "===> Task duration summary for `caller | cut -d ' ' -f 2`" for ((i = 0; i < ${
if,4
if [ "`uname`" == "Darwin" ]; then if [[ $value == "${1}${DELIM}start="* ]]; then if [[ $value == *"${DELIM}duration="* ]]; then if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release_check/build.sh
lines,22
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release_check/build_docker.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release_check/run_test_topology.sh
lines,29
function,0


for,1
echo "Run for 20s and then kill the example topologgy ..."
if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release_check/license_check.sh
lines,39
function,0


for,1
echo "Looking for Rat jar"
if,1
if [ $
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/scripts/release_check/full_release_check.sh
lines,43
function,0


for,0

if,1
if [ $
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/examples/src/scala/compile.sh
lines,39
function,1
function die {

for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/config/autogen.sh
lines,1579
function,2

download_gnulib_config_guess () { libtoolize_needed () {
for,39
echo "GNU Build System tools are installed and then run autoreconf for you." echo "potentially accounting for several common preparation issues. The" for arg in $ARGS ; do for __cmd in echo head tail pwd ; do for sig in 1 2 13 15; do for sig in 1 2 13 15; do for AUTORECONF in autoreconf ; do for AUTOCONF in autoconf ; do for AUTOMAKE in automake ; do $ECHO "work and will be done automatically for you if autoreconf fails." for tool in glibtoolize libtoolize15 libtoolize14 libtoolize13 ; do for ACLOCAL in aclocal ; do for AUTOHEADER in autoheader ; do for file in COPYING INSTALL ; do for dir in $_det_config_subdirs ; do for dir in $CHECK_DIRS ; do for file in COPYING INSTALL ; do for file in config.guess config.sub ltmain.sh ; do for dir in $_det_config_subdirs ; do for dir in $CHECK_DIRS ; do $VERBOSE_ECHO "Checking files for automake damage in $dir" for dir in $_det_config_subdirs ; do for marker in foreign cygnus ; do for file in AUTHORS COPYING ChangeLog INSTALL NEWS README ; do $ECHO "for you since you do not have a 'foreign' declaration specified." for file in config.guess config.sub ltmain.sh ; do for dir in m4 ; do for __cmd in wget curl fetch ; do $VERBOSE_ECHO "Checking for command ${__cmd}" for feature in AC_PROG_LIBTOOL AM_PROG_LIBTOOL LT_INIT ; do $VERBOSE_ECHO "Searching for $feature in $CONFIGURE" $ECHO "file to the appropriate location (${_aux_dir}/). This has been done for you." for feature in $macros_to_search ; do $VERBOSE_ECHO "Searching for $feature in $CONFIGURE" for feature in AM_CONFIG_HEADER AC_CONFIG_HEADER ; do $VERBOSE_ECHO "Searching for $feature in $CONFIGURE" for feature in AM_INIT_AUTOMAKE ; do $VERBOSE_ECHO "Searching for $feature in $CONFIGURE" for dir in $CONFIG_SUBDIRS ; do
if,172
if [ "x$AUTOCONF_VERSION" = "x" ] ; then if [ "x$AUTOMAKE_VERSION" = "x" ] ; then if [ "x$LIBTOOL_VERSION" = "x" ] ; then if [ "x$__copyright" = "x" ] ; then if [ "x$__version" = "x" ] ; then if [ "x$1" = "x" ] ; then if [ "x$2" = "x" ] ; then if [ "x$1" = "x" ] ; then if [ "x$2" = "x" ] ; then if [ "x$_min_major" = "x" ] ; then if [ "x$_min_minor" = "x" ] ; then if [ "x$_min_patch" = "x" ] ; then if [ "x$_cur_minor" = "x" ] ; then if [ "x$_cur_minor" = "x" ] ; then if [ "x$_cur_patch" = "x" ] ; then $VERBOSE_ECHO "Checking if ${_cur_major}.${_cur_minor}.${_cur_patch} is greater than ${_min_major}.${_min_minor}.${_min_patch}" if [ $_min_major -lt $_cur_major ] ; then elif [ $_min_major -eq $_cur_major ] ; then if [ $_min_minor -lt $_cur_minor ] ; then elif [ $_min_minor -eq $_cur_minor ] ; then if [ $_min_patch -lt $_cur_patch ] ; then elif [ $_min_patch -eq $_cur_patch ] ; then if test -f "./configure.ac" ; then elif test -f "./configure.in" ; then elif test -f "$_pwd/configure.ac" ; then elif test -f "$_pwd/configure.in" ; then elif test -f "$PATH_TO_AUTOGEN/configure.ac" ; then elif test -f "$PATH_TO_AUTOGEN/configure.in" ; then if [ "x$HELP" = "x" ] ; then if [ "x$QUIET" = "x" ] ; then if [ "x$VERBOSE" = "x" ] ; then if [ "x$VERSION_ONLY" = "x" ] ; then if [ "x$DOWNLOAD" = "x" ] ; then if [ "x$AUTORECONF_OPTIONS" = "x" ] ; then if [ "x$AUTOCONF_OPTIONS" = "x" ] ; then if [ "x$AUTOMAKE_OPTIONS" = "x" ] ; then if [ "x$LIBTOOLIZE_OPTIONS" = "x" ] ; then if [ "x$ACLOCAL_OPTIONS" = "x" ] ; then if [ "x$AUTOHEADER_OPTIONS" = "x" ] ; then if [ "x$CONFIG_GUESS_URL" = "x" ] ; then if [ ! -f "$AUTOGEN_SH" ] ; then if [ ! "x$0" = "x$AUTOGEN_SH" ] ; then if [ $? != 0 ] ; then if test ! x$? = x0 ; then if test ! x$? = x0 ; then if [ "x$QUIET" = "xyes" ] ; then if [ "x$VERBOSE" = "xyes" ] ; then if [ "x$VERBOSE" = "xyes" ] ; then if [ "x$RUN_RECURSIVE" = "x" ] ; then if [ "x`echo $ARGS | sed 's/.*[hH][eE][lL][pP].*/help/'`" = "xhelp" ] ; then if [ "x$HELP" = "xyes" ] ; then if test -d "$START_PATH" ; then if test "x$PFC_INIT" = "x1" ; then if test -d "$START_PATH" ; then if test -f "acinclude.m4.$$.backup" ; then if [ "x$CONFIGURE" = "x" ] ; then if [ ! "x$CONFIGURE" = "x" ] ; then if [ "x$CONFIGURE" = "x" ] ; then if [ "x$VERSION_ONLY" = "xyes" ] ; then if [ "x$PROJECT" = "x" ] ; then if [ "x$PROJECT" = "xAC_INIT" ] ; then if [ "x$PROJECT" = "xAM_INIT_AUTOMAKE" ] ; then if [ "x$PROJECT" = "x" ] ; then if [ "x$AUTORECONF" = "x" ] ; then if [ $? = 0 ] ; then if [ "x$AUTOCONF" = "x" ] ; then if [ $? = 0 ] ; then if [ ! "x$_acfound" = "xyes" ] ; then if [ "x$_version" = "x" ] ; then if [ $? -ne 0 ] ; then if [ "x$_report_error" = "xyes" ] ; then if [ "x$AUTOMAKE" = "x" ] ; then if [ $? = 0 ] ; then if [ ! "x$_amfound" = "xyes" ] ; then if [ "x$_version" = "x" ] ; then if [ $? -ne 0 ] ; then if [ "x$_report_error" = "xyes" ] ; then if [ "x$LIBTOOLIZE" = "x" ] ; then if [ ! $? = 0 ] ; then if [ "x$HAVE_AUTORECONF" = "xno" ] ; then $ECHO "work and will be done automatically for you if autoreconf fails." if [ $? = 0 ] ; then if [ "x$_glti" = "x" ] ; then if test ! -f "$_glti" ; then if [ "x$_gltidir" = "x" ] ; then if test ! -d "$_gltidir" ; then if [ $? = 0 ] ; then if [ ! "x$_ltfound" = "xyes" ] ; then if [ "x$_version" = "x" ] ; then if [ $? -ne 0 ] ; then if [ "x$_report_error" = "xyes" ] ; then if [ "x$ACLOCAL" = "x" ] ; then if [ $? = 0 ] ; then if [ "x$AUTOHEADER" = "x" ] ; then if [ $? = 0 ] ; then if [ "x$VERSION_ONLY" = "xyes" ] ; then if test -f ${file} ; then if test -f ${file}.$$.protect_from_automake.backup ; then if test -d autom4te.cache ; then if [ "x$_configure" = "x" ] ; then if test -d "`pwd`/$dir" ; then if [ ! "x$CHECK_DIRS" = "x" ] ; then if test -f ${file}.$$.protect_from_automake.backup ; then if test -f ${file} ; then if test "x`cat ${file}`" != "x`cat ${file}.$$.protect_from_automake.backup`" ; then if test "x$spacer" = "xno" ; then elif test -f ${file}.$$.protect_from_automake.backup ; then if [ "x$CONFIGURE" = "x" ] ; then if test ! -d "$_aux_dir" ; then if test -f "${_aux_dir}/${file}" ; then if [ "x$_configure" = "x" ] ; then if test -d "`pwd`/$dir" ; then if [ ! "x$CHECK_DIRS" = "x" ] ; then if [ "x$CONFIGURE" = "x" ] ; then if test ! -d "$_aux_dir" ; then if test -d "`pwd`/$dir" ; then if [ ! "x$_marker_found" = "x" ] ; then if test -f "`dirname \"$CONFIGURE\"/Makefile.am`" ; then if [ ! "x$_marker_found" = "x" ] ; then if [ "x${_marker_found}" = "x" ] ; then if [ ! -f $file ] ; then if [ "x${_suggest_foreign}" = "xyes" ] ; then if test -f "`dirname \"$CONFIGURE\"/Makefile.am`" ; then if test -f "${_aux_dir}/${file}" ; then if [ -d $dir ] ; then if test -d autom4te.cache ; then if [ ! $ret = 0 ] ; then if [ $? = 0 ] ; then if [ ! $ret = 0 ] ; then if [ ! "x$found" = "x" ] ; then if [ "x$HAVE_AUTORECONF" = "xyes" ] ; then if [ ! $ret = 0 ] ; then if [ "x$HAVE_ALT_LIBTOOLIZE" = "xyes" ] ; then if [ ! "x`echo \"$autoreconf_output\" | grep libtoolize | grep \"No such file or directory\"`" = "x" ] ; then if test -f ltmain.sh ; then if [ "x$DOWNLOAD" = "xyes" ] ; then if libtoolize_needed ; then if [ "x$RUN_RECURSIVE" = "xno" ] ; then if test -f "$LIBTOOL_M4" ; then if test ! "x$found_libtool" = "x" ; then if test -f acinclude.m4 ; then if [ ! $ret = 0 ] ; then $ECHO "ERROR: $ACLOCAL failed" && exit 2 ; fi if libtoolize_needed ; then if [ "x$HAVE_LIBTOOLIZE" = "xyes" ] ; then if [ ! $ret = 0 ] ; then $ECHO "ERROR: $LIBTOOLIZE failed" && exit 2 ; fi if [ "x$HAVE_ALT_LIBTOOLIZE" = "xyes" ] ; then if [ ! $ret = 0 ] ; then $ECHO "ERROR: $LIBTOOLIZE failed" && exit 2 ; fi if test -f ltmain.sh ; then if test ! -f "${_aux_dir}/ltmain.sh" ; then if [ "x$DOWNLOAD" = "xyes" ] ; then if [ ! $ret = 0 ] ; then if [ $ac_major -lt 2 ] ; then if [ $ac_minor -lt 54 ] ; then elif [ $ac_minor -lt 55 ] ; then elif [ $ac_minor -lt 59 ] ; then if [ ! "x$found" = "x" ] ; then if [ "x$configure_ac_macros" = "x__none__" ] ; then if [ ! "x$configure_ac_macros" = "x__none__" ] ; then $ECHO "The `basename \"$CONFIGURE\"` file was scanned in order to determine if any" if [ ! $ret = 0 ] ; then if [ "x$VERBOSE_ECHO" = "x:" ] ; then if [ ! "x$found" = "x" ] ; then if [ "x$need_autoheader" = "xyes" ] ; then if [ ! $ret = 0 ] ; then $ECHO "ERROR: $AUTOHEADER failed" && exit 2 ; fi if [ ! "x$found" = "x" ] ; then if [ "x$need_automake" = "xyes" ] ; then if [ ! $ret = 0 ] ; then if [ ! $ret = 0 ] ; then if [ ! "x$CONFIG_SUBDIRS" = "x" ] ; then if [ "x$reconfigure_manually" = "xyes" ] ; then if [ "x$config" = "x" ] ; then if test "x$config" = "x" -o ! -f "$config" ; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/heron/config/src/yaml/conf/slurm/slurm.sh
lines,38
function,0


for,1
for i in $(seq 1 $SLURM_NNODES); do
if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/heron/config/src/yaml/conf/nomad/heron_nomad.sh
lines,59
function,0


for,0

if,2
if [ -d "$HERON_NOMAD_WORKING_DIR" ]; then if [ "$HERON_USE_CORE_PACKAGE_URI" == "true" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/heron/tools/apiserver/src/shell/heron-apiserver.sh
lines,45
function,0


for,0

if,4
if [ -z "$LINK" ]; then if [[ -z $JAVA_HOME ]]; then if [ $? != 0 ]; then if [[ -n $HERON_APISERVER_MEM_DIRECT ]]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/heron/downloaders/src/shell/heron-downloader-config.sh
lines,22
function,0


for,0

if,1
if [ $1 = "kubernetes" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/heron/downloaders/src/shell/heron-downloader.sh
lines,38
function,0


for,0

if,3
if [ -z "$LINK" ]; then if [[ -z $JAVA_HOME ]]; then if [ $? != 0 ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/deploy/docker/sandbox.sh
lines,154
function,6

check_docker_install() { sandbox_start() { sandbox_ps() { sandbox_clogs() { sandbox_shell() { sandbox_stop() {
for,2
echo "Unable to create a shell session for the container '$c_name'" echo "an ideal tool for initial experimentation with Heron."
if,5
if ! [[ $(which docker) && $(docker --version) ]]; then if [ $EXIT_CODE -ne 0 ]; then if [ $EXIT_CODE -ne 0 ]; then if [ $EXIT_CODE -ne 0 ]; then echo " ${bold}Check${normal} if the Heron Sandbox is running:"
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/vagrant/init.sh
lines,64
function,1

bazel_install() {
for,0

if,2
if [[ "$1" != "master" && $1 != "slave" ]]; then if [ $mode == "master" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/vagrant/local-ci.sh
lines,45
function,0


for,1
This script is for running tests in a local VM, similar to the environment used in the CI pipeline. If the targent script fails, a shell will be opened up within the VM.
if,1
if [ "$state" != "running" ]; then
git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/tools/dev/profiler/profilerUsageMessage.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/incubator-heron.git,1c5779dcdf19eed888412f3d87b31ebb4b00e07e,incubator-heron,3645,./incubator-heron/tools/dev/profiler/attachProfiler.sh
lines,28
function,0


for,0

if,0

git@github.com:Atmosphere/atmosphere.git,3f7bb14d7a121478ac4f7bef51cd55c5a08d2c47,atmosphere,3645,./atmosphere/scripts/javadoc.sh
lines,13
function,0


for,1
for x in apidocs xref; do rm -r $x && git rm -r $x && mv target/site/$x ./ && git add $x; done && \
if,0

git@github.com:Atmosphere/atmosphere.git,3f7bb14d7a121478ac4f7bef51cd55c5a08d2c47,atmosphere,3645,./atmosphere/assembly/websocketd/atmosphere.sh
lines,2
function,0


for,0

if,0

git@github.com:google/rejoiner.git,9c51c9d28baf6b77d8484d558d1a60ec897c7c68,rejoiner,3643,./rejoiner/travis_before_install.sh
lines,54
function,0


for,0

if,5
if [[ $(uname) == 'Linux' ]]; then if [[ $(uname) == 'Darwin' ]]; then if [ -f ${INSTALL_DIR}/bin/protoc ]; then if [[ ! -d "$DOWNLOAD_DIR"/protobuf-"${PROTOBUF_VERSION}" ]]; then if [[ -L /tmp/protobuf ]]; then
git@github.com:litesuits/android-common.git,4aa89fdf605c7f9d1f5a50f97212f1d4756450ad,android-common,3639,
git@github.com:wendux/DSBridge-Android.git,22b19ffaf1538a4352f16134606d417aaab42dbc,DSBridge-Android,3630,
git@github.com:Docile-Alligator/Infinity-For-Reddit.git,f997e22f90150957440e750d0886a4115aaf9471,Infinity-For-Reddit,3616,
git@github.com:mcxtzhang/SwipeDelMenuLayout.git,8d3cae22899d7f361bc1482d4fdd8b06f8c5cdec,SwipeDelMenuLayout,3611,
git@github.com:rockerhieu/emojicon.git,c96c4a4f113b4403ea92d1f34f67fb8b9bd5c2e4,emojicon,3610,
git@github.com:fishercoder1534/Leetcode.git,0138a7b931b479c3b0dfe4ef6db55e85c1bd1533,Leetcode,3605,./Leetcode/shell/_192.sh
lines,24
function,0


for,0

if,0

git@github.com:fishercoder1534/Leetcode.git,0138a7b931b479c3b0dfe4ef6db55e85c1bd1533,Leetcode,3605,./Leetcode/shell/TenthLine.sh
lines,24
function,0


for,0

if,0

git@github.com:fishercoder1534/Leetcode.git,0138a7b931b479c3b0dfe4ef6db55e85c1bd1533,Leetcode,3605,./Leetcode/shell/ValidPhoneNumbers.sh
lines,18
function,0


for,0

if,0

git@github.com:fishercoder1534/Leetcode.git,0138a7b931b479c3b0dfe4ef6db55e85c1bd1533,Leetcode,3605,./Leetcode/shell/TransposeFile.sh
lines,31
function,0


for,2
for (i = 1; i <= NF; i++) { for (i = 1; s[i] != ""; i++) {
if,0

git@github.com:tyrantgit/ExplosionField.git,3122cb6c5783218f1a08787e6a6241e6e745695f,ExplosionField,3596,
git@github.com:lisawray/groupie.git,85889f23b7176cc0f4ecdc657335ebcc93cc036f,groupie,3594,
git@github.com:ethanhua/Skeleton.git,6dc07d6a9fb9dfeef7ae6fcbc6e6699265f90f7c,Skeleton,3593,
git@github.com:dongjunkun/DropDownMenu.git,63e308f94282fa23e4a8c043328033913c88214d,DropDownMenu,3588,
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/checkIfRunDrone.sh
lines,17
function,0


for,0

if,2
if [ -z "$PR_NUMBER" ] ; then if [ "$(git diff --name-only "origin/$BRANCH" | grep -cE "^app/src|screenshots|build.gradle|.drone.yml")" -eq 0 ] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/screenshotSummary.sh
lines,30
function,0


for,0

if,0

git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/runCombinedTest.sh
lines,49
function,1
function upload_logcat() {
function upload_logcat() {
for,0

if,1
if [ ! $stat -eq 0 ]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/uploadScreenshotSummary.sh
lines,17
function,0


for,0

if,0

git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/deleteOldComments.sh
lines,27
function,0


for,1
echo "Deleting old comments for $BRANCH_TYPE"
if,1
if [ "$count" -gt 0 ]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/updateScreenshots.sh
lines,112
function,0


for,0

if,5
if [[ $(grep NC_TEST_SERVER_BASEURL ~/.gradle/gradle.properties | grep -v " if [[ ! $(emulator -list-avds | grep uiComparison -c) -eq 0 ]]; then if [ "$1" == "debug" ]; then if [[ $IP = "" ]]; then if [ "$1" == "debug" ]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/wait_for_server.sh
lines,20
function,0


for,1
echo "Failed to wait for server"
if,2
if [[ "$status" =~ "false" || "$status" = "" ]]; then if [[ $counter -gt 50 ]]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/lib.sh
lines,48
function,2
function err() { function curl_gh() {
function err() { function curl_gh() {
for,0

if,1
if [[ -n "$GITHUB_TOKEN" ]]
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/wait_for_emulator.sh
lines,24
function,0


for,0

if,2
if [[ "$bootanim" =~ "not found" || "$bootanim" =~ "error" ]]; then if [[ $failcounter -gt 3 ]]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/generateScreenshotOverview.sh
lines,85
function,0


for,1
for image in $(/bin/ls -1 ./screenshots/gplay/debug/*.png | grep -v _dark_ | grep -v _light_) ; do
if,3
if [ $mode = "light" -a $color = "blue" ]; then if [ ! -e ./app/build/reports/shot/verification/images/$name ]; then elif [ -e ./app/build/reports/shot/verification/images/diff_$name ]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/checkGplayLimitation.sh
lines,13
function,0


for,1
for log in fastlane/metadata/android/*/changelogs/*
if,1
if [[ -e $log && $(wc -m $log | cut -d" " -f1) -gt 500 ]]
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/analysis/detectWrongSettings.sh
lines,11
function,0


for,0

if,1
if [[ $snapshotCount -eq 0 && $betaCount -eq 0 ]] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/analysis/getBranchBase.sh
lines,11
function,0


for,0

if,1
if [ -z "${PR_NUMBER}" ] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/analysis/analysis-wrapper.sh
lines,160
function,0


for,2
echo "New spotbugs result for $stableBranch at: https://www.kaminsky.me/nc-dev/$repository-findbugs/$stableBranch.html" echo "New lint result for $stableBranch at: https://www.kaminsky.me/nc-dev/$repository-lint/$stableBranch.html"
if,21
if [ "$BRANCH" = $stableBranch ]; then if [ $lintValue -ne 1 ]; then if [ -e "${BUILD_NUMBER}" ]; then if [ $baseBranch = "master" -a $(grep "androidLibraryVersion = \"master-SNAPSHOT\"" build.gradle -c) -ne 1 ]; then elif [ $baseBranch != "master" -a $baseBranch = $stableBranch -a $(grep "androidLibraryVersion.*SNAPSHOT" build.gradle -c) -ne 0 ]; then if [ ! -s app/build/reports/lint/lint.html ] ; then if [ ! -s app/build/reports/spotbugs/spotbugs.html ] ; then if ( [ -z $lintErrorNew ] ); then if ( [ -z $lintWarningNew ] ); then if ( [ -z $lintErrorOld ] ); then if ( [ -z $lintWarningOld ] ); then if [ $stableBranch = "master" ] ; then if ( [ $lintValue -eq 1 ] ) ; then if ( [ $spotbugsValue -eq 1 ] ) ; then if [ ! -z "$gplayLimitation" ]; then if [[ $(grep org.jetbrains.annotations app/src/main/* -irl | wc -l) -gt 0 ]] ; then if [ ! -z "$gplayLimitation" ]; then if [ $checkLibrary -eq 1 ]; then if [ ! $lintValue -eq 2 ]; then if [ -n "$notNull" ]; then if [ $spotbugsValue -eq 2 ]; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/analysis/getBranchName.sh
lines,9
function,0


for,0

if,1
if [ -z $3 ] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/uploadArtifact.sh
lines,35
function,0


for,0

if,1
if ! test -e app/build/outputs/apk/qa/debug/qa-debug-*.apk ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/uploadReport.sh
lines,83
function,1

upload() {
for,0

if,7
if [ -z $USER ] || [ -z $PASS ]; then if [ $TYPE = "IT" ]; then elif [ $TYPE = "Unit" ]; then if [ -e $FOLDER ]; then if [ -e app/build/reports/androidTests/connected/flavors/gplay ] ; then if [ -e app/build/reports/tests/testGplayDebugUnitTest ] ; then if [ -e app/build/reports/shot/gplay/debug/verification ] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/screenshots/addMockDevice.sh
lines,94
function,0


for,1
for i in $(find ../../fastlane | grep png | grep Screenshots) ; do
if,4
if [ -e ../../app/src/main/res/values$locale/strings.xml ] ; then if [ -z "$heading" ]; then if [ -z "$subline" ]; then if [ $textID == "06_davdroid" ] ; then
git@github.com:nextcloud/android.git,4766d8bf6a387037a05b90450569609232ec9d68,android,3587,./android/scripts/screenshots/generateScreenshotHtml.sh
lines,32
function,0


for,2
for screenshot in $(find screenshots/gplay -type f | grep -v "_dark_" | grep -v "_light_" | sort); do for type in dark_blue light_white dark_white; do
if,0

git@github.com:IoT-Technology/IoT-Technical-Guide.git,787314d5b6aafd0179e9bc7f5ab39a34dfff9972,IoT-Technical-Guide,3584,
git@github.com:liuyubobobo/Play-with-Algorithms.git,fe2c46aff13c5650cb5b727cf3027488d339d89c,Play-with-Algorithms,3584,
git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/scripts/deploy.sh
lines,46
function,0


for,0

if,1
if [[ ${GITHUB_TOKEN} && ${GITEE_TOKEN} ]]; then
git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-cheatsheets.sh
lines,153
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6380/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6380/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/start-all.sh
lines,17
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6382/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6382/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6381/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/server-6381/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/linux/stop-all.sh
lines,9
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6380/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6380/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/start-all.sh
lines,17
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6382/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6382/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6381/start.sh
lines,7
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/server-6381/stop.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/db-tutorial.git,4c3ab73e81ffc9ffa15dcc1f9bf6a9cab545852f,db-tutorial,3583,./db-tutorial/codes/redis/redis-config/sentinel3/osx/stop-all.sh
lines,9
function,0


for,0

if,0

git@github.com:kikoso/android-stackblur.git,35696424fcb1bbb561ad5a281270fdc5abd7f1af,android-stackblur,3583,
git@github.com:KunMinX/Linkage-RecyclerView.git,f9bdc69dce11e604fe57178cec5fc852aefe5933,Linkage-RecyclerView,3571,
git@github.com:johncarl81/parceler.git,52e6b14709eb0b84835907e71d9380124f3c6b6e,parceler,3565,
git@github.com:Sayi/poi-tl.git,6dbec331b34ff7546de107f32563f360f7bcf217,poi-tl,3559,
git@github.com:MovingBlocks/Terasology.git,254db60dd4e55190895e620a99d6d90efcfcb14b,Terasology,3558,
git@github.com:charles2gan/GDA-android-reversing-Tool.git,b597755d93d1b4ed0c914343eddcd1fbd6b0e5bc,GDA-android-reversing-Tool,3555,
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/build.sh
lines,20
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/createUser/cr_databus2.sh
lines,68
function,0


for,0

if,6
if [ "$1" == "" ] ; then if [ "$2" == "" ] ; then if [ "$3" == "" ] ; then if [ ! -z "${MYSQL_ROOT_PWD}" ] ; then ${MYSQL} -e "create database if not exists $db;" if [ "$4" == "" ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/bootstrap_create_tables.sh
lines,24
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/createSchema/createSchema.sh
lines,46
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/createSchema/apply_patches.sh
lines,60
function,0


for,1
for PDIR in $PATCH_DIRS
if,2
if [ "$ if [ -f $PDIR/apply.sh ]
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/createSchema/dropSchema.sh
lines,49
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/bootstrap_drop_tables.sh
lines,23
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/databus2-bootstrap/bootstrap_db_reinit.sh
lines,24
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_vw.sh
lines,38
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_prc1.sh
lines,124
function,4
function registerSourceWithVersion(source in varchar, version in number) return number; function waitForEvent(maxWait in number) return varchar; function registerSourceWithVersion(source in varchar, version in number) return number function waitForEvent(maxWait in number) return varchar

for,1
-- wait for an even no longer than the time out (in seconds). Returns the message that
if,6
if [ "$ -- returns null if the source does not exists (source otherwise) if version > 0 then if (view_name is null or bitnum is null) then -- returns null if the source does not exists (source otherwise) if status = 0 then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_trg.sh
lines,46
function,0


for,2
PROMPT creating new trigger for ${SRC_TABLE} for each row
if,2
if [ "$ if (updating and :new.txn < 0) then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_tab.sh
lines,85
function,0


for,1
PROMPT Creating table for version control
if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_prc.sh
lines,226
function,10
function getTxn(source in varchar) return number; function getScn(v_scn in number, v_ora_rowscn in number) return number; function getScn(v_scn in number, v_ora_rowscn in number) return number as function getMask(source in varchar) return number as function getTxn(source in varchar) return number as
currentTxID := DBMS_TRANSACTION.LOCAL_TRANSACTION_ID(); signal_beep(); signal_beep(); signal_beep(); unconditional_signal_beep();
for,2
-- we can get the local transaction id (guaranteed to be unique for the select txn, ora_rowscn from sy\$txlog where scn=infinity for update;
if,9
if [ "$ if not source_bits.exists(source) then if currentTxID is null then if (lastTxID is null or lastTxID <> currentTxID) then if txn_chk='N' then if (bitand(currentMask,mask) = 0) then if SQL%ROWCOUNT > 0 then if v_raise_dbms_alerts = 'Y' then -- if we get an exception while raising the signal we ignore it
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_con.sh
lines,42
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_ind.sh
lines,38
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/fwk/schema/ddl_sqs.sh
lines,48
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/bin/createSchema.sh
lines,158
function,1

usage() {
for,9
for t in ${SRC_VIEW_DIR}/*\.tab; for t in ${SRC_VIEW_DIR}/*\.tab; echo "Setting up Alerts for $table. File is $t" for t in ${SRC_VIEW_DIR}/*\.view; for t in ${SRC_VIEW_DIR}/*\.tab; echo "Creating trigger for source $table" for t in ${SRC_VIEW_DIR}/*\.tab; echo "Creating trigger for source $table" for t in ${SRC_VIEW_DIR}/*\.tab;
if,5
if [ "x$DB" = "x" ] if [ "x$user" = "x" ] || [ "x$password" = "x" ] || [ "x$sid" = "x" ] if [ ! -d "$SRC_VIEW_DIR" ] if [ ! -f "$SRC_VIEW_DIR/tablespace" ] if [ $wc -lt 1 ];
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/bin/createUser.sh
lines,71
function,1

usage() {
for,0

if,1
if [ "x$USER" = "x" ] || [ "x$PASSWD" = "x" ] || [ "x$DBNAME" = "x" ] || [ "x$TBS" = "x" ] || [ "x$DBDIR" = "x" ]
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/db/oracle/bin/dropSchema.sh
lines,100
function,0


for,0

if,1
if [ "$
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-relay-pkg/script/stop-example-relay.sh
lines,40
function,0


for,0

if,2
if [ -z "${source_name}" ] ; then if [ -f ${relay_pid_file} ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-relay-pkg/script/create_person.sh
lines,15
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-relay-pkg/script/start-example-relay.sh
lines,77
function,0


for,0

if,3
if [ -z "${source_name}" ] ; then if [ ! -z "${jvm_gc_log}" ] ; then if [ ! -z "$cli_overrides" ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/database/loadPersons.sh
lines,123
function,3

usage() { call TestPerson.loadTestPerson(); call TestPerson.unloadTestPerson();
for,2
for cntr IN $b..$e LOOP create or replace /*+QA*/ public synonym Test for test;
if,5
if [ "x$DB" = "x" ] if [ "x$NUM_RECORDS" = "x" ] if [ "x$START_ID" = "x" ] if [ "x$CMD" = "x" ] if [ "$CMD" = "load" ];
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/database/dbreinit_persons.sh
lines,29
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-bst-producer-pkg/script/start-bst-producer.sh
lines,67
function,0


for,0

if,5
if [ ! -z "${heap_size}" ] ; then if [ ! -z "${max_heap_size}" ] ; then if [ ! -z "${new_size}" ] ; then if [ ! -z "${max_new_size}" ] ; then if [ ! -z "${direct_mem_size}" ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-bst-producer-pkg/script/stop-bst-producer.sh
lines,29
function,0


for,0

if,1
if [ -f ${pid_file} ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-client-pkg/script/start-example-client.sh
lines,74
function,0


for,0

if,3
if [ -z "${source_name}" ] ; then if [ ! -z "${jvm_gc_log}" ] ; then if [ ! -z "$cli_overrides" ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus2-example/databus2-example-client-pkg/script/stop-example-client.sh
lines,40
function,0


for,0

if,2
if [ -z "${source_name}" ] ; then if [ -f ${client_pid_file} ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-util-cmdline/databus2-cmdline-tools-pkg/script/dbus2-interactive-avro-schema-gen.sh
lines,26
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-util-cmdline/databus2-cmdline-tools-pkg/script/run-devrelay-src-config-gen.sh
lines,26
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-util-cmdline/databus2-cmdline-tools-pkg/script/dbus2-avro-schema-gen.sh
lines,26
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-util-cmdline/databus2-cmdline-tools-pkg/script/avro-data-gen.sh
lines,26
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/merge-source-trees.sh
lines,91
function,0


for,2
echo "Creating $mergedir/src for unified tree." for file in $allfiles; do
if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-core/databus-core-schema-tools-pkg/bin/avro-converter.sh
lines,24
function,0


for,0

if,0

git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-bootstrap-server/databus-bootstrap-server-pkg/script/stop-bst-server.sh
lines,29
function,0


for,0

if,1
if [ -f ${pid_file} ] ; then
git@github.com:linkedin/databus.git,001ff16e9325694e8d833283f405058eff9cb7ef,databus,3547,./databus/databus-bootstrap-server/databus-bootstrap-server-pkg/script/start-bst-server.sh
lines,67
function,0


for,0

if,5
if [ ! -z "${heap_size}" ] ; then if [ ! -z "${max_heap_size}" ] ; then if [ ! -z "${new_size}" ] ; then if [ ! -z "${max_new_size}" ] ; then if [ ! -z "${direct_mem_size}" ] ; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/docker/server/build.sh
lines,46
function,0


for,0

if,1
if [ -n "$1" ]; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/docker/collector/build.sh
lines,46
function,0


for,0

if,1
if [ -n "$1" ]; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/docker/update-docker-service.sh
lines,29
function,0


for,0

if,1
if [ ! -n "$TAG" ]; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/server/bin/shutdown.sh
lines,32
function,0


for,0

if,1
if [[ -z "$PID" ]]
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/server/bin/startup.sh
lines,117
function,0


for,0

if,11
if [ "$1" = "status" ]; then if [ -n "$PIDS" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ $LSOF_AVA -gt 0 ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ ! -d $LOGS_DIR ]; then if [ -f "$CONF_DIR/$LOG_IMPL_FILE" ] if [ -n "$SERVER_PORT" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/server/bin/restart.sh
lines,29
function,0


for,0

if,0

git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/server/bin/entrypoint.sh
lines,58
function,0


for,0

if,2
if [ ! -d $LOGS_DIR ]; then if [ -f "$CONF_DIR/$LOG_IMPL_FILE" ]
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/collector/bin/shutdown.sh
lines,32
function,0


for,0

if,1
if [[ -z "$PID" ]]
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/collector/bin/startup.sh
lines,117
function,0


for,0

if,11
if [ "$1" = "status" ]; then if [ -n "$PIDS" ]; then if [ -n "$PIDS" ]; then if [ -n "$SERVER_PORT" ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ $LSOF_AVA -gt 0 ]; then if [ $SERVER_PORT_COUNT -gt 0 ]; then if [ ! -d $LOGS_DIR ]; then if [ -f "$CONF_DIR/$LOG_IMPL_FILE" ] if [ -n "$SERVER_PORT" ]; then if [ $COUNT -gt 0 ]; then
git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/collector/bin/restart.sh
lines,29
function,0


for,0

if,0

git@github.com:dromara/hertzbeat.git,84630f2c6f6ee47216a596d367b423f0ec2f88bb,hertzbeat,3547,./hertzbeat/script/assembly/collector/bin/entrypoint.sh
lines,58
function,0


for,0

if,2
if [ ! -d $LOGS_DIR ]; then if [ -f "$CONF_DIR/$LOG_IMPL_FILE" ]
git@github.com:jMonkeyEngine/jmonkeyengine.git,c9d10eb6ffcebbf18a7709de15be1eac67de9c1f,jmonkeyengine,3546,./jmonkeyengine/.github/actions/tools/minio.sh
lines,22
function,1
function minio_uploadFile {

for,1
echo "Add an alias for the MinIO instance to the MinIO configuration file"
if,0

git@github.com:jMonkeyEngine/jmonkeyengine.git,c9d10eb6ffcebbf18a7709de15be1eac67de9c1f,jmonkeyengine,3546,./jmonkeyengine/.github/actions/tools/uploadToMaven.sh
lines,56
function,2
function uploadToMaven { function uploadAllToMaven {

for,1
for art in $files; do
if,1
if [ "$user" != "token" ];
git@github.com:nytimes/Store.git,d810395e05f177f195e9808914f24aa70e622fcd,Store,3544,./Store/gradle/deploy_snapshot.sh
lines,26
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:awaitility/awaitility.git,a56dce91b2abff03beb4773180ec6e5edb0117d7,awaitility,3543,./awaitility/deploy_bintray.sh
lines,38
function,0


for,3
for project in ${project_names[*]} ; do for zipFile in ${files_to_deploy}; do for file in ${files_to_deploy}; do
if,1
if [[ $REPLY =~ ^[Yy]$ ]]
git@github.com:awaitility/awaitility.git,a56dce91b2abff03beb4773180ec6e5edb0117d7,awaitility,3543,./awaitility/generate_javadoc.sh
lines,13
function,0


for,3
echo "Generating Javadoc for version ${version}." for project_name in ${project_names[*]} echo "Generating for ${project_name}"
if,0

git@github.com:awaitility/awaitility.git,a56dce91b2abff03beb4773180ec6e5edb0117d7,awaitility,3543,./awaitility/mvn_release.sh
lines,8
function,0


for,0

if,0

git@github.com:awaitility/awaitility.git,a56dce91b2abff03beb4773180ec6e5edb0117d7,awaitility,3543,./awaitility/update_wiki.sh
lines,34
function,1

updateFiles() {
for,3
for file in ${filesToUpdate} git commit -am "Updating docs for version ${newVersion}" && git push && echo "Changes pushed.." && echo "Changes not committed, do \"cd ${folderName} && git commit -am \"Updating docs for version ${newVersion}\" && git push\" when ready"
if,2
if [[ -z "$filesToUpdate" ]] if [[ $REPLY =~ ^[Yy]$ ]]; then
git@github.com:JakeWharton/ThreeTenABP.git,16fed31d5e6fea90cb4784568a5b98a4f964cade,ThreeTenABP,3540,./ThreeTenABP/update.sh
lines,29
function,0


for,0

if,0

git@github.com:arimorty/floatingsearchview.git,a0f8fbc90d98eb1b629c6295dd2d3577412e7b1e,floatingsearchview,3540,
git@github.com:lsjwzh/RecyclerViewPager.git,912e64f3d1d11acaff42267985fb6364a53e4eb4,RecyclerViewPager,3538,
git@github.com:bilibili/MagicaSakura.git,9a2e2061e32a67946d91c4ce44c050c72007494a,MagicaSakura,3538,
git@github.com:davideas/FlexibleAdapter.git,844a07002c3d2f2b68a6b26a25e8e401777c73e7,FlexibleAdapter,3536,
git@github.com:luontola/retrolambda.git,fbd82c9a023b363a2cb38afd8dad3fd8fc134ada,retrolambda,3535,./retrolambda/scripts/release.sh
lines,77
function,6
function contains-line() { function demand-file-contains-line() { function assert-file-contains-substring() { function set-project-version() { function set-documentation-version() { function next-snapshot-version() {
function contains-line() { function demand-file-contains-line() { function assert-file-contains-substring() { function set-project-version() { function set-documentation-version() { function next-snapshot-version() {
for,1
git commit -m "Prepare for next development iteration"
if,1
if [[ ! "$RELEASE_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
git@github.com:luontola/retrolambda.git,fbd82c9a023b363a2cb38afd8dad3fd8fc134ada,retrolambda,3535,./retrolambda/scripts/build.sh
lines,113
function,1

check_build_log () {
for,0

if,0

git@github.com:luontola/retrolambda.git,fbd82c9a023b363a2cb38afd8dad3fd8fc134ada,retrolambda,3535,./retrolambda/scripts/stage.sh
lines,13
function,0


for,0

if,0

git@github.com:luontola/retrolambda.git,fbd82c9a023b363a2cb38afd8dad3fd8fc134ada,retrolambda,3535,./retrolambda/scripts/publish.sh
lines,24
function,0


for,0

if,0

git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/wildfly/assembly/src/start-camunda.sh
lines,30
function,0


for,1
for executable in $BROWSERS; do
if,4
if [ -n "$UNAME" -a "`$UNAME`" = "Darwin" ] if [ -z "$BROWSER" ]; then if [ -n "$BROWSER" ]; then if [ -z "$BROWSER" ]; then
git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/tomcat/assembly/src/start-camunda.sh
lines,30
function,0


for,1
for executable in $BROWSERS; do
if,4
if [ -n "$UNAME" -a "`$UNAME`" = "Darwin" ] if [ -z "$BROWSER" ]; then if [ -n "$BROWSER" ]; then if [ -z "$BROWSER" ]; then
git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/tomcat/assembly/src/tomcat/setenv.sh
lines,1
function,0


for,0

if,0

git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/tomcat/assembly/src/shutdown-camunda.sh
lines,5
function,0


for,0

if,0

git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/run/assembly/resources/shutdown.sh
lines,6
function,0


for,0

if,0

git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/run/assembly/resources/start.sh
lines,39
function,0


for,1
for executable in $BROWSERS; do
if,5
if [ $ if [ -n "$UNAME" -a "`$UNAME`" = "Darwin" ] if [ -z "$BROWSER" ]; then if [ -n "$BROWSER" ]; then if [ -z "$BROWSER" ]; then
git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/distro/run/assembly/resources/run.sh
lines,152
function,0


for,0

if,13
if [ "$1" = "start" ] ; then if [ "x$JAVA" = "x" ]; then if [ "x$JAVA_HOME" != "x" ]; then if [[ "$JAVA_VERSION" -lt "$EXPECTED_JAVA_VERSION" ]]; then if [ "x$JAVA_OPTS" != "x" ]; then if [ "$optionalComponentChosen" = "false" ]; then if [ "$productionChosen" = "false" ]; then if [ "$swaggeruiChosen" = "true" ] && [ "$restChosen" = "false" ]; then if [ "$detachProcess" = "true" ]; then if [ -s "$PID_PATH" ]; then elif [ "$1" = "stop" ] ; then if [ -s "$PID_PATH" ]; then elif [ "$1" = "" ] || [ "$1" = "help" ] ; then
git@github.com:camunda/camunda-bpm-platform.git,16f0eaf3871e385a93642e8630bc69948815e7c2,camunda-bpm-platform,3535,./camunda-bpm-platform/.ci/scripts/check-sql-scripts.sh
lines,19
function,0


for,1
for create_script in engine/src/main/resources/org/camunda/bpm/engine/db/create/*.sql; do
if,1
if [ $? -ne 0 ]; then
git@github.com:VaughnVernon/IDDD_Samples.git,9b27b11773f62afb5d1b541abf51fb36516a7250,IDDD_Samples,3531,./IDDD_Samples/iddd_common/src/main/mysql/db_setup.sh
lines,12
function,0


for,0

if,0

git@github.com:VaughnVernon/IDDD_Samples.git,9b27b11773f62afb5d1b541abf51fb36516a7250,IDDD_Samples,3531,./IDDD_Samples/startContainers.sh
lines,119
function,6
function start() { function status() { function stop() { function usage() { function requires() { function waitForContainer() {
function start() { function status() { function stop() { function usage() { function requires() { function waitForContainer() {
for,10
echo "Waiting for MySQL Server to be up and running..." waitForContainer "${mysqlContainerName}" "mysqld: ready for connections." for sql in ${testSqlFiles}; do for sql in ${sqlFiles}; do for sql in ${testSqlFiles}; do for sql in ${sqlFiles}; do echo "Waiting for RabbitMQ to be up and running..." for name in ${containers[@]}; do for name in ${containers[@]}; do echo " start Start external dependencies for this project in Docker containers"
if,1
if which mysql > /dev/null; then
git@github.com:VaughnVernon/IDDD_Samples.git,9b27b11773f62afb5d1b541abf51fb36516a7250,IDDD_Samples,3531,./IDDD_Samples/iddd_identityaccess/src/main/mysql/db_setup.sh
lines,12
function,0


for,0

if,0

git@github.com:VaughnVernon/IDDD_Samples.git,9b27b11773f62afb5d1b541abf51fb36516a7250,IDDD_Samples,3531,./IDDD_Samples/iddd_collaboration/src/main/mysql/db_setup.sh
lines,9
function,0


for,0

if,0

git@github.com:vaticle/typedb.git,87c792fa1d3a80872ebd52be89afe3e4130a27b2,typedb,3530,./typedb/tool/release/create_notes.sh
lines,19
function,0


for,0

if,0

git@github.com:vaticle/typedb.git,87c792fa1d3a80872ebd52be89afe3e4130a27b2,typedb,3530,./typedb/docs/deps.sh
lines,31
function,0


for,0

if,0

git@github.com:vaticle/typedb.git,87c792fa1d3a80872ebd52be89afe3e4130a27b2,typedb,3530,./typedb/dependencies/maven/update.sh
lines,19
function,0


for,0

if,0

git@github.com:ByteLegend/ByteLegend.git,b1e831a83b4d3d43182014e2bf8064973d1ccf00,ByteLegend,3527,
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/stop_cluster.sh
lines,47
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/setup_standalone.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/conf/spark/spark-env.sh
lines,77
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/build_cluster_images.sh
lines,58
function,0


for,0

if,4
if [ $ENABLE_HBASE == "yes" ]; then if [ $ENABLE_KERBEROS == "yes" ]; then if [ $ENABLE_LDAP == "yes" ]; then if [ $ENABLE_KAFKA == "yes" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/setup_service.sh
lines,36
function,0


for,0

if,2
if [ $CLUSTER_MODE == "write" ]; then if [ $CLUSTER_MODE == "write-read" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/header.sh
lines,140
function,0


for,1
for arg in $@
if,3
if [ $? != 0 ]; then if [[ $HADOOP_VERSION < "3" ]]; then elif [[ $HADOOP_VERSION > "3" ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/build_standalone_image.sh
lines,27
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/resourcemanager/run_rm.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/nodemanager/run_nm.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/metastore-db/run_db.sh
lines,30
function,0


for,1
for db in $CREATE_DBS; do
if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/historyserver/run_history.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/namenode/run_nn.sh
lines,36
function,0


for,0

if,3
if [ ! -d $namedir ]; then if [ -z "$CLUSTER_NAME" ]; then if [ "`ls -A $namedir`" == "" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hregionserver/run_hr.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/base/entrypoint.sh
lines,140
function,3
function addProperty() { function configure() { function wait_for_it()
function addProperty() { function configure() { function wait_for_it()
for,6
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "Configuring for multihomed network" for module in mapred jvm rpc ugi; do for module in namenode datanode resourcemanager nodemanager mrappmaster jobhistoryserver; do echo "[$i/$max_try] check for ${service}:${port}..." for i in ${SERVICE_PRECONDITION[@]}
if,4
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if [ "$MULTIHOMED_NETWORK" = "1" ]; then if [ -n "$GANGLIA_HOST" ]; then if (( $i == $max_try )); then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hmaster/run_hm.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/client/run_cli.sh
lines,35
function,0


for,0

if,1
if [[ $HOSTNAME =~ "kylin-all" ]]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/client/entrypoint.sh
lines,18
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/kerberos/run_krb.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/datanode/run_dn.sh
lines,26
function,0


for,0

if,1
if [ ! -d $datadir ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hbase/entrypoint.sh
lines,83
function,3
function addProperty() { function configure() { function wait_for_it()
function addProperty() { function configure() { function wait_for_it()
for,3
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "[$i/$max_try] check for ${service}:${port}..." for i in "${SERVICE_PRECONDITION[@]}"
if,2
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if (( $i == $max_try )); then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/kylin/entrypoint.sh
lines,17
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hive/run_hv.sh
lines,30
function,0


for,0

if,1
if [[ $HIVE_VERSION > "2" ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hive/conf/hive-env.sh
lines,55
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/cluster/hive/entrypoint.sh
lines,136
function,3
function addProperty() { function configure() { function wait_for_it()
function addProperty() { function configure() { function wait_for_it()
for,6
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do echo "Configuring for multihomed network" for module in mapred jvm rpc ugi; do for module in namenode datanode resourcemanager nodemanager mrappmaster jobhistoryserver; do echo "[$i/$max_try] check for ${service}:${port}..." for i in ${SERVICE_PRECONDITION[@]}
if,4
for c in `printenv | perl -sne 'print "$1 " if m/^${envPrefix}_(.+?)=.*/' -- -envPrefix=$envPrefix`; do if [ "$MULTIHOMED_NETWORK" = "1" ]; then if [ -n "$GANGLIA_HOST" ]; then if (( $i == $max_try )); then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/standalone/conf/spark/spark-env.sh
lines,77
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/standalone/conf/bin/kylin.sh
lines,425
function,8
function retrieveDependency() { function checkBasicKylinProps() { function prepareFairScheduler() { function checkRestPort() { function classpathDebug() { function runTool() { function retrieveStartCommand() { function retrieveStopCommand() {
function retrieveDependency() { function checkBasicKylinProps() { function prepareFairScheduler() { function checkRestPort() { function classpathDebug() { function runTool() { function retrieveStartCommand() { function retrieveStopCommand() {
for,6
echo "The current Hadoop environment is HDI3, will replace some jars package for ${KYLIN_HOME}/spark/jars" this work for additional information regarding copyright ownership. See the License for the specific language governing permissions and verbose "java opts for tool is ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOOL_OPTS}" verbose "java classpath for tool is ${KYLIN_TOOL_CLASSPATH}" for ((i=0; i<$LOOP_COUNTER; i++))
if,40
if [ "$verbose" = true ]; then if [[ -z $reload_dependency && `ls -1 ${dir}/cached-* 2>/dev/null | wc -l` -eq 6 ]] if [[ "${metadataUrl if [[ "${metadataUrl if [ -z "${hdp_version}" ]; then if [[ -d "/usr/hdp/current/hdinsight-zookeeper" && $hdp_version == "2"* ]] if [[ -f ${KYLIN_HOME}/tomcat/webapps/kylin.war ]] if [[ ! -d ${KYLIN_HOME}/tomcat/webapps/kylin ]] if [[ -f ${KYLIN_HOME}/tomcat/webapps/kylin/WEB-INF/lib/guava-14.0.jar ]] if [[ -d "${KYLIN_SPARK_JARS_HOME}" ]] if [[ -f ${KYLIN_HOME}/hdi3_spark_jars_flag ]] if [ $? -eq 1 ] if [ -z "$KYLIN_REST_ADDRESS" ] if [[ "x${additional_security_profiles}" != "x" ]]; then if [ -n "${hive_dependency}" ]; then if [ -n "${kafka_dependency}" ]; then if [ -z "$spring_profile" ] if [ "${KYLIN_CLASSPATH_DEBUG}" != "" ]; then if [ -f "${KYLIN_HOME}/conf/setenv-tool.sh" ]; then if [ -f "${KYLIN_HOME}/pid" ] if ps -p $PID > /dev/null if [ -f "${KYLIN_HOME}/conf/setenv.sh" ]; then if [ -f "${security_ldap_truststore}" ]; then if [ -z ${HADOOP_CONF_DIR} ] if [ -f "${KYLIN_HOME}/pid" ] if ps -p $PID > /dev/null if ps -p $PID > /dev/null ; then if ps -p $PID > /dev/null if ps -p $PID > /dev/null if [ "$2" == "--reload-dependency" ] if [ "$1" == "start" ] elif [ "$1" == "run" ] elif [ "$1" == "stop" ] if [[ $? == 0 ]] elif [ "$1" == "restart" ] echo "--> Stopping kylin first if it's running..." if [[ $? != 0 ]] elif [ "$1" = "version" ] elif [ "$1" = "diag" ] elif [[ "$1" = org.apache.kylin.* ]]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/dockerfile/standalone/entrypoint.sh
lines,115
function,2
function check_hdfs_usability() {
mysql --connect-expired-password -u root -p$mysql_init_password -e "set global validate_password_policy=0;set global validate_password_length=6;alter user user() identified by '123456';" function check_hdfs_usability() {
for,1
mysql_init_password=`cat /var/log/mysqld.log |grep -Po '(?<=A temporary password is generated for root@localhost: )\S+'`
if,7
if [ ! -f "/home/admin/first_run" ] if [ ! -f "/home/admin/first_run" ] if [ ! -f "/home/admin/first_run" ] if [[ $started_hdfs -eq 0 ]]; then if [[ $started_hdfs -eq 0 ]]; then if [ ! -f "/home/admin/first_run" ] if [ ! -f "/home/admin/first_run" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/docker/setup_hadoop_cluster.sh
lines,81
function,0


for,0

if,7
if [ $ENABLE_KERBEROS == "yes" ]; then if [ $ENABLE_LDAP == "yes" ]; then if [ $ENABLE_KAFKA == "yes" ]; then if [ $CLUSTER_MODE == "write" ]; then if [ $ENABLE_HBASE == "yes" ]; then if [ $CLUSTER_MODE == "write-read" ]; then if [ $ENABLE_HBASE == "yes" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/test_all_against_hdp_2_4_0_0_169.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/build-release/script/build_release.sh
lines,173
function,1
function exit_with_usage {

for,2
GPG_PASSPHRASE - Passphrase for GPG key svn commit -m 'Checkin release artifacts for '${KYLIN_PACKAGE_VERSION_RC}
if,8
if [ $ if [[ $@ == *"help"* ]]; then if [[ "$1" == "package" ]]; then if [[ "$1" == "publish-rc" ]]; then if [[ "$RELEASE_ENABLE" == "1" ]]; then if [[ "$RUNNING_CI" == "1" ]]; then if [[ "$RELEASE_ENABLE" == "1" ]]; then if [[ "$RELEASE_ENABLE" == "1" ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/build-release/script/entrypoint.sh
lines,20
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/build-release/packaging.sh
lines,50
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/sync_hbase_cdh_branches.sh
lines,55
function,1
function error() {
function error() {
for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/dev-support/make_patch.sh
lines,156
function,0


for,1
for i in {1..99}; do
if,15
if [ ! "$branch" ]; then if [ "$git_dirty" -ne 0 ]; then if [ ! "$tracking_branch" ]; then if [ "$status" -eq 128 ]; then elif [ "$status" -eq 0 ]; then if [ ! "$patch_dir" ]; then if [ ! -d "$patch_dir" ]; then if [ "$status" -eq 0 ]; then elif [ "$status" -ge 1 ]; then if [ ! -f "$patch_dir/$branch.v$i.patch" ]; then if [ -n "$addendum" ]; then if [ "$version" -eq 1 ]; then if [[ $tracking_branch != "origin/master" \ if [ "$status" -eq 0 ]; then if [ "$local_commits" -gt 1 ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/compress.sh
lines,53
function,0


for,0

if,1
if [ -z "$version" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/build.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/prepare.sh
lines,48
function,0


for,1
for f in -- find_bash.sh kylin output.txt outputbashcleaned.txt process_bash.py .[!.]*
if,2
if [ -z "$version" ] if [ ! -d "webapp/dist" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/package.sh
lines,81
function,0


for,0

if,3
if [ -z "$(command -v mvn)" ] if [ -z "$(command -v git)" ] if [ -z "$(command -v npm)" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/prepare-libs.sh
lines,42
function,0


for,0

if,1
if [ -z "$version" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/script/download-tomcat.sh
lines,77
function,0


for,0

if,4
if [[ `uname -a` =~ "Darwin" ]]; then if [ ! -f "build/apache-tomcat-${tomcat_pkg_version}.tar.gz" ] if [ `md5cmd build/apache-tomcat-${tomcat_pkg_version}.tar.gz | awk '{print $1}'` != "${tomcat_pkg_md5}" ] if [ -z "$version" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/conf/setenv-tool.sh
lines,73
function,0


for,0

if,5
if [[ -d "/usr/hdp/current/hadoop-client" ]] if [[ -d "/usr/hdp/current/hadoop-client/lib/native" ]] if [ ! -z "${KYLIN_JVM_SETTINGS}" ] if [ ! -z "${KYLIN_DEBUG_SETTINGS}" ] if [ ! -z "${KYLIN_LD_LIBRARY_SETTINGS}" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/conf/setenv.sh
lines,76
function,0


for,0

if,5
if [[ -d "/usr/hdp/current/hadoop-client" ]] if [[ -d "/usr/hdp/current/hadoop-client/lib/native" ]] if [ ! -z "${KYLIN_JVM_SETTINGS}" ] if [ ! -z "${KYLIN_DEBUG_SETTINGS}" ] if [ ! -z "${KYLIN_LD_LIBRARY_SETTINGS}" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/smoke-test/smoke-test.sh
lines,87
function,0


for,1
echo "Wait 3 minutes for service start."
if,2
if [ -n "${KYLIN_PID}" ]; then if ps -p ${KYLIN_PID} > /dev/null; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/kylin-port-replace-util.sh
lines,124
function,1
function error() {
function error() {
for,1
for port in ${TOMCAT_PORT_LIST[@]}
if,7
if [ $ if [ -z "$KYLIN_HOME" ] if [ "$1" == "set" ] if [ ! -f ${KYLIN_CONFIG_FILE} ] || [ ! -f ${TOMCAT_CONFIG_FILE} ]; then if [ ! -f ${TOMCAT_BACKUP_FILE} ]; then if [ ! -f ${KYLIN_BACKUP_FILE} ]; then elif [ "$1" == "reset" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/find-kafka-dependency.sh
lines,54
function,0


for,0

if,3
if [ -z "$KAFKA_HOME" ] if [ -z "$kafka_dependency" ] if [ -z "$kafka_dependency" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/prepare-hadoop-dependency.sh
lines,196
function,3
function cdh_replace_jars() { function emr_replace_jars() { function hdi_replace_jars() {
function cdh_replace_jars() { function emr_replace_jars() { function hdi_replace_jars() {
for,1
for jar_file in ${jar_list}
if,18
if [[ -f ${BYPASS} ]] if [[ $SPARK_HOME != $KYLIN_HOME* ]]; then if [[ $(is_cdh_6_x) == 1 ]]; then if [[ $(is_aws_emr_6) == 1 ]]; then if [ -d "$cdh_mapreduce_path" ] elif [[ $(is_aws_emr) == 1 ]] elif [[ $(is_hdi_3_x) == 1 ]] if [[ $(is_aws_emr_6) == 1 ]]; then if [[ $(is_cdh_6_x) == 1 ]]; then if [ -d "${KYLIN_HOME}/bin/hadoop3_jars/cdh6" ]; then if [ ! -f ${BYPASS} ]; then if [[ (${is_emr} == 1) || ($(is_cdh_6_x) == 1)]]; then if [ $(is_hdi_3_x) == 1 ]; then if [[ -f ${KYLIN_HOME}/tomcat/webapps/kylin.war ]]; then if [[ ! -d ${KYLIN_HOME}/tomcat/webapps/kylin ]] if [[ -f ${KYLIN_HOME}/tomcat/webapps/kylin/WEB-INF/lib/guava-14.0.jar ]] if [ $? -eq 1 ]; then if [[ (-z "${jar_list}") && (! -f ${BYPASS}) ]]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/util.sh
lines,25
function,1

isMacosX() {
for,0

if,1
if [[ "$OSTYPE" == "darwin"* ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/check-hadoop-env.sh
lines,87
function,6
function is_cdh_6_x() { function is_aws_emr() { function is_aws_emr_6() { function is_hdi_3_x() {
function is_cdh_6_x() { function is_aws_emr() { function is_aws_emr_6() { function is_hdi_3_x() {
for,0

if,9
if [ -d ${cdh_mapreduce_path}/../hadoop/ ]; then if [[ "${cdh_version}" == cdh6.* ]]; then if [[ -z ${hdp_hadoop_path} ]] if [[ -d "/usr/hdp/current/hadoop-client" ]]; then if [ -d $hadoop_lib_path ]; then if [[ "${arrVersion[1]}" == *amzn* ]]; then if [[ "${arrVersion[0]}" == 3.* && "${arrVersion[1]}" == *amzn* ]]; then if [ -z "${hdp_version}" ]; then if [[ -d "/usr/hdp/current/hdinsight-zookeeper" && $hdp_version == "2"* ]];then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/load-hive-conf.sh
lines,36
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/set-java-home.sh
lines,35
function,0


for,0

if,3
if [ -z "${JAVA_HOME}" ] if [ ! -e "$JAVA_HOME" ] if [ "$JAVA_VERSION" -lt 18 ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/build-incremental-cube.sh
lines,45
function,0


for,1
echo "Building for ${CUBE}_${ID}" | tee ${KYLIN_HOME}/logs/build_trace.log
if,1
if [ ! $1 ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/check-hive-usability.sh
lines,45
function,0


for,0

if,2
if ps -p $pid > /dev/null if ps -p $pid > /dev/null
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/check-port-availability.sh
lines,34
function,0


for,0

if,1
if isMacosX; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/find-hadoop-conf-dir.sh
lines,143
function,3
function find_hadoop_conf_dir() { function checkAndLinkFile() { function copyHiveSite() {
function find_hadoop_conf_dir() { function checkAndLinkFile() { function copyHiveSite() {
for,1
for data in ${arr[@]}
if,15
if [[ -d ${kylin_hadoop_conf_dir} ]]; then if [ -n "$override_hadoop_conf_dir" ]; then if [ $result ] if [ ! -f $result/yarn-site.xml ] if [ ! -f $result/mapred-site.xml ] if [ ! -f $result/hdfs-site.xml ] if [ ! -f $result/core-site.xml ] if [ -d "$hadoop_conf_dir" ] if [[ -f ${source_file} ]]; then if [ -n "$HIVE_CONF" ] if [ -f "$HIVE_CONF/hive-site.xml" ] elif [ -n "$HIVE_HOME" ] if [ -f "$HIVE_HOME/conf/hive-site.xml" ] elif [ -f /etc/hive/conf/hive-site.xml ] if [ -n "$hive_site" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/system-cube.sh
lines,189
function,2
function printHelp { function authorization {

for,0

if,12
if [ $authed -eq 1 ] if [ $pwd == "N" ] if [ $http_code -eq 200 ] if [[ "$@" == *"help"* ]] if [ "$1" == "build" ] if [ -d "${OUTPUT_FORDER}" ] elif [ "$1" == "setup" ] if [ "${hive_client_mode}" == "beeline" ] if [ -z ${hive2_url} ]; then elif [ "$1" == "cron" ] if [ $cron_count -eq 5 ] if [[ $? == 1 ]]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/find-hbase-dependency.sh
lines,36
function,0


for,0

if,1
if [ -n "$is_aws" ] && [ -d "/usr/lib/oozie/lib" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/check-env.sh
lines,126
function,0


for,0

if,16
if [[ $? == 0 ]]; then if [ -z "${kylin_hadoop_conf_dir}" ]; then if [ -z "$KYLIN_HOME" ] if [[ "${metadataUrl if [ -z "$(command -v hbase version)" ] if [ -z "$(command -v hive --version)" ] if [ -z "$(command -v hadoop version)" ] if [ -z "$WORKING_DIR" ] if [[ "${WORKING_DIR:0:3}" == "s3a" ]] if [ $? != 0 ] if [ -n "$SPARK_EVENTLOG_DIR" ] if [[ "${SPARK_EVENTLOG_DIR:0:3}" == "s3a" ]] if [ $? != 0 ] if [ -n "$SPARK_HISTORYLOG_DIR" ] if [[ "${SPARK_HISTORYLOG_DIR:0:3}" == "s3a" ]] if [ $? != 0 ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/check-migration-acl.sh
lines,37
function,0


for,0

if,1
if [[ "${metadataUrl
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/sample-streaming.sh
lines,30
function,0


for,0

if,0

git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/sample.sh
lines,122
function,0


for,1
for i in "${strings[@]}"; do
if,7
if [ -z "${kylin_hadoop_conf_dir}" ]; then if [ -z "$1" ]; then if [ $? != 0 ] if [ "${hive_client_mode}" == "beeline" ] if [ -z ${hive2_url} ]; then if [ -z "$default_engine_type" ]; then if [ -z "$default_storage_type" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/find-spark-dependency.sh
lines,44
function,0


for,0

if,3
if [ -n "$SPARK_HOME" ] if [ -z "$SPARK_HOME" ] if [ ! -d "$spark_home/jars" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/kylin.sh
lines,351
function,8
function retrieveDependency() { function checkBasicKylinProps() { function prepareFairScheduler() { function checkRestPort() { function classpathDebug() { function runTool() { function retrieveStartCommand() { function retrieveStopCommand() {
function retrieveDependency() { function checkBasicKylinProps() { function prepareFairScheduler() { function checkRestPort() { function classpathDebug() { function runTool() { function retrieveStartCommand() { function retrieveStopCommand() {
for,5
this work for additional information regarding copyright ownership. See the License for the specific language governing permissions and verbose "java opts for tool is ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOOL_OPTS}" verbose "java classpath for tool is ${KYLIN_TOOL_CLASSPATH}" for ((i=0; i<$LOOP_COUNTER; i++))
if,31
if [ "$verbose" = true ]; then if [[ -z $reload_dependency && `ls -1 ${dir}/cached-* 2>/dev/null | wc -l` -eq 6 ]] if [[ "${metadataUrl if [[ "${metadataUrl if [ -z "${hdp_version}" ]; then if [ -z "$KYLIN_REST_ADDRESS" ] if [[ "x${additional_security_profiles}" != "x" ]]; then if [ -z "$spring_profile" ] if [ "${KYLIN_CLASSPATH_DEBUG}" != "" ]; then if [ -f "${KYLIN_HOME}/conf/setenv-tool.sh" ]; then if [ -f "${KYLIN_HOME}/pid" ] if ps -p $PID > /dev/null if [ -f "${KYLIN_HOME}/conf/setenv.sh" ]; then if [ -f "${security_ldap_truststore}" ]; then if [ -z ${HADOOP_CONF_DIR} ] if [ -f "${KYLIN_HOME}/pid" ] if ps -p $PID > /dev/null if ps -p $PID > /dev/null ; then if ps -p $PID > /dev/null if ps -p $PID > /dev/null if [ "$2" == "--reload-dependency" ] if [ "$1" == "start" ] elif [ "$1" == "run" ] elif [ "$1" == "stop" ] if [[ $? == 0 ]] elif [ "$1" == "restart" ] echo "--> Stopping kylin first if it's running..." if [[ $? != 0 ]] elif [ "$1" = "version" ] elif [ "$1" = "diag" ] elif [[ "$1" = org.apache.kylin.* ]]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/download-spark.sh
lines,73
function,0


for,0

if,4
if [ -d "${KYLIN_HOME}/spark" ] if [[ `uname -a` =~ "Darwin" ]]; then if [ ! -f "spark-${spark_version}-bin-hadoop2.7.tgz" ] if [ `md5cmd spark-${spark_version}-bin-hadoop2.7.tgz | awk '{print $1}'` != "${spark_pkg_md5}" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/health-check.sh
lines,50
function,0


for,0

if,3
if [[ $OUTPUT == *"results"* ]]; then if (( ${LAST_TS:-"0"} < $CURR_TS - 3600 )); then if [ "$?" == "0" ]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/get-properties.sh
lines,30
function,0


for,0

if,1
if [ $
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/kill-process-tree.sh
lines,55
function,3
function help_func { function isRunning() { function killTree() {
function isRunning() { function killTree() {
for,1
for child in $(ps ax -o ppid= -o pid= | awk "\$1==$parent {print \$2}"); do
if,4
if isRunning ${parent}; then if isRunning ${parent}; then if [[ $ if [[ -n ${1//[0-9]/} ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/header.sh
lines,76
function,0

function setColor() {
for,0

if,5
if [[ "$dir" == "" ]] if [[ -n "$verbose" ]]; then if [[ "${JAVA}" == "" ]]; then if [[ -z "$JAVA_HOME" ]]; then if [[ $JAVA_VERSION ]] && [[ "$JAVA_VERSION" > "1.8" ]]; then
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/diag.sh
lines,92
function,0


for,1
echo "You need to specify a Project or Job Id for diagnosis."
if,7
if [ $ if [ -z "$patient" ] if [ -z "$destDir" ] if [ -f "${dir}/setenv-tool.sh" ] if [ ${ elif [ $ if [ -f "${dir}/setenv-tool.sh" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/bin/metastore.sh
lines,110
function,0


for,0

if,9
if [ "$1" == "backup" ] elif [ "$1" == "fetch" ] elif [ "$1" == "restore" ] elif [ "$1" == "list" ] elif [ "$1" == "remove" ] elif [ "$1" == "cat" ] elif [ "$1" == "reset" ] elif [ "$1" == "refresh-cube-signature" ] elif [ "$1" == "clean" ]
git@github.com:apache/kylin.git,0e0d8a125ea81f735e66e38f32ef722622d77dc0,kylin,3526,./kylin/build/CI/run-ci.sh
lines,132
function,0


for,1
echo "Please check build/CI/kylin-system-testing/reports/html-report/index.html for reports."
if,2
if [[ -z $binary_file ]]; then if [ "$INIT_HADOOP" == "1" ];
git@github.com:RipMeApp/ripme.git,4aec4634a86cec6e75cd4fdf0658d58baef8d009,ripme,3522,./ripme/build.sh
lines,3
function,0


for,0

if,0

git@github.com:RipMeApp/ripme.git,4aec4634a86cec6e75cd4fdf0658d58baef8d009,ripme,3522,./ripme/utils/style.sh
lines,27
function,0


for,0

if,1
echo "'){' is not allowed. Place a space between ')' and '{', i.e. 'if (a) {'"
git@github.com:RipMeApp/ripme.git,4aec4634a86cec6e75cd4fdf0658d58baef8d009,ripme,3522,./ripme/utils/stylefix.sh
lines,17
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/etherpad/bin/run-local.sh
lines,121
function,0


for,1
for f in lib/*.jar; do
if,12
if [ -x "/usr/bin/perl" ]; then if [ -e "/proc/meminfo" ]; then if (m/^MemFree:\s*(\d+)/) if (m/^Buffers:\s*(\d+)/) if (m/^Cached:\s*(\d+)/) $usable_free = 100 if ($usable_free < 100); if ($maxthreads < 5) if [ ! -z $1 ]; then if [ ! '-' = `echo $1 | head -c 1` ]; then if [ -z "$JAVA" ]; then if [ ! -f $cfg_file ]; then if [[ $1 == "--cfg" ]]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/scripts/setup-appserver.sh
lines,44
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/scripts/setup-mysql-db.sh
lines,70
function,0


for,0

if,2
if [ "$PROMPT" == true ]; then if [ -z "$DB_PASSWORD" ]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/screenshot_tests_on_fail.sh
lines,5
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/screenshot_tests_done.sh
lines,4
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/screenshot_tests.sh
lines,18
function,0


for,0

if,1
if ls ../Hackpad\ Unit\ Tests/contrib/testing/screenshots/diffs/*/*.png > /dev/null 2>&1; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/unit_tests.sh
lines,18
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/screenshot_tests_on_success.sh
lines,4
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/unit_tests_on_success.sh
lines,5
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/unit_tests_on_fail.sh
lines,4
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/run.sh
lines,5
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/testing/jenkins/runit/setup.sh
lines,7
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/contrib/runit/setup.sh
lines,7
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/yuicompressor/make.sh
lines,27
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/makesars.sh
lines,23
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/comp.sh
lines,211
function,8
function gencommon { function gensars { function gencli { function genbodylock { function genappserver { function genajstdlib { function genetherpad { function genooservice {

for,0

if,6
if [ "$1" == "clearcache" ]; then if [ -z "$CC" ]; then if [ -z "$OBFUSC" ]; then if [ ! -z "$AJSTDLIBJAVAFILES" ]; then if [ ! -z "$EPJAVAFILES" ]; then if [ $OBFUSC ] ; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/compilecache.sh
lines,68
function,1
function cacheonfiles {

for,2
for a in $FILES; do for a in $BPATH/*; do
if,11
if [ `uname` == "Darwin" ]; then elif [ `uname` == "FreeBSD" ]; then elif [ `uname` == "SunOS" ]; then if [ -z "$4" ]; then if [ ! -f $FILETEST ]; then if [ $FILETEST -ot $a ]; then if [ $REBUILD -eq 1 ]; then if [ -d $BPATH ]; then if [ $NOCOPY -ne 1 ]; then if [ -d $a ]; then elif [ -f $a ]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/makejar.sh
lines,85
function,1
function genjar {

for,2
for a in ../../lib/*.war; do for a in ../../lib/*.jar WEB-INF/lib/*.jar; do
if,2
if [ -z "$JAR" ]; then if [ "$1" == "clearcache" ]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/classpath.sh
lines,21
function,0


for,1
for f in `ls lib/*.jar`; do
if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/jscomp.sh
lines,23
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/infrastructure/bin/run.sh
lines,20
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/bin/build.sh
lines,30
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/bin/docker-entrypoint.sh
lines,58
function,0


for,0

if,4
if [ "$1" = 'hackpad' ]; then if [ ! -d "$HACKPAD_SRC" ]; then if [ ! -f "$HACKPAD_SRC/README.md" ]; then elif [[ "$1" = 'server' ]]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/bin/exports.sh
lines,53
function,0


for,0

if,3
if ! [ -e "$MYSQL_CONNECTOR_JAR" ]; then if ! [ -e "$SCALA_LIBRARY_JAR" ]; then if ! [ -e "$JAVA" ]; then
git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/bin/run.sh
lines,35
function,0


for,0

if,0

git@github.com:dropbox/hackpad.git,da0b3dbc3525cd3094c52975d11817ab30087ac9,hackpad,3521,./hackpad/bin/stop.sh
lines,48
function,1
function check_if_alive_by_pid {

for,0

if,2
if [[ "${result}" =~ "${TEST_STRING}" ]] ; then if [[ $? -eq 0 ]] ; then
git@github.com:angryip/ipscan.git,7950484a44b8fb4937e41a92c63b49d40cf28401,ipscan,3513,./ipscan/build-native-image.sh
lines,1
function,0


for,0

if,0

git@github.com:angryip/ipscan.git,7950484a44b8fb4937e41a92c63b49d40cf28401,ipscan,3513,./ipscan/update-mac-vendors.sh
lines,24
function,0


for,0

if,1
if [ "$(uname)" = "Darwin" ]; then
git@github.com:code4craft/netty-learning.git,73fd879a7dbc159a63157a6d91891b7e74783bbe,netty-learning,3512,
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/jupyter/test_notebook.sh
lines,26
function,1
function run_test {

for,1
for f in {**,.}/*.ipynb
if,2
if [[ "$base" == transfer_learning_on_cifar10* || "$base" == rank_classification_using_BERT* ]]; then if [[ $
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/extensions/tokenizers/build.sh
lines,39
function,0


for,0

if,6
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [ ! -d "tokenizers" ]; then if [ ! -d "build" ]; then if [[ $PLATFORM == 'darwin' ]]; then elif [[ $PLATFORM == 'linux' ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/extensions/sentencepiece/build.sh
lines,43
function,0


for,0

if,6
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [ ! -d "sentencepiece" ]; if [ ! -d "build" ]; if [[ $PLATFORM == 'darwin' ]]; then elif [[ $PLATFORM == 'linux' ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/extensions/fasttext/build.sh
lines,50
function,0


for,0

if,9
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [ ! -d "fastText" ]; then if [[ $PLATFORM == 'darwin' ]]; then if [[ $(uname -m) == 'arm64' ]]; then if [ ! -d "build" ]; then if [[ $PLATFORM == 'darwin' ]]; then if [[ $(uname -m) == 'arm64' ]]; then elif [[ $PLATFORM == 'linux' ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/engines/pytorch/pytorch-native/build.sh
lines,70
function,0


for,0

if,12
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [[ $3 == "precxx11" ]]; then if [[ ! -d "libtorch" ]]; then if [[ $PLATFORM == 'linux' ]]; then if [[ ! "$FLAVOR" =~ ^(cpu|cu102|cu113|cu116|cu117|cu118)$ ]]; then if [[ $ARCH == 'aarch64' ]]; then elif [[ $PLATFORM == 'darwin' ]]; then if [[ $ARCH == 'aarch64' ]]; then if [[ "$VERSION" == "1.11.0" ]]; then if [[ "$FLAVOR" = cu* ]]; then if [[ $PLATFORM == 'darwin' ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/engines/pytorch/pytorch-native/build_android.sh
lines,40
function,0


for,0

if,5
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [[ ! -d libtorch_android/"$FLAVOR" ]]; then if [[ $FLAVOR != "armeabi-v7a" ]] && [[ $FLAVOR != "arm64-v8a" ]] && [[ $FLAVOR != "x86" ]] && [[ $FLAVOR != "x86_64" ]]; then if [[ "$VERSION" =~ ^1\.10\..*|^1\.9\..* ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/engines/tensorrt/build.sh
lines,25
function,0


for,0

if,3
if [ ! -d "trt" ]; if [ ! -d "build" ]; if [ ! -d "classes" ];
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/engines/paddlepaddle/paddlepaddle-native/build.sh
lines,58
function,0


for,0

if,8
if [[ -n $(command -v nproc) ]]; then elif [[ -n $(command -v sysctl) ]]; then if [[ ! -d "paddle" ]]; then if [[ $PLATFORM == 'linux' ]]; then if [[ $1 == "cpu" ]]; then elif [[ $1 == "cu102" ]]; then elif [[ $1 == "cu112" ]]; then elif [[ $PLATFORM == 'darwin' ]]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/.devcontainer/library-scripts/gradle-debian.sh
lines,62
function,1
function updaterc() {
function updaterc() {
for,0

if,8
if [ "${GRADLE_VERSION}" = "lts" ]; then if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || ! id -u ${USERNAME} > /dev/null 2>&1; then if [ "${UPDATE_RC}" = "true" ]; then if [ "${USERNAME}" != "root" ]; then if ! dpkg -s curl ca-certificates zip unzip sed > /dev/null 2>&1; then if [ ! -d "/var/lib/apt/lists" ] || [ "$(ls /var/lib/apt/lists/ | wc -l)" = "0" ]; then if [ ! -d "${SDKMAN_DIR}" ]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/.devcontainer/library-scripts/node-debian.sh
lines,90
function,0


for,0

if,11
if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || ! id -u ${USERNAME} > /dev/null 2>&1; then if [ "${NODE_VERSION}" = "none" ]; then if ! dpkg -s apt-transport-https curl ca-certificates tar > /dev/null 2>&1 || ! type gpg > /dev/null 2>&1; then if [ ! -d "/var/lib/apt/lists" ] || [ "$(ls /var/lib/apt/lists/ | wc -l)" = "0" ]; then if type yarn > /dev/null 2>&1; then if [ -d "${NVM_DIR}" ]; then if [ "${NODE_VERSION}" != "" ]; then if [ "\$(stat -c '%U' \$NVM_DIR)" != "${USERNAME}" ]; then if [ "${USERNAME}" != "root" ]; then if [ "${NODE_VERSION}" != "" ]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/.devcontainer/library-scripts/common-debian.sh
lines,189
function,2

apt-get-update-if-needed() echo -e "${RC_SNIPPET}\nDEFAULT_USER=\$USER\nprompt_context(){}" >> /root/.zshrc
for,0

if,20
if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || [ "${USERNAME}" = "root" ]; then if [ -f "${MARKER_FILE}" ]; then if [ ! -d "/var/lib/apt/lists" ] || [ "$(ls /var/lib/apt/lists/ | wc -l)" = "0" ]; then if [ "${PACKAGES_ALREADY_INSTALLED}" != "true" ]; then if [[ ! -z $(apt-cache --names-only search ^libssl1.1$) ]]; then if [ "$(echo "$LIBSSL" | grep -o 'libssl1\.0\.[0-9]:' | uniq | sort | wc -l)" -eq 0 ]; then if [[ ! -z $(apt-cache --names-only search ^libssl1.0.2$) ]]; then elif [[ ! -z $(apt-cache --names-only search ^libssl1.0.0$) ]]; then if [ "${UPGRADE_PACKAGES}" = "true" ]; then if [ "${LOCALE_ALREADY_SET}" != "true" ]; then if id -u $USERNAME > /dev/null 2>&1; then if [ "$USER_GID" != "$(id -G $USERNAME)" ]; then if [ "$USER_UID" != "$(id -u $USERNAME)" ]; then if [ "${USERNAME}" != "root" ] && [ "${EXISTING_NON_ROOT_USER}" != "${USERNAME}" ]; then if [[ \$(which code-insiders 2>&1) && ! \$(which code 2>&1) ]]; then if [ "${RC_SNIPPET_ALREADY_ADDED}" != "true" ]; then if [ "${USERNAME}" != "root" ]; then if [ "${INSTALL_ZSH}" = "true" ] && [ ! -d "/root/.oh-my-zsh" ] && [ "${ZSH_ALREADY_INSTALLED}" != "true" ]; then if [ "${USERNAME}" != "root" ]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/.devcontainer/library-scripts/java-debian.sh
lines,58
function,0


for,0

if,9
if [ "${JAVA_VERSION}" = "lts" ]; then if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || ! id -u ${USERNAME} > /dev/null 2>&1; then if ! dpkg -s curl ca-certificates zip unzip sed > /dev/null 2>&1; then if [ ! -d "/var/lib/apt/lists" ] || [ "$(ls /var/lib/apt/lists/ | wc -l)" = "0" ]; then if [ ! -d "${SDKMAN_DIR}" ]; then if [ "${UPDATE_RC}" = "true" ]; then if [ "${USERNAME}" != "root" ]; then if [ "${JAVA_VERSION}" != "none" ]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/.devcontainer/library-scripts/maven-debian.sh
lines,61
function,1
function updaterc() {
function updaterc() {
for,0

if,8
if [ "${MAVEN_VERSION}" = "lts" ]; then if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || ! id -u ${USERNAME} > /dev/null 2>&1; then if [ "${UPDATE_RC}" = "true" ]; then if [ "${USERNAME}" != "root" ]; then if ! dpkg -s curl ca-certificates zip unzip sed > /dev/null 2>&1; then if [ ! -d "/var/lib/apt/lists" ] || [ "$(ls /var/lib/apt/lists/ | wc -l)" = "0" ]; then if [ ! -d "${SDKMAN_DIR}" ]; then
git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/tools/scripts/broken_link_checker.sh
lines,18
function,0


for,1
for i in $(find ../../ -name '*.md');
if,0

git@github.com:deepjavalibrary/djl.git,f0b4334d462a2379c5cae7da88372e55b0532079,djl,3512,./djl/tools/scripts/build_ft_deps.sh
lines,49
function,0


for,0

if,1
if [ "$IS_LLAMA_BUILD" = "false" ] ; then
git@github.com:google/data-transfer-project.git,90f0e5d0215e7243978b7854bc53198156294171,data-transfer-project,3509,./data-transfer-project/scripts/docker_push.sh
lines,7
function,0


for,0

if,0

git@github.com:google/data-transfer-project.git,90f0e5d0215e7243978b7854bc53198156294171,data-transfer-project,3509,./data-transfer-project/distributions/demo-google-deployment/bin/encrypt_and_upload_secrets.sh
lines,126
function,1

encrypt_secret() {
for,1
echo -e "Default project for gcloud is ${PROJECT_ID}.
if,5
if [[ $(pwd) != */demo-google-deployment/bin ]]; then if [ -z $1 ]; then if [ ! -d "$SECRETS_DIR" ]; then if [[ ${response} =~ ^(yes|y| ) ]]; then if [[ ! -e $ENCRYPTED_SECRETS_DIR ]]; then
git@github.com:google/data-transfer-project.git,90f0e5d0215e7243978b7854bc53198156294171,data-transfer-project,3509,./data-transfer-project/distributions/demo-google-deployment/bin/init_project_vars_example.sh
lines,27
function,0


for,0

if,0

git@github.com:google/data-transfer-project.git,90f0e5d0215e7243978b7854bc53198156294171,data-transfer-project,3509,./data-transfer-project/distributions/demo-google-deployment/bin/build_and_deploy_static_content.sh
lines,99
function,1

print_and_exec() {
for,1
i.e. 'qa8' for project ID ${BASE_PROJECT_ID}-qa8"
if,5
if [[ $(pwd) != */data-transfer-project ]]; then if [ -z $1 ]; then if [ -z $2 ]; then if [[ -e "../../static/" ]]; then if [[ -e ${INDEX_HTML_LOCATION} ]]; then
git@github.com:google/data-transfer-project.git,90f0e5d0215e7243978b7854bc53198156294171,data-transfer-project,3509,./data-transfer-project/distributions/demo-google-deployment/bin/setup_gke_environment.sh
lines,449
function,3

print_step() { create_api_backend_service() { create_backend_pool() {
for,16
Prefix to use for all project IDs. Used with -ENV_NAME (e.g. dev, prod) as suffix. echo "ERROR: Please make sure all variables for your project are set in init_project_vars.sh. for field in "${!INSTANCE_GROUPS_ARRAY[@]}"; do echo -e "Could not get the name of the instance group created for backend '${BACKEND}'. print_step "Creating health check for backend service and instance group" print_step "Creating GKE cluster for ${BACKEND}. This will create a VM instance group automatically." You should get the cert ready now. It takes about 5 minutes. See this script for instructions. read -p "Creating project ${PROJECT_ID} for organization ID ${ORGANIZATION_ID}. Continue (y/N)? " response read -p "Changing your default project for gcloud to ${PROJECT_ID}. Continue (y/N)? " response print_step "Creating a service account for IAM" print_step "Creating GCS 'app-data' bucket for storing encrypted app secrets" print_step "Creating GCS 'user-data' bucket for storing encrypted user data" read -p "Confirm we are using the correct Kubernetes context for ${PROJECT_ID}. Current context is: print_step "Creating credentials for service account to access GCP APIs. Both the API and transfer for key in "${!FIREWALL_RULES_ARRAY[@]}"; do 3. Select a region for DataStore at https://console.cloud.google.com/datastore/setup
if,21
if [[ $(pwd) != */demo-google-deployment/bin ]]; then if [[ -z ${BASE_PROJECT_ID} || \ if [[ -z ${INSTANCE_GROUPS} ]] ; then if [[ ${field} =~ .*portability-api-clus-default-pool.* ]]; then if [[ -z ${INSTANCE_GROUP_NAME} ]]; then if [[ ${BACKEND} != "api" && ${BACKEND} != "transfer" ]]; then if [[ ${BACKEND} == "api" ]]; then if [[ ${BACKEND} == "api" ]]; then if [ -z $1 ]; then if [[ ${response} =~ ^(yes|y| ) ]]; then if [[ ! -e ${CRT_FILE_PATH} ]]; then if [[ ! -e ${KEY_FILE_PATH} ]]; then if [[ ${response} =~ ^(yes|y| ) ]]; then if [[ ${response} =~ ^(yes|y| ) ]]; then if [[ ${response} =~ ^(no|n| ) ]]; then if [[ ${response} =~ ^(yes|y| ) ]]; then if [[ -z ${EXTERNAL_IPS} ]] ; then if [[ $FIREWALL_RULE_NAME == *-vms ]]; then if !(${UPDATED_FIREWALL_RULE}); then print_step "Checking if there are any project-specific post processing steps" if [[ -e ${POSTPROCESS_SCRIPT} ]]; then
git@github.com:andremion/Music-Player.git,f7cbbfe9fee7d2ec268d62eb25c901f72d4d1778,Music-Player,3508,
git@github.com:networknt/light-4j.git,234a0d2f5c91f917af8f137035881409ed3ac16f,light-4j,3507,
git@github.com:baoyongzhang/SwipeMenuListView.git,b00e0fe8c2b8d6f08607bfe2ab390c7cee8df274,SwipeMenuListView,3507,
git@github.com:WVector/AppUpdate.git,3041a62adeec3006f74a0b50728fe3b8c57d1a29,AppUpdate,3506,
git@github.com:codeestX/GeekNews.git,4e761b6be2991e0f99a22b6c121caf021bb09b16,GeekNews,3493,
git@github.com:googlemaps/android-maps-utils.git,e57a46b2e923add4ec8ffde6d5912d41695a0b17,android-maps-utils,3484,./android-maps-utils/tools/android-wait-for-emulator.sh
lines,25
function,0


for,1
echo "Waiting for emulator to start"
if,2
if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline" if [[ $failcounter -gt timeout_in_sec ]]; then
git@github.com:yanzhenjie/AndServer.git,23a7c15512f5a70a9ce517710a5d04c06a4d57c9,AndServer,3484,
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/docker/docker-entrypoint.sh
lines,5
function,0


for,0

if,0

git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/docker/docker.sh
lines,291
function,11

docker_ps() { docker_image() { download_config() { check_download_config() { run() { build() { pull() { start() { stop() { rm_container() { log() {
for,0

if,24
if test docker; then if test curl; then elif test wget; then if [[ ! -d 'config' || ! -f "config/$CONFIG_FILE" ]]; then if test curl; then elif test wget; then if [ ! $image ] ; then if [[ $need == 'y' || $need == 'yes' ]]; then if [ $ if [[ "$2" = "main" ]]; then elif [[ "$2" = "test" ]]; then elif [[ "$2" = "private" ]]; then if [ $UPDATE_CONFIG = true ]; then if [ -z "$volume" ]; then if [ -z "$parameter" ]; then if [ -z "$tron_parameter" ]; then if [ $UPDATE_CONFIG = true ]; then if [ ! -f "Dockerfile" ]; then if test curl; then elif test wget; then if [ $cid ]; then if [ $cid ]; then if [ $cid ]; then if [ $cid ]; then
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/script/querySonar.sh
lines,40
function,0


for,4
echo "wait for check finish, 5m ....." echo "Please visit https://sonarcloud.io/dashboard?branch="$BUILDKITE_BRANCH"&id=java-tron for more details" echo "wait for check finish, 5m ....." echo "Please visit https://sonarcloud.io/dashboard?id=java-tron&pullRequest="$BUILDKITE_PULL_REQUEST" for more details"
if,5
if [ $BUILDKITE_PULL_REQUEST = "false" ]; then if [ $Status = null ]; then if [ x"$Status" = x'"OK"' ];then if [ $Status = null ]; then if [ x"$Status" = x'"OK"' ];then
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/script/sonar.sh
lines,89
function,0


for,4
echo "wait for check finish, 5m ....." echo ">>>>>>>>>>>> Please visit https://sonarcloud.io/dashboard?branch="$BUILDKITE_BRANCH"&id=java-tron for more details <<<<<<<<<<<<<<<<<<" echo "wait for check finish, 5m ....." echo ">>>>>>>>>>>>>>> Please visit https://sonarcloud.io/dashboard?id=java-tron&pullRequest="$BUILDKITE_PULL_REQUEST" for more details <<<<<<<<<<<<<<<<<<"
if,5
if [ $BUILDKITE_PULL_REQUEST = "false" ]; then if [ $Status = null ]; then if [ x"$Status" = x'"OK"' ];then if [ $Status = null ]; then if [ x"$Status" = x'"OK"' ];then
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/script/checkStyle.sh
lines,26
function,0


for,0

if,2
if [ $? != 0 ];then if [ ${checkNum} -gt 0 ];then
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/script/codecov.sh
lines,5
function,0


for,0

if,0

git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/gen.sh
lines,0
function,0


for,0

if,0

git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/start.sh
lines,622
function,20

backupGCLog() { getLatestReleaseVersion() { checkVersion() { upgrade() { download() { mkdirFullNode() { quickStart() { cloneCode() { cloneBuild() { checkPid() { stopService() { checkAllowMemory() { setTCMalloc() { getTotalMemory() { setJVMMemory() { startService() { rebuildManifest() { specifyConfig(){ checkSign() { restart() {
for,2
for fileName in ${oldGcLogFiles[@]}; do echo 'info: recommended for linux systems using tcmalloc as the default memory management tool'
if,70
if [[ $GITHUB_CLONE_TYPE == 'HTTPS' ]]; then if [ -z "$JAVA_HOME" ]; then if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then if $darwin ; then if [ -z "$JAVACMD" ] ; then if [ -n "$JAVA_HOME" ] ; then if [ -x "$JAVA_HOME/jre/sh/java" ] ; then if [ ! -x "$JAVACMD" ] ; then if [ -z "$JAVA_HOME" ] ; then if [ ! -d "$gcLogDir" ];then if [ -f 'gc.log' ]; then if [ $currentDirCount -gt $maxFile ]; then if [[ -n $full_node_version ]]; then if [[ -n $github_release_version ]]; then if [[ -n $latest_version ]]; then if [[ -f $old_jar ]]; then if [[ $? == 0 ]]; then if type wget >/dev/null 2>&1; then elif type curl >/dev/null 2>&1; then if [ ! -d $FULL_NODE_DIR ]; then elif [ -d $FULL_NODE_DIR ]; then if [[ -n $full_node_version ]]; then if type git >/dev/null 2>&1; then if [[ git_clone == 0 ]]; then if [[ $? == 0 ]];then if [[ $JAR_NAME =~ '/' ]]; then if [ $pid ]; then if [ $count -eq $MAX_STOP_TIME ]; then if [[ $os == 'Darwin' ]]; then if [[ $total -lt $ALLOW_MIN_MEMORY ]]; then elif [[ $SPECIFY_MEMORY -gt 0 ]] && if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then if [[ -f $lib_tc_malloc ]]; then if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then elif [[ $os == 'Darwin' ]]; then if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then if [[ $SPECIFY_MEMORY >0 ]]; then if [[ "$max_direct" != "g" ]]; then elif [[ $os == 'Darwin' ]]; then if [[ ! $JAR_NAME =~ '-c' ]]; then if [[ ! -f $JAR_NAME ]]; then echo "info: if you need to stop the service, execute: sh start.sh --stop" if [[ $REBUILD_MANIFEST = false ]]; then if [[ ! -d $REBUILD_DIR ]]; then if [[ -f $ARCHIVE_JAR ]]; then if [[ $download == 0 ]]; then if [[ $? == 0 ]]; then if [[ "$netType" = 'test' ]]; then elif [[ "$netType" = 'private' ]]; then if [[ ! -d $FULL_NODE_CONFIG_DIR ]]; then if [[ -d $FULL_NODE_CONFIG_DIR/$configName ]]; then if [[ ! -f $FULL_NODE_CONFIG_DIR/$configName ]]; then if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then elif [[ $os == 'Darwin' ]]; then if [[ "$fullNodeSha256" == "$releaseFullNodeSha256" ]]; then if [[ $ALL_OPT_LENGTH -eq 1 ]]; then if [[ $ALL_OPT_LENGTH -eq 1 ]]; then if [[ ! "$1" =~ "-" ]] && [[ ! "$1" =~ "--" ]]; then if [[ $1 =~ '.jar' ]]; then if [[ $IS_BACKUP_GC_LOG = true ]]; then if [[ $CLONE_BUILD == true ]];then if [[ $QUICK_START == true ]]; then if [[ $? == 0 ]] ; then if [[ $RUN == true ]]; then if [[ $UPGRADE == true ]]; then if [[ $DOWNLOAD == true ]]; then if [[ -n $latest ]]; then if [[ $ALL_OPT_LENGTH -eq 0 || $ALL_OPT_LENGTH -gt 0 ]]; then if [[ $RUN == true ]]; then
git@github.com:tronprotocol/java-tron.git,ba20e2594ca6ab2d0d50a0b15b9c6052d636bcaf,java-tron,3460,./java-tron/ver.sh
lines,31
function,0


for,0

if,2
if [ "$currentBranch"x != "master"x ] if [ $? -ne 0 ]
git@github.com:xcc3641/SeeWeather.git,1e3485179a0d91eb8d781287b2f45518f0d50920,SeeWeather,3458,
git@github.com:s4kibs4mi/java-developer-roadmap.git,7f6daf505e0e143576d18b0ad21aabbcbf6ce03f,java-developer-roadmap,3455,
git@github.com:vert-x3/vertx-examples.git,2341c125606d98a9e433063e75c87ec9dcc69237,vertx-examples,3454,
git@github.com:openhab/openhab1-addons.git,f7c26e5361c1cfe0382817ce7310a624e4ce89a0,openhab1-addons,3445,./openhab1-addons/bundles/binding/org.openhab.binding.mios/examples/scripts/miosLoad.sh
lines,23
function,0


for,0

if,2
if [ "$ if [ "$?" == "0" ]
git@github.com:openhab/openhab1-addons.git,f7c26e5361c1cfe0382817ce7310a624e4ce89a0,openhab1-addons,3445,./openhab1-addons/bundles/binding/org.openhab.binding.mios/examples/scripts/miosTransform.sh
lines,45
function,0


for,2
echo "ERROR: Failed to Transform, Check for bogus XML in ${MIOS_IN}." echo "INFO: Processing for any Duplicate Item names"
if,4
if [ "$ if [ "$?" == "0" ] if [ "$itemName" = "$lastItemName" ]; then if [ "${lastItemName}" == "" ];
git@github.com:openhab/openhab1-addons.git,f7c26e5361c1cfe0382817ce7310a624e4ce89a0,openhab1-addons,3445,./openhab1-addons/bundles/persistence/org.openhab.persistence.dynamodb/scripts/fetch_sdk.sh
lines,4
function,0


for,0

if,0

git@github.com:hmkcode/Android.git,a301aa4b1b6b684978f15e7528507ac350aea3f2,Android,3438,
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/build.sh
lines,214
function,6

echo_r () { echo_y () { echo_g () { print_logo() { build() { main() {
for,0

if,21
if [[ "`tty`" != "not a tty" ]]; then if [[ "`tty`" != "not a tty" ]]; then if [[ ${have_tty} -eq 1 ]]; then if [ -z "$JAVA_HOME" ]; then if [ -x "/usr/libexec/java_home" ]; then if [ -z "$JAVA_HOME" ] ; then if [ -r /etc/gentoo-release ] ; then if $cygwin ; then if $mingw ; then if [ -z "$JAVA_HOME" ]; then if [ -n "$javaExecutable" ] && ! [ "$(expr "\"$javaExecutable\"" : '\([^ ]*\)')" = "no" ]; then if [ ! "$(expr "$readLink" : '\([^ ]*\)')" = "no" ]; then if $darwin ; then if [ -z "$JAVA_HOME" ] ; then if expr "$link" : '/.*' > /dev/null; then if [ -x "$PRG_DIR/mvnw" ]; then if [ $? -eq 0 ]; then if $cygwin; then if [ -e "$javaSource" ]; then if [ -e "$javaClass" ]; then if [ $? -eq 1 ]; then
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-spark/streampark-spark-cli/create_app.sh
lines,412
function,10

__cmd__() { __get__() { __exit__() { create_demo_code(){ create_module() { create_pom() { create_git_filter() { create_readme() { create_default_conf() { create_project() {
for,0

if,1
if which ${1:-"cmd"} >/dev/null 2>&1;then echo 1;else echo 0;fi
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-spark/streampark-spark-cli/create_conf.sh
lines,193
function,12
function __check__(){ function create_notes(){ function _n(){ function _p(){ function user_run_params(){ function spark_run_params(){ function spark_dynamic_params(){ function streampark_spark_source_kafka(){ function streampark_spark_sink_redis(){ function streampark_spark_sink_influx(){ function streampark_spark_congestion_monitor(){ function create_default(){
function __check__(){ function create_notes(){ function _n(){ function _p(){ function user_run_params(){ function spark_run_params(){ function spark_dynamic_params(){ function streampark_spark_source_kafka(){ function streampark_spark_sink_redis(){ function streampark_spark_sink_influx(){ function streampark_spark_congestion_monitor(){ function create_default(){
for,8
_p "The spark network serialization method, the default is JavaSerializer, which can be used for all types but is slower\nThe recommended Kryo method is used here\nkafka-0.10 must use this method" \ _p "When the driver node is built, spark-jar and user-jar conflict with user-supplied first. This is an experimental parameter that is only valid for cluster mode\ndefault=false" \ _p "The same as the driver node configuration, but for the executor\ndefault=false" "userClassPathFirst" "false" _p "Configure whether to enable dynamic resource allocation. This dynamic allocation is for executors and requires yarn cluster configuration to support dynamic allocation\ndefault=false" \ _p "Same as above, but for subsequent requests\ndefault=SchedulerBacklogTimeout (do not use this configuration value)" \ _p "When consuming a kafka topic for the first time, specify where to consume from. _p "Get the maximum waiting time for a data request\ndefault=3000" "fetch.max.wait.ms" "3000" _p "Several parameters required for the congestion monitoring that comes with StreamPark-Spark"
if,1
if ! which $cmd >/dev/null 2>&1;then
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-console/streampark-console-service/src/main/assembly/bin/shutdown.sh
lines,58
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRG_DIR"/"$EXECUTABLE" ]; then
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-console/streampark-console-service/src/main/assembly/bin/streampark.sh
lines,636
function,14

echo_r () { echo_g () { echo_y () { echo_w () { print_logo() { parse_yaml() { get_pid() { start() { start_docker() { debug() { stop() { status() { restart() { main() {
for,4
for (i in vname) {if (i > indent) {delete vname[i]}} vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")} for jar in $JARS;do for jar in $JARS;do
if,46
if [[ "`tty`" != "not a tty" ]]; then if [[ "`tty`" != "not a tty" ]]; then if [[ ${have_tty} -eq 1 ]]; then if expr "$link" : '/.*' > /dev/null; then if [[ -r "$APP_BASE/bin/setenv.sh" ]]; then elif [[ -r "$APP_HOME/bin/setenv.sh" ]]; then if ${cygwin}; then if ${os400}; then if ${os400}; then if [[ -r "$APP_HOME"/bin/setclasspath.sh ]]; then if [ ! -z "$CLASSPATH" ]; then if ${cygwin}; then if [ -z "$USE_NOHUP" ]; then if $hpux; then if [ "$USE_NOHUP" = "true" ]; then for (i in vname) {if (i > indent) {delete vname[i]}} if (length($3) > 0) { if [ -f "$APP_PID" ]; then if [ -s "$APP_PID" ]; then if [ $? -eq 0 ]; then if [[ ! -f "$PROPER" ]] ; then if [ "$used" -gt 0 ]; then if [ ! -z $PID ]; then if [ $PID -gt 0 ]; then if [[ ${have_tty} -eq 1 ]]; then if [[ "$1" = "debug" ]] ; then if [[ ! -f "$PROPER" ]] ; then if [[ ! -d $workspace ]]; then if [[ ! -w $workspace ]] || [[ ! -r $workspace ]]; then if [ "${HADOOP_HOME}"x == ""x ]; then if [[ -n "${HADOOP_CONF_DIR}" ]] && [[ -d "${HADOOP_CONF_DIR}" ]]; then if [[ ${PID} =~ ${IS_NUMBER} ]] && kill -0 $PID > /dev/null 2>&1 ; then if [[ ${have_tty} -eq 1 ]]; then if [[ "$1" = "debug" ]] ; then if [[ ! -f "$PROPER" ]] ; then if [ "${HADOOP_HOME}"x == ""x ]; then if [[ -n "${HADOOP_CONF_DIR}" ]] && [[ -d "${HADOOP_CONF_DIR}" ]]; then if [ ! -n "$DEBUG_PORT" ]; then if [[ $PID -eq 0 ]]; then if [ $? -gt 0 ]; then if [ $? != 0 ]; then if [ -w "$APP_PID" ]; then if [ $SLEEP -gt 0 ]; then if [ "$SLEEP" -lt 0 ]; then if [ $PID -eq 0 ]; then echo_w " stop Stop StreamPark, wait up to 3 seconds and then use kill -KILL if still running"
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-console/streampark-console-service/src/main/assembly/bin/startup.sh
lines,63
function,0


for,0

if,3
if expr "$link" : '/.*' > /dev/null; then if $os400; then if [ ! -x "$PRG_DIR"/"$EXECUTABLE" ]; then
git@github.com:apache/incubator-streampark.git,1093eaa48264262b8e5b4857cdda219079bff797,incubator-streampark,3437,./incubator-streampark/streampark-console/streampark-console-service/src/main/assembly/bin/setclasspath.sh
lines,64
function,0


for,0

if,10
if [ -z "$JAVA_HOME" ] && [ -z "$JRE_HOME" ]; then if $darwin; then if [ -x '/usr/libexec/java_home' ] ; then elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then if [ "x$JAVA_PATH" != "x" ]; then if [ "x$JRE_HOME" = "x" ]; then if [ -x /usr/bin/java ]; then if [ -z "$JAVA_HOME" ] && [ -z "$JRE_HOME" ]; then if [ -z "$JRE_HOME" ]; then if [ -z "$_RUNJAVA" ]; then
git@github.com:undertow-io/undertow.git,88553c2ca5727f8c09d653c8bb451afd6efb26f0,undertow,3435,./undertow/servlet/src/test/java/io/undertow/servlet/test/defaultservlet/disallowed.sh
lines,0
function,0


for,0

if,0

git@github.com:guolindev/giffun.git,26227595483a8f2508f23d947b3fe99721346e0f,giffun,3429,
git@github.com:spockframework/spock.git,4b325b3df2565570bdc3f6e7fc2c311a3316c216,spock,3422,
git@github.com:react-native-share/react-native-share.git,0ea0a57f0fcc5c29b8284a1c634c542d793dff6b,react-native-share,3420,
git@github.com:crossoverJie/SSM.git,1c14460a95c23e2e57fb3fd25b445a0343cad5cf,SSM,3419,./SSM/script/build-seconds-kill-service.sh
lines,56
function,0


for,1
for var in ${PID[@]};
if,0

git@github.com:crossoverJie/SSM.git,1c14460a95c23e2e57fb3fd25b445a0343cad5cf,SSM,3419,./SSM/script/build-order-consumer.sh
lines,24
function,0


for,0

if,0

git@github.com:crossoverJie/SSM.git,1c14460a95c23e2e57fb3fd25b445a0343cad5cf,SSM,3419,./SSM/script/build-seconds-kill-web.sh
lines,49
function,0


for,1
for var in ${PID[@]};
if,0

git@github.com:crossoverJie/SSM.git,1c14460a95c23e2e57fb3fd25b445a0343cad5cf,SSM,3419,./SSM/SSM-SECONDS-KILL/SSM-SECONDS-KILL-ORDER-CONSUMER/src/main/resources/startup.sh
lines,4
function,0


for,0

if,0

git@github.com:crossoverJie/SSM.git,1c14460a95c23e2e57fb3fd25b445a0343cad5cf,SSM,3419,./SSM/SSM-WEB/src/main/resources/script/run-kafka-consumer.sh
lines,19
function,0


for,0

if,1
if [ $a1 -gt 0 ];then
git@github.com:CeuiLiSA/Pixiv-Shaft.git,859a011ce4b38e0d2191fe48630681fee7a6ded8,Pixiv-Shaft,3415,
git@github.com:KingJA/LoadSir.git,7ff786c73b019997bccdb96a69f68e6c947e384b,LoadSir,3413,
git@github.com:shuzijun/leetcode-editor.git,85da93f82fad5020bb9d358c6f9118876926dcc1,leetcode-editor,3410,
git@github.com:sherxon/AlgoDS.git,1e3d94400066d5c7fcc8b20a34b08d14258578e3,AlgoDS,3409,
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/shaded_hive_deps/hive-deps-2-0/src/main/resources/download.sh
lines,22
function,1
function dl() {
function dl() {
for,0

if,2
if [ ! -d temp ]; then mkdir temp; fi if [ ! -f ${f} ]; then
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/flink-ml-framework/sbin/pip_install_packages.sh
lines,25
function,0

array=()
for,1
for i in $(seq 3 1 9)
if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/flink-ml-framework/sbin/sed_pb2_import.sh
lines,5
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/flink-ml-framework/python/lib/pybind11-2.2.4/tools/check-style.sh
lines,70
function,2
function prefix(filename, lineno) { function mark(pattern, string) { sub(pattern, "\033[01;31m&\033[0m", string); return string }

for,0

if,5
if [ -n "$found" ]; then if [ -n "$found" ]; then if [ -n "$found" ]; then if [ -n "$found" ]; then if [ -n "$found" ]; then
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/tools/build_tf2_wheel.sh
lines,37
function,0


for,0

if,1
if [[ ! -d ${distPath} ]]; then
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/tools/build_tf1_wheel.sh
lines,37
function,0


for,0

if,1
if [[ ! -d ${distPath} ]]; then
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/third_party_flink_ai_extended/tools/create_venv_package.sh
lines,44
function,0


for,0

if,1
if [[ 1 -ne $
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/shaded_libraries/build_on_apple_m1.sh
lines,16
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/webui/tools/build-image.sh
lines,90
function,0


for,0

if,4
if [ -f ${SERVER_DOCKER_ROOT}/${JAR_NAME} ] if [ -d ${WEB_DIST_TOOLS_FOLDER_FULL} ] if [ -d ${WEB_DIST_TOOLS_FOLDER_FULL} ] if [ -f "${ALINK_CORE_JAR_PATH}" ]
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/webui/tools/flink-with-alink-jar/build.sh
lines,12
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/core/src/main/python/akdl/akdl/models/tf/tft/run.sh
lines,50
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/core/src/main/python/python_runner/run_gateway.sh
lines,49
function,0


for,0

if,3
if [[ "${SCRIPT_PATH:0:1}" = '/' ]]; then if [ ! -z "${LD_PRELOAD}" ]; then if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/core/src/main/resources/call_conda_pack.sh
lines,8
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/python/src/main/python/dev/run_unit_tests.sh
lines,20
function,0


for,0

if,2
if [ $ elif [ "--skip-examples" = "$1" ]
git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/python/src/main/python/dev/integration_tests/run_integration_tests.sh
lines,14
function,0


for,0

if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/python/src/main/python/dev/integration_tests/pyflink_tests/run_pyflink_tests.sh
lines,32
function,2
function setup_env() { function clean_env() {
function setup_env() { function clean_env() {
for,1
for file in "$SCRIPTPATH"/*.py; do
if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/python/src/main/python/dev/integration_tests/examples/run_examples.sh
lines,13
function,0


for,1
for file in $SCRIPTPATH/*.py; do
if,0

git@github.com:alibaba/Alink.git,edb543ee05260a1dd314b11384d918fa1622d9c1,Alink,3407,./Alink/python/src/main/python/dev/integration_tests/remote_tests/run_remote_tests.sh
lines,60
function,5
function setup_env() { function clean_env() { function test_with_remote_env() {
with socket.socket() as s: print(s.getsockname()[1]) function setup_env() { function clean_env() { function test_with_remote_env() {
for,3
for i in $(seq $NUM_TM); do for i in $(seq $NUM_TM); do for file in "$SCRIPTPATH"/*.py; do
if,0

git@github.com:yigit/android-priority-jobqueue.git,360c090857eb0f6efbdde04a7c8bb5cc31582eb9,android-priority-jobqueue,3406,
git@github.com:ittianyu/BottomNavigationViewEx.git,4645b0f11d596748a95ccce90c46f291ec5c9ea4,BottomNavigationViewEx,3406,
git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.buildscript/check_git_clean.sh
lines,7
function,0


for,0

if,1
if [ -n "$(git status --porcelain)" ]; then
git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.github/workflows/run_main_benchmarks.sh
lines,9
function,0


for,0

if,0

git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.github/workflows/get_repo_details.sh
lines,20
function,0


for,0

if,0

git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.github/workflows/gcloud_ssh.sh
lines,11
function,0


for,0

if,0

git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.github/workflows/run_pr_benchmarks.sh
lines,9
function,0


for,0

if,0

git@github.com:uber/NullAway.git,8f270e2c824176a1169dbf213340033f3f8a59b4,NullAway,3403,./NullAway/.github/workflows/run_gcp_benchmarks.sh
lines,20
function,0


for,0

if,0

git@github.com:alamkanak/Android-Week-View.git,175c25cbe31a13c4352eac5828072e60aa1100ec,Android-Week-View,3402,
git@github.com:rubensousa/PreviewSeekBar.git,cfd1adebf10d44d3c8efa66649850328c98fc02e,PreviewSeekBar,3395,
git@github.com:avast/android-butterknife-zelezny.git,ad040deda488cdc2d4f5b104917b8310e25b051a,android-butterknife-zelezny,3393,
git@github.com:huburt-Hu/NewbieGuide.git,d22aac4e82603ca6684d87b215ae451f7e6a0622,NewbieGuide,3392,
git@github.com:javastacks/spring-boot-best-practice.git,4fddd587197556ef350b9b6ca869c7fdbf88b7d5,spring-boot-best-practice,3391,
git@github.com:fyhertz/libstreaming.git,3a78d2219a4cf5bc972cdc59a8f84349fda277c6,libstreaming,3385,
git@github.com:dingjikerbo/Android-BluetoothKit.git,aec658be16fc2c9c2d3188435427235ec4f66dc3,Android-BluetoothKit,3377,
git@github.com:GitLqr/LQRWeChat.git,6fbf1e8240cb3c6d0d3c1ad43b5721a1a8c2d897,LQRWeChat,3371,
git@github.com:watabou/pixel-dungeon.git,ca458a28f053612973d5d6059dae5f6f2ca4fcb7,pixel-dungeon,3368,
git@github.com:abel533/MyBatis-Spring-Boot.git,61c1d1da93ee290d48d317427b7770ab604b16b5,MyBatis-Spring-Boot,3367,
git@github.com:allure-framework/allure2.git,49c0ceab3e5f7bf80989f42266245c4f981afdbf,allure2,3365,
git@github.com:spring-cloud/spring-cloud-kubernetes.git,e13eaf24041402a26665cc2446ae7460eb3dc3ae,spring-cloud-kubernetes,3360,./spring-cloud-kubernetes/runSonar.sh
lines,1
function,0


for,0

if,0

git@github.com:spring-cloud/spring-cloud-kubernetes.git,e13eaf24041402a26665cc2446ae7460eb3dc3ae,spring-cloud-kubernetes,3360,./spring-cloud-kubernetes/scripts/integration-tests.sh
lines,5
function,0


for,0

if,0

git@github.com:spring-cloud/spring-cloud-kubernetes.git,e13eaf24041402a26665cc2446ae7460eb3dc3ae,spring-cloud-kubernetes,3360,./spring-cloud-kubernetes/scripts/deploy.sh
lines,7
function,0


for,0

if,0

git@github.com:JCTools/JCTools.git,463181b8dc147d045db62d2823c82c790abbca73,JCTools,3358,
git@github.com:FasterXML/jackson-databind.git,c1e92435c6942386394a2a7733065bb047773107,jackson-databind,3353,./jackson-databind/run.sh
lines,4
function,0


for,0

if,0

git@github.com:FasterXML/jackson-databind.git,c1e92435c6942386394a2a7733065bb047773107,jackson-databind,3353,./jackson-databind/profile.sh
lines,6
function,0


for,0

if,0

git@github.com:FasterXML/jackson-databind.git,c1e92435c6942386394a2a7733065bb047773107,jackson-databind,3353,./jackson-databind/create-test-report.sh
lines,3
function,0


for,0

if,0

git@github.com:lenve/JavaEETest.git,c7c186bdead4f7710decd5a0f85c9f01b0a5a8ef,JavaEETest,3351,
git@github.com:anggrayudi/android-hidden-api.git,66e2373fea8cfb9dbea522743603ccd45ed2aca2,android-hidden-api,3349,
git@github.com:ivacf/archi.git,30f1c690bf2b60c904fb3c968884b113780d935a,archi,3342,
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/data/citensg-1.0/init.sh
lines,5
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/data/citewfs-2.0/init.sh
lines,5
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/src/community/taskmanager/core/src/test/resources/org/geoserver/taskmanager/external/prepare.sh
lines,1
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/src/release/installer/mac/build.sh
lines,51
function,1
function check_rc() {
function check_rc() {
for,0

if,4
if [ $1 -gt 0 ]; then if [ ! -z "$geoserver_zip" ]; then if [ -x $SCRIPT_DIR/codesign-geoserver-app.sh ]; then if [ -d "/Volumes/${VOL}" ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/src/release/installer/mac/codesign-geoserver-app.sh
lines,125
function,2

USAGE () { SIGNCODE () {
for,5
for macho in $MACHOS for jf in $JAVAFILES for shscrpt in $SHSCRPTS echo -e "\nVerifying code signing for ${GS_APP}..." echo -e "\nGatekeeper assessment of code signing for ${GS_APP}..."
if,6
if ! [[ "${GS}" = /bin /boot /dev /etc /home /init /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /outputbash.txt /outputbashcleaned.txt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /wslgfCdII ]] || ! [ -d "${GS}" ] || ! [[ "${GS}" = *.app ]]; then if [[ -z "${CODESIGN_CERT_SHA1}" ]]; then if [[ -z "${KEYCHAIN}" ]]; then if [ -d "${JDK_DIR}" ]; then if [[ -z "${1}" ]]; then if [[ -x "${shscrpt}" ]]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/src/release/bin/shutdown.sh
lines,69
function,0


for,0

if,8
if [ -n "${JAVA_HOME:-}" ] && [ ! -x "${JAVA_HOME}/bin/java" ]; then if [ -n "${JAVA_HOME:-}" ]; then elif [ -n "$(command -v java)" ]; then if [ -z "${GEOSERVER_HOME:-}" ]; then if [ -r start.jar ]; then if [ -r ../start.jar ]; then if [ -z "${GEOSERVER_HOME:-}" ]; then if [ ! -r "${GEOSERVER_HOME}/start.jar" ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/src/release/bin/startup.sh
lines,92
function,0


for,0

if,12
if [ -n "${JAVA_HOME:-}" ] && [ ! -x "${JAVA_HOME}/bin/java" ]; then if [ -n "${JAVA_HOME:-}" ]; then elif [ -n "$(command -v java)" ]; then if [ -z "${GEOSERVER_HOME:-}" ]; then if [ -r start.jar ]; then if [ -r ../start.jar ]; then if [ -z "${GEOSERVER_HOME:-}" ]; then if [ ! -r "${GEOSERVER_HOME}/bin/startup.sh" ]; then if [ -z "${GEOSERVER_DATA_DIR:-}" ]; then if [ -r "${GEOSERVER_HOME}/data_dir" ]; then if [ -z "${MARLIN_JAR:-}" ]; then if [ "${MARLIN_JAR:-}" != "" ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/doc/en/user/source/extensions/importer/files/test.sh
lines,81
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/code-sign-exe.sh
lines,79
function,1

USAGE () {
for,0

if,4
if [ "$ if [ -z $1 ] || [ -z $2 ]; then if ! [ -f $2 ]; then if ! [[ $2 == *.exe ]]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/jenkins_release.sh
lines,23
function,0


for,0

if,3
if [ ! -z $REV ]; then if [ ! -z $GT_VERSION ]; then if [ ! -z $GWC_VERSION ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/mac_installer.sh
lines,48
function,1
function usage() {
function usage() {
for,0

if,1
if [ -z $tag ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wcs11/citewcs-1.1/init.sh
lines,3
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/run-test.sh
lines,124
function,5

_show_logs() { _parse_logs(){ _run() { wms11 () { wms13 () { wfs10 () { wfs11 () { wcs10 () { wcs11 () { interactive () { run_all () {
for,0

if,5
if [ "$grep_exit_code" -eq "0" ]; then if [ "$rc" -ne "0" ]; then if [ "$?" -ne "0" ]; then echo "viewlog.sh failed, I cannot tell if the tests failed or not." >&2 if [ "$?" -ne "0" ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs11/citewfs-1.1/init.sh
lines,5
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs11/citewfs-1.1-h2/h2.sh
lines,22
function,0


for,0

if,3
if [ "load" = "$1" ]; then if [ "clean" = "$1" ]; then if [ "run" = "$1" ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs11/init.sh
lines,5
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs11/01-init-user.sh
lines,8
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs10/citewfs-1.0/init.sh
lines,5
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wfs10/01-init-user.sh
lines,8
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/cite/wcs10/citewcs-1.0/init.sh
lines,4
function,0


for,0

if,0

git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/win_installer.sh
lines,55
function,1
function usage() {
function usage() {
for,0

if,2
if [ -z $tag ]; then if [ -z $certhash ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/build_release.sh
lines,405
function,1
function usage() {
function usage() {
for,2
for a in `ls $artifacts/*.zip | grep -v plugin`; do git commit -m "updating version numbers and release notes for $tag" .
if,33
if [ -z $tag ] || [ -z $git_user ] || [ -z $git_email ] || [ ! -z $4 ]; then if [ `is_version_num $tag` == "0" ]; then if [ `is_primary_branch_num $tag` == "1" ]; then if ! git show-ref refs/heads/$branch; then if [ -z $jira_id ]; then if [ `git branch --list rel_$tag | wc -l` == 1 ]; then if [ $rev != "HEAD" ]; then if [ $? != 0 ]; then if [ -z $SKIP_GT ]; then if [ ! -z $gt_ver ]; then if [ "`is_version_num $gt_ver`" == "1" ]; then if [ -z $gt_tag ]; then if [ "${ if [ ! -e $gt_dir ]; then if [ ! -z $gt_tag ]; then if [ ! -z $gt_tag ]; then if [ -z $SKIP_GWC ]; then if [ ! -z $gwc_ver ]; then if [ "`is_version_num $gwc_ver`" == "1" ]; then if [ -z $gwc_tag ]; then if [ "${ if [ ! -e $gwc_dir -o ! -e $gwc_dir/geowebcache ]; then if [ ! -z $gwc_tag ]; then if [ ! -z $gwc_tag ]; then if [ -z $SKIP_BUILD ]; then if [ -z $SKIP_COMMUNITY ]; then if [ -e ../../../doc/en/target/$htmldoc ]; then if [ -e user ]; then if [ -e developer ]; then if [ -e $htmldoc ]; then if [ -z $SKIP_TAG ]; then if [ `git tag --list $tag | wc -l` == 1 ]; then if [ `git ls-remote --refs --tags origin tags/$tag | wc -l` == 1 ]; then
git@github.com:geoserver/geoserver.git,027b9d439458cdfa8c2f2d6e8d8dc723fc87a81f,geoserver,3341,./geoserver/build/publish_release.sh
lines,112
function,1
function usage() {
function usage() {
for,0

if,8
if [ -z $2 ]; then if [ `is_version_num $tag` == "0" ]; then if [ `is_primary_branch_num $tag` == "1" ]; then if [ `git tag --list $tag | wc -l` == 0 ]; then if [ `git branch --list rel_$tag | wc -l` == 1 ]; then if [ -z $SKIP_DEPLOY ]; then if [ -z $SKIP_COMMUNITY ]; then if [ -z $SKIP_UPLOAD ]; then
git@github.com:google/volley.git,a4b92e04473aff9651521306d765650958f41620,volley,3340,./volley/publish-snapshot-on-commit.sh
lines,15
function,0


for,0

if,1
if [ "$GITHUB_REPOSITORY" == "google/volley" ] && \
git@github.com:iammert/ScalingLayout.git,f19164d4c4e08f93ddeb9f40aaa39e2025d1b866,ScalingLayout,3331,
git@github.com:luojilab/DDComponentForAndroid.git,328377b2fdfc43dabca00d96f058573fd28b989d,DDComponentForAndroid,3327,
git@github.com:uber/AutoDispose.git,c2a564bea362f4582ce8f5740e9d64d729caf431,AutoDispose,3326,./AutoDispose/deploy_website.sh
lines,45
function,0


for,0

if,4
if [[ "$1" = "--local" ]]; then local=true; fi if ! [[ ${local} ]]; then if ! [[ ${local} ]]; then if ! [[ ${local} ]]; then
git@github.com:immutables/immutables.git,7c78f66766bd96e9f37ed02b866c2a08871cd89a,immutables,3325,
git@github.com:pingfangushi/screw.git,33fdb4f4821175b82ea6c28fdabd63d6697de059,screw,3324,
git@github.com:ZHENFENG13/My-Blog.git,f0c238daadd7d061b0d91f64ca692297a57634b0,My-Blog,3324,
git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/scripts/aab_to_apks.sh
lines,113
function,0


for,3
for lang in "${SUPPORTED_LANGUAGES[@]}"; do for dpi in "${SUPPORTED_DPIS[@]}"; do for arch in "${SUPPORTED_ARCHS[@]}"; do
if,10
if [[ "$ if ! which bundletool >/dev/null 2>&1; then if [[ "$2" == "false" ]] || [[ "$2" == "0" ]]; then if [[ "${KEYSTORE}" == "" ]]; then if [[ "$BUILD_AAB" == true ]]; then if [[ -f "${AAB_PATH}" ]]; then if [[ -f ${AAB_PATH} ]]; then if [[ -f ${APKS_PATH} ]]; then if [ -f "base-${arch}.apk" ]; then if [[ -f ${APK_PATH} ]]; then
git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/scripts/make_docs.sh
lines,36
function,0


for,1
for lang in "${SUPPORTED_LANGUAGES[@]}"; do
if,0

git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/scripts/push_to_mirrors.sh
lines,22
function,0


for,0

if,4
if ! git push gitlab; then if ! git push riseup; then if ! git push codeberg; then if ! git push sourcehut; then
git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/scripts/check_am_server.sh
lines,34
function,0


for,0

if,4
if ! [[ -f ./app/src/main/assets/am.jar ]]; then if [[ "${os}" == "Darwin" ]]; then elif [[ "${os}" == "Linux" ]]; then if [[ "${checksum}" != "${old_checksum}" ]] || [[ "${checksum2}" != "${old_checksum2}" ]]; then
git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/docs/raw/en/doctool.sh
lines,48
function,2
function check_deps() { function detect_abuse() {
function check_deps() { function detect_abuse() {
for,0

if,0

git@github.com:MuntashirAkon/AppManager.git,98ef1ced4256399c94c7824a7b8c308ffc5b1894,AppManager,3324,./AppManager/app/src/main/assets/run_server.sh
lines,49
function,0


for,0

if,3
if [[ $ if [[ $? -ne 0 ]]; then if [[ $? -ne 0 ]]; then
git@github.com:bitcoin-wallet/bitcoin-wallet.git,12491cefdab2b6e8343d9205048bcfdffca76687,bitcoin-wallet,3321,
git@github.com:jtablesaw/tablesaw.git,02d3e524110982ec2b420ff8f9126707d483374f,tablesaw,3317,./tablesaw/docs-src/deploy_docs.sh
lines,3
function,0


for,0

if,0

git@github.com:Snailclimb/guide-rpc-framework.git,88754d1568a4c065aab1648966334c63ab93f4d3,guide-rpc-framework,3316,./guide-rpc-framework/init.sh
lines,2
function,0


for,0

if,0

git@github.com:sofastack/sofa-jraft.git,19ed179e02ee9108adc0bbf66badb47f62c62af8,sofa-jraft,3313,./sofa-jraft/jraft-example/bin/shutdown.sh
lines,18
function,0


for,0

if,2
if [ ! -n "$pid" ] ; then if [ ! -n "$pid" ] ; then
git@github.com:sofastack/sofa-jraft.git,19ed179e02ee9108adc0bbf66badb47f62c62af8,sofa-jraft,3313,./sofa-jraft/jraft-example/bin/server_benchmark_start.sh
lines,56
function,0


for,0

if,5
if [[ $JAVA_VERSION =~ "1.8" ]]; then if (($MEMORY <= 5000000));then elif (($MEMORY <= 9000000));then elif (($MEMORY <= 17000000));then elif (($MEMORY <= 33000000));then
git@github.com:sofastack/sofa-jraft.git,19ed179e02ee9108adc0bbf66badb47f62c62af8,sofa-jraft,3313,./sofa-jraft/jraft-example/bin/client_benchmark_start.sh
lines,62
function,0


for,0

if,5
if [[ $JAVA_VERSION =~ "1.8" ]]; then if (($MEMORY <= 5000000));then elif (($MEMORY <= 9000000));then elif (($MEMORY <= 17000000));then elif (($MEMORY <= 33000000));then
git@github.com:sofastack/sofa-jraft.git,19ed179e02ee9108adc0bbf66badb47f62c62af8,sofa-jraft,3313,./sofa-jraft/tools/check_format.sh
lines,7
function,0


for,0

if,1
if [ -n "$(git status --untracked-files=no --porcelain)" ]; then
git@github.com:sofastack/sofa-jraft.git,19ed179e02ee9108adc0bbf66badb47f62c62af8,sofa-jraft,3313,./sofa-jraft/jraft-core/src/main/resources/gen.sh
lines,2
function,0


for,0

if,0

git@github.com:zhpanvip/BannerViewPager.git,765e774fc78295debd78ddc7dd5d10721bb31c09,BannerViewPager,3312,
git@github.com:dariuszseweryn/RxAndroidBle.git,60b99f28766c208179055e96db894c66ac090ad9,RxAndroidBle,3306,./RxAndroidBle/.buildscript/update_version_in_readmes.sh
lines,46
function,0


for,0

if,3
if [[ $current_branch != "$release_branch" ]]; then if [[ $version_name_old -eq $version_name_new ]]; then if [[ $version_name_new == *"SNAPSHOT"* ]]; then
git@github.com:dariuszseweryn/RxAndroidBle.git,60b99f28766c208179055e96db894c66ac090ad9,RxAndroidBle,3306,./RxAndroidBle/.buildscript/deploy_snapshot.sh
lines,68
function,5
function contains { function joinBy { function getProperty { function getVersionName { function hasSnapshotSuffix {

for,1
for ((i=1;i < $
if,7
if [ "${!i}" == "${value}" ]; then if [ ${VERSION_NAME_END} == "SNAPSHOT" ]; then if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ $(contains "${WHITELIST_BRANCHES[@]}" "$TRAVIS_BRANCH") == "false" ]; then elif [ $(hasSnapshotSuffix $(getVersionName)) == "false" ]; then
git@github.com:shekhargulati/99-problems.git,7e120de6259b408eed8d1d17538b561a01bbfb9a,99-problems,3306,
git@github.com:actorapp/actor-platform.git,5123c1584757c6eeea0ed2a0e7e043629871a0c6,actor-platform,3303,./actor-platform/actor-keygen/docker.sh
lines,17
function,0


for,0

if,0

git@github.com:actorapp/actor-platform.git,5123c1584757c6eeea0ed2a0e7e043629871a0c6,actor-platform,3303,./actor-platform/actor-server/docker.sh
lines,3
function,0


for,0

if,0

git@github.com:actorapp/actor-platform.git,5123c1584757c6eeea0ed2a0e7e043629871a0c6,actor-platform,3303,./actor-platform/actor-sdk/sdk-core-ios/buildFramework.sh
lines,61
function,0


for,0

if,0

git@github.com:actorapp/actor-platform.git,5123c1584757c6eeea0ed2a0e7e043629871a0c6,actor-platform,3303,./actor-platform/actor-sdk/sdk-core-ios/buildPod.sh
lines,28
function,0


for,0

if,0

git@github.com:actorapp/actor-platform.git,5123c1584757c6eeea0ed2a0e7e043629871a0c6,actor-platform,3303,./actor-platform/actor-sdk/sdk-core/updateApi.sh
lines,10
function,0


for,0

if,0

git@github.com:kevinsawicki/http-request.git,2d62a3e9da726942a93cf16b6e91c0187e6c0136,http-request,3300,
git@github.com:chenBingX/SuperTextView.git,3b22d57b8bbf367dcdaa9e6ba587286f3d67d171,SuperTextView,3289,
git@github.com:exadel-inc/CompreFace.git,4d826e53bdbe82c2a2ed2229aa27785cdf732247,CompreFace,3287,./CompreFace/custom-builds/Single-Docker-File/startup.sh
lines,31
function,0


for,0

if,2
if [ "$external_db" = false ] ; then if [ -z "$(ls -A $PGDATA)" ]; then
git@github.com:exadel-inc/CompreFace.git,4d826e53bdbe82c2a2ed2229aa27785cdf732247,CompreFace,3287,./CompreFace/embedding-calculator/benchmark.sh
lines,26
function,0


for,1
for IMAGE in "${IMAGES[@]}"
if,0

git@github.com:exadel-inc/CompreFace.git,4d826e53bdbe82c2a2ed2229aa27785cdf732247,CompreFace,3287,./CompreFace/embedding-calculator/tools/test_memory_constraints.sh
lines,39
function,0


for,4
for scanner in ${SCANNERS/,/ }; do for mem_limit in ${MEM_LIMITS/,/ }; do for img_length_limit in ${IMG_LENGTH_LIMITS/,/ }; do for img_name in ${IMG_NAMES/,/ }; do
if,2
if [ "$SHOW_OUTPUT" = true ] && [[ -n $OUTPUT ]]; then if [ $EXIT_CODE -eq 0 ]; then
git@github.com:exadel-inc/CompreFace.git,4d826e53bdbe82c2a2ed2229aa27785cdf732247,CompreFace,3287,./CompreFace/load-tests/docker/entrypoint.sh
lines,30
function,0


for,1
for test_folder in $FOLDERS
if,1
if [ -z "$TESTS" ]
git@github.com:exadel-inc/CompreFace.git,4d826e53bdbe82c2a2ed2229aa27785cdf732247,CompreFace,3287,./CompreFace/dev/start.sh
lines,3
function,0


for,0

if,0

git@github.com:jlegewie/zotfile.git,a6c9e02e17b60cbc1f9bb4062486548d9ef583e3,zotfile,3279,
git@github.com:WritingMinds/ffmpeg-android-java.git,6fd8356ff41c4443dc84c6f0bce478bf5d4c4122,ffmpeg-android-java,3276,./ffmpeg-android-java/runTests.sh
lines,34
function,1
function run_test() {
function run_test() {
for,2
echo " Starting Tests for ${emulator_name} " echo " Finished Tests for ${emulator_name} "
if,0

git@github.com:trojan-gfw/igniter.git,e0964bc5f4cd8c0c481405a1a38e9e493791c002,igniter,3275,
git@github.com:nining377/dolby_beta.git,258ab9b95671ecfb13a03636842890d9ca36fe75,dolby_beta,3273,
git@github.com:phodal/migration.git,772edc8aa357311626d2076cb86b3a30d0f024b9,migration,3269,
git@github.com:woxingxiao/BubbleSeekBar.git,1c04ce7304d13fb278ccddfd70627cf81f201693,BubbleSeekBar,3267,
git@github.com:java-aodeng/hope-boot.git,bdd4a5c4eda9884e6cd3171f4dadf94785e3f903,hope-boot,3260,
git@github.com:shopizer-ecommerce/shopizer.git,054a3bde1ea8894d13b0a8fb4e28f9db17262224,shopizer,3255,
git@github.com:UnevenSoftware/LeafPic.git,cfec78746776ed4bbccf9387bfc3f6ba1bb2c181,LeafPic,3250,./LeafPic/scripts/crowdin.sh
lines,26
function,0


for,0

if,3
if [ -z "$basedir" -o -z "$apikey" ]; then if [ -n "$(git status --porcelain $basedir/$location)" ]; then if [ -n "$response" ]; then
git@github.com:hneemann/Digital.git,1204c26a15ea3093ae9ca12f215d78c70c6b215c,Digital,3249,./Digital/src/main/svg/expicon.sh
lines,3
function,0


for,0

if,0

git@github.com:hneemann/Digital.git,1204c26a15ea3093ae9ca12f215d78c70c6b215c,Digital,3249,./Digital/src/main/svg/exp.sh
lines,27
function,0


for,0

if,0

git@github.com:hneemann/Digital.git,1204c26a15ea3093ae9ca12f215d78c70c6b215c,Digital,3249,./Digital/src/main/svg/exptest.sh
lines,3
function,0


for,0

if,0

git@github.com:hneemann/Digital.git,1204c26a15ea3093ae9ca12f215d78c70c6b215c,Digital,3249,./Digital/distribution/linux/Digital.sh
lines,3
function,0


for,0

if,0

git@github.com:hneemann/Digital.git,1204c26a15ea3093ae9ca12f215d78c70c6b215c,Digital,3249,./Digital/distribution/linux/install.sh
lines,35
function,0


for,0

if,4
if [ -d "${HOME}/.local/share/applications" ]; then if command -v update-desktop-database > /dev/null; then if [ -d "${HOME}/.local/share/mime" ]; then if command -v update-mime-database > /dev/null; then
git@github.com:eleme/UETool.git,e4967a5fae89f94561917ab95ca40c6e414a25ec,UETool,3241,
git@github.com:eishay/jvm-serializers.git,3f7e4bc94e40f2c8c89acd3d2e51454867cec596,jvm-serializers,3241,./jvm-serializers/tpc/mk-stats.sh
lines,25
function,0


for,1
for f in "$raw_result_dir/"*"-result.txt"; do
if,0

git@github.com:eishay/jvm-serializers.git,3f7e4bc94e40f2c8c89acd3d2e51454867cec596,jvm-serializers,3241,./jvm-serializers/tpc/run-bench.sh
lines,64
function,0


for,1
for word in $sentence
if,4
if [ $ if [ -e "$raw_result_dir" ]; then elif [ $ if [[ $code -ne 0 ]]; then
git@github.com:tangqi92/Android-Tips.git,355b0a24f987fe81e709d9825417a97c6e30a200,Android-Tips,3233,
git@github.com:ragunathjawahar/android-saripaar.git,fe05e4efcb73460fc254891a42e603b4ca2c9118,android-saripaar,3232,
git@github.com:Red5/red5-server.git,3ff4e67da6bc2445dd4e372131f9cd3d20a225a1,red5-server,3232,./red5-server/server/src/main/server/red5-debug.sh
lines,15
function,0


for,0

if,1
if [ -z "$RED5_HOME" ]; then
git@github.com:Red5/red5-server.git,3ff4e67da6bc2445dd4e372131f9cd3d20a225a1,red5-server,3232,./red5-server/server/src/main/server/red5.sh
lines,69
function,0


for,0

if,5
if [ -z "$RED5_HOME" ]; then if [ -z "$JAVA_HOME" ]; then if [ -z "$JVM_OPTS" ]; then if [ -z "$RED5_MAINCLASS" ]; then if [ -z "$RED5_OPTS" ]; then
git@github.com:Red5/red5-server.git,3ff4e67da6bc2445dd4e372131f9cd3d20a225a1,red5-server,3232,./red5-server/server/src/main/server/red5-shutdown.sh
lines,29
function,0


for,0

if,2
if [ "$1" == "force" ]; then if [ -z "$RED5_HOME" ]; then
git@github.com:BelooS/ChipsLayoutManager.git,af33b9c747119f266aeaf5ddafdc1d34a9e3c900,ChipsLayoutManager,3230,
git@github.com:aragozin/jvm-tools.git,840b7dbc600500f5e1d29aadf913b06098e511a6,jvm-tools,3228,
git@github.com:201206030/novel-plus.git,5543e5aa574ed043173e2a24c76f9f4aae6f4d66,novel-plus,3225,./novel-plus/novel-front/src/main/build/scripts/novel-front.sh
lines,94
function,6

usage() { is_exist(){ start(){ stop(){ status(){ restart(){
for,0

if,4
if [ -z "${pid}" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then
git@github.com:201206030/novel-plus.git,5543e5aa574ed043173e2a24c76f9f4aae6f4d66,novel-plus,3225,./novel-plus/novel-crawl/src/main/build/scripts/novel-crawl.sh
lines,94
function,6

usage() { is_exist(){ start(){ stop(){ status(){ restart(){
for,0

if,4
if [ -z "${pid}" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then
git@github.com:201206030/novel-plus.git,5543e5aa574ed043173e2a24c76f9f4aae6f4d66,novel-plus,3225,./novel-plus/novel-admin/src/main/build/scripts/novel-admin.sh
lines,94
function,6

usage() { is_exist(){ start(){ stop(){ status(){ restart(){
for,0

if,4
if [ -z "${pid}" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then if [ $? -eq "0" ]; then
git@github.com:Dimezis/BlurView.git,425b8755b7edaf16664b47222efdd961fb4ace4a,BlurView,3222,
git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/initializr-web/src/main/resources/static/install.sh
lines,103
function,0


for,3
echo "Linking ${SPRING_HOME}/bin/spring to $PREFIX/spring for your convenience." echo "Linking ${SPRING_HOME}/bin/spring to $PREFIX/spring for your convenience." echo "This may prompt for your password."
if,7
if [ -z "${PREFIX}" ]; then if [ -z "${JAR_FILE}" ]; then if [ -z "${JAR_URL}" ]; then if [ -z "${SPRING_HOME}" ]; then if rm -f "$PREFIX/spring" && ln -sf "${SPRING_HOME}/bin/spring" "$PREFIX/spring" >/dev/null 2>&1; then elif type sudo >/dev/null 2>&1; then if sudo rm -f "$PREFIX/spring" && sudo ln -sf "${SPRING_HOME}/bin/spring" "$PREFIX/spring" >/dev/null 2>&1; then
git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/scripts/common.sh
lines,4
function,0


for,0

if,0

git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/scripts/generate-changelog.sh
lines,12
function,0


for,0

if,0

git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/scripts/stage.sh
lines,39
function,0


for,0

if,1
if [[ $nextVersion != $snapshotVersion ]]; then
git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/scripts/build-project.sh
lines,13
function,0


for,0

if,1
if [ -z "$(ls -A maven)" ]; then
git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/scripts/promote.sh
lines,17
function,0


for,0

if,0

git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/images/get-jdk-url.sh
lines,11
function,0


for,0

if,0

git@github.com:spring-io/initializr.git,b4b4ee7cec33bae411289c1fbb9a3766bdda3a7a,initializr,3220,./initializr/ci/images/setup.sh
lines,25
function,0


for,0

if,0

git@github.com:bluelinelabs/LoganSquare.git,6c5ec5281fb58d85a99413b7b6f55e9ef18a6e06,LoganSquare,3219,
git@github.com:Mojang/brigadier.git,b92c420b2a292dd5c20f6adfafff5e21b9835c6d,brigadier,3219,
git@github.com:RoaringBitmap/RoaringBitmap.git,19acf34cc5871da9202240f56af4688b53b781aa,RoaringBitmap,3215,./RoaringBitmap/jmh/grabresults.sh
lines,3
function,0


for,0

if,0

git@github.com:RoaringBitmap/RoaringBitmap.git,19acf34cc5871da9202240f56af4688b53b781aa,RoaringBitmap,3215,./RoaringBitmap/jmh/samplescript.sh
lines,10
function,0


for,0

if,0

git@github.com:RoaringBitmap/RoaringBitmap.git,19acf34cc5871da9202240f56af4688b53b781aa,RoaringBitmap,3215,./RoaringBitmap/jmh/run.sh
lines,24
function,0


for,0

if,2
if [[ "$1" = "-clean" ]]; then if [[ "$CLEAN" = "clean" ]]; then
git@github.com:pengjianbo/GalleryFinal.git,b41dd7727eb21a86e0e6fb36e2bb5cb1f0175392,GalleryFinal,3214,
git@github.com:jfinal/jfinal.git,076e76a4941c989d7f535035295aa3d055123131,jfinal,3209,
git@github.com:google/bundletool.git,6b51fd7641fd3496d2d88f7619696c8c3d71935f,bundletool,3208,
git@github.com:alibaba/cobar.git,bc36a14d4a3f8acc0db0b3b07a7db8d38afefda5,cobar,3207,./cobar/server/assembly/bin/shutdown.sh
lines,77
function,0


for,1
for i in "$COBAR_HOME"/lib/*.jar
if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$COBAR_HOME" ] ; then
git@github.com:alibaba/cobar.git,bc36a14d4a3f8acc0db0b3b07a7db8d38afefda5,cobar,3207,./cobar/server/assembly/bin/startup.sh
lines,88
function,0


for,1
for i in "$COBAR_HOME"/lib/*.jar
if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$COBAR_HOME" ] ; then
git@github.com:alibaba/cobar.git,bc36a14d4a3f8acc0db0b3b07a7db8d38afefda5,cobar,3207,./cobar/server/assembly/bin/restart.sh
lines,61
function,0


for,0

if,4
if [ -z "$JAVA_HOME" ] ; then if [ ! -e "$JAVA_HOME/bin/java" ] ; then if $noJavaHome ; then if [ -z "$COBAR_HOME" ] ; then
git@github.com:daimajia/AndroidViewHover.git,7b1bc51b75500a761760fb6038c67adc4816bc16,AndroidViewHover,3205,
git@github.com:bauerca/drag-sort-listview.git,c3cfccee21676149dfdf8e803c0ec2eaebc6b841,drag-sort-listview,3196,./drag-sort-listview/tools/demo-sign-align.sh
lines,16
function,0


for,0

if,1
if [ -f $APK ]
git@github.com:bauerca/drag-sort-listview.git,c3cfccee21676149dfdf8e803c0ec2eaebc6b841,drag-sort-listview,3196,./drag-sort-listview/tools/doc-dslv.sh
lines,21
function,0


for,0

if,0

git@github.com:bauerca/drag-sort-listview.git,c3cfccee21676149dfdf8e803c0ec2eaebc6b841,drag-sort-listview,3196,./drag-sort-listview/tools/pkg-dslv.sh
lines,23
function,0


for,0

if,2
if [ ! $1 ] if [ -d $dslvdir ]
git@github.com:bilibili/boxing.git,bd1eeff8405a74c201ca489d6f753e306e84d195,boxing,3196,
git@github.com:rememberber/WePush.git,7eff628d91598558e663d2997529ae1265db248b,WePush,3192,
git@github.com:gouthampradhan/leetcode.git,2f69b2f03397301012e74e106b0e93941f3ff925,leetcode,3190,
git@github.com:guoguibing/librec.git,296082c072ce7d973ebfccde793e59062d8a3add,librec,3190,
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/grpc/server/src/test/resources/ssl/keys.sh
lines,49
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/grpc/client/src/test/resources/ssl/keys.sh
lines,49
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/tests/integration/dbclient/test.sh
lines,138
function,2

test_on_error() { print_help() {
for,0

if,3
if [ "$ if [ -n "${FLAG_D}" ]; then if [ -n "${FLAG_C}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/tests/integration/native-image/mp-1/test-runtime.sh
lines,47
function,0


for,0

if,1
if [ -h "${0}" ] ; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/tests/integration/native-image/mp-3/test-runtime.sh
lines,49
function,0


for,0

if,1
if [ -h "${0}" ] ; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/tests/integration/tools/example/test.sh
lines,120
function,2

test_on_error() { print_help() {
for,0

if,3
if [ "$ if [ -n "${FLAG_D}" ]; then if [ -n "${FLAG_C}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-integ-mysql.sh
lines,48
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/release.sh
lines,296
function,5

usage(){ update_version(){ release_site(){ release_build(){ deploy_snapshot(){
for,7
for ((i=0;i<${ for pom in `egrep "<helidon.version>.*</helidon.version>" -r . --include pom.xml | cut -d ':' -f 1 | sort | uniq ` for bfile in `egrep "helidonversion = .*" -r . --include build.gradle | cut -d ':' -f 1 | sort | uniq ` for dfile in `egrep ":helidon-version: .*" -r . --include attributes.adoc | cut -d ':' -f 1 | sort | uniq ` for dfile in `egrep ":helidon-version-is-release: .*" -r . --include attributes.adoc | cut -d ':' -f 1 | sort | uniq ` for prepare_hook in ${PREPARE_HOOKS} ; do for perform_hook in ${PERFORM_HOOKS} ; do
if,8
if [ "${ARG}" = "update_version" ] || [ "${ARG}" = "release_build" ] || [ "${ARG}" = "deploy_snapshot" ] ; then if [ -z "${COMMAND}" ] ; then if [ -z "${VERSION+x}" ]; then if [[ ${HELIDON_VERSION} == *-SNAPSHOT ]]; then if [ -n "${PREPARE_HOOKS}" ]; then if [ -n "${STAGING_REPO_ID}" ] ; then if [ -n "${PERFORM_HOOKS}" ]; then if [[ ${MVN_VERSION} != *-SNAPSHOT ]]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/build.sh
lines,44
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/github-build.sh
lines,31
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/github-compile.sh
lines,31
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-archetypes.sh
lines,37
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/includes/error_handlers.sh
lines,55
function,2

on_error() { error_trap_setup() {
for,0

if,1
if [ -z "${__ERROR_HANDLER_INCLUDED__}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/includes/mysql.sh
lines,37
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/includes/pgsql.sh
lines,35
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/includes/pipeline-env.sh
lines,138
function,2

require_env() { graalvm() {
for,0

if,21
if [ -z "${WS_DIR}" ]; then if [ -z "${1}" ]; then if [ -z "${2}" ]; then if [ -z "${__PIPELINE_ENV_INCLUDED__}" ]; then if [ -z "${GRAALVM_HOME}" ]; then if [ -z "$(eval echo \$${1})" ] ; then if [ -n "${JENKINS_HOME}" ] ; then if [ -n "${GITHUB_SSH_KEY}" ] ; then if [ -n "${NPM_CONFIG_REGISTRY}" ] ; then if [ -n "${https_proxy}" ] && [[ ! "${https_proxy}" =~ ^http:// ]] ; then if [ -n "${http_proxy}" ] && [[ ! "${http_proxy}" =~ ^http:// ]] ; then if [ ! -e "${HOME}/.npmrc" ] ; then if [ -n "${NPM_CONFIG_REGISTRY}" ] ; then if [ -n "${https_proxy}" ] ; then if [ -n "${http_proxy}" ] ; then if [ -n "${NO_PROXY}" ] ; then if [ -n "${RELEASE_WORKFLOW}" ] ; then if [ -n "${MAVEN_SETTINGS}" ] ; then if [ -n "${GPG_PUBLIC_KEY}" ] ; then if [ -n "${GPG_PRIVATE_KEY}" ] ; then if [ -n "${GPG_PASSPHRASE}" ] ; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/includes/docker-env.sh
lines,83
function,2

docker_start() { docker_stop() {
for,0

if,6
if [ -z "${WS_DIR}" ]; then if [ -z "${1}" ]; then if [ -z "${2}" ]; then if [ -z "${__LOCAL_ENV_INCLUDED__}" ]; then if [ -z "${6}" ] || [ -n "${6}" -a -n "${!6}" ]; then if [ -z "${2}" ] || [ -n "${2}" -a -n "${!2}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-packaging-jar.sh
lines,66
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-integ-example.sh
lines,98
function,1

print_help() {
for,0

if,2
if [ "$ if [ -n "${FLAG_D}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/spotbugs.sh
lines,30
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/checkstyle.sh
lines,40
function,1

die() { echo "${1}" ; exit 1 ;}
for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-nightly.sh
lines,42
function,0


for,1
for M in ${MODULES_TO_BUILD}; do
if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/gen-javadoc-packagelist.sh
lines,102
function,0

linkPropNames=()
for,2
for linkProp in `grep "<javadoc.link." ${POMFILE} | cut -d '>' -f1 | cut -d '.' -f3` for ((i=0;i<${
if,2
if [ "$code" -ne "200" ]; then if [ "$code" -ne "200" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-integ-dbclient.sh
lines,116
function,1

print_help() {
for,0

if,2
if [ "$ if [ -n "${FLAG_D}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-packaging-native.sh
lines,60
function,0


for,1
for native_test in ${native_image_tests}; do
if,2
if [ -z "${GRAALVM_HOME}" ]; then if [ ! -x "${GRAALVM_HOME}/bin/native-image" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/actions/assign-issue-to-project.sh
lines,120
function,0


for,0

if,7
if [ -z "${REPOSITORY_FULL_NAME}" -o -z "${ISSUE_NUMBER}" -o -z "${PROJECT_NAME}" -o -z "${COLUMN_NAME}" ]; then if [ "${HTTP_CODE}" == "404" ]; then if [ -z "${PROJECTS}" ]; then if [ -z "${PROJECTID}" ]; then if [ -z "${COLUMNID}" ]; then if [ "${HTTP_CODE}" == "422" ]; then if [ "${HTTP_CODE}" == "200" -o "${HTTP_CODE}" == 201 -o "${HTTP_CODE}" == 204 ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/actions/create-backport-issues.sh
lines,168
function,1
function join_by {
version_labels=()
for,4
for row in $(echo "${ISSUE_LABELS}" | jq -r '.[] | @base64'); do for version in ${VERSIONS[@]}; do for row in $(echo "${ISSUE_LABELS}" | jq -r '.[] | @base64'); do echo "Created issue for version ${version}, issue number: ${new_issue_number}, url: ${new_issue_url}"
if,9
if [ -z "${REPOSITORY_FULL_NAME}" -o -z "${ISSUE_NUMBER}" -o -z "${HELIDON_VERSION}" ]; then if [ "${HTTP_CODE}" == "404" ]; then if [[ " ${VERSIONS[*]} " =~ " ${label_text} " ]]; then if [ ${ if [ "${HTTP_CODE}" != "200" ]; then if [ "$version" != "$HELIDON_VERSION" ]; then if [[ ! " ${VERSIONS[*]} " =~ " ${label_text} " ]]; then if [ "${ISSUE_ASSIGNEE}" == "null" ]; then if [ "${new_issue_number}" == "null" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-packaging-jlink.sh
lines,75
function,0


for,1
for native_test in ${native_image_tests}; do
if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-integ-vault.sh
lines,40
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/owasp-dependency-check.sh
lines,42
function,1

die() { cat ${RESULT_FILE} ; echo "Dependency report in ${WS_DIR}/target" ; echo "${1}" ; exit 1 ;}
for,0

if,1
if [ -n "${JENKINS_HOME}" ] || [ "${GITHUB_ACTIONS}" = "true" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/site.sh
lines,28
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/github-tck.sh
lines,48
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/copyright.sh
lines,43
function,1

die() { echo "${1}" ; exit 1 ;}
for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/github-release.sh
lines,108
function,1

usage(){
for,1
for ((i=0;i<${
if,3
if [ -z "${CHANGELOG}" ] || [ ! -f "${CHANGELOG}" ]; then elif [ -z "${version}" ]; then if [ -z "${GITHUB_API_KEY}" ] ; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/test-integ-pgsql.sh
lines,48
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/etc/scripts/smoketest.sh
lines,326
function,8

smoketest_on_error(){ usage(){ full(){ waituntilready() { testGET() { buildAndTestArchetype(){ testApp(){ quick(){
for,3
for ((i=0;i<${ for native_test in ${native_image_tests}; do for a in ${archetypes}; do
if,12
if [ "${ARG}" = "full" ] || [ "${ARG}" = "quick" ] ; then if [ -z "${COMMAND}" ] ; then if [ -z "${VERSION}" ] ; then if [ -z "${GIT_URL}" ] ; then if [ -z "${GIT_URL}" ] ; then if [[ "${VERSION}" =~ .*SNAPSHOT ]]; then if [ -z "${GRAALVM_HOME}" ]; then if [ ${http_code} -ne "200" ]; then if [ "${archetype_name}" = "quickstart-se" -o "${archetype_name}" = "quickstart-mp" ]; then if [ "${archetype_name}" = "bare-se" -o "${archetype_name}" = "bare-mp" ]; then if [ "${archetype_name}" = "database-se" -o "${archetype_name}" = "database-mp" ]; then if [ ! -z "${CLEAN_MVN_REPO}" -a -d "${LOCAL_MVN_REPO}" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/docker/oracle-aq-18-xe/buildAndRun.sh
lines,102
function,0


for,1
echo "!!! Follow docker logs -f ${CONTAINER_NAME} for 'DATABASE IS READY TO USE' message"
if,8
printf "%-100s" "Checking if base image ${BASE_IMAGE_NAME} is available in local repository" if [[ "$(docker images -q ${BASE_IMAGE_NAME} 2>/dev/null)" == "" ]]; then printf "%-100s" "Checking if image ${IMAGE_NAME} is available in local repository" if [[ "$(docker images -q ${IMAGE_NAME} 2>/dev/null)" == "" ]]; then printf "%-100s" "Checking if container ${CONTAINER_NAME} is ready" if [[ $(docker ps -a --filter "name=^/${CONTAINER_NAME}$" --format '{{.Names}}') != "${CONTAINER_NAME}" ]]; then printf "%-100s" "Checking if container ${CONTAINER_NAME} is started" if [[ $(docker ps --filter "name=^/${CONTAINER_NAME}$" --format '{{.Names}}') != "${CONTAINER_NAME}" ]]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/docker/oracle-aq-18-xe/stopAndClean.sh
lines,19
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/docker/kafka/init_topics.sh
lines,50
function,0


for,0

if,2
echo "Checking if Kafka is up: ${brokers}" if [[ "$brokers" -gt "0" ]]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/docker/kafka/start_kafka.sh
lines,49
function,0


for,0

if,3
echo "Checking if Zookeeper is up: ${isOk}" if [ "${isOk}" = "imok" ]; then if [ $state -ne 0 ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/kafkaRun.sh
lines,36
function,0


for,0

if,3
if [[ "$(docker images -q helidon-test-kafka 2>/dev/null)" == "" ]]; then if [ ! "$(docker ps -q -f name=helidon_kafka)" ]; then if [ "$(docker ps -aq -f status=exited -f name=helidon_kafka)" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/kafkaConsume.sh
lines,29
function,0


for,0

if,1
if [ -z "$1" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/weblogic-jms-mp/buildAndRunWeblogic.sh
lines,52
function,0


for,1
printf "Waiting for WLS to start ."
if,1
if docker logs wls-admin | grep -q "Server state changed to RUNNING"; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/weblogic-jms-mp/extractThinClientLib.sh
lines,21
function,0


for,0

if,0

git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/weblogic-jms-mp/weblogic/container-scripts/createAndStartEmptyDomain.sh
lines,87
function,2
function _term() { function _kill() {
function _term() { function _kill() {
for,0

if,5
if [ ! -e ${DOMAIN_HOME}/servers/${ADMIN_NAME}/logs/${ADMIN_NAME}.log ]; then if [ ! -e "$PROPERTIES_FILE" ]; then if [ -z "$USER" ]; then if [ -z "$PASS" ]; then if [ -e ${DOMAIN_HOME}/servers/${ADMIN_NAME}/logs/${ADMIN_NAME}.log ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/weblogic-jms-mp/weblogic/container-scripts/get_healthcheck_url.sh
lines,22
function,0


for,0

if,1
if [ "$ADMINISTRATION_PORT_ENABLED" = "true" ] ; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/messaging/kafkaProduce.sh
lines,29
function,0


for,0

if,1
if [ -z "$1" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/webserver/mutual-tls/automatic-store-generator.sh
lines,163
function,2

createCertificatesAndStores() { removeAllPreviouslyCreatedStores() {
for,2
echo 'Generating CSR for client and server...' echo "Generating certs for Organization/Application "$NAME
if,5
if [ "$SINGLE" = true ] ; then if [ "$TYPE" = PKCS12 ] || [ "$TYPE" = P12 ] ; then if [ "$SINGLE" = false ] ; then if [ "$SINGLE" = false ] ; then if [ -z "$NAME" ]; then
git@github.com:helidon-io/helidon.git,fae6c444bba0c3fa66e9991ded9488612d2c88d5,helidon,3184,./helidon/examples/todo-app/cassandra/startup.sh
lines,42
function,0


for,1
echo 'Waiting for database to become available'
if,1
if [ "$((COUNT%10))" -eq '0' ]; then
git@github.com:android-notes/Cockroach.git,3409aafb0e859d9070495d83ffc0ce065b91b5e2,Cockroach,3182,
git@github.com:facebookarchive/network-connection-class.git,7282817fcf890c9ace568d0cc260e51c83954d7a,network-connection-class,3172,
git@github.com:amitshekhariitbhu/PRDownloader.git,33c0c2de0a2a0a7e0f8b27f8f1d6c75773f45025,PRDownloader,3171,
git@github.com:spotbugs/spotbugs.git,85fafcf24befaab4ab783e4eb7da403029bcc979,spotbugs,3169,./spotbugs/spotbugsTestCases/src/java/sfBugs/Bug1874896/test.sh
lines,6
function,0


for,0

if,0

git@github.com:spotbugs/spotbugs.git,85fafcf24befaab4ab783e4eb7da403029bcc979,spotbugs,3169,./spotbugs/docs/build.sh
lines,14
function,0


for,0

if,0

git@github.com:zzz40500/GsonFormat.git,23c0f5f6f1d24d96d369c58aacdda05e5a871eb3,GsonFormat,3169,
git@github.com:ferredoxin/QNotified.git,c07d34caef5a9e383d49e204cf66ddd9c5755568,QNotified,3169,./QNotified/app/appcenter-post-clone.sh
lines,38
function,0


for,0

if,2
if [[ $APPCENTER_TRIGGER == "manual" ]]; then if [[ $commit == *"[skip ci]"* ]]; then
git@github.com:Skykai521/StickerCamera.git,d0a9c4d3f0ea1acfe339128624ddcb28c4bf85df,StickerCamera,3168,
git@github.com:amulyakhare/TextDrawable.git,558677ea316e60346948b381e5e274f49b00d370,TextDrawable,3166,
git@github.com:nicolasgramlich/AndEngine.git,720897f99d2c56ba357e8fe361454bd8d88c37ed,AndEngine,3164,./AndEngine/ext/scripts/build_texturepacks.sh
lines,82
function,0


for,1
for TEXTUREPACK_INPUT_DATA_ENTRY in "${TEXTUREPACK_INPUT_DATA[@]}"
if,0

git@github.com:nicolasgramlich/AndEngine.git,720897f99d2c56ba357e8fe361454bd8d88c37ed,AndEngine,3164,./AndEngine/jni/build.sh
lines,14
function,0


for,0

if,0

git@github.com:chrisbanes/ActionBar-PullToRefresh.git,f347ef96c2643fecee7cbf671db05c0487666dff,ActionBar-PullToRefresh,3163,
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/buildenv/docker/mkdocker.sh
lines,893
function,28

print_license() { usage() { tags=() parse_options() { validate_options() { build_cmd() { preamble() { install_centos_packages() { install_ubuntu_packages() { install_packages() { install_cmake() { prepare_user() { create_user() { adjust_user_directory_perms() { set_user() { install_freemarker() { bootjdk_dirs() { bootjdk_url() { bootjdk_version() { install_bootjdks() { install_criu() { install_cuda() { install_python() { adjust_ldconfig() { add_git_remote() { create_git_cache() { configure_ssh() { print_dockerfile() { main() {
for,15
echo "Generate a Dockerfile for building OpenJ9" echo " --tag=... specify a name for the docker image (may be repeated, default: none)" for arg in "$@" ; do echo "CRIU is only supported on ubuntu for s390x" >&2 for version in $all_versions ; do for version in ${jdk_versions} ; do for tag in ${tags[@]} ; do for tag in ${tags[@]} ; do for version in $@ ; do local bootjdk_versions=$(for version in $jdk_versions ; do bootjdk_version $version ; done | sort -n -u) for version in $bootjdk_versions ; do for version in $bootjdk_versions ; do echo "RUN for dir in lib lib64 lib/x86_64-linux-gnu ; do echo /usr/local/\$dir ; done > /etc/ld.so.conf.d/usr-local.conf \\" for version in $jdk_versions ; do for version in $all_versions ; do
if,47
echo " --build[=engine] build the image (overrides '--print'). Optionally specify the engine (default: docker, or podman, if found)" if [ $arch = x86_64 ] ; then if [ $arch = x86_64 -o $arch = ppc64le ] ; then if [ "${action}" = build ] \ if [ "x$arch" = x ] ; then if [ $arch = s390x ] ; then if [ $arch = ppc64le ] ; then if [ $arch = x86_64 ] ; then if [ $criu != no ] ; then if [ $dist = centos ] ; then if [ $version = 6 ] ; then if [ $dist != ubuntu ] ; then if [ "x$cuda_tag" != x ] ; then if [ "$jdk_versions" = all ] ; then if [ "${known_version[$version]}" != yes ] ; then if [ "${action}" = build ] && ! command -v "$engine" >/dev/null 2>&1 ; then if [ ${ if [ ${ if [ "x$cuda_tag" != x ] ; then if [ $version = 6 ] ; then if [ $criu != no ] ; then if [ $arch = x86_64 ] ; then if [ $version != 6 ] ; then if [ $arch = ppc64le ] ; then if [ $arch = x86_64 ] ; then if [ $version = 18.04 ] ; then if [ $arch != s390x ] ; then if [ $arch = s390x ] ; then if [ $arch = x86_64 ] ; then if [ $criu != no ] ; then if [ $version = 18.04 ] ; then if [ $version = 20.04 ] ; then if [ $dist = centos ] ; then if [ $dist == centos ] ; then if [ $jdk_version -lt 21 ] ; then if [ $dist = centos ] ; then if [ $version = 20.04 ] ; then if [ $version != 16.04 ] ; then if [ $dist = centos ] ; then if [ $criu != no ] && [ $dist = ubuntu ]; then if [ "${wanted[$version]}" = yes ] ; then if [ "${wanted[17]}" = yes ] ; then if [ $criu != no ] ; then if [ "x$cuda_tag" != x ] ; then if [ $freemarker = yes ] ; then if [ $gen_git_cache = yes ] ; then if [ $action = build ] ; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/.github/runlint.sh
lines,62
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/JIT_Test/src/jit/test/tr/loopReplicator/main_run.sh
lines,26
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/JIT_Test/src/jit/test/tr/loopReplicator/lr_run.sh
lines,26
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/FindStore/buildInitial.sh
lines,50
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/FindStore/buildVerify.sh
lines,56
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/Sanity/buildInitial.sh
lines,31
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/Sanity/buildVerify.sh
lines,36
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/JarExt/buildJarIndexes.sh
lines,30
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/JarExt/buildInitial.sh
lines,44
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/JarExt/buildVerify.sh
lines,46
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/NonExistJar/buildInitial1.sh
lines,33
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/NonExistJar/buildInitial2.sh
lines,37
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/SignedSealed/buildInitial1.sh
lines,32
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/URLClassLoaderTests/SignedSealed/buildInitial2.sh
lines,42
function,0


for,0

if,1
if [[ `uname` == "OS/390" ]]
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/sigxfszHandlingTest/runSIGXFSZTest.sh
lines,35
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/jitserver/jitserverScript.sh
lines,99
function,0


for,0

if,7
if grep -q -- "$JITSERVER_SSL" <<< "$JVM_OPTS"; then if ! grep -q "nosslserverCert.pem" <<< "$JVM_OPTS"; then if [ "$METRICS" == true ]; then if [ "$JITSERVER_EXISTS" == 0 ]; then if [ "$METRICS" == true ]; then if [ "$JITSERVER_STILL_EXISTS" == 0 ]; then if grep -q "nosslserverCert.pem" <<< "$JVM_OPTS"; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/jitserver/jitserversslconfig.sh
lines,42
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/jitserver/jitserverconfig.sh
lines,41
function,1

random_port () {
for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/criuRandomScript.sh
lines,46
function,0


for,0

if,3
if [ "$4" = "Checkpoint" ] if [ "$4" = "FirstRestore" ] || [ "$4" = "SecondRestore" ] if [ "$4" = "SecondRestore" ]
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/criuJitServerScript.sh
lines,115
function,0


for,1
for ((i=0; i<$NUM_CHECKPOINT; i++)); do
if,8
if grep -q -- "$JITSERVER_SSL" <<< "$APP_ARGS"; then if ! grep -q "nosslserverCert.pem" <<< "$APP_ARGS"; then if [ "$JITSERVER_EXISTS" == 0 ]; then if [ "$KEEP_CHECKPOINT" != true ]; then if [ "$KEEP_CHECKPOINT" != true ]; then if [ "$KEEP_TEST_OUTPUT" != true ]; then if [ "$JITSERVER_STILL_EXISTS" == 0 ]; then if grep -q "nosslserverCert.pem" <<< "$APP_ARGS"; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/criuCatVlog.sh
lines,64
function,1

cat_prev_output() {
for,0

if,5
if [ -f "$1" ]; then if [ "$2" == true ]; then if [ "$2" == true ]; then if [ $? -eq 0 ]; then if [ "$3" == true ]; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/criuScript.sh
lines,59
function,0


for,1
for ((i=0; i<$NUM_CHECKPOINT; i++)); do
if,3
if [ "$7" != true ]; then if [ "$7" != true ]; then if [ "$8" != true ]; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/criuSecurityScript.sh
lines,34
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/criu/jitserversslconfig.sh
lines,17
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shrcdbgddrext/concatenate_dumps.sh
lines,23
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/hangTest/hang.sh
lines,33
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/locales/run_all_locales.sh
lines,63
function,0


for,1
for locale in `locale -a | grep -v -E "xplink|lp64|IBM"`;
if,3
if [[ "$locale" != "vi_VN.tcvn" && \ if grep -q UnsupportedCharsetException <<< "$output" ; then if [ "$result" != 0 ]; then
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/DifferentClassMultipleOrphanTest.sh
lines,25
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleClassPathTest1.sh
lines,29
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/MultiVMTest2.sh
lines,24
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleClassPathTest4.sh
lines,29
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/EmptyClassPathEntryTest2.sh
lines,22
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleClassPathTest2.sh
lines,28
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleClassPathTest3.sh
lines,30
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/MultiVMTest1.sh
lines,26
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/EmptyClassPathEntryTest1.sh
lines,25
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/PrepareForEmptyClassPathEntryTests.sh
lines,28
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/EmptyClassPathEntryTest3.sh
lines,22
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleClassPathTest5.sh
lines,31
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/batchfiles/StaleOrphanTest.sh
lines,49
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption6.sh
lines,42
function,0


for,0

if,1
if [ ! -e $TESTSCRIPT.out ]
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption12.sh
lines,43
function,0


for,1
if ( ! grep "JVMSHRC147E Character = not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character = not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/XscmxOption3.sh
lines,64
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if (! grep "is full" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption4.sh
lines,66
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( ! grep $EXPANDED_NAME $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if (! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption2.sh
lines,63
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( ! grep $TESTUSER $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption8.sh
lines,42
function,0


for,1
if ( ! grep "JVMSHRC147E Character \$ not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character \$ not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption9.sh
lines,42
function,0


for,1
if ( ! grep "JVMSHRC147E Character & not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character & not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/XscmxOption5.sh
lines,64
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( grep "is full" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/XscmxOption4.sh
lines,64
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if (! grep "is full" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption.sh
lines,63
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "$DEFAULT_CACHE_NAME" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT_2.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/XscmxOption.sh
lines,66
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if (! grep "is full" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/verboseOption.sh
lines,64
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if (! grep "Created shared class.*cache.*$FULLNAME" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/silentOption.sh
lines,45
function,0


for,0

if,2
if [ ! -e $TESTSCRIPT.out ] if ( grep "JVMSHRC147E" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption5.sh
lines,45
function,0


for,1
if ( ! grep "JVMSHRC147E Character \\ not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character \\ not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/cmdlineConfig.sh
lines,38
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/modifiedOption.sh
lines,63
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( grep "ModContext" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "ModContext mod1" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption10.sh
lines,42
function,0


for,1
if ( ! grep "JVMSHRC147E Character \* not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character \* not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption7.sh
lines,46
function,0


for,1
if ( ! grep "JVMSHRC147E Character \\\\ not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character \\\\ not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption3.sh
lines,63
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "$GROUP_NAME" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/XscmxOption2.sh
lines,66
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if (! grep "is full" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/silentOption2.sh
lines,63
function,0


for,0

if,4
if [ ! -e $TESTSCRIPT.out ] if ( grep "JVMSHRC158I" $TESTSCRIPT.out >/dev/null ) if [ ! -e $TESTSCRIPT.out ] if ( ! grep "Cache does not exist" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption11.sh
lines,43
function,0


for,1
if ( ! grep "JVMSHRC147E Character.*not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character.*not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/SCCommandLineOptionTests/nameOption13.sh
lines,42
function,0


for,1
if ( ! grep "JVMSHRC147E Character ? not valid for cache name" $TESTSCRIPT.out >/dev/null )
if,2
if [ ! -e $TESTSCRIPT.out ] if ( ! grep "JVMSHRC147E Character ? not valid for cache name" $TESTSCRIPT.out >/dev/null )
git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/test/functional/cmdLineTests/shareClassTests/StoreFilterTests/Resources/buildResources.sh
lines,29
function,0


for,0

if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/runtime/libffi/arm/gentramp.sh
lines,118
function,3

header () { trampoline () { main () {
for,1
// This accounts for the above 4-byte stmfd instruction, plus 8 bytes constant when loading from pc.
if,0

git@github.com:eclipse-openj9/openj9.git,b1abbfd82890e51d704c2260d91b5d4b6eb2c57f,openj9,3162,./openj9/runtime/compiler/build/scripts/guess-platform.sh
lines,107
function,3

usage() { error() { chooseplatform() {
for,0

if,3
if [ $thirty_two_bit -eq 1 ] ; then if [ $ elif [ $
git@github.com:yangfuhai/afinal.git,5fce6d71f6baa9cd0bea5eeb7258a33943b6284c,afinal,3162,
git@github.com:java8/Java8InAction.git,4786c46a24e2f7d0a749d34d585bb2c1d9f64c53,Java8InAction,3161,
git@github.com:apache/logging-log4j2.git,2848a9651782b6b5198e0fca7a3407ce212f2ece,logging-log4j2,3160,./logging-log4j2/.github/generate-email.sh
lines,107
function,3

stderr() { fail_for_invalid_args() { dump_release_notes() {
for,2
This vote is open for 72 hours and will pass unless getting a and components to assist the deployment for various use cases.
if,0

git@github.com:apache/logging-log4j2.git,2848a9651782b6b5198e0fca7a3407ce212f2ece,logging-log4j2,3160,./logging-log4j2/bin/verify-release-artifacts.sh
lines,134
function,4
function set_exit_code() { echo "$1" >.exit_code; } function get_exit_code() { [ -e .exit_code ] && head -n1 .exit_code || echo 0; }
help() { fail_due_to_invalid_arguments() { function set_exit_code() { echo "$1" >.exit_code; } function get_exit_code() { [ -e .exit_code ] && head -n1 .exit_code || echo 0; }
for,1
for sha_alg in 256 512; do
if,6
if [ "$ elif [ "$ elif [ "$ elif [ "$ if [ "$expected_hash" != "$actual_hash" ]; then if [ "$exit_code" -eq 0 ]; then
git@github.com:apache/logging-log4j2.git,2848a9651782b6b5198e0fca7a3407ce212f2ece,logging-log4j2,3160,./logging-log4j2/log4j-core-test/src/test/resources/org/apache/logging/log4j/core/net/ssl/build/gencerts.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/logging-log4j2.git,2848a9651782b6b5198e0fca7a3407ce212f2ece,logging-log4j2,3160,./logging-log4j2/log4j-core-test/src/test/resources/perf/runResponseTm.sh
lines,62
function,0


for,0

if,0

git@github.com:apache/logging-log4j2.git,2848a9651782b6b5198e0fca7a3407ce212f2ece,logging-log4j2,3160,./logging-log4j2/log4j-core-test/src/test/resources/perf/SimplePerfTest.sh
lines,57
function,0


for,0

if,1
if [ $
git@github.com:crazyandcoder/citypicker.git,1c5adb6e5727129298b27153b91ff3734850631f,citypicker,3160,
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/environments/update.sh
lines,64
function,0


for,3
echo "No configuration given for this environment ... Nothing done !" echo "Update project for environment '${environment}'" for patch_file in "${patches_path}"/*
if,5
if [ -z "${environment}" ]; then if [ ! -d "${env_path}" ]; then if [ -f "${env_path}/before.sh" ]; then if [ -d ${patches_path} ]; then if [ -f "${env_path}/after.sh" ]; then
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/environments/quarkus-main/before.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/environments/common/update_quarkus.sh
lines,46
function,0


for,0

if,0

git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/environments/quarkus-branch/before.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/environments/quarkus-lts/before.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/.ci/jenkins/dsl/test.sh
lines,52
function,0


for,2
echo "Script must be executed in a Git repository for this script to run correctly" echo "Unknown protocol for url ${git_url}"
if,3
if [ -z "${git_url}" ]; then if [[ "${git_url}" = https://* ]]; then elif [[ "${git_url}" = git@* ]]; then
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/build/release/upload_distribution.sh
lines,96
function,3
function display_help() { function create_latest_symlinks() { function assert_directory_exists() {
function display_help() { function create_latest_symlinks() { function assert_directory_exists() {
for,0

if,6
if [[ "$_version" == *Final* ]]; then if [[ ! -d "$1" ]]; then if [[ $1 == "--help" ]]; then if [[ $ if [[ ! -d "$this_script_directory" ]]; then if [ -d "$temp_release_directory" ]; then
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/build/release/update_antora_yml.sh
lines,41
function,0


for,0

if,2
if [[ ! -d "$this_script_directory" ]]; then if [ ! -f "$antora_yml_template" ]; then
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/build/8-to-9-migration/scripts/PLANNER-2911_remove-hibernate-score-types.sh
lines,25
function,0


for,0

if,0

git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/build/8-to-9-migration/migrate.sh
lines,83
function,0


for,1
for script_file in "$script_dir_path"/scripts/*
if,2
if [[ "$version_upgrade" == "true" ]]; then if [[ "$commit" == "true" ]]; then
git@github.com:apache/incubator-kie-optaplanner.git,41e24cc839b020b5b6a5abb55e6b4ce9f367b42a,incubator-kie-optaplanner,3157,./incubator-kie-optaplanner/build/optaplanner-distribution-internal/src/main/assembly/scripts/runExamples.sh
lines,52
function,0


for,0

if,2
if [ -f $JAVA_HOME/bin/java ]; then if [ $? != 0 ]; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/client-java-contrib/admissionreview/generate.sh
lines,9
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/client-java-contrib/generate.sh
lines,88
function,1

print_usage() {
for,1
for url in "${CRD_URLS[@]}"; do
if,3
if [[ ! -z $url ]]; then if [[ $(kubectl get $L -o jsonpath='{.status.conditions[?(@.type=="NonStructuralSchema")].status}') == "True" ]]; then if [[ $(kubectl get $L -o jsonpath='{.spec.preserveUnknownFields}') == "true" ]]; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/client-java-contrib/prometheus-operator/update.sh
lines,42
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/client-java-contrib/publish-gen-image.sh
lines,13
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/client-java-contrib/cert-manager/update.sh
lines,37
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/fluent-gen/generate.sh
lines,7
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/scripts/publish-crd-model-gen-image.sh
lines,9
function,0


for,0

if,0

git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/scripts/update-client.sh
lines,59
function,0


for,0

if,2
if ! which mvn > /dev/null 2>&1; then if [[ -z ${GEN_ROOT:-} ]]; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/.devcontainer/library-scripts/node-debian.sh
lines,50
function,0


for,0

if,4
if [ "$(id -u)" -ne 0 ]; then if [ "${NODE_VERSION}" = "none" ]; then if [ "${NODE_VERSION}" != "" ]; then echo -e "if [ \"\$(stat -c '%U' \$NVM_DIR)\" != \"${NONROOT_USER}\" ]; then\n\
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/.devcontainer/library-scripts/common-debian.sh
lines,123
function,0


for,0

if,11
if [ "$(id -u)" -ne 0 ]; then if [ "${USERNAME}" = "none" ] || [ "${USERNAME}" = "root" ]; then if [ "${UPGRADE_PACKAGES}" = "true" ]; then if [[ ! -z $(apt-cache --names-only search ^libssl1.1$) ]]; then if [ "$(echo "$LIBSSL" | grep -o 'libssl1\.0\.[0-9]:' | uniq | sort | wc -l)" -eq 0 ]; then if [[ ! -z $(apt-cache --names-only search ^libssl1.0.2$) ]]; then elif [[ ! -z $(apt-cache --names-only search ^libssl1.0.0$) ]]; then if id -u $USERNAME > /dev/null 2>&1; then if [ "$USER_GID" != "$(id -G $USERNAME)" ]; then if [ "$USER_UID" != "$(id -u $USERNAME)" ]; then if [ "$INSTALL_ZSH" = "true" ] && [ ! -d "/root/.oh-my-zsh" ]; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/examples/examples-release-17/createPod.sh
lines,26
function,0


for,0

if,1
if ! which minikube > /dev/null; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/examples/examples-release-18/createPod.sh
lines,26
function,0


for,0

if,1
if ! which minikube > /dev/null; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/examples/examples-release-19/createPod.sh
lines,26
function,0


for,0

if,1
if ! which minikube > /dev/null; then
git@github.com:kubernetes-client/java.git,fb950f4bdc3cd132f209645737ce2cde91676e52,java,3149,./java/examples/examples-release-16/createPod.sh
lines,26
function,0


for,0

if,1
if ! which minikube > /dev/null; then
git@github.com:danylovolokh/VideoPlayerManager.git,3f37564f9f33f37d441c73e6112d776c19161c21,VideoPlayerManager,3146,
git@github.com:LinShunKang/MyPerf4J.git,677cad40670ffd832794f747311b1a1aa0a50a01,MyPerf4J,3138,
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/tool/modify_license.sh
lines,204
function,7

remove_java_license(){ remove_scala_license(){ remove_xml_license(){ remove_js_license(){ remove_scss_license(){ remove_sh_license(){ remove_properties_license(){
for,11
-- find_bash.sh linkis output.txt outputbashcleaned.txt process_bash.py this work for additional information regarding copyright ownership.\ -- find_bash.sh linkis output.txt outputbashcleaned.txt process_bash.py See the License for the specific language governing permissions and\ ~ this work for additional information regarding copyright ownership.\ ~ See the License for the specific language governing permissions and\ for file in $files;do for file in $files;do for file in $files;do for file in $files;do for file in $files;do for file in $files;do for file in $files;do
if,7
if [[ $line_cnt -gt 1 ]];then if [[ $line_cnt -gt 1 ]];then if [[ $line_cnt -gt 1 ]];then if [[ $line_cnt -gt 1 ]];then if [[ $line_cnt -gt 1 ]];then if [[ $line_cnt -gt 1 ]] && [[ $line_cnt -lt 20 ]];then if [[ $line_cnt -gt 1 ]] && [[ $line_cnt -lt 20 ]];then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/tool/dependencies/regenerate_konwn_dependencies_txt.sh
lines,27
function,0


for,0

if,1
if [[ -d $dependencies_path ]];then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/docker/scripts/entry-point-ldh.sh
lines,66
function,0


for,0

if,1
if [ "$jar_files" == "0" ] ;then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/docker/scripts/make-linikis-image-with-mysql-jdbc.sh
lines,51
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/docker/scripts/prepare-ldh-image.sh
lines,66
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/docker/scripts/utils.sh
lines,40
function,1

download() {
for,0

if,1
if [ ! -f ${TAR_CACHE_ROOT}/${TAR_FILE} ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/login-pod.sh
lines,63
function,4

login() { login_ldh() { login_mysql() { login_kind(){
for,0

if,3
if [ "${COMPONENT_NAME}" == "ldh" ]; then elif [ "${COMPONENT_NAME}" == "mysql" ]; then elif [ "${COMPONENT_NAME}" == "kind" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/common.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/install-mysql.sh
lines,36
function,0


for,0

if,1
if [[ "X${USING_KIND}" == "Xtrue" ]]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/install-linkis.sh
lines,47
function,0


for,0

if,3
if [[ "X${HELM_DEBUG}" == "Xtrue" ]]; then if [[ "X${WITH_LDH}" == "Xtrue" ]]; then if [[ "X${USING_KIND}" == "Xtrue" ]]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/logs-pod.sh
lines,52
function,3

logs() { logs_ldh() { logs_mysql() {
for,0

if,2
if [ "${COMPONENT_NAME}" == "ldh" ]; then elif [ "${COMPONENT_NAME}" == "mysql" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/prepare-for-spark.sh
lines,50
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/install-ldh.sh
lines,44
function,0


for,0

if,2
if [[ "X${USING_KIND}" == "Xtrue" ]]; then if [[ "X${x}" == "X" ]]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/remote-debug-proxy.sh
lines,106
function,4

start_port_forward() { stop_port_forward() { start_port_forward_all() { stop_port_forward_all() {
for,2
echo "- starting port-forwad for [${component_name}] with mapping [local->${port_map}->pod] ..." echo "- stopping port-forward for [${component_name}] with mapping [local->${port_map}->pod] ..."
if,1
if [ "X$pid" != "X" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/install-charts-with-ldh.sh
lines,28
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/install-charts.sh
lines,26
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/create-kind-cluster.sh
lines,49
function,0


for,0

if,1
if [ "X${KIND_IMAGE_VERSION}" == "X" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/helm/scripts/remote-proxy.sh
lines,129
function,4

start_port_forward() { stop_port_forward() { start_port_forward_all() { stop_port_forward_all() {
for,2
echo "- starting port-forwad for [${component_name}] with mapping [local->${port_map}->pod] ..." echo "- stopping port-forward for [${component_name}] with mapping [local->${port_map}->pod] ..."
if,3
if [ "X$pid" != "X" ]; then if [ "${DEBUG}" == "true" ]; then if [ "${DEBUG}" == "true" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/admin/linkis-ec-clear.sh
lines,40
function,0


for,2
for userdir in `sudo ls $ENGINECONN_ROOT_PATH -F | grep '/$'` for ecdir in `sudo ls $ENGINECONN_ROOT_PATH$userdir -F | grep '/$'`
if,2
if [ "$userdir" != "engineConnPublickDir/" ];then if [ $modify_time_t -lt $end_date_t ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/clear-server.sh
lines,34
function,0


for,0

if,1
if [ "$dbType" == "mysql" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/linkis-stop-all.sh
lines,110
function,2
function stopApp(){ function stopEC(){
function stopApp(){ function stopEC(){
for,0

if,5
if [ "$LINKIS_HOME" = "" ]; then if [ "$LINKIS_CONF_DIR" = "" ]; then if test -z "$SERVER_IP" if [ "$is_ec_service" = "" ]; then if test -z "$SERVER_IP"
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/common.sh
lines,80
function,4
function isLocal(){ function executeCMD(){ function copyFile(){ function isSuccess(){
function isLocal(){ function executeCMD(){ function copyFile(){ function isSuccess(){
for,0

if,8
if [ "$1" == "127.0.0.1" ];then elif [ "$1" == "" ]; then elif [ "$1" == "localhost" ]; then elif [ "$1" == $local_host ]; then elif [ `echo "$ipaddr" | grep "^$1$" |wc -l` -gt 0 ]; then if [ $flag == "0" ];then if [ $flag == "0" ];then if [ $? -ne 0 ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/kill-ec-process-by-port.sh
lines,27
function,0


for,0

if,2
if [ "$LINKIS_HOME" = "" ] if [ "$pid" != "" ]
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/kill-process-by-pid.sh
lines,71
function,1
function kill_proc_by_pid() {
function kill_proc_by_pid() {
for,0

if,5
if [ "$LINKIS_HOME" = "" ]; then if [ "$LINKIS_LOG_DIR" = "" ]; then if [ -f '$killLogFile' ];then if [ "${killProcessPID}" != "${ecmPid}" ]; then if ps -p ${killProcessPID} > /dev/null; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/graceful-upgrade.sh
lines,111
function,3
function print_usage(){ function startApp(){ function getPort(){
function print_usage(){ function startApp(){ function getPort(){
for,0

if,6
if test -z "$SERVER_IP" if [ $ if [ "$LINKIS_HOME" = "" ]; then if [ "$LINKIS_CONF_DIR" = "" ]; then if [ "$SERVER_NAME" = "cg-entrance" ]; then if [ "$runningTaksNum" = "0" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/linkis-daemon.sh
lines,239
function,8
function print_usage(){ function setport() function setjvm() function start() function wait_for_server_to_die() { function stop() function restart()
function print_usage(){ function setport() function setjvm() function start() function wait_for_server_to_die() { function stop() function restart() status()
for,0

if,22
if [ $ if [ $ if [[ ${3} == *"debug"* ]]; then if [ $ if [[ ${3} == *"debug"* ]]; then if [ "$debug_port" != "" ]; then if [ "$pid" != "" ];then if [ "$jvm_num" != "" ]; then if [ "$LINKIS_HOME" = "" ]; then if [ "$LINKIS_CONF_DIR" = "" ]; then if [ "$LINKIS_PID_DIR" = "" ]; then if [ ! -w "$LINKIS_PID_DIR" ] ; then if [[ -f "${SERVER_PID}" ]]; then if kill -0 ${pid} >/dev/null 2>&1; then if [[ ! -f "${SERVER_START_BIN}" ]]; then if kill -0 ${pid} > /dev/null 2>&1; then if [[ forceKill -ne 0 ]]; then if [[ ! -f "${SERVER_PID}" ]]; then if [[ -z "${pid}" ]]; then if [[ ! -f "${SERVER_PID}" ]]; then if [[ -z "${pid}" ]]; then if [ $flag != 0 ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/linkis-start-all.sh
lines,165
function,2
function startApp(){ function checkServer() {
function startApp(){ function checkServer() {
for,0

if,5
if [ "$LINKIS_HOME" = "" ]; then if [ "$LINKIS_CONF_DIR" = "" ]; then if test -z "$SERVER_IP" if test -z "$SERVER_IP" if [ $? -ne 0 ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/package/sbin/kill-yarn-jobs.sh
lines,258
function,8
function check_status() { function try_kill() { function do_kill(){ function wait_kill_complete() { function do_kill_yarn_ids() { function timeout(){ function run_kill_with_timeout(){ function kill_by_pid() {
function check_status() { function try_kill() { function do_kill(){ function wait_kill_complete() { function do_kill_yarn_ids() { function timeout(){ function run_kill_with_timeout(){ function kill_by_pid() { sub_pid_list=`pstree -p ${pid} | awk -F "[()]" '{for(i=0;i<=NF;i++) if ($i~/^[0-9]+$/)print $i}'`
for,6
echo "`date '+%Y-%m-%d %H:%M:%S'` Successfully send kill to yarn for application id=${yarn_id}." for yarn_id in ${ids[@]} for yarn_id in ${ids[@]} for yarn_id in "${kill_sent[@]}" for yarn_id in ${ids[@]} for sub_pid in ${sub_pid_list[@]}; do
if,27
if [[ -d "$HADOOP_HOME" && -d $HADOOP_HOME ]]; then if [ ${exitcode} != "0" ];then if [ ${indicator} != "0" ]; then if [ -z "$status" ]; then if [ "${is_unfinish_state[${status}]}" = true ]; then elif [[ ${status} = $YARN_APP_STATUS_KILLED ]]; then if (( $exitcode != $ERR )) && (( $exitcode == $UNFIN )); then if (( ${exitcode} != 0 )) ; then if [ ${indicator0} != "0" ]; then elif [ ${indicator1} != "0" ];then if (( $num_done >= $num_all )); then if [[ ${kill_status[${yarn_id}]} = $FIN ]] || [[ ${kill_status[${yarn_id}]} = $NOTFOUND ]] || [[ ${kill_status[${yarn_id}]} = $KILLED ]]; then if [[ $exitcode = $KILLED ]] || [[ $exitcode = $FIN ]] || [[ $exitcode = $NOTFOUND ]]; then if (( $exitcode == $SENT )); then if (( $i != 0)); then if [[ ${kill_status[${yarn_id}]} == $KILLED ]]; then elif [[ ${kill_status[${yarn_id}]} == $FIN ]]; then elif [[ ${kill_status[${yarn_id}]} == $NOTFOUND ]]; then if [[ ${kill_status[${yarn_id}]} == $ERR ]];then if [ -z ${sleep_pid} ]; then if kill -0 ${sleep_pid} > /dev/null 2>&1; then if [ ${exit_code} -ne 0 ]; then if grep '^[[:digit:]]*$' <<< "$1" > /dev/null 2>&1;then sub_pid_list=`pstree -p ${pid} | awk -F "[()]" '{for(i=0;i<=NF;i++) if ($i~/^[0-9]+$/)print $i}'` if kill -0 ${pid} > /dev/null 2>&1; then if kill -0 ${pid} > /dev/null 2>&1; then if kill -0 ${sub_pid} > /dev/null 2>&1; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/deploy-config/db.sh
lines,35
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/deploy-config/linkis-env.sh
lines,179
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/bin/common.sh
lines,96
function,7
function isLocal(){ function executeCMD(){ function copyFile(){ function echoErrMsgAndExit() { function echoSuccessMsg() { function isSuccess(){ function isSuccessWithoutExit(){
function isLocal(){ function executeCMD(){ function copyFile(){ function echoErrMsgAndExit() { function echoSuccessMsg() { function isSuccess(){ function isSuccessWithoutExit(){
for,0

if,9
if [ "$1" == "127.0.0.1" ];then elif [ "$1" == "" ]; then elif [ "$1" == "localhost" ]; then elif [ "$1" == $local_host ]; then elif [ `echo "$ipaddr" | grep "^$1$" |wc -l` -gt 0 ]; then if [ $flag == "0" ];then if [ $flag == "0" ];then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/bin/install-linkis-to-kubernetes.sh
lines,232
function,18

debug(){ info(){ help() { pull(){ tag(){ make_linkis_image_with_mysql_jdbc(){ create_kind_cluster(){ install_mysql(){ install_ldh(){ install_linkis(){ display_pods(){ install(){ reset(){ check_docker(){ check_kind(){ check_kubectl(){ check_helm(){ main(){
for,0

if,17
if [ $DEBUG = true ]; then if [ $WITH_LDH = true ]; then if [ $WITH_LDH = true ]; then if [ $WITH_LDH = true ]; then if [ $WITH_LDH = true ];then if [ $USING_KIND = true ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $? -ne 0 ]; then if [ $USING_KIND = true ];then if [ $ if [ $COMMAND = "pull-install" ]; then if [ $COMMAND = "install" ]; then if [ $COMMAND = "pull" ]; then if [ $COMMAND = "reset" ]; then if [ $COMMAND = "help" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/bin/checkEnv.sh
lines,150
function,10
function checkPythonAndJava(){ function checkHdfs(){ function checkHive(){ function checkversion(){ function checkSpark(){ function check_service_port() {
say() { err() { function checkPythonAndJava(){ function checkHdfs(){ function checkHive(){ function checkversion(){ function checkSpark(){ function check_service_port() { check_cmd() { need_cmd() {
for,0

if,8
if [ -n "$result" ]; then if [[ '1' != "$idx" ]];then if [ "$pid" != "" ];then if ! check_cmd "$1"; then if [ "$portIsOccupy" = true ];then if [ "$ENABLE_SPARK" == "true" ]; then if [ "$ENABLE_HDFS" == "true" ]; then if [ "$ENABLE_HIVE" == "true" ]; then
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-dist/bin/install.sh
lines,577
function,0


for,1
echo "Operating system unknown, please tell us(submit issue) for better service"
if,58
if [[ "$OSTYPE" == "darwin"* ]]; then elif [[ "$OSTYPE" == "linux-gnu" ]]; then elif [[ "$OSTYPE" == "cygwin" ]]; then elif [[ "$OSTYPE" == "msys" ]]; then elif [[ "$OSTYPE" == "win32" ]]; then elif [[ "$OSTYPE" == "freebsd"* ]]; then if [[ 'postgresql' = "$dbType" ]];then if [ "$LINKIS_HOME" = "" ] if [ -d $LINKIS_HOME ] && [ "$LINKIS_HOME" != "$workDir" ];then if ! test -d ${LINKIS_PACKAGE}; then if [ $DEBUG_MODE != "true" ];then if [ "$WORKSPACE_USER_ROOT_PATH" != "" ] if [[ $WORKSPACE_USER_ROOT_PATH == file://* ]];then elif [[ $WORKSPACE_USER_ROOT_PATH == hdfs://* ]];then if [ "$HDFS_USER_ROOT_PATH" != "" ] if [[ $HDFS_USER_ROOT_PATH == file://* ]];then elif [[ $HDFS_USER_ROOT_PATH == hdfs://* ]];then if [ "$RESULT_SET_ROOT_PATH" != "" ] if [[ $RESULT_SET_ROOT_PATH == file://* ]];then elif [[ $RESULT_SET_ROOT_PATH == hdfs://* ]];then if [[ 'postgresql' = "$dbType" ]];then if [ $DEBUG_MODE != "true" ];then if [ "$YARN_RESTFUL_URL" != "" ] if [ "$HADOOP_VERSION" != "" ] if [ "$YARN_AUTH_ENABLE" != "" ] if [ "$YARN_KERBEROS_ENABLE" != "" ] if [ "$SPARK_VERSION" != "" ] if [ "$HIVE_VERSION" != "" ] if [ "$PYTHON_VERSION" != "" ] if [[ 'postgresql' = "$dbType" ]];then if [[ '2' = "$idx" ]];then elif [[ '1' = "$idx" ]];then if [[ '2' = "$PG_INSTALL_MODE" ]];then if [[ $? -ne 0 || $ddl_result =~ "ERROR" ]];then if [[ $? -ne 0 || $dml_result =~ "ERROR" ]];then if [[ '2' = "$idx" ]];then elif [[ '1' = "$idx" ]];then if [[ '2' = "$MYSQL_INSTALL_MODE" ]];then if [[ $? -ne 0 || $ddl_result =~ "ERROR" ]];then if [[ $? -ne 0 || $dml_result =~ "ERROR" ]];then if test -z "$EUREKA_INSTALL_IP" if test -z "$GATEWAY_INSTALL_IP" if [ "$EUREKA_PREFER_IP" == "true" ]; then if [[ 'postgresql' = "$dbType" ]];then if [ "true" == "$HADOOP_KERBEROS_ENABLE" ] if [ "$deployPwd" == "" ] if [ "$GATEWAY_PORT" != "" ] if [ "$MANAGER_PORT" != "" ] if test -z $ENGINECONN_ROOT_PATH if [ ! -d $ENGINECONN_ROOT_PATH ] ;then if [ "$ENGINECONNMANAGER_PORT" != "" ] if [ "$ENTRANCE_PORT" != "" ] if [ "$RESULT_SET_ROOT_PATH" != "" ] if [ "$PUBLICSERVICE_PORT" != "" ] if [ "$HIVE_META_URL" != "" ] if [ "$HIVE_META_USER" != "" ] if [ "$HIVE_META_PASSWORD" != "" ] if [ "true" == "$PROMETHEUS_ENABLE" ]
git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-web/config.sh
lines,24
function,0


for,0

if,0

git@github.com:apache/linkis.git,95f229a3a06de69c7b6383f35b684fea13811d82,linkis,3137,./linkis/linkis-web/install.sh
lines,242
function,2

checkPort(){ linkisConf(){ centos7(){ centos6(){
for,1
echo "Operating system unknown, please tell us(submit issue) for better service"
if,13
if [[ $input_port =~ $re ]] ; then if [[ "$OSTYPE" == "darwin"* ]]; then elif [[ "$OSTYPE" == "linux-gnu" ]]; then elif [[ "$OSTYPE" == "cygwin" ]]; then elif [[ "$OSTYPE" == "msys" ]]; then elif [[ "$OSTYPE" == "win32" ]]; then elif [[ "$OSTYPE" == "freebsd"* ]]; then if [ "$pid" != "" ];then if [ "$S_iptables" -gt "0" ];then if [ "$portIsOccupy" = true ];then if [ -e /var/run/nginx.pid ]; then if [[ $version -eq 6 ]]; then if [[ $version -eq 7 ]]; then
git@github.com:airbnb/native-navigation.git,9cf50bf9b751b40778f473f3b19fcfe2c4d40599,native-navigation,3134,./native-navigation/postinstall.sh
lines,4
function,0


for,0

if,0

git@github.com:hongyangAndroid/Highlight.git,681488714b58d676ac7ea3365d27da194dbbbe9b,Highlight,3132,
git@github.com:lukas-krecan/ShedLock.git,0af2b326e56b7d54498982780b25405af6eb28a5,ShedLock,3131,
git@github.com:JabRef/jabref.git,be45124d01a9f1a7160aa97463daed1a61d4d3e4,jabref,3127,./jabref/src/main/resources/icons/svg2icns.sh
lines,30
function,0


for,2
for SVG in "$@"; do for PARAMS in $SIZES; do
if,0

git@github.com:JabRef/jabref.git,be45124d01a9f1a7160aa97463daed1a61d4d3e4,jabref,3127,./jabref/scripts/after-failure.sh
lines,23
function,0


for,1
for file in $FILES; do
if,3
if [ -z "$ROOTDIR" ]; then if [ -n "$FILES" ]; then if [ -f "$file" ]; then
git@github.com:requery/requery.git,7ff49330f3b20b7d2bedba6457b18134a7bdbef8,requery,3127,
git@github.com:AxonFramework/AxonFramework.git,5547ff40af89860af4fda6370e8c3023bf3813a1,AxonFramework,3119,
git@github.com:mxdldev/android-mvp-mvvm-flytour.git,97700aa89f0abe91c14c84463c3783e1b7b2e0bb,android-mvp-mvvm-flytour,3118,
git@github.com:hitherejoe/animate.git,6657db7daedb3aed7fe107f72577b7aabf6b1818,animate,3117,
git@github.com:lihangleo2/ShadowLayout.git,84b79f18feca95ddc05141ffee6780a8f74ff6fb,ShadowLayout,3112,
git@github.com:cSploit/android.git,3679ca5b40e687c8618d9b9fa58f50164e8168e5,android,3109,./android/nightly-build.sh
lines,81
function,2

die() { jni_die() {
for,1
echo -n -e "${RED}See $LOG_DIR/$DATE.log for more info\n${RESET}\n"
if,4
if [ ! -d "${LOG_DIR}" ]; then if [ -z "${NIGHTLIES_OUT_DIR}" ]; then if [ ! -d "${NIGHTLIES_OUT_DIR}" ]; then if [ -n "${PREVIOUS_COMMIT}" -a "${PREVIOUS_COMMIT}" == "${LAST_COMMIT}" ]; then
git@github.com:cSploit/android.git,3679ca5b40e687c8618d9b9fa58f50164e8168e5,android,3109,./android/setup-cronjob.sh
lines,27
function,0


for,0

if,1
if [ -f "${DIR}/cronjob.txt" ]; then
git@github.com:coderbruis/JavaSourceCodeLearning.git,a892201439d38587dea8b65266324c4cd2b394d3,JavaSourceCodeLearning,3108,
git@github.com:mbechler/marshalsec.git,9660973a779d9827a6c28f4b694fd7f49c39d4ed,marshalsec,3107,
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/wait-for-services.sh
lines,3
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/publish-docker-images.sh
lines,28
function,1
function tagAndPush() {
function tagAndPush() {
for,1
for image in $IMAGES ; do
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/mysql-cli.sh
lines,6
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/wait-for-mysql.sh
lines,7
function,0


for,1
echo sleeping for mysql
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/run-graphql-api-gateway-tests.sh
lines,26
function,0


for,0

if,3
if which npm ; then if [ ! -d node_modules ] ; then if which tsc ; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/build-and-restart-service.sh
lines,11
function,0


for,1
for SN in $* ; do
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/.circleci/upgrade-docker-compose.sh
lines,7
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/.circleci/setenv-circle-ci.sh
lines,5
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/.circleci/generate-config.sh
lines,20
function,0


for,1
for build_script in build-and-test-all*.sh ; do
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/initialize-dynamodb.sh
lines,7
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/_wait-for-services.sh
lines,33
function,0


for,1
for port in $ports; do
if,2
if [[ "$?" -eq "0" ]]; then if [[ "$done" = true ]]; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/open-swagger-uis.sh
lines,6
function,0


for,1
for port in 8081 8084 8082 ; do
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/show-swagger-ui-urls.sh
lines,11
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/dynamodblocal/build-docker.sh
lines,1
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-deploy-and-test.sh
lines,9
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-delete-all.sh
lines,3
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-delete-volumes.sh
lines,4
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-run-end-to-end-tests.sh
lines,9
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-kill-port-forwarding.sh
lines,7
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-deploy-all.sh
lines,9
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/port-forwards.sh
lines,28
function,1

doforward() {
for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/scripts/kubernetes-wait-for-ready-pods.sh
lines,23
function,0


for,1
for pod in $pods; do
if,2
if [[ "$outcome" == "true" ]]; then if [[ "$done" = true ]]; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/deployment/kubernetes/misc/create-db-secret.sh
lines,2
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/mysql/compile-schema-per-service.sh
lines,14
function,0


for,1
for schema in ftgo_accounting_service ftgo_consumer_service ftgo_order_service ftgo_kitchen_service ftgo_restaurant_service ftgo_delivery_service;
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/run-end-to-end-tests.sh
lines,3
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/set-env.sh
lines,16
function,0


for,0

if,3
if [ -z "$DOCKER_HOST_IP" ] ; then if [ ! -z "$DOCKER_HOST" ] ; then if [ -z "$DOCKER_HOST_IP" ] ; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/build-and-test-all.sh
lines,81
function,0


for,0

if,3
if [ -z "$USE_EXISTING_CONTAINERS" ] ; then if [ -z "$ASSEMBLE_ONLY" ] ; then if [ -z "$KEEP_RUNNING" ] ; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/dynamodblocal-init/create-dynamodb-tables.sh
lines,18
function,0


for,0

if,1
if aws dynamodb --region us-west-1 --endpoint-url ${AWS_DYNAMODB_ENDPOINT_URL?} describe-table --table-name ftgo-order-history ; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/dynamodblocal-init/build-docker.sh
lines,3
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/dynamodblocal-init/wait-for-dynamodblocal.sh
lines,19
function,0


for,0

if,2
if [[ "$?" -eq "0" ]]; then if [[ "$done" = true ]]; then
git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/dynamodblocal-init/run-docker.sh
lines,3
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/start-services.sh
lines,11
function,0


for,1
echo -n waiting for the services to start...
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/start-infrastructure-services.sh
lines,7
function,0


for,0

if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/truncate-table.sh
lines,29
function,0


for,1
for key in $ALL_KEYS;do
if,0

git@github.com:microservices-patterns/ftgo-application.git,558dfc53b11d30a5f1d995c0c6d58d5106c28189,ftgo-application,3105,./ftgo-application/scan-order-history-view.sh
lines,5
function,0


for,0

if,0

git@github.com:mplushnikov/lombok-intellij-plugin.git,272ace7f284085d36a5dc78daa2bf58fd31f2488,lombok-intellij-plugin,3104,
git@github.com:zhou-you/RxEasyHttp.git,58195ab2b3bb23ee1cc320bc62f6b7ed6c06a8c2,RxEasyHttp,3104,
git@github.com:Marswin/MarsDaemon.git,dd04983a389d5db73e18849d8c48a5610cc1e27a,MarsDaemon,3097,
git@github.com:zaaach/CityPicker.git,1fb325bb0e978f2a88a3af7c6a39a785bf69e9a0,CityPicker,3095,
git@github.com:wix/react-native-notifications.git,bffb31fb0d1392f51c6d363917f3ad03323b2490,react-native-notifications,3088,./react-native-notifications/scripts/install.android.sh
lines,39
function,0


for,0

if,1
if [ -z "$ZZ_BITRISE" ]; then
git@github.com:wix/react-native-notifications.git,bffb31fb0d1392f51c6d363917f3ad03323b2490,react-native-notifications,3088,./react-native-notifications/scripts/install.ios.sh
lines,11
function,0


for,0

if,0

git@github.com:wix/react-native-notifications.git,bffb31fb0d1392f51c6d363917f3ad03323b2490,react-native-notifications,3088,./react-native-notifications/scripts/install.sh
lines,5
function,0


for,0

if,0

git@github.com:florent37/ShapeOfView.git,a42debe4958a88cc3cce849dfc83ea11cb4531e9,ShapeOfView,3083,./ShapeOfView/publish.sh
lines,2
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/kvm/src/main/native/linux_build.sh
lines,8
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/unicorn2/src/main/native/windows_build.sh
lines,13
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/unicorn2/src/main/native/osx_build_arm64.sh
lines,11
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/unicorn2/src/main/native/osx_build.sh
lines,11
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/unicorn2/src/main/native/linux_build.sh
lines,13
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/hypervisor/src/main/native/hypervisor/osx_build.sh
lines,8
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/test/native/dynarmic/build.sh
lines,5
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/main/native/dynarmic/windows_build.sh
lines,12
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/main/native/dynarmic/osx_build_arm64.sh
lines,13
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/main/native/dynarmic/osx_build.sh
lines,12
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/main/native/dynarmic/osx_build_master.sh
lines,13
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/backend/dynarmic/src/main/native/dynarmic/linux_build.sh
lines,9
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/test.sh
lines,2
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-android/src/test/native/android/build.sh
lines,6
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-android/pull.sh
lines,31
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/test/native/build.sh
lines,10
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/test/resources/native/swift/build.sh
lines,8
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/test/resources/native/macos/build.sh
lines,5
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/build.sh
lines,30
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/hook/build.sh
lines,10
function,0


for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/Frameworks/build.sh
lines,118
function,3
function build_framework() { function build_CoreGraphics() { function build_UIKit() {
function build_framework() { function build_CoreGraphics() { function build_UIKit() {
for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/Frameworks/build_mac.sh
lines,54
function,4
function build_framework() { function build_framework_version_a() { function build_CoreGraphics() { function build_UIKit() {
function build_framework() { function build_framework_version_a() { function build_CoreGraphics() { function build_UIKit() {
for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/Frameworks/build_single.sh
lines,41
function,3
function build_framework() { function build_CoreGraphics() { function build_UIKit() {
function build_framework() { function build_CoreGraphics() { function build_UIKit() {
for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/src/main/native/ios/PrivateFrameworks/build.sh
lines,15
function,1
function build_framework() {
function build_framework() {
for,0

if,0

git@github.com:zhkl0228/unidbg.git,f1ed0d60e755177abdea84b99c0e0ebf7a31d557,unidbg,3079,./unidbg/unidbg-ios/kaitai_struct_compile_java.sh
lines,2
function,0


for,0

if,0

git@github.com:mmin18/RealtimeBlurView.git,82df3520b4b377313ea17f27ee54a0410be077ad,RealtimeBlurView,3059,
git@github.com:gabrielemariotti/RecyclerViewItemAnimators.git,1a94e4e69217be8711c12edb6004163b169c00a1,RecyclerViewItemAnimators,3053,
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/updateYACY.sh
lines,20
function,0


for,2
for N in lib/*.jar; do CLASSPATH="$CLASSPATH$N:"; done for N in libx/*.jar; do CLASSPATH="$CLASSPATH$N:"; done
if,2
if [ -x `which wget` ] elif [ -x `which java` ]
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/fixMacBuild.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/thumbnail.sh
lines,10
function,0


for,0

if,1
if [ -e "${2%.png}"-0.png ];then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/snap/snapStopYACY.sh
lines,8
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/snap/snapStartYACY.sh
lines,44
function,0


for,0

if,5
if [ "$DATA_VERSIONED" = "false" ]; then if [ ! -d "$YACY_PARENT_DATA_PATH/DATA" ] && [ -d "$SNAP_USER_DATA/DATA" ]; then if [ -f "$SNAP_USER_DATA/DATA/yacy.running" ]; then if [ ! -d "$YACY_PARENT_DATA_PATH/DATA" ] && [ -d "$SNAP_USER_COMMON/DATA" ]; then if [ -f "$SNAP_USER_COMMON/DATA/yacy.running" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/snap/snapPasswd.sh
lines,8
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/snap/exportYacyDataPath.sh
lines,11
function,0


for,0

if,1
if [ "$DATA_VERSIONED" = "false" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/addon/YaCy.app/Contents/MacOS/startYACYMacOS.sh
lines,8
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/stopYACY.sh
lines,36
function,0


for,0

if,3
if [ -z "$YACY_DATA_PATH" ]; then if [ ! -d "$YACY_DATA_PATH" ]; then if [ ! -f "$YACY_DATA_PATH/yacy.running" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/restartYACY.sh
lines,53
function,0


for,0

if,3
if [ -z "$YACY_DATA_PATH" ]; then if [ ! -d "$YACY_DATA_PATH" ]; then if [ ! -f "$YACY_DATA_PATH/yacy.running" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/startYACY.sh
lines,270
function,1

usage() {
for,5
startscript for YaCy on UNIX-like systems -g, --gui start a gui for YaCy for option in $options;do for N in lib/*.jar; do CLASSPATH="$CLASSPATH$N:"; done echo "** GET HELP for YaCy: join our community at https://community.searchlab.eu **"
if,32
if [ $OS = "SunOS" ] if [ ! -x "$JAVA" ] if [ $(echo $@ | grep -o "\-\-" | wc -l) -ne 0 ] if [ $? -ne 0 ];then if [ $isparameter -ne 1 ];then if [ $DEBUG -eq 1 ];then if [ $FOREGROUND -eq 1 ];then if [ $LOGGING -eq 1 ];then if [ $LOGGING -eq 1 ];then if [ $option = "--" ];then if [ $parameter ];then if [ ! -z "$parameter" ] && [ "$STARTUP" -eq 1 -o "$GUI" -eq 1 ]; then if [ ! "`echo $YACY_PARENT_DATA_PATH | cut -c1`" = "/" ]; then if [ $OS = "Linux" ] if [ -n "$HUGEPAGESTOTAL" ] && [ $HUGEPAGESTOTAL -ne 0 ] elif [ $OS = "SunOS" ] if [ $ENABLEHUGEPAGES -eq 1 ] if [ -n "`uname -m | grep 64`" ]; then JAVA_ARGS="$JAVA_ARGS -Dsolr.directoryFactory=solr.MMapDirectoryFactory"; fi if [ -f "$CONFIGFILE" ] if [ -z "$YACY_JAVASTART_XMX" ] if [ -n "$j" ]; then JAVA_ARGS="-$j $JAVA_ARGS"; fi; if [ -n "$j" ]; then JAVA="nice -n $j $JAVA"; fi; if [ -z "$PORT" ]; then PORT="8090"; fi; if [ $STARTUP -eq 1 ] elif [ $GUI -eq 1 ];then if [ $DEBUG -eq 1 ] elif [ $FOREGROUND -eq 1 ];then elif [ $LOGGING -eq 1 ];then if [ $PRINTONLY -eq 1 ];then if [ $DEBUG -eq 1 ] elif [ $FOREGROUND -eq 1 ];then if [ "$TAILLOG" -eq "1" -a ! "$DEBUG" -eq "1" ];then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/checkalive.sh
lines,21
function,0


for,0

if,2
if [ `./apicall.sh /Status.html | grep "</html>"` ]; then if [ $FLAG -eq '0' ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/clearall.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/clearapi.sh
lines,2
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/deleteurl.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/protectedPostApiCall.sh
lines,81
function,0


for,2
read -p "Enter host password for user '$admin':" YACY_ADMIN_PASSWORD read -p "Enter host password for user '$admin':" YACY_ADMIN_PASSWORD
if,7
if grep "<auth-method>BASIC</auth-method>" "$YACY_APP_PATH/defaults/web.xml" > /dev/null; then if which curl > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then if [ -z "$YACY_ADMIN_PASSWORD" ]; then elif which wget > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then if [ -z "$YACY_ADMIN_PASSWORD" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/searchtestmulti.sh
lines,22
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/indexrestore.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/addrss.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/apicat.sh
lines,56
function,0


for,0

if,7
if grep "<auth-method>BASIC</auth-method>" "$YACY_APP_PATH/defaults/web.xml" > /dev/null; then if which curl > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then elif [ -n "$YACY_ADMIN_PASSWORD" ]; then elif which wget > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then elif [ -n "$YACY_ADMIN_PASSWORD" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/down.sh
lines,19
function,0


for,0

if,3
if [ -z "$1" ]; then if which curl > /dev/null; then elif which wget > /dev/null; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/up.sh
lines,19
function,0


for,0

if,3
if [ -z "$1" ]; then if which curl > /dev/null; then elif which wget > /dev/null; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/searchall1.sh
lines,13
function,0


for,1
for address in `./up.sh $1`;
if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/myip.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/apicall.sh
lines,55
function,0


for,0

if,6
if which curl > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then elif [ -n "$YACY_ADMIN_PASSWORD" ]; then elif which wget > /dev/null; then if [ "$adminAccountForLocalhost" = "true" ]; then elif [ -n "$YACY_ADMIN_PASSWORD" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/search1.sh
lines,33
function,0


for,0

if,2
if which curl > /dev/null; then elif which wget > /dev/null; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/checkConfFile.sh
lines,7
function,0


for,0

if,1
if [ ! -f "$YACY_DATA_PATH/SETTINGS/yacy.conf" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/importOAIList.sh
lines,9
function,0


for,1
for N in `cat $1`; do
if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/search.sh
lines,6
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/passwd.sh
lines,57
function,0


for,3
printf "Please enter the new password for user '$YACY_ADMIN_USER_NAME' :" echo "Password successfully changed for User Name '$YACY_ADMIN_USER_NAME'.") || \ echo "Password successfully changed for User Name '$YACY_ADMIN_USER_NAME'.") || \
if,6
if [ -z "$YACY_ADMIN_USER_NAME" ]; then if [ -z "$YACY_ADMIN_REALM" ]; then if [ -z "$1" ]; then if [ ${ if [ -f "$YACY_DATA_PATH/yacy.running" ]; then if [ -z "$B64MD5" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/dumpcheck.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/checkindex.sh
lines,12
function,0


for,1
for i in "$YACY_DATA_PATH/INDEX"/* ; do
if,1
if [ -d "$i" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/checkDataFolder.sh
lines,16
function,0


for,0

if,2
if [ -z "$YACY_DATA_PATH" ]; then if [ ! -d "$YACY_DATA_PATH" ]; then
git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/clearindex.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/searchtest.sh
lines,13
function,0


for,2
for N in `cat $1`; do echo search for $N:
if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/importurllist.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/importmediawiki.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/searchall.sh
lines,9
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/deploy.sh
lines,15
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/indexdump.sh
lines,2
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/graphicstest.sh
lines,10
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/bin/clearcache.sh
lines,3
function,0


for,0

if,0

git@github.com:yacy/yacy_search_server.git,03bf259601016676910f1756d82531657ce9cade,yacy_search_server,3049,./yacy_search_server/killYACY.sh
lines,15
function,0


for,0

if,0

git@github.com:00-Evan/shattered-pixel-dungeon.git,ef4ff6ae84c230798ef080d2b268d20feb0e8928,shattered-pixel-dungeon,3043,./shattered-pixel-dungeon/desktop/notarize.sh
lines,67
function,0


for,2
for JAR in *.jar; do for LIB in `find . -name '*.dylib'`; do
if,0

git@github.com:yarolegovich/SlidingRootNav.git,331e2aaa6c72933bfd0401b026efe2761c1a9c00,SlidingRootNav,3040,
git@github.com:xmuSistone/ViewpagerTransition.git,fa92d8296dbf22e4daef0fd2de7b35a587625ed9,ViewpagerTransition,3039,
git@github.com:sofastack/sofa-jarslink.git,c84f885fda4a1d53345ae37606214e0805b002d8,sofa-jarslink,3038,./sofa-jarslink/change_version.sh
lines,34
function,0


for,2
for filename in `find . -name "pom.xml" -mindepth 2`;do for filename in `find . -name "README*.md"`;do
if,2
if [ ! -n "$1" ] ;then if [ `uname` == "Darwin" ] ;then
git@github.com:sofastack/sofa-jarslink.git,c84f885fda4a1d53345ae37606214e0805b002d8,sofa-jarslink,3038,./sofa-jarslink/check_format.sh
lines,11
function,0


for,0

if,1
if [ -n "$(git status --untracked-files=no --porcelain)" ]; then
git@github.com:JackyAndroid/AndroidChromium.git,337687c3d475960c00d57f2c72719b47d6ce9011,AndroidChromium,3038,
git@github.com:KeepSafe/dexcount-gradle-plugin.git,931fc5d047055987a906a5bfd5a38f067066938e,dexcount-gradle-plugin,3037,
git@github.com:alibaba/fastjson2.git,87290239619603476165637989ff00bcf903bd67,fastjson2,3036,
git@github.com:jgilfelt/android-viewbadger.git,e08c3a78cb92c0c8587790b15e73434f972912cf,android-viewbadger,3025,
git@github.com:rom1v/sndcpy.git,92f5f47ca49187e30bfb0473771f3a913b4812ab,sndcpy,3021,./sndcpy/release.sh
lines,10
function,0


for,0

if,0

git@github.com:googlesamples/mlkit.git,a281981de71c9edd31ad8d5a37cd687a5d6712b9,mlkit,3020,
git@github.com:ZieIony/Carbon.git,95a94bacdbad092e6a49b3e0aee09c7eaf04cdb7,Carbon,3020,
git@github.com:tchiotludo/akhq.git,24886b8d575c728f61e3785b5f25b0da7a2673ba,akhq,3018,./akhq/docker/usr/local/bin/docker-entrypoint.sh
lines,9
function,0


for,0

if,1
if [ "${AKHQ_CONFIGURATION}" ]; then
git@github.com:tchiotludo/akhq.git,24886b8d575c728f61e3785b5f25b0da7a2673ba,akhq,3018,./akhq/src/test/resources/protobuf_proto/generate-java-classes.sh
lines,7
function,0


for,0

if,0

git@github.com:tchiotludo/akhq.git,24886b8d575c728f61e3785b5f25b0da7a2673ba,akhq,3018,./akhq/src/test/resources/protobuf_proto/generate-descriptor-file.sh
lines,4
function,0


for,0

if,0

git@github.com:szerhusenBC/jwt-spring-security-demo.git,dcf718c67c0d403f78ee390c23715c3f5e6f5f4c,jwt-spring-security-demo,3016,
git@github.com:keyboardsurfer/Crouton.git,7806b15e4d52793e1f5aeaa4a55b1e220289e619,Crouton,3016,
git@github.com:yusugomori/DeepLearning.git,739dfd1d7919c328e0d3b8129855c2ad71b80036,DeepLearning,3015,
git@github.com:dmytrodanylyk/android-process-button.git,c08f374da24538b66f38b894b89d5d12f1df6d3d,android-process-button,3009,
git@github.com:jd-alexander/LikeButton.git,42cc1ec18c72bd3b3efa7e7620fb073b2926ab0e,LikeButton,3008,
git@github.com:bastillion-io/Bastillion.git,a52e25febf8cdb1ac232ae2b6cb1dfad1bd026bb,Bastillion,3007,
git@github.com:yui/yuicompressor.git,cf0497e53fffe4ddbd50e71518c40e0c07d120de,yuicompressor,3006,./yuicompressor/tests/suite.sh
lines,49
function,1

runtest () {
for,0

if,1
if [ "$expected" == "$actual" ]; then
git@github.com:dunwu/javacore.git,8cbfa11a9c7a51ea14511b803d272affc3fbee9c,javacore,3003,./javacore/scripts/version.sh
lines,6
function,0


for,0

if,0

git@github.com:dunwu/javacore.git,8cbfa11a9c7a51ea14511b803d272affc3fbee9c,javacore,3003,./javacore/scripts/deploy.sh
lines,46
function,0


for,0

if,1
if [[ ${GITHUB_TOKEN} && ${GITEE_TOKEN} ]]; then
git@github.com:apache/curator.git,2a94b2d7971bf47c2c12554bcd4c2e95581f607a,curator,3002,
git@github.com:JackyAndroid/AndroidTVLauncher.git,aa20c0a53da7faedd6e20b6bb10f5933a6fdcdd6,AndroidTVLauncher,2999,
git@github.com:pedrovgs/DraggablePanel.git,6b6d1806fa4140113f31307a2571bf02435aa53a,DraggablePanel,2996,
git@github.com:wenbochang888/house.git,955d3c044fe50128688a1bacd00ffa585963dd5a,house,2993,
git@github.com:facebookarchive/react-native-fbsdk.git,b8ed568b05f3e41e6d6b937ae3125492f95e60bf,react-native-fbsdk,2991,
git@github.com:ltsopensource/light-task-scheduler.git,b61e6ae4320d5bf63d803ed0ccc33894d854539b,light-task-scheduler,2988,./light-task-scheduler/build.sh
lines,34
function,0


for,0

if,0

git@github.com:ltsopensource/light-task-scheduler.git,b61e6ae4320d5bf63d803ed0ccc33894d854539b,light-task-scheduler,2988,./light-task-scheduler/lts-startup/src/main/resources/bin/lts-admin.sh
lines,81
function,0


for,1
for i in "$LTS_ADMIN_HOME"/../war/jetty/lib/*.jar
if,6
if [ "$JAVA_HOME" != "" ]; then if [ -f "$LTS_PID_FILE" ]; then if kill -0 `cat "$LTS_PID_FILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if /bin/echo -n $! > "$LTS_PID_FILE" if [ ! -f "$LTS_PID_FILE" ]
git@github.com:ltsopensource/light-task-scheduler.git,b61e6ae4320d5bf63d803ed0ccc33894d854539b,light-task-scheduler,2988,./light-task-scheduler/lts-startup/src/main/resources/bin/lts-monitor.sh
lines,90
function,0


for,1
for i in "$LTS_MONITOR_HOME"/../lib/*.jar
if,6
if [ "$JAVA_HOME" != "" ]; then if [ -f "$LTS_PID_FILE" ]; then if kill -0 `cat "$LTS_PID_FILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if /bin/echo -n $! > "$LTS_PID_FILE" if [ ! -f "$LTS_PID_FILE" ]
git@github.com:ltsopensource/light-task-scheduler.git,b61e6ae4320d5bf63d803ed0ccc33894d854539b,light-task-scheduler,2988,./light-task-scheduler/lts-startup/src/main/resources/bin/jobtracker.sh
lines,89
function,0


for,1
for i in "$JOB_TRACKER_HOME"/../lib/*.jar
if,6
if [ "$JAVA_HOME" != "" ]; then if [ -f "$LTS_PID_FILE" ]; then if kill -0 `cat "$LTS_PID_FILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if /bin/echo -n $! > "$LTS_PID_FILE" if [ ! -f "$LTS_PID_FILE" ]
git@github.com:ltsopensource/light-task-scheduler.git,b61e6ae4320d5bf63d803ed0ccc33894d854539b,light-task-scheduler,2988,./light-task-scheduler/lts-startup/src/main/resources/bin/tasktracker.sh
lines,87
function,0


for,1
for i in "$TASK_TRACKER_HOME"/lib/*.jar
if,6
if [ "$JAVA_HOME" != "" ]; then if [ -f "$LTS_PID_FILE" ]; then if kill -0 `cat "$LTS_PID_FILE"` > /dev/null 2>&1; then if [ $? -eq 0 ] if /bin/echo -n $! > "$LTS_PID_FILE" if [ ! -f "$LTS_PID_FILE" ]
git@github.com:oblador/react-native-keychain.git,00eb5c6de2650fdb2c3a66c87d35fccc83f55347,react-native-keychain,2979,./react-native-keychain/KeychainExample/android/keystores/create_local_release_flavor_key.sh
lines,90
function,0


for,1
echo [2/$STEPS] generating new secured storepass and keypass for keystore
if,7
if [[ $ if [ ! -f $KEYSTORE ]; then if [[ "$2" == "--force" ]]; then echo " delete file $KEYSTORE and run the script again, if you want to re-generate it." if [ ! -f $JDK/keytool ]; then if [[ "debug" == "${flavor}" ]]; then if [[ "debug" != "${flavor}" ]]; then
git@github.com:lovetuzitong/MultiImageSelector.git,bed718f773a637d6f3c6e6bd8ac316cd03404b8f,MultiImageSelector,2970,
git@github.com:PlexPt/chatgpt-java.git,c3f9ae16386d7df61f49abab970340d08a5b055b,chatgpt-java,2970,
git@github.com:bytedance/ByteX.git,90979d010d5af56e44566a12b827f1f46a38bd4f,ByteX,2968,./ByteX/publish.sh
lines,50
function,0


for,0

if,1
if [[ "$upload2JCenter" == "true" ]]; then
git@github.com:jasonross/Nuwa.git,750c6394036b50734546443b3359c57327565a62,Nuwa,2964,
git@github.com:stephanenicolas/robospice.git,8bffde88b3534a961a13cab72a8f07a755f0a0fe,robospice,2957,
git@github.com:bmelnychuk/AndroidTreeView.git,5850dc8252b94e3ce9c5f2a375dea57683b326a1,AndroidTreeView,2957,
git@github.com:novicezk/midjourney-proxy.git,69f6d3da917006b67a84bd8a3189e6d55e833d90,midjourney-proxy,2950,./midjourney-proxy/docker/build-manifest.sh
lines,20
function,0


for,0

if,1
if [ $
git@github.com:novicezk/midjourney-proxy.git,69f6d3da917006b67a84bd8a3189e6d55e833d90,midjourney-proxy,2950,./midjourney-proxy/docker/build-image.sh
lines,33
function,0


for,0

if,3
if [ $ if [ $ if [ $JAR_FILE_COUNT == 0 ]; then
git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/launchUI.sh
lines,21
function,0


for,0

if,2
if [ "$JAVA_HOME" = '' ]; then if [ "$unamestr" = 'Darwin' ]; then
git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/jarScan.sh
lines,53
function,0


for,0

if,2
if [ "$JAVA_HOME" = '' ]; then if [ "$unamestr" = 'Darwin' ]; then
git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/showLines.sh
lines,4
function,0


for,0

if,0

git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/launchHeadless.sh
lines,15
function,0


for,0

if,2
if [ "$JAVA_HOME" = '' ]; then if [ "$unamestr" = 'Darwin' ]; then
git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/histoPlotter.sh
lines,21
function,0


for,0

if,2
if [ "$JAVA_HOME" = '' ]; then if [ "$unamestr" = 'Darwin' ]; then
git@github.com:AdoptOpenJDK/jitwatch.git,afd1dc9717df101f78e9240cab77d6c4e93490cd,jitwatch,2940,./jitwatch/scripts/makeDemoLogFile.sh
lines,76
function,0


for,0

if,2
if [ "$JAVA_HOME" = '' ]; then if [ "$unamestr" = 'Darwin' ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/groupDefs.sh
lines,21
function,0


for,0

if,0

git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/integration/manualmode/src/test/resources/ejb3/ssl/generate.sh
lines,25
function,0


for,0

if,0

git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/integration/microprofile-tck/certification/microprofile-certification.sh
lines,156
function,6

is_defined() { sum_header_parameter() { parse_testsuite_header() { parse_testcases() { translate_to_spec_name() { parse_test_results() {
for,2
result=$(for file in $(find ./*); do (grep "<testsuite " $file || true) | sed "s/.*$parameter=\"//" | sed "s/\".*//"; done | awk '{s+=$1} END {print s}') for file in $(find ./*); do
if,2
if [ -z "${var}" ]; then if [ ! -z "${MAVEN_REPO_LOCAL:-}" ]
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/galleon/update/run-test.sh
lines,48
function,0


for,0

if,4
if [ -z "${WF_BASE_VERSION}" ]; then if [ -z "${WILDFLY_PRODUCER}" ]; then if [ -z "${BASE_DIR}" ]; then if [ -z "${MAVEN_LOCAL_REPO}" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/tools/runSummary.sh
lines,20
function,0


for,0

if,0

git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/tools/showLogs.sh
lines,28
function,0


for,0

if,1
if [ "" == "$LOGS" ] ; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/testsuite/tools/checkMissedTests.sh
lines,68
function,4
function main { function all { function module { function usage {

for,4
for NAME in `find testsuite -name '*TestCase.java' | sort` ; do echo $NAME | sed "s for NAME in `find testsuite -name '*TestCase.xml' -or -name '*TestCase-*.xml' | sort` ; do echo $NAME | sed "s for NAME in `find . -name '*TestCase.java' | sort` ; do echo $NAME | sed "s for NAME in `find . -name '*TestCase.xml' | sort` ; do echo $NAME | sed "s
if,3
if [ "$MODULE" == "" ] ; then if cd $scriptDir/../$MODULE/src/test/java/ ; then if cd $scriptDir/../$MODULE/target/surefire-reports/ ; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/build.sh
lines,167
function,4

die() { warn() { source_if_exists() { main() {
for,2
for file in $*; do for param in "$@" ; do
if,8
if [ -f "$file" ]; then if [ $cygwin = "false" ]; then if MAX_FD_LIMIT=`ulimit -H -n`; then if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ]; then if ! ulimit -n $MAX_FD; then if [ -f "$MVN_SETTINGS_XML_DEFAULT" ]; then if [ -z "$MVN_GOAL" ]; then MVN_GOAL="install"; fi if [ "x$MVN_DEBUG" != "x" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/src/main/resources/content/bin/wsprovide.sh
lines,104
function,0


for,0

if,10
if expr "$link" : '/.*' > /dev/null; then if $cygwin ; then if [ "x$JBOSS_HOME" = "x" ]; then if [ "$RESOLVED_JBOSS_HOME" != "$SANITIZED_JBOSS_HOME" ]; then if [ "x$JAVA" = "x" ]; then if [ "x$JAVA_HOME" != "x" ]; then if $cygwin; then if [ "x$JBOSS_MODULEPATH" = "x" ]; then if [ "x$SECURITY_MANAGER_SET" != "x" ]; then if [ "$SECMGR" = "true" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/src/main/resources/content/bin/wsconsume.sh
lines,104
function,0


for,0

if,10
if expr "$link" : '/.*' > /dev/null; then if $cygwin ; then if [ "x$JBOSS_HOME" = "x" ]; then if [ "$RESOLVED_JBOSS_HOME" != "$SANITIZED_JBOSS_HOME" ]; then if [ "x$JAVA" = "x" ]; then if [ "x$JAVA_HOME" != "x" ]; then if $cygwin; then if [ "x$JBOSS_MODULEPATH" = "x" ]; then if [ "x$SECURITY_MANAGER_SET" != "x" ]; then if [ "$SECMGR" = "true" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/src/main/resources/content/bin/jdr.sh
lines,81
function,0


for,0

if,8
if uname | grep --ignore-case --quiet "CYGWIN"; then if $cygwin ; then if [ "x$JBOSS_HOME" = "x" ]; then if [ "$RESOLVED_JBOSS_HOME" != "$SANITIZED_JBOSS_HOME" ]; then if [ "x$JAVA" = "x" ]; then if [ "x$JAVA_HOME" != "x" ]; then if [ "x$JBOSS_MODULEPATH" = "x" ]; then if $cygwin; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/src/main/resources/content/bin/jconsole.sh
lines,102
function,1

fail_java_home () {
for,0

if,7
if $cygwin ; then if [ "x$JBOSS_HOME" = "x" ]; then if [ "$RESOLVED_JBOSS_HOME" != "$SANITIZED_JBOSS_HOME" ]; then if [ "x$JAVA_HOME" = x ]; then if $cygwin; then if [ ! -f "$JBOSS_HOME/bin/client/jboss-cli-client.jar" ]; then if [ "$MODULAR_JDK" = "true" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/src/main/resources/content/bin/appclient.sh
lines,179
function,0


for,0

if,17
if [ "x$RUN_CONF" = "x" ]; then if [ -r "$RUN_CONF" ]; then if $cygwin ; then if [ "x$JBOSS_HOME" = "x" ]; then if [ "$RESOLVED_JBOSS_HOME" != "$SANITIZED_JBOSS_HOME" ]; then if [ "x$JAVA" = "x" ]; then if [ "x$JAVA_HOME" != "x" ]; then if [ "x$SERVER_SET" = "x" ]; then if [ "x$HAS_HOTSPOT" = "x" ]; then if [ "x$HAS_OPENJDK" = "x" ]; then if [ "x$HAS_HOTSPOT" != "x" ] || [ "x$HAS_OPENJDK" != "x" ]; then if [ "$darwin" != "true" ]; then if [ "x$JBOSS_MODULEPATH" = "x" ]; then if $cygwin; then if [ "x$SECURITY_MANAGER_SET" != "x" ]; then if [ "x$SECURITY_MANAGER_SET_TO_ALLOW" = "x" ]; then if [ "$SECMGR" = "true" ]; then
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/javadoc/extractPublicApiArtifactsList.sh
lines,112
function,4
function error() { echo "$@" 1>&2; } function errore() { echo -e "$@" 1>&2; } function convertModuleNameToGA() { function doXSLT(){
function error() { echo "$@" 1>&2; } function errore() { echo -e "$@" 1>&2; } function convertModuleNameToGA() { function doXSLT(){
for,2
for i in `find $PROJECT_ROOT_DIR/build/src/main/resources/modules/ -name module.xml` ; do error "Artifacts for module '$MODULE':"
if,5
if [ ! `which xsltproc` ]; then if [ "$FILE" == "" ] ; then DEST='exclude'; fi; if [ "$FILE" == "" ] ; then DEST='exclude'; fi if grep --quiet '<module-alias ' $FILE; then error " (Module alias.)"; continue; fi; if grep --quiet "$ARTIFACT\$" $DIRNAME/artifactsBlocklist.txt ; then echo -n "
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/ee-feature-pack/galleon-shared/javadoc/extractPackageGroupsByModules.sh
lines,95
function,0


for,2
for JAR in `find $AS_BUILT_DIR/$MODULES_REPO/$MOD_PATH/main -name *.jar`; do for PACKAGE in `jar tf $JAR | grep .class | sed 's
if,4
if [ ! `which xsltproc` ]; then if [[ $LINE == MODULE:* ]] ; then if grep --line-regexp "$PACKAGE in .*" $TARGET/listedPackages.tmp.txt -q; then if [ "" == "$PACKAGES" ] ; then continue; fi;
git@github.com:wildfly/wildfly.git,e7ca263fccffcc05bf657f4a110653946ac08265,wildfly,2926,./wildfly/integration-tests.sh
lines,193
function,5

process_test_directives() { die() { warn() { maybe_source() { main() {
for,2
for param in $@ ; do for file in $*; do
if,10
if [ -f "$MVN_SETTINGS_XML_DEFAULT" ]; then if [ -z "$MVN_GOALS" ]; then MVN_GOALS="install"; fi if [[ $TESTS_SPECIFIED == "N" ]]; then if [ -f "$file" ]; then if [ $cygwin = "false" ]; then if [ $? -eq 0 ]; then if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ]; then if [ $? -ne 0 ]; then if [ -z "$MVN_GOAL" ]; then if [ "x$MVN_DEBUG" != "x" ]; then
git@github.com:gsantner/markor.git,55188fe3094510fab82709e5a124bc65a0b528db,markor,2925,
git@github.com:jackpal/Android-Terminal-Emulator.git,35188f8a8b57989a4a4ec9485e11187b46be26d9,Android-Terminal-Emulator,2923,
git@github.com:googlesamples/android-vision.git,c6e2f82c9ce62403fd56766dd64bfc7942df8021,android-vision,2920,
git@github.com:brianway/springmvc-mybatis-learning.git,36c0cddd3ec62bdd3fc33b6e9c5f951fec53f417,springmvc-mybatis-learning,2915,
git@github.com:sublimehq/Packages.git,3125fdd0bb9d16af54d03b6aab35920911c9131b,Packages,2915,./Packages/ShellScript/test/syntax_test_shell_unix_generic.sh
lines,10
function,0


for,0

if,0

git@github.com:sublimehq/Packages.git,3125fdd0bb9d16af54d03b6aab35920911c9131b,Packages,2915,./Packages/ShellScript/test/syntax_test_bash.sh
lines,6772
function,42
function foo function func\ function foo ( ) { function f ( function foo { function () () function () {} function 7zip { function [] () { function [[]] () { function {} () { function {{}} () { function -foo () { function +foo () { function =foo () { function fo${bar}'baz' () {} function true () {} ; function false () {} function show_help() { function clk {
coproc awk '{print "foo" $0;fflush()}' () () () \ () { [[ $ logC () { [[ $ f () ( bar () { func() { foo:foo () { ~ () { ^ () { @ () { function () () function () {} function [] () { function [[]] () { function {} () { function {{}} () { function -foo () { function +foo () { function =foo () { function fo${bar}'baz' () {} function true () {} ; function false () {} __git_aliased_command () local() f() { test() unset() array=() echo '([^.[:space:]]+) Class::method()' function show_help() { if() then() [[ ! ($line != \() ]] update_terminal_cwd() { print -Pn "\e]l%~\e\\" };; update_terminal_cwd() { print -Pn "\e]2;%~\a" };; update_terminal_cwd() {};; for() do()
for,18
for word in $cmdline; do for x; do for - for done for do done for x; do for (( i = 0; i < 10; i++ )); do for (( i = 0; i < 10; i++ )) for i in str1 $str2 "str3" 'str4' st$r5; do echo $i; done; for i in <files.txt; do echo $i; done; for i in {1..10}; do echo $i; done; for i in {-10..+20}; do echo $i; done; for i in {-10..+20..-4}; do echo $i; done; for i in $*; do echo $i; done; for i in $(seq 100); do `for i in $(seq 100); do echo i; done` for domain in $domains; do echo $domain; done for glob in "$@"
if,25
if test expr -a expr ; then echo "success"; fi if test "$VAR" != ";";then;fi let "two=5+5"; if [[ "$X" == "1" ]]; then X="one"; fi if - if cmd && \ if cmd && if cmd || \ if cmd || if \ if !cmd if [[ expr ]] && [[ expr ]] || [[ expr ]] ; then cmd ; fi if [[ expr && expr || expr ]] ; then cmd ; fi if [[ expr && ( expr || expr ) ]] ; then cmd ; fi if [[ $- =~ find_bash.sh ]] ; then echo shell is not interactive; fi if [[ "$ERL_TOP" != ";"; ]];then;fi if [[ ! -z "$PLATFORM" ]] && ! cmd || ! cmd2; then PLATFORM=docker; fi if { [[ ! -z "$PLATFORM" ]] && ! cmd || ! cmd2; }; then PLATFORM=docker; fi if ( [[ ! -z "$PLATFORM" ]] && ! cmd || ! cmd2 ); then PLATFORM=docker; fi if [ ! -f q4m-$Q4MVER.tar.gz ]; then if true ; then false ; fi if (ruby extconf.rb && if [ "$1" != "" -a "$2" != "" ]; then elif [ "$1" ]; then if opam upgrade --check; then if [ "$*" = '*' ]
git@github.com:real-logic/simple-binary-encoding.git,186b9aac0699c4b7bfd24deeb5945e7aaea671aa,simple-binary-encoding,2912,./simple-binary-encoding/csharp/pack.sh
lines,5
function,0


for,0

if,0

git@github.com:real-logic/simple-binary-encoding.git,186b9aac0699c4b7bfd24deeb5945e7aaea671aa,simple-binary-encoding,2912,./simple-binary-encoding/csharp/build.sh
lines,7
function,0


for,0

if,0

git@github.com:real-logic/simple-binary-encoding.git,186b9aac0699c4b7bfd24deeb5945e7aaea671aa,simple-binary-encoding,2912,./simple-binary-encoding/csharp/runtests.sh
lines,5
function,0


for,0

if,0

git@github.com:real-logic/simple-binary-encoding.git,186b9aac0699c4b7bfd24deeb5945e7aaea671aa,simple-binary-encoding,2912,./simple-binary-encoding/csharp/sbe-dll/sbe-tool.sh
lines,41
function,1
function usage {

for,0

if,2
if [ -z "${SCHEMA}" ]; then usage; exit 1; fi if [ ! -f "${SCHEMA}" ]; then echo no schema at "${SCHEMA}"; exit 1; fi
git@github.com:jiajunhui/PlayerBase.git,35e204437766f95dfce9e0449625584a7c64bc7f,PlayerBase,2912,
git@github.com:elvishew/xLog.git,1de2fdcd28ca74769fa0a26b2672d447ed3d0320,xLog,2908,./xLog/.buildscript/deploy.sh
lines,25
function,0


for,0

if,4
if [ "$TRAVIS_REPO_SLUG" != "$SLUG" ]; then elif [ "$TRAVIS_JDK_VERSION" != "$JDK" ]; then elif [ "$TRAVIS_PULL_REQUEST" != "false" ]; then elif [ "$TRAVIS_BRANCH" != "$BRANCH" ]; then
git@github.com:sockeqwe/AdapterDelegates.git,e855771c3ed8b256287e46350ebc3ada2085c41a,AdapterDelegates,2908,
git@github.com:iwgang/CountdownView.git,3433615826b6e0a38b92e3362ba032947d9e8be7,CountdownView,2904,
git@github.com:LibrePDF/OpenPDF.git,73321c7097cecfdbbd3266a59daadf1df58cdd37,OpenPDF,2903,./OpenPDF/createRelease.sh
lines,71
function,0


for,1
- Create a ChangeLog for this release
if,5
if [ "x$LIBREPDF_ORIGIN" == "x" ] if [ $ if [ ${RC} -ne 0 ] if [ $RC -eq 0 ] if everything seems fine, hit ENTER. Else break this script with Ctrl-C.
git@github.com:geftimov/android-pathview.git,81b316be165dfc2f0067279b104e3f45dc071182,android-pathview,2902,
git@github.com:janishar/android-mvvm-architecture.git,2db9041420ef11540948e47fcfd9723864a2fbe0,android-mvvm-architecture,2899,
git@github.com:fengjundev/Android-Skin-Loader.git,675a882fb80c42406bcae06e05b76e1bb40cd60c,Android-Skin-Loader,2897,
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/etc/hudson/jersey-performance-test-grizzly.sh
lines,143
function,1
function singleTest() {
function singleTest() {
for,7
for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do for app in ${APP_LIST[*]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do
if,3
ssh -n jerseyrobot@$client_machine 'if ! test -e `ps h o pid -Cwrk`; then kill -s INT `ps h o pid -Cwrk` ; fi' if ! java -cp jmxclient.jar org.glassfish.jersey.tests.performance.jmxclient.Main $JMX_URI "$mbean" OneMinuteRate $SAMPLES $filename; then ssh -n jerseyrobot@$client_machine 'if ! test -e `ps h o pid -Cwrk`; then kill -s INT `ps h o pid -Cwrk` ; fi'
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/etc/hudson/jersey-performance-test-wls.sh
lines,163
function,1
function singleTest() {
function singleTest() {
for,7
for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for client_machine in ${CLIENT_LIST[*]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do for app in ${APP_LIST[*]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do
if,3
ssh -n jerseyrobot@$client_machine 'if ! test -e `ps h o pid -Cwrk`; then kill -s INT `ps h o pid -Cwrk` ; fi' if ! java -cp jmxclient.jar org.glassfish.jersey.tests.performance.jmxclient.Main $JMX_URI "$mbean" OneMinuteRate $SAMPLES $filename; then ssh -n jerseyrobot@$client_machine 'if ! test -e `ps h o pid -Cwrk`; then kill -s INT `ps h o pid -Cwrk` ; fi'
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/etc/hudson/jersey-performance-test-common.sh
lines,288
function,13
function waitForGroupStatus() { function releaseRunnerAndGroup() { function checkWaitingRunners() { function createMachineFiles { function waitForTerminator { function testLoop { function removeOldCapturedData { function retrieveJmxClient { function prepareClients { function buildTestAppOnServers { function cleanupHudsonSlave { function cleanupServer { function cleanupServers {
SERVER_LIST=() CLIENT_LIST_ALL=() function waitForGroupStatus() { function releaseRunnerAndGroup() { function checkWaitingRunners() {
for,7
for app in ${APP_LIST[*]}; do for waiting_file in `ls $STATUS_DIR/.runner.*.waiting.*.lock 2> /dev/null`; do for waiting_file in `ls $STATUS_DIR/.runner.*.waiting.*.open 2> /dev/null`; do for runner_file in `ls $STATUS_DIR/.runner.*.available 2> /dev/null`; do for CLIENT_MACHINE in ${CLIENT_LIST_ALL[@]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do for SERVER_MACHINE in ${SERVER_LIST[@]}; do
if,8
if [ -e "$FILE" ]; then if [ ! -f "${_files}" ]; then if [ ! -f "${_files}" ]; then if [ ! -f "${_files}" ]; then if [ "$terminated" != true ]; then if [ "$spawned" != true ]; then if [ "$spawned" != true ]; then ssh -n jerseyrobot@$1 'if ! test -e `ps h o pid -Cjava`; then kill -s TERM `ps h o pid -Cjava` ; fi'
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/test-cases/monitoring/start.sh
lines,54
function,0


for,1
LIBS=$(for l in `ls lib`; do echo -n lib/$l":";done)
if,0

git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-grizzly-runner/start.sh
lines,60
function,0


for,2
LIBS=$(for l in `ls lib`; do echo -n lib/$l":";done) APP=$(for l in `ls app`; do echo -n app/$l":";done)
if,0

git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-grizzly-runner/stop.sh
lines,46
function,0


for,0

if,1
if test -f grizzly.pid; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-wls-runner/start.sh
lines,95
function,0


for,0

if,0

git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-wls-runner/stop.sh
lines,48
function,0


for,0

if,1
if test -f $PID_FILE; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-wls-runner/install.sh
lines,67
function,0


for,0

if,0

git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/tests/performance/runners/jersey-wls-runner/deploy.sh
lines,49
function,0


for,0

if,0

git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/gf4/download.sh
lines,77
function,0


for,0

if,4
if [ "$SKIP_START_STOP" = "true" ]; then if [ "$DIST_DIR" = "" -o "$DIST_TGT_LOCATION" = "" -o "$DIST_URL" = "" ]; then if [ ! -f "$DIST_TGT_LOCATION" -o "$DOWNLOAD_IF_EXISTS" = "true" ]; then if [ "$OVERWRITE" = "true" -o ! -d "$DIST_DIR"/"$DIST_SUBDIR" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/gf4/start.sh
lines,121
function,0


for,1
for JVM_ARG in `echo $JVM_ARGS`; do
if,6
if [ "$AS_HOME" = "" -o "$WAR_PATH" = "" -o "$MAX_HEAP" = "" ]; then if [ "$SKIP_START_STOP" = "true" ]; then if [ "$SKIP_CHECK" != "true" ] && jps -v | grep 'jersey.config.test.memleak.gf4.magicRunnerIdentifier'; then if nc -z localhost $PORT; then if [ "$JVM_ARGS" != "" ]; then if [ "$SKIP_DEPLOY" = "true" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/gf4/redeploy.sh
lines,72
function,0


for,0

if,2
if [ "$AS_HOME" = "" -o "$WAR_PATH" = "" -o "$ADMINPORT" = "" ]; then if [ "$SKIP_REDEPLOY" = "true" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/gf4/stop.sh
lines,89
function,0


for,2
for A in `seq $STOP_TIME`; do for A in `seq $KILL_TIME`; do
if,2
if [ "$SKIP_START_STOP" = "true" -o "$SKIP_STOP" = "true" ]; then if [ "$AS_HOME" = "" -o "$DOMAIN" = "" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/wls/download.sh
lines,76
function,0


for,0

if,4
if [ "$SKIP_START_STOP" = "true" ]; then if [ "$DIST_DIR" = "" -o "$DIST_TGT_LOCATION" = "" -o "$DIST_URL" = "" ]; then if [ ! -f "$DIST_TGT_LOCATION" -o "$DOWNLOAD_IF_EXISTS" = "true" ]; then if [ "$OVERWRITE" = "true" -o ! -d "$DIST_DIR"/"$DIST_SUBDIR" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/wls/start.sh
lines,161
function,3

if not progress.isCompleted(): print "WLST: Deployment wasn't completed successfully. Failure: " + progress.getState() exit()
for,1
for A in `seq $TRIES_COUNT`; do
if,7
if [ "$WAR_PATH" = "" -o "$DOMAIN" = "" -o "$MW_HOME" = "" ]; then if [ "$SKIP_START_STOP" = "true" ]; then if [ "$SKIP_CHECK" != "true" ] && jps -v | grep 'jersey.config.test.memleak.wls.magicRunnerIdentifier'; then if nc -z localhost $PORT; then if [ "$SKIP_DEPLOY" = "true" ]; then if [ "${WAR_PATH if not progress.isCompleted():
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/wls/redeploy.sh
lines,118
function,4

exit() if not progress.isCompleted(): print "WLST: Deployment wasn't completed successfully. Failure: " + progress.getState() exit()
for,0

if,4
if [ "$WAR_PATH" = "" -o "$DOMAIN" = "" -o "$MW_HOME" = "" ]; then if [ "$SKIP_REDEPLOY" = "true" ]; then if [ "${WAR_PATH if not progress.isCompleted():
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/wls/stop.sh
lines,92
function,0


for,2
for A in `seq $STOP_TIME`; do for A in `seq $KILL_TIME`; do
if,2
if [ "$SKIP_START_STOP" = "true" -o "$SKIP_STOP" = "true" ]; then if [ "$MW_HOME" = "" -o "$DOMAIN" = "" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/tomcat/download.sh
lines,76
function,0


for,0

if,4
if [ "$SKIP_START_STOP" = "true" ]; then if [ "$DIST_DIR" = "" -o "$DIST_TGT_LOCATION" = "" -o "$DIST_URL" = "" ]; then if [ ! -f "$DIST_TGT_LOCATION" -o "$DOWNLOAD_IF_EXISTS" = "true" ]; then if [ "$OVERWRITE" = "true" -o ! -d "$DIST_DIR"/"$DIST_SUBDIR" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/tomcat/start.sh
lines,129
function,2

start_tomcat() { deploy_tomcat() {
for,1
for A in `seq $TRIES_COUNT`; do
if,9
if [ "$CATALINA_HOME" = "" -o "$WAR_PATH" = "" -o "$MAX_HEAP" = "" -o "$TRIES_COUNT" = "" ]; then if [ "$SKIP_CHECK" != "true" ] && jps -v | grep 'jersey.config.test.memleak.tomcat.magicRunnerIdentifier'; then if nc -z localhost $PORT; then if [ "$MEMORY_LEAK_PREVENTION" != "true" ]; then if ! grep '<role rolename="manager-gui"/>' "$CATALINA_HOME"/conf/tomcat-users.xml; then if ! grep '<role rolename="manager-script"/>' "$CATALINA_HOME"/conf/tomcat-users.xml; then if ! grep '<user username="tomcat" password="tomcat" roles="tomcat,manager-gui,manager-script"/>' "$CATALINA_HOME"/conf/tomcat-users.xml; then if [ "$SKIP_START_STOP" = "true" ]; then if [ "$SKIP_DEPLOY" = "true" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/tomcat/redeploy.sh
lines,71
function,0


for,0

if,2
if [ "$CONTEXT_ROOT" = "" -o "$WAR_PATH" = "" ]; then if [ "$SKIP_REDEPLOY" = "true" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/tomcat/stop.sh
lines,88
function,0


for,2
for A in `seq $STOP_TIME`; do for A in `seq $KILL_TIME`; do
if,2
if [ "$SKIP_START_STOP" = "true" -o "$SKIP_STOP" = "true" ]; then if [ "$CATALINA_HOME" = "" -o "$CATALINA_PID" = "" ]; then
git@github.com:javaee/jersey.git,faa809da43538ce31076b50f969b4bd64caa5ac9,jersey,2890,./jersey/test-framework/maven/container-runner-maven-plugin/src/main/resources/runner/verify.sh
lines,65
function,0


for,1
echo "Searching for java.lang.OutOfMemoryError exceptions in $LOGFILE"
if,2
if [ "$LOGFILE" = "" ]; then if grep -nH 'java\.lang\.OutOfMemoryError' "$LOGFILE"; then
git@github.com:BruceEckel/OnJava8-Examples.git,ade1d5ef122bdfc1320370e2fde7a62245e26d41,OnJava8-Examples,2887,
git@github.com:ngbdf/redis-manager.git,9dccdce7f2c91887aa659a5aab5aaacf4b92fb9b,redis-manager,2887,./redis-manager/docker/redis-manager-start.sh
lines,26
function,0


for,2
for i in lib/*.jar; do for i in *.jar; do
if,3
if [ -n "$CONFIG_URL" ];then if wget -O application.yml.temp $CONFIG_URL; then if [ "`ls -A data`" = ""]; then
git@github.com:ngbdf/redis-manager.git,9dccdce7f2c91887aa659a5aab5aaacf4b92fb9b,redis-manager,2887,./redis-manager/build/build.sh
lines,17
function,0


for,0

if,0

git@github.com:ngbdf/redis-manager.git,9dccdce7f2c91887aa659a5aab5aaacf4b92fb9b,redis-manager,2887,./redis-manager/bin/start.sh
lines,17
function,0


for,2
for i in lib/*.jar; do for i in *.jar; do
if,0

git@github.com:ngbdf/redis-manager.git,9dccdce7f2c91887aa659a5aab5aaacf4b92fb9b,redis-manager,2887,./redis-manager/bin/stop.sh
lines,8
function,0


for,0

if,0

git@github.com:udacity/Sunshine-Version-2.git,5d0dd65f0baab1f2b34a1e8bd8e311a9e581a83d,Sunshine-Version-2,2886,
git@github.com:ManuelPeinado/FadingActionBar.git,1c148b91867259ea43e6343d8afb69d106168b46,FadingActionBar,2875,
git@github.com:googlearchive/android-Camera2Basic.git,4cc1c3e219d8d168b7893f7a6b2b348740679e5a,android-Camera2Basic,2864,
git@github.com:HuanTanSheng/EasyPhotos.git,d07e88b46932565a57c679c292193447be80b575,EasyPhotos,2862,
git@github.com:nic-delhi/AarogyaSetu_Android.git,b81f31a4a1e1c7c20159a608fc305de402deff4b,AarogyaSetu_Android,2862,
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/docker/official/build.sh
lines,40
function,0


for,0

if,2
if [ ! $FORCE_REBUILD ]; then if docker pull jenkinsci/blueocean:$FULL_VERSION; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/src/test/resources/test_scripts/freestylePing.sh
lines,2
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/src/test/resources/test_scripts/freestyle.sh
lines,11
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/stop-bitbucket-server.sh
lines,9
function,0


for,0

if,1
echo " Stopping old Bitbucket Docker container, if any. This may take a few seconds..."
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/stop-selenium.sh
lines,8
function,0


for,0

if,1
echo " Stopping old Selenium Docker container, if any. This may take a few seconds..."
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/args.sh
lines,149
function,2

AGGREGATOR_GROUP_ID=`echo -e 'setns x=http://maven.apache.org/POM/4.0.0\ncat /x:project/x:parent/x:groupId/text()' | xmllint --shell pom.xml | grep -v /` AGGREGATOR_ARTIFACT_ID=`echo -e 'setns x=http://maven.apache.org/POM/4.0.0\ncat /x:project/x:artifactId/text()' | xmllint --shell pom.xml | grep -v /`
for,3
for i in "$@" echo "***** Watch console output for the URL to use while developing your test." echo " The location specified for the aggregator plugin does not appear"
if,9
if [ "${DEV_JENKINS}" == "true" ]; then if [ "${CI_BO}" == "true" ]; then if [ "${AGGREGATOR_DIR}" == "" ]; then if [ ! -d "${AGGREGATOR_DIR}" ]; then if [ ! -f "${AGGREGATOR_DIR}/.pre-assembly" ]; then if [ "${AGGREGATOR_GROUP_ID}" != "io.jenkins.blueocean" ] || [ "${AGGREGATOR_ARTIFACT_ID}" != "blueocean" ]; then if [ "${PLUGINS}" == "" ]; then if [ "${ATH_SERVER_HOST}" != "" ]; then if [ "${ATH_SERVER_PORT}" != "" ]; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/start-selenium.sh
lines,44
function,0


for,0

if,1
if [ "${LOCAL_DEV}" == "true" ]; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/maven.sh
lines,34
function,1

assemble-plugins() {
for,0

if,3
if [ "${AGGREGATOR_DIR}" != "" ]; then if [ ! -f "${AGGREGATOR_DIR}/.pre-assembly" ]; then if [ $? != 0 ];then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/download.sh
lines,79
function,2

download() { download-jenkins() {
for,0

if,8
if [ ! -d bin ]; then if [ -f "$DOWNTO" ]; then if hash curl 2>/dev/null; elif hash wget 2>/dev/null; if [ $? != 0 ] if [ ! -d bin ]; then if [ -f "$DOWNTO" ]; then if [ $? != 0 ]
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/start-bitbucket-server.sh
lines,23
function,0


for,0

if,1
if [ "${LOCAL_DEV}" == "true" ]; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/scripts/site-publish.sh
lines,22
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/runtime/src/test/resources/test_scripts/freestylePing.sh
lines,2
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/runner/runtime/src/test/resources/test_scripts/freestyle.sh
lines,11
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/acceptance-tests/run.sh
lines,89
function,2
function finish() { function start() {
function finish() { function start() {
for,1
echo Waiting for bitbucket server to start
if,7
if [ -z "$JENKINS_WAR" ]; then if [ "${RUN_SELENIUM}" == "true" ]; then if [ ! -z "${SAUCE_ACCESS_KEY}" ]; then if [ "${RUN_SELENIUM}" == "true" ]; then if [ ! -z "${SAUCE_ACCESS_KEY}" ]; then if [ "$?" -eq "0" ]; then if [ $? != 0 ];then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/blueocean-github-pipeline/run_proxy.sh
lines,4
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/bin/jwtcurl.sh
lines,83
function,0


for,0

if,4
if [ $ if [ ! -z "$VERBOSE" ]; then if [ -z "${BASE_URL}" ]; then if [ -z "${TOKEN}" ]; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/bin/git-helper.sh
lines,30
function,2

usage() { pr-id() {
for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/bin/setup.sh
lines,11
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/bin/start.sh
lines,8
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/bin/build-in-docker.sh
lines,197
function,10

setup_nice_output() { new_build_container() { delete_build_container() { stop_build_container() { stop_trap() { prepare_build_container() { build_inside() { build-git-description() { make_image() { usage() {
for,1
for i in "$@"; do
if,14
if [ -t 1 ]; then if test -n "$ncolors" && test $ncolors -ge 8; then if [[ $? -ne 0 ]]; then echo "$error"; exit 1; fi if [[ -f $PROJECT_ROOT/.build_container ]]; then if [[ "$clean" = true ]]; then if [[ $? -ne 0 || "$state" != "exited" ]]; then if [[ "$image_id" != "$container_image_id" ]]; then if [[ $? -ne 0 ]]; then echo "$error"; exit 1; fi if [[ ! -z $pr ]]; then Create a BlueOcean docker dev image with Dockerfile if '-m' is passed and inject git revision data to it if '-g' is passed. if [[ $ if [[ "$git_data" = true ]]; then if [[ "$make_image" = true ]]; then
git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/jenkins-design-language/scripts/find-no-flow.sh
lines,1
function,0


for,0

if,0

git@github.com:jenkinsci/blueocean-plugin.git,62edb17d58804c255d9e31c71a5044aacd65fa07,blueocean-plugin,2856,./blueocean-plugin/jenkins-design-language/site-publish.sh
lines,22
function,0


for,0

if,0

git@github.com:getActivity/Toaster.git,5804d7cd0bb853cc0ce21aa199dc196e0a26711e,Toaster,2856,
git@github.com:SpecialCyCi/AndroidResideMenu.git,eee589e385d148d51c32aad3667fdc30839bb576,AndroidResideMenu,2854,
git@github.com:AweiLoveAndroid/CommonDevKnowledge.git,9fa7eaae902caa07e374b749cd9176a9b7b9a87f,CommonDevKnowledge,2851,
